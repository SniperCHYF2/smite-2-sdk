#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_RewardAcuisitionDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C
// 0x0038 (0x0630 - 0x05F8)
class UWBP_GS_RewardAcuisitionDisplay_C final : public UHWWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWButton*                              HWButton_0;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_61;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           HWTextBlock_141;                                   // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWBorder*                              RarityBorder;                                      // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWCollectionItem*                      CachedCollectionItem;                              // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UHWCharacterItem*                       CachedCharacterItem;                               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_GS_RewardAcuisitionDisplay_HWButton_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_GS_RewardAcuisitionDisplay(int32 EntryPoint);
	void SetCharacterItem(const class UHWCharacterItem* InCharacterItem);
	void SetCollectionItem(class UHWCollectionItem* CollectionItem);
	void SetIsAscensionUnlock(bool IsAscensionUnlock);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GS_RewardAcuisitionDisplay_C">();
	}
	static class UWBP_GS_RewardAcuisitionDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GS_RewardAcuisitionDisplay_C>();
	}
};
static_assert(alignof(UWBP_GS_RewardAcuisitionDisplay_C) == 0x000008, "Wrong alignment on UWBP_GS_RewardAcuisitionDisplay_C");
static_assert(sizeof(UWBP_GS_RewardAcuisitionDisplay_C) == 0x000630, "Wrong size on UWBP_GS_RewardAcuisitionDisplay_C");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, UberGraphFrame) == 0x0005F8, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, HWButton_0) == 0x000600, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::HWButton_0' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, HWImage_61) == 0x000608, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::HWImage_61' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, HWTextBlock_141) == 0x000610, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::HWTextBlock_141' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, RarityBorder) == 0x000618, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::RarityBorder' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, CachedCollectionItem) == 0x000620, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::CachedCollectionItem' has a wrong offset!");
static_assert(offsetof(UWBP_GS_RewardAcuisitionDisplay_C, CachedCharacterItem) == 0x000628, "Member 'UWBP_GS_RewardAcuisitionDisplay_C::CachedCharacterItem' has a wrong offset!");

}

