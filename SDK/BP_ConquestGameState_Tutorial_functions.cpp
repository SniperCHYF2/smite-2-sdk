#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConquestGameState_Tutorial

#include "Basic.hpp"

#include "BP_ConquestGameState_Tutorial_classes.hpp"
#include "BP_ConquestGameState_Tutorial_parameters.hpp"


namespace SDK
{

// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.ExecuteUbergraph_BP_ConquestGameState_Tutorial
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::ExecuteUbergraph_BP_ConquestGameState_Tutorial(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "ExecuteUbergraph_BP_ConquestGameState_Tutorial");

	Params::BP_ConquestGameState_Tutorial_C_ExecuteUbergraph_BP_ConquestGameState_Tutorial Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetActiveNPEStage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    ActiveStageTag                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::GetActiveNPEStage(struct FGameplayTag* ActiveStageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetActiveNPEStage");

	Params::BP_ConquestGameState_Tutorial_C_GetActiveNPEStage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveStageTag != nullptr)
		*ActiveStageTag = std::move(Parms.ActiveStageTag);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetAssociatedRoles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<ECharacterRole>*                 Roles                                                  (Parm, OutParm)

void ABP_ConquestGameState_Tutorial_C::GetAssociatedRoles(TArray<ECharacterRole>* Roles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetAssociatedRoles");

	Params::BP_ConquestGameState_Tutorial_C_GetAssociatedRoles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roles != nullptr)
		*Roles = std::move(Parms.Roles);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetNPEAIDirectives
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer*           AIDirectives_0                                         (Parm, OutParm)

void ABP_ConquestGameState_Tutorial_C::GetNPEAIDirectives(struct FGameplayTagContainer* AIDirectives_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetNPEAIDirectives");

	Params::BP_ConquestGameState_Tutorial_C_GetNPEAIDirectives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AIDirectives_0 != nullptr)
		*AIDirectives_0 = std::move(Parms.AIDirectives_0);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetNPEGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NPE_Guide_C**                 GuideActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::GetNPEGuide(class ABP_NPE_Guide_C** GuideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetNPEGuide");

	Params::BP_ConquestGameState_Tutorial_C_GetNPEGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GuideActor != nullptr)
		*GuideActor = Parms.GuideActor;
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetNPEStages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_NPE_Stage_C*>*         Stages                                                 (Parm, OutParm)

void ABP_ConquestGameState_Tutorial_C::GetNPEStages(TArray<class ABP_NPE_Stage_C*>* Stages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetNPEStages");

	Params::BP_ConquestGameState_Tutorial_C_GetNPEStages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stages != nullptr)
		*Stages = std::move(Parms.Stages);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.GetObjectiveTimeRemaining
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 TimeRemaining                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::GetObjectiveTimeRemaining(double* TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "GetObjectiveTimeRemaining");

	Params::BP_ConquestGameState_Tutorial_C_GetObjectiveTimeRemaining Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TimeRemaining != nullptr)
		*TimeRemaining = Parms.TimeRemaining;
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.NPEGuideStageActivation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ConquestGameState_Tutorial_C::NPEGuideStageActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "NPEGuideStageActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ConquestGameState_Tutorial_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.SetActiveNPEStage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              ActiveStage                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::SetActiveNPEStage(const struct FGameplayTag& ActiveStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "SetActiveNPEStage");

	Params::BP_ConquestGameState_Tutorial_C_SetActiveNPEStage Parms{};

	Parms.ActiveStage = std::move(ActiveStage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConquestGameState_Tutorial.BP_ConquestGameState_Tutorial_C.SetNPEAIDirectives
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewAIDirective                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    ClearPreviousDirectives                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ConquestGameState_Tutorial_C::SetNPEAIDirectives(const struct FGameplayTag& NewAIDirective, bool ClearPreviousDirectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConquestGameState_Tutorial_C", "SetNPEAIDirectives");

	Params::BP_ConquestGameState_Tutorial_C_SetNPEAIDirectives Parms{};

	Parms.NewAIDirective = std::move(NewAIDirective);
	Parms.ClearPreviousDirectives = ClearPreviousDirectives;

	UObject::ProcessEvent(Func, &Parms);
}

}

