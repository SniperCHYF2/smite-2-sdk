#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Assault_Meditation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Assault_Meditation.GA_Assault_Meditation_C.FireMeditationPulse
// 0x0598 (0x0598 - 0x0000)
struct GA_Assault_Meditation_C_FireMeditationPulse final
{
public:
	double                                        ManaRecoveryAmount;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        HealAmount;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0018(0x0028)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue; // 0x0050(0x0028)()
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0078(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0088(0x0010)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0098(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x00A8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue_1; // 0x00C0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransitionToAbilityPhase_ReturnValue;     // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1; // 0x00F8(0x0010)()
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0118(0x0010)()
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue_1; // 0x0130(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2; // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3; // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagRequirements               K2Node_MakeStruct_GameplayTagRequirements;         // 0x0188(0x0088)()
	struct FGameplayTagRequirements               K2Node_MakeStruct_GameplayTagRequirements_1;       // 0x0210(0x0088)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWGameplayTargetDataFilter            K2Node_MakeStruct_HWGameplayTargetDataFilter;      // 0x02A0(0x01D0)()
	struct FGameplayTargetDataFilterHandle        CallFunc_MakeHWTargetDataFilterHandle_ReturnValue; // 0x0470(0x0010)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateAimTargetDataFromLocation_ReturnValue; // 0x04A8(0x0028)()
	struct FSphereTargetingData                   K2Node_MakeStruct_SphereTargetingData;             // 0x04D0(0x0078)()
	struct FGameplayAbilityTargetDataHandle       CallFunc_CalcSphereTargeting_OutTargetListDataHandle; // 0x0548(0x0028)()
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1; // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Assault_Meditation_C_FireMeditationPulse) == 0x000008, "Wrong alignment on GA_Assault_Meditation_C_FireMeditationPulse");
static_assert(sizeof(GA_Assault_Meditation_C_FireMeditationPulse) == 0x000598, "Wrong size on GA_Assault_Meditation_C_FireMeditationPulse");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, ManaRecoveryAmount) == 0x000000, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::ManaRecoveryAmount' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, Target) == 0x000008, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::Target' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, HealAmount) == 0x000010, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::HealAmount' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, TargetData) == 0x000018, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, Temp_int_Variable) == 0x00004C, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue) == 0x000050, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000078, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000088, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000098, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x0000A8, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue_1) == 0x0000C0, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_TransitionToAbilityPhase_ReturnValue) == 0x0000EC, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_TransitionToAbilityPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Less_IntInt_ReturnValue) == 0x0000ED, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000EE, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1) == 0x0000F8, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000108, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000110, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000118, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000128, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00012C, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue_1) == 0x000130, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000140, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x000144, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2) == 0x000148, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2) == 0x00014C, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000150, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3) == 0x000158, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3) == 0x00015C, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000160, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000170, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, K2Node_MakeStruct_GameplayTagRequirements) == 0x000188, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::K2Node_MakeStruct_GameplayTagRequirements' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, K2Node_MakeStruct_GameplayTagRequirements_1) == 0x000210, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::K2Node_MakeStruct_GameplayTagRequirements_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000298, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, K2Node_MakeStruct_HWGameplayTargetDataFilter) == 0x0002A0, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::K2Node_MakeStruct_HWGameplayTargetDataFilter' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_MakeHWTargetDataFilterHandle_ReturnValue) == 0x000470, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_MakeHWTargetDataFilterHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000480, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000488, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000490, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_CreateAimTargetDataFromLocation_ReturnValue) == 0x0004A8, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_CreateAimTargetDataFromLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, K2Node_MakeStruct_SphereTargetingData) == 0x0004D0, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::K2Node_MakeStruct_SphereTargetingData' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_CalcSphereTargeting_OutTargetListDataHandle) == 0x000548, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_CalcSphereTargeting_OutTargetListDataHandle' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000570, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1) == 0x000574, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000578, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000580, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000588, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_FireMeditationPulse, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000590, "Member 'GA_Assault_Meditation_C_FireMeditationPulse::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function GA_Assault_Meditation.GA_Assault_Meditation_C.StartPulseTimer
// 0x0018 (0x0018 - 0x0000)
struct GA_Assault_Meditation_C_StartPulseTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Assault_Meditation_C_StartPulseTimer) == 0x000008, "Wrong alignment on GA_Assault_Meditation_C_StartPulseTimer");
static_assert(sizeof(GA_Assault_Meditation_C_StartPulseTimer) == 0x000018, "Wrong size on GA_Assault_Meditation_C_StartPulseTimer");
static_assert(offsetof(GA_Assault_Meditation_C_StartPulseTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'GA_Assault_Meditation_C_StartPulseTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Assault_Meditation_C_StartPulseTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'GA_Assault_Meditation_C_StartPulseTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

