#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_V1_GAProgressBarListener

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_GS_V1_GAProgressBarListener.WBP_GS_V1_GAProgressBarListener_C.ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener
// 0x0038 (0x0038 - 0x0000)
struct WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ValuePerTime;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Percentage;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxValue;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateValuePerTimeText_ValuePerTime_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Value_Text_and_Bar_Percent_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Value_Text_and_Bar_Value_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Value_Text_and_Bar_MaxValue_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener) == 0x000008, "Wrong alignment on WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener");
static_assert(sizeof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener) == 0x000038, "Wrong size on WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, EntryPoint) == 0x000000, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, K2Node_Event_ValuePerTime) == 0x000004, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::K2Node_Event_ValuePerTime' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, K2Node_Event_Percentage) == 0x000008, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::K2Node_Event_Percentage' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, K2Node_Event_Value) == 0x00000C, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, K2Node_Event_MaxValue) == 0x000010, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::K2Node_Event_MaxValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, CallFunc_UpdateValuePerTimeText_ValuePerTime_ImplicitCast) == 0x000018, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::CallFunc_UpdateValuePerTimeText_ValuePerTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, CallFunc_Update_Value_Text_and_Bar_Percent_ImplicitCast) == 0x000020, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::CallFunc_Update_Value_Text_and_Bar_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, CallFunc_Update_Value_Text_and_Bar_Value_ImplicitCast) == 0x000028, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::CallFunc_Update_Value_Text_and_Bar_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener, CallFunc_Update_Value_Text_and_Bar_MaxValue_ImplicitCast) == 0x000030, "Member 'WBP_GS_V1_GAProgressBarListener_C_ExecuteUbergraph_WBP_GS_V1_GAProgressBarListener::CallFunc_Update_Value_Text_and_Bar_MaxValue_ImplicitCast' has a wrong offset!");

// Function WBP_GS_V1_GAProgressBarListener.WBP_GS_V1_GAProgressBarListener_C.Update Value Text and Bar
// 0x0130 (0x0130 - 0x0000)
struct WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxValue;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClampedValue;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar) == 0x000008, "Wrong alignment on WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar");
static_assert(sizeof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar) == 0x000130, "Wrong size on WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, Percent) == 0x000000, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::Percent' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, Value) == 0x000008, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::Value' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, MaxValue) == 0x000010, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::MaxValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, ClampedValue) == 0x000018, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::ClampedValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000090, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, K2Node_MakeArray_Array) == 0x0000F8, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_Format_ReturnValue) == 0x000110, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000128, "Member 'WBP_GS_V1_GAProgressBarListener_C_Update_Value_Text_and_Bar::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_GS_V1_GAProgressBarListener.WBP_GS_V1_GAProgressBarListener_C.UpdateProgressBar
// 0x000C (0x000C - 0x0000)
struct WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar) == 0x000004, "Wrong alignment on WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar");
static_assert(sizeof(WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar) == 0x00000C, "Wrong size on WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar, Percentage) == 0x000000, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar::Percentage' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar, Value) == 0x000004, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar::Value' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar, MaxValue) == 0x000008, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateProgressBar::MaxValue' has a wrong offset!");

// Function WBP_GS_V1_GAProgressBarListener.WBP_GS_V1_GAProgressBarListener_C.UpdateValuePerTime
// 0x0004 (0x0004 - 0x0000)
struct WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime final
{
public:
	float                                         ValuePerTime;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime) == 0x000004, "Wrong alignment on WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime");
static_assert(sizeof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime) == 0x000004, "Wrong size on WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime, ValuePerTime) == 0x000000, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTime::ValuePerTime' has a wrong offset!");

// Function WBP_GS_V1_GAProgressBarListener.WBP_GS_V1_GAProgressBarListener_C.UpdateValuePerTimeText
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText final
{
public:
	double                                        ValuePerTime;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText) == 0x000008, "Wrong alignment on WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText");
static_assert(sizeof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText) == 0x0000A0, "Wrong size on WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, ValuePerTime) == 0x000000, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::ValuePerTime' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText, CallFunc_Format_ReturnValue) == 0x000088, "Member 'WBP_GS_V1_GAProgressBarListener_C_UpdateValuePerTimeText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

