#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hemingway

#include "Basic.hpp"

#include "Hemingway_classes.hpp"
#include "Hemingway_parameters.hpp"


namespace SDK
{

// Function Hemingway.HWCharacter_AnimInstBase.BP_AnimEvent01
// (Event, Public, BlueprintEvent)

void UHWCharacter_AnimInstBase::BP_AnimEvent01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "BP_AnimEvent01");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWCharacter_AnimInstBase.BP_AnimEvent02
// (Event, Public, BlueprintEvent)

void UHWCharacter_AnimInstBase::BP_AnimEvent02()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "BP_AnimEvent02");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWCharacter_AnimInstBase.BP_AnimEvent03
// (Event, Public, BlueprintEvent)

void UHWCharacter_AnimInstBase::BP_AnimEvent03()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "BP_AnimEvent03");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWCharacter_AnimInstBase.DetermineSkinnedFiringMontageTag
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SourceIdTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstBase::DetermineSkinnedFiringMontageTag(const struct FGameplayTag& SourceIdTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "DetermineSkinnedFiringMontageTag");

	Params::HWCharacter_AnimInstBase_DetermineSkinnedFiringMontageTag Parms{};

	Parms.SourceIdTag = std::move(SourceIdTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstBase.GetJumpMovingTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWCharacter_AnimInstBase::GetJumpMovingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "GetJumpMovingTime");

	Params::HWCharacter_AnimInstBase_GetJumpMovingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_AnimInstBase.OnCharacterASCUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        UpdatedASC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstBase::OnCharacterASCUpdated(class UHWAbilitySystemComponent* UpdatedASC, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "OnCharacterASCUpdated");

	Params::HWCharacter_AnimInstBase_OnCharacterASCUpdated Parms{};

	Parms.UpdatedASC = UpdatedASC;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstBase.OnMovementModeUpdated
// (Final, Native, Public)
// Parameters:
// class ACharacter*                       NewCharacter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMovementMode                     PrevMovementMode                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             PreviousCustomMode                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstBase::OnMovementModeUpdated(class ACharacter* NewCharacter, const EMovementMode PrevMovementMode, const uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "OnMovementModeUpdated");

	Params::HWCharacter_AnimInstBase_OnMovementModeUpdated Parms{};

	Parms.NewCharacter = NewCharacter;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstBase.OnStatusTagsUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedStatusTag                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStackCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstBase::OnStatusTagsUpdated(const struct FGameplayTag& UpdatedStatusTag, int32 NewStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "OnStatusTagsUpdated");

	Params::HWCharacter_AnimInstBase_OnStatusTagsUpdated Parms{};

	Parms.UpdatedStatusTag = std::move(UpdatedStatusTag);
	Parms.NewStackCount = NewStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstBase.TryToTriggerTurnInPlaceAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHWAnimTurninPLace                      AnimationVariant                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstBase::TryToTriggerTurnInPlaceAnimation(EHWAnimTurninPLace AnimationVariant, float DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "TryToTriggerTurnInPlaceAnimation");

	Params::HWCharacter_AnimInstBase_TryToTriggerTurnInPlaceAnimation Parms{};

	Parms.AnimationVariant = AnimationVariant;
	Parms.DelayTime = DelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstBase.GetCharacterMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMovementMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMovementMode UHWCharacter_AnimInstBase::GetCharacterMovementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "GetCharacterMovementMode");

	Params::HWCharacter_AnimInstBase_GetCharacterMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_AnimInstBase.GetSkinnedFiringMontageTag
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              SourceIdTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OriginalFiringMontageTag                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWCharacter_AnimInstBase::GetSkinnedFiringMontageTag(const struct FGameplayTag& SourceIdTag, const struct FGameplayTag& OriginalFiringMontageTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "GetSkinnedFiringMontageTag");

	Params::HWCharacter_AnimInstBase_GetSkinnedFiringMontageTag Parms{};

	Parms.SourceIdTag = std::move(SourceIdTag);
	Parms.OriginalFiringMontageTag = std::move(OriginalFiringMontageTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_AnimInstBase.GetSkinnedTargetingMontageTag
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              SourceIdTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OriginalTargetingMontageTag                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWCharacter_AnimInstBase::GetSkinnedTargetingMontageTag(const struct FGameplayTag& SourceIdTag, const struct FGameplayTag& OriginalTargetingMontageTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstBase", "GetSkinnedTargetingMontageTag");

	Params::HWCharacter_AnimInstBase_GetSkinnedTargetingMontageTag Parms{};

	Parms.SourceIdTag = std::move(SourceIdTag);
	Parms.OriginalTargetingMontageTag = std::move(OriginalTargetingMontageTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.CalcAim
// (Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FHWAimTargetingInfo&       AimTargetingInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetingAimHandle                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilityAimSettings::CalcAim(const struct FHWAimTargetingInfo& AimTargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetingAimHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "CalcAim");

	Params::HWAbilityAimSettings_CalcAim Parms{};

	Parms.AimTargetingInfo = std::move(AimTargetingInfo);
	Parms.TargetingAimHandle = std::move(TargetingAimHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetingAimHandle = std::move(Parms.TargetingAimHandle);
}


// Function Hemingway.HWAbilityAimSettings.GetAimDirectionOffset
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UHWAbilityAimSettings::GetAimDirectionOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "GetAimDirectionOffset");

	Params::HWAbilityAimSettings_GetAimDirectionOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.GetPositionOffset
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAbilityAimSettings::GetPositionOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "GetPositionOffset");

	Params::HWAbilityAimSettings_GetPositionOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldAdjustStartAimToGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldAdjustStartAimToGround() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldAdjustStartAimToGround");

	Params::HWAbilityAimSettings_ShouldAdjustStartAimToGround Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldOffsetAimByLastValidHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldOffsetAimByLastValidHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldOffsetAimByLastValidHeight");

	Params::HWAbilityAimSettings_ShouldOffsetAimByLastValidHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldUseClientCachedAim
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldUseClientCachedAim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldUseClientCachedAim");

	Params::HWAbilityAimSettings_ShouldUseClientCachedAim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldUseClientCachedTargetList
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldUseClientCachedTargetList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldUseClientCachedTargetList");

	Params::HWAbilityAimSettings_ShouldUseClientCachedTargetList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldUseControllerRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldUseControllerRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldUseControllerRotation");

	Params::HWAbilityAimSettings_ShouldUseControllerRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings.ShouldUseSourceActorRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityAimSettings::ShouldUseSourceActorRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings", "ShouldUseSourceActorRotation");

	Params::HWAbilityAimSettings_ShouldUseSourceActorRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_EightWayMovement.GetMaxRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_EightWayMovement::GetMaxRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_EightWayMovement", "GetMaxRange");

	Params::HWAbilityAimSettings_EightWayMovement_GetMaxRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_Self.GetManualCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_Self::GetManualCollisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_Self", "GetManualCollisionRadius");

	Params::HWAbilityAimSettings_Self_GetManualCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings.GetAcceptableTargetFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWAbilityAttackSettings::GetAcceptableTargetFilter(class AActor* Avatar, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings", "GetAcceptableTargetFilter");

	Params::HWAbilityAttackSettings_GetAcceptableTargetFilter Parms{};

	Parms.Avatar = Avatar;
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings.GetAttackType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityAttackType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityAttackType UHWAbilityAttackSettings::GetAttackType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings", "GetAttackType");

	Params::HWAbilityAttackSettings_GetAttackType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings.GetEffectsForGroups
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UGameplayEffect>>*OutEffects                                             (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWAbilityAttackSettings::GetEffectsForGroups(const struct FGameplayTagContainer& EffectGroupTags, TArray<TSubclassOf<class UGameplayEffect>>* OutEffects) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings", "GetEffectsForGroups");

	Params::HWAbilityAttackSettings_GetEffectsForGroups Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEffects != nullptr)
		*OutEffects = std::move(Parms.OutEffects);
}


// Function Hemingway.HWCharacter_Base.AddMinimapModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EHWMinimapModifier                      Modifier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::AddMinimapModifier(EHWMinimapModifier Modifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "AddMinimapModifier");

	Params::HWCharacter_Base_AddMinimapModifier Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.AddOrUpdateBlendable
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IBlendableInterface>InBlendableObject                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::AddOrUpdateBlendable(TScriptInterface<class IBlendableInterface> InBlendableObject, float InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "AddOrUpdateBlendable");

	Params::HWCharacter_Base_AddOrUpdateBlendable Parms{};

	Parms.InBlendableObject = InBlendableObject;
	Parms.InWeight = InWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.ApplyBotControl
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InputVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::ApplyBotControl(const struct FVector& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "ApplyBotControl");

	Params::HWCharacter_Base_ApplyBotControl Parms{};

	Parms.InputVector = std::move(InputVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.DidJustTeleport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::DidJustTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "DidJustTeleport");

	Params::HWCharacter_Base_DidJustTeleport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCameraPitchLimits
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// double*                                 PitchMin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double*                                 PitchMax                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::GetCameraPitchLimits(double* PitchMin, double* PitchMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCameraPitchLimits");

	Params::HWCharacter_Base_GetCameraPitchLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PitchMin != nullptr)
		*PitchMin = Parms.PitchMin;

	if (PitchMax != nullptr)
		*PitchMax = Parms.PitchMax;
}


// Function Hemingway.HWCharacter_Base.GetCurrentTeleportEndLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AHWCharacter_Base::GetCurrentTeleportEndLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCurrentTeleportEndLocation");

	Params::HWCharacter_Base_GetCurrentTeleportEndLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCurrentTeleportStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AHWCharacter_Base::GetCurrentTeleportStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCurrentTeleportStartLocation");

	Params::HWCharacter_Base_GetCurrentTeleportStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetUserSettings
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_Base::GetUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetUserSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandelTagUpdated_UseControllerRotationYaw
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandelTagUpdated_UseControllerRotationYaw(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandelTagUpdated_UseControllerRotationYaw");

	Params::HWCharacter_Base_HandelTagUpdated_UseControllerRotationYaw Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleAbilitySystemUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        NewAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleAbilitySystemUpdated(class UHWAbilitySystemComponent* NewAbilitySystem, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleAbilitySystemUpdated");

	Params::HWCharacter_Base_HandleAbilitySystemUpdated Parms{};

	Parms.NewAbilitySystem = NewAbilitySystem;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleOnNewSkinTagAsset
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleOnNewSkinTagAsset");

	Params::HWCharacter_Base_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleOnSkinTagAssetRemoved
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleOnSkinTagAssetRemoved");

	Params::HWCharacter_Base_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_AbilityBuffering
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_AbilityBuffering(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_AbilityBuffering");

	Params::HWCharacter_Base_HandleTagUpdated_AbilityBuffering Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_FreezeSkeleton
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_FreezeSkeleton(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_FreezeSkeleton");

	Params::HWCharacter_Base_HandleTagUpdated_FreezeSkeleton Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_IgnoreControlRotation
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_IgnoreControlRotation(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_IgnoreControlRotation");

	Params::HWCharacter_Base_HandleTagUpdated_IgnoreControlRotation Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_IgnoreLookInput
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_IgnoreLookInput(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_IgnoreLookInput");

	Params::HWCharacter_Base_HandleTagUpdated_IgnoreLookInput Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_IgnoreMoveInput
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_IgnoreMoveInput(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_IgnoreMoveInput");

	Params::HWCharacter_Base_HandleTagUpdated_IgnoreMoveInput Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_Intoxicate
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_Intoxicate(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_Intoxicate");

	Params::HWCharacter_Base_HandleTagUpdated_Intoxicate Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_IsInFountain
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_IsInFountain(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_IsInFountain");

	Params::HWCharacter_Base_HandleTagUpdated_IsInFountain Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_Knockback
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_Knockback(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_Knockback");

	Params::HWCharacter_Base_HandleTagUpdated_Knockback Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_Mesmerize
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_Mesmerize(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_Mesmerize");

	Params::HWCharacter_Base_HandleTagUpdated_Mesmerize Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_NoSpectatingAllowed
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_NoSpectatingAllowed(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_NoSpectatingAllowed");

	Params::HWCharacter_Base_HandleTagUpdated_NoSpectatingAllowed Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_Rooted
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_Rooted(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_Rooted");

	Params::HWCharacter_Base_HandleTagUpdated_Rooted Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_Stun
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_Stun(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_Stun");

	Params::HWCharacter_Base_HandleTagUpdated_Stun Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_TargetLock
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_TargetLock(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_TargetLock");

	Params::HWCharacter_Base_HandleTagUpdated_TargetLock Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.HandleTagUpdated_TypeGod
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::HandleTagUpdated_TypeGod(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HandleTagUpdated_TypeGod");

	Params::HWCharacter_Base_HandleTagUpdated_TypeGod Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.MeshFadeTimelineFinished
// (Final, Native, Protected)

void AHWCharacter_Base::MeshFadeTimelineFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "MeshFadeTimelineFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.MeshFadeTimelineUpdate
// (Final, Native, Protected)
// Parameters:
// const float                             FadeScalar                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::MeshFadeTimelineUpdate(const float FadeScalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "MeshFadeTimelineUpdate");

	Params::HWCharacter_Base_MeshFadeTimelineUpdate Parms{};

	Parms.FadeScalar = FadeScalar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.Multicast_SetEnableCollision
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::Multicast_SetEnableCollision(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "Multicast_SetEnableCollision");

	Params::HWCharacter_Base_Multicast_SetEnableCollision Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnBroadcastHitReaction
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// const struct FVector&                   DamageDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageMagnitude                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::OnBroadcastHitReaction(const struct FVector& DamageDirection, float DamageMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnBroadcastHitReaction");

	Params::HWCharacter_Base_OnBroadcastHitReaction Parms{};

	Parms.DamageDirection = std::move(DamageDirection);
	Parms.DamageMagnitude = DamageMagnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnDeath
// (Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Base::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnHighlightedStatusChanged
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsHighlighted                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::OnHighlightedStatusChanged(const bool bIsHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnHighlightedStatusChanged");

	Params::HWCharacter_Base_OnHighlightedStatusChanged Parms{};

	Parms.bIsHighlighted = bIsHighlighted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_AbilitySystemActor
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   PreviousAbilitySystemActor                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::OnRep_AbilitySystemActor(class AHWCharacterAbilitySystemActor* PreviousAbilitySystemActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_AbilitySystemActor");

	Params::HWCharacter_Base_OnRep_AbilitySystemActor Parms{};

	Parms.PreviousAbilitySystemActor = PreviousAbilitySystemActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_ApparelComponent
// (Native, Protected)

void AHWCharacter_Base::OnRep_ApparelComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_ApparelComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_CameraLockInfo
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_CameraLockInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_CameraLockInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_CanSpectate
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_CanSpectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_CanSpectate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_CollisionStack
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_CollisionStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_CollisionStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_FactoryOwner
// (Native, Protected)

void AHWCharacter_Base::OnRep_FactoryOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_FactoryOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_IsAnimJumpingCount
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_IsAnimJumpingCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_IsAnimJumpingCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_IsDead
// (Final, Native, Private)

void AHWCharacter_Base::OnRep_IsDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_IsDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_MinimapModifiersUpdated
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_MinimapModifiersUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_MinimapModifiersUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_MinimapTypeUpdated
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_MinimapTypeUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_MinimapTypeUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_PlayIntroMontageCutoffTime
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_PlayIntroMontageCutoffTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_PlayIntroMontageCutoffTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_RespawnTransform
// (Final, Native, Private)

void AHWCharacter_Base::OnRep_RespawnTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_RespawnTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_ShieldManagerComponent
// (Native, Public)

void AHWCharacter_Base::OnRep_ShieldManagerComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_ShieldManagerComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRep_SkinTagContainerChanged
// (Final, Native, Protected)

void AHWCharacter_Base::OnRep_SkinTagContainerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRep_SkinTagContainerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnRespawned
// (Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Base::OnRespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnRespawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnSpawned
// (Event, Protected, BlueprintEvent)

void AHWCharacter_Base::OnSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWCharacter_Base.OnTeamUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AHWCharacterAbilitySystemActor*   OwningAbilitySystemActor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InTeamState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::OnTeamUpdated(class AHWCharacterAbilitySystemActor* OwningAbilitySystemActor, class AHWTeamState* InTeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnTeamUpdated");

	Params::HWCharacter_Base_OnTeamUpdated Parms{};

	Parms.OwningAbilitySystemActor = OwningAbilitySystemActor;
	Parms.InTeamState = InTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnTeleportTrackingFinished
// (Final, Native, Public)

void AHWCharacter_Base::OnTeleportTrackingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnTeleportTrackingFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OnTimeAfterDeathExpired
// (Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Base::OnTimeAfterDeathExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OnTimeAfterDeathExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.OverrideDeathMontage
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAssetRequestKey&          MontageKey                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAssetRequestKey                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FAssetRequestKey AHWCharacter_Base::OverrideDeathMontage(const struct FAssetRequestKey& MontageKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "OverrideDeathMontage");

	Params::HWCharacter_Base_OverrideDeathMontage Parms{};

	Parms.MontageKey = std::move(MontageKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.PlayDeathMontage
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void AHWCharacter_Base::PlayDeathMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "PlayDeathMontage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.PlayIntroMontage
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void AHWCharacter_Base::PlayIntroMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "PlayIntroMontage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.PopCollisionState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWCollisionState&         CollisionStateData                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::PopCollisionState(const struct FHWCollisionState& CollisionStateData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "PopCollisionState");

	Params::HWCharacter_Base_PopCollisionState Parms{};

	Parms.CollisionStateData = std::move(CollisionStateData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.PushCollisionState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWCollisionState&         CollisionStateData                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_Base::PushCollisionState(const struct FHWCollisionState& CollisionStateData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "PushCollisionState");

	Params::HWCharacter_Base_PushCollisionState Parms{};

	Parms.CollisionStateData = std::move(CollisionStateData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.RemoveBlendable
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IBlendableInterface>InBlendableObject                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::RemoveBlendable(TScriptInterface<class IBlendableInterface> InBlendableObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "RemoveBlendable");

	Params::HWCharacter_Base_RemoveBlendable Parms{};

	Parms.InBlendableObject = InBlendableObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.RemoveMinimapModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EHWMinimapModifier                      Modifier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::RemoveMinimapModifier(EHWMinimapModifier Modifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "RemoveMinimapModifier");

	Params::HWCharacter_Base_RemoveMinimapModifier Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.RemoveSpecialFXCurve
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFXID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::RemoveSpecialFXCurve(class FName InFXID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "RemoveSpecialFXCurve");

	Params::HWCharacter_Base_RemoveSpecialFXCurve Parms{};

	Parms.InFXID = InFXID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.ResetMeshFadeValueAfterMeshSwap
// (Final, Native, Protected)
// Parameters:
// bool                                    bMeshSwapped                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::ResetMeshFadeValueAfterMeshSwap(bool bMeshSwapped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "ResetMeshFadeValueAfterMeshSwap");

	Params::HWCharacter_Base_ResetMeshFadeValueAfterMeshSwap Parms{};

	Parms.bMeshSwapped = bMeshSwapped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.ResetSpecialFXTime
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFXID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::ResetSpecialFXTime(class FName InFXID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "ResetSpecialFXTime");

	Params::HWCharacter_Base_ResetSpecialFXTime Parms{};

	Parms.InFXID = InFXID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.ReverseSpecialFX
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFXID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::ReverseSpecialFX(class FName InFXID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "ReverseSpecialFX");

	Params::HWCharacter_Base_ReverseSpecialFX Parms{};

	Parms.InFXID = InFXID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetCameraLock
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  LockOrigin                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const float                             YawAngleThreshold                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PitchAngleThreshold                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseCurrentCharacterRotationAsOriginRotation           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetCameraLock(const bool bEnable, const struct FRotator& LockOrigin, const float YawAngleThreshold, const float PitchAngleThreshold, const bool bUseCurrentCharacterRotationAsOriginRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetCameraLock");

	Params::HWCharacter_Base_SetCameraLock Parms{};

	Parms.bEnable = bEnable;
	Parms.LockOrigin = std::move(LockOrigin);
	Parms.YawAngleThreshold = YawAngleThreshold;
	Parms.PitchAngleThreshold = PitchAngleThreshold;
	Parms.bUseCurrentCharacterRotationAsOriginRotation = bUseCurrentCharacterRotationAsOriginRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetCameraPitchLimits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  PitchMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  PitchMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetCameraPitchLimits(double PitchMin, double PitchMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetCameraPitchLimits");

	Params::HWCharacter_Base_SetCameraPitchLimits Parms{};

	Parms.PitchMin = PitchMin;
	Parms.PitchMax = PitchMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetCameraPitchLimitsWithLerp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  PitchMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  PitchMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LerpTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetCameraPitchLimitsWithLerp(double PitchMin, double PitchMax, float LerpTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetCameraPitchLimitsWithLerp");

	Params::HWCharacter_Base_SetCameraPitchLimitsWithLerp Parms{};

	Parms.PitchMin = PitchMin;
	Parms.PitchMax = PitchMax;
	Parms.LerpTime = LerpTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetFactoryOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWBotFactory*                    factory                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetFactoryOwner(class AHWBotFactory* factory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetFactoryOwner");

	Params::HWCharacter_Base_SetFactoryOwner Parms{};

	Parms.factory = factory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetLocalTeamColor
// (Final, BlueprintCosmetic, Native, Private)
// Parameters:
// class AHWCharacterAbilitySystemActor*   OwningAbilitySystemActor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InTeamState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetLocalTeamColor(class AHWCharacterAbilitySystemActor* OwningAbilitySystemActor, class AHWTeamState* InTeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetLocalTeamColor");

	Params::HWCharacter_Base_SetLocalTeamColor Parms{};

	Parms.OwningAbilitySystemActor = OwningAbilitySystemActor;
	Parms.InTeamState = InTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SetToBaseCollisionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bReturnToWalking                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCheckDeath                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SetToBaseCollisionState(const bool bReturnToWalking, const bool bCheckDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SetToBaseCollisionState");

	Params::HWCharacter_Base_SetToBaseCollisionState Parms{};

	Parms.bReturnToWalking = bReturnToWalking;
	Parms.bCheckDeath = bCheckDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.ShouldPreventCustomMovementFromInstigator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          MovementInstigator                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bApplyEffectsAndCosts                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::ShouldPreventCustomMovementFromInstigator(const class AHWCharacter_Base* MovementInstigator, const bool bApplyEffectsAndCosts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "ShouldPreventCustomMovementFromInstigator");

	Params::HWCharacter_Base_ShouldPreventCustomMovementFromInstigator Parms{};

	Parms.MovementInstigator = MovementInstigator;
	Parms.bApplyEffectsAndCosts = bApplyEffectsAndCosts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.StartHWSpecialEffect
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWSpecialEffect&          Effect                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRestart                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWFXCurveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWFXCurveComponent* AHWCharacter_Base::StartHWSpecialEffect(const struct FHWSpecialEffect& Effect, float PlayRate, bool bRestart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "StartHWSpecialEffect");

	Params::HWCharacter_Base_StartHWSpecialEffect Parms{};

	Parms.Effect = std::move(Effect);
	Parms.PlayRate = PlayRate;
	Parms.bRestart = bRestart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.StopBotControllerMovement
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_Base::StopBotControllerMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "StopBotControllerMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.StopSpecialFX
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InFXID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::StopSpecialFX(class FName InFXID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "StopSpecialFX");

	Params::HWCharacter_Base_StopSpecialFX Parms{};

	Parms.InFXID = InFXID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.Suicide
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_Base::Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "Suicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.SwapSkinTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NewSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OldSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::SwapSkinTags(const struct FGameplayTag& NewSkinTag, const struct FGameplayTag& OldSkinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "SwapSkinTags");

	Params::HWCharacter_Base_SwapSkinTags Parms{};

	Parms.NewSkinTag = std::move(NewSkinTag);
	Parms.OldSkinTag = std::move(OldSkinTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.TeleportToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult*                      SweepHitResult                                         (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bPreserveZHeight                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSweep                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::TeleportToLocation(const struct FVector& TargetLocation, struct FHitResult* SweepHitResult, const bool bPreserveZHeight, const bool bSweep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "TeleportToLocation");

	Params::HWCharacter_Base_TeleportToLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.bPreserveZHeight = bPreserveZHeight;
	Parms.bSweep = bSweep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SweepHitResult != nullptr)
		*SweepHitResult = std::move(Parms.SweepHitResult);
}


// Function Hemingway.HWCharacter_Base.TeleportToStartSpot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::TeleportToStartSpot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "TeleportToStartSpot");

	Params::HWCharacter_Base_TeleportToStartSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.TeleportToTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                TargetTransform                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult*                      SweepHitResult                                         (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bPreserveZHeight                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSweep                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::TeleportToTransform(const struct FTransform& TargetTransform, struct FHitResult* SweepHitResult, const bool bPreserveZHeight, const bool bSweep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "TeleportToTransform");

	Params::HWCharacter_Base_TeleportToTransform Parms{};

	Parms.TargetTransform = std::move(TargetTransform);
	Parms.bPreserveZHeight = bPreserveZHeight;
	Parms.bSweep = bSweep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SweepHitResult != nullptr)
		*SweepHitResult = std::move(Parms.SweepHitResult);
}


// Function Hemingway.HWCharacter_Base.TestCheat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bSetActive                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             testInt                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Base::TestCheat(const bool bSetActive, const int32 testInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "TestCheat");

	Params::HWCharacter_Base_TestCheat Parms{};

	Parms.bSetActive = bSetActive;
	Parms.testInt = testInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.UpdateCanSpectateStatus
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_Base::UpdateCanSpectateStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "UpdateCanSpectateStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Base.CanBeHardDisplaced
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::CanBeHardDisplaced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "CanBeHardDisplaced");

	Params::HWCharacter_Base_CanBeHardDisplaced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.CanBePulled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::CanBePulled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "CanBePulled");

	Params::HWCharacter_Base_CanBePulled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.DidRespawnThisTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::DidRespawnThisTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "DidRespawnThisTick");

	Params::HWCharacter_Base_DidRespawnThisTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GenerateBaseCollisionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWCollisionState                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWCollisionState AHWCharacter_Base::GenerateBaseCollisionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GenerateBaseCollisionState");

	Params::HWCharacter_Base_GenerateBaseCollisionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* AHWCharacter_Base::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetAbilitySystemComponent");

	Params::HWCharacter_Base_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetApparelComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWCharacter_Base::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetApparelComponent");

	Params::HWCharacter_Base_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetApparelSkinObjectByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      InSkinObjectName                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMultiSkinObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMultiSkinObject* AHWCharacter_Base::GetApparelSkinObjectByName(const class FName& InSkinObjectName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetApparelSkinObjectByName");

	Params::HWCharacter_Base_GetApparelSkinObjectByName Parms{};

	Parms.InSkinObjectName = InSkinObjectName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCapsuleHalfHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bScaled                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetCapsuleHalfHeight(const bool bScaled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCapsuleHalfHeight");

	Params::HWCharacter_Base_GetCapsuleHalfHeight Parms{};

	Parms.bScaled = bScaled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCapsuleRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bScaled                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetCapsuleRadius(const bool bScaled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCapsuleRadius");

	Params::HWCharacter_Base_GetCapsuleRadius Parms{};

	Parms.bScaled = bScaled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCharacterAbilitySystemActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* AHWCharacter_Base::GetCharacterAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCharacterAbilitySystemActor");

	Params::HWCharacter_Base_GetCharacterAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCharacterLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetCharacterLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCharacterLevel");

	Params::HWCharacter_Base_GetCharacterLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCharacterMeshApparelSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMultiSkinObject* AHWCharacter_Base::GetCharacterMeshApparelSkinObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCharacterMeshApparelSkinObject");

	Params::HWCharacter_Base_GetCharacterMeshApparelSkinObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCurrentSkin
// (Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWCharacter_Base::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCurrentSkin");

	Params::HWCharacter_Base_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetCurrentTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AHWCharacter_Base::GetCurrentTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetCurrentTargetActor");

	Params::HWCharacter_Base_GetCurrentTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetDamageCountFromSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Source                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MaxTimeRange                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacter_Base::GetDamageCountFromSource(const class AHWCharacter_Base* Source, const float MaxTimeRange) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetDamageCountFromSource");

	Params::HWCharacter_Base_GetDamageCountFromSource Parms{};

	Parms.Source = Source;
	Parms.MaxTimeRange = MaxTimeRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetDamageSourceCountInTimeframe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             Timeframe                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGodsOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacter_Base::GetDamageSourceCountInTimeframe(const float Timeframe, bool bGodsOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetDamageSourceCountInTimeframe");

	Params::HWCharacter_Base_GetDamageSourceCountInTimeframe Parms{};

	Parms.Timeframe = Timeframe;
	Parms.bGodsOnly = bGodsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetDisplayInfoComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWDisplayInfoComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWDisplayInfoComponent* AHWCharacter_Base::GetDisplayInfoComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetDisplayInfoComponent");

	Params::HWCharacter_Base_GetDisplayInfoComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetFactoryOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWBotFactory*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWBotFactory* AHWCharacter_Base::GetFactoryOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetFactoryOwner");

	Params::HWCharacter_Base_GetFactoryOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetFamiliarHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWActiveFamiliarHandle          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWActiveFamiliarHandle AHWCharacter_Base::GetFamiliarHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetFamiliarHandle");

	Params::HWCharacter_Base_GetFamiliarHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetFXCurveComponentByFXID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InFXID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWFXCurveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWFXCurveComponent* AHWCharacter_Base::GetFXCurveComponentByFXID(class FName InFXID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetFXCurveComponentByFXID");

	Params::HWCharacter_Base_GetFXCurveComponentByFXID Parms{};

	Parms.InFXID = InFXID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetGold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetGold");

	Params::HWCharacter_Base_GetGold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetHealth");

	Params::HWCharacter_Base_GetHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetHealthPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetHealthPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetHealthPercentage");

	Params::HWCharacter_Base_GetHealthPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetHWAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* AHWCharacter_Base::GetHWAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetHWAbilitySystemComponent");

	Params::HWCharacter_Base_GetHWAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetHWPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* AHWCharacter_Base::GetHWPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetHWPlayerState");

	Params::HWCharacter_Base_GetHWPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetInhandProjectileSpeedModifierPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetInhandProjectileSpeedModifierPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetInhandProjectileSpeedModifierPercent");

	Params::HWCharacter_Base_GetInhandProjectileSpeedModifierPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetInventoryManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* AHWCharacter_Base::GetInventoryManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetInventoryManager");

	Params::HWCharacter_Base_GetInventoryManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetLastValidGroundLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              PlaneOfExistence                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWCharacter_Base::GetLastValidGroundLocation(const struct FGameplayTag& PlaneOfExistence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetLastValidGroundLocation");

	Params::HWCharacter_Base_GetLastValidGroundLocation Parms{};

	Parms.PlaneOfExistence = std::move(PlaneOfExistence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMana
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetMana() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMana");

	Params::HWCharacter_Base_GetMana Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetManaPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetManaPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetManaPercentage");

	Params::HWCharacter_Base_GetManaPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMaxCameraPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double AHWCharacter_Base::GetMaxCameraPitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMaxCameraPitch");

	Params::HWCharacter_Base_GetMaxCameraPitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetMaxHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMaxHealth");

	Params::HWCharacter_Base_GetMaxHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMaxMana
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_Base::GetMaxMana() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMaxMana");

	Params::HWCharacter_Base_GetMaxMana Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMinCameraPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double AHWCharacter_Base::GetMinCameraPitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMinCameraPitch");

	Params::HWCharacter_Base_GetMinCameraPitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMinimapType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWMinimapType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWMinimapType AHWCharacter_Base::GetMinimapType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMinimapType");

	Params::HWCharacter_Base_GetMinimapType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetMostRecentDamageSourceInTimeframe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             Timeframe                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGodsOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWCharacter_Base::GetMostRecentDamageSourceInTimeframe(const float Timeframe, const float Range, bool bGodsOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetMostRecentDamageSourceInTimeframe");

	Params::HWCharacter_Base_GetMostRecentDamageSourceInTimeframe Parms{};

	Parms.Timeframe = Timeframe;
	Parms.Range = Range;
	Parms.bGodsOnly = bGodsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.GetShieldManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWShieldManagerComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWShieldManagerComponent* AHWCharacter_Base::GetShieldManagerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "GetShieldManagerComponent");

	Params::HWCharacter_Base_GetShieldManagerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.HasApparelBeenAppliedAtLeastOnce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::HasApparelBeenAppliedAtLeastOnce() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HasApparelBeenAppliedAtLeastOnce");

	Params::HWCharacter_Base_HasApparelBeenAppliedAtLeastOnce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.HasBeenDamagedInTimeframe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             Timeframe                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGodsOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::HasBeenDamagedInTimeframe(const float Timeframe, bool bGodsOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HasBeenDamagedInTimeframe");

	Params::HWCharacter_Base_HasBeenDamagedInTimeframe Parms{};

	Parms.Timeframe = Timeframe;
	Parms.bGodsOnly = bGodsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.HasMinimapModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWMinimapModifier                      Modifier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::HasMinimapModifier(EHWMinimapModifier Modifier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HasMinimapModifier");

	Params::HWCharacter_Base_HasMinimapModifier Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.HasValidGroundLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::HasValidGroundLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "HasValidGroundLocation");

	Params::HWCharacter_Base_HasValidGroundLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsAGod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsAGod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsAGod");

	Params::HWCharacter_Base_IsAGod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsAJungleBoss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsAJungleBoss() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsAJungleBoss");

	Params::HWCharacter_Base_IsAJungleBoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsAJungleMonster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsAJungleMonster() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsAJungleMonster");

	Params::HWCharacter_Base_IsAJungleMonster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsAMinion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsAMinion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsAMinion");

	Params::HWCharacter_Base_IsAMinion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsAStructure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsAStructure() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsAStructure");

	Params::HWCharacter_Base_IsAStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsATitan
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsATitan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsATitan");

	Params::HWCharacter_Base_IsATitan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsCloneFamiliar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsCloneFamiliar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsCloneFamiliar");

	Params::HWCharacter_Base_IsCloneFamiliar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsFamiliar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsFamiliar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsFamiliar");

	Params::HWCharacter_Base_IsFamiliar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsGodDecoy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsGodDecoy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsGodDecoy");

	Params::HWCharacter_Base_IsGodDecoy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsHardRooted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsHardRooted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsHardRooted");

	Params::HWCharacter_Base_IsHardRooted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsImmobilized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsImmobilized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsImmobilized");

	Params::HWCharacter_Base_IsImmobilized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsMesmerized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsMesmerized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsMesmerized");

	Params::HWCharacter_Base_IsMesmerized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsRespawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsRespawning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsRespawning");

	Params::HWCharacter_Base_IsRespawning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsSkinningReady
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsSkinningReady");

	Params::HWCharacter_Base_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Base.IsStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Base::IsStunned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Base", "IsStunned");

	Params::HWCharacter_Base_IsStunned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_PlayableCharacter.HandleTagUpdated_DisableCameraCollision
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_PlayableCharacter::HandleTagUpdated_DisableCameraCollision(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "HandleTagUpdated_DisableCameraCollision");

	Params::HWCharacter_PlayableCharacter_HandleTagUpdated_DisableCameraCollision Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_PlayableCharacter.Input_JumpPressed
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         InputActionValue                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_PlayableCharacter::Input_JumpPressed(const struct FInputActionValue& InputActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "Input_JumpPressed");

	Params::HWCharacter_PlayableCharacter_Input_JumpPressed Parms{};

	Parms.InputActionValue = std::move(InputActionValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_PlayableCharacter.Input_JumpReleased
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         InputActionValue                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_PlayableCharacter::Input_JumpReleased(const struct FInputActionValue& InputActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "Input_JumpReleased");

	Params::HWCharacter_PlayableCharacter_Input_JumpReleased Parms{};

	Parms.InputActionValue = std::move(InputActionValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_PlayableCharacter.Input_Look
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         InputActionValue                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_PlayableCharacter::Input_Look(const struct FInputActionValue& InputActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "Input_Look");

	Params::HWCharacter_PlayableCharacter_Input_Look Parms{};

	Parms.InputActionValue = std::move(InputActionValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_PlayableCharacter.Input_Move
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         InputActionValue                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_PlayableCharacter::Input_Move(const struct FInputActionValue& InputActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "Input_Move");

	Params::HWCharacter_PlayableCharacter_Input_Move Parms{};

	Parms.InputActionValue = std::move(InputActionValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_PlayableCharacter.GetEffectiveKillAssistRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_PlayableCharacter::GetEffectiveKillAssistRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "GetEffectiveKillAssistRange");

	Params::HWCharacter_PlayableCharacter_GetEffectiveKillAssistRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_PlayableCharacter.GetGodKillAssistEligibilityDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_PlayableCharacter::GetGodKillAssistEligibilityDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "GetGodKillAssistEligibilityDuration");

	Params::HWCharacter_PlayableCharacter_GetGodKillAssistEligibilityDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_PlayableCharacter.GetNPCKillAssistEligibilityDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_PlayableCharacter::GetNPCKillAssistEligibilityDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "GetNPCKillAssistEligibilityDuration");

	Params::HWCharacter_PlayableCharacter_GetNPCKillAssistEligibilityDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_PlayableCharacter.GetSpringArmComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWSpringArmComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWSpringArmComponent* AHWCharacter_PlayableCharacter::GetSpringArmComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "GetSpringArmComponent");

	Params::HWCharacter_PlayableCharacter_GetSpringArmComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_PlayableCharacter.GetStartingCameraZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacter_PlayableCharacter::GetStartingCameraZ() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_PlayableCharacter", "GetStartingCameraZ");

	Params::HWCharacter_PlayableCharacter_GetStartingCameraZ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Smite_God.ActivateCharacterDamagedFeedbackMaterialOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MaterialIntensity                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Smite_God::ActivateCharacterDamagedFeedbackMaterialOverlay(const float Duration, const float MaterialIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "ActivateCharacterDamagedFeedbackMaterialOverlay");

	Params::HWCharacter_Smite_God_ActivateCharacterDamagedFeedbackMaterialOverlay Parms{};

	Parms.Duration = Duration;
	Parms.MaterialIntensity = MaterialIntensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.DamageFeedbackTimelineFinished
// (Final, Native, Protected)

void AHWCharacter_Smite_God::DamageFeedbackTimelineFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "DamageFeedbackTimelineFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.DamageFeedbackTimelineUpdate
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Smite_God::DamageFeedbackTimelineUpdate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "DamageFeedbackTimelineUpdate");

	Params::HWCharacter_Smite_God_DamageFeedbackTimelineUpdate Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.HandleTagUpdated_InCombat
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Smite_God::HandleTagUpdated_InCombat(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "HandleTagUpdated_InCombat");

	Params::HWCharacter_Smite_God_HandleTagUpdated_InCombat Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.TriggerLocalVoiceEvent
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              VoiceEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Smite_God::TriggerLocalVoiceEvent(const struct FGameplayTag& VoiceEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "TriggerLocalVoiceEvent");

	Params::HWCharacter_Smite_God_TriggerLocalVoiceEvent Parms{};

	Parms.VoiceEvent = std::move(VoiceEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.TriggerVoiceEvent
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              VoiceEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AudienceOverride                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Smite_God::TriggerVoiceEvent(const struct FGameplayTag& VoiceEvent, const struct FGameplayTag& AudienceOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "TriggerVoiceEvent");

	Params::HWCharacter_Smite_God_TriggerVoiceEvent Parms{};

	Parms.VoiceEvent = std::move(VoiceEvent);
	Parms.AudienceOverride = std::move(AudienceOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Smite_God.GetVoiceComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWVoiceComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWVoiceComponent* AHWCharacter_Smite_God::GetVoiceComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Smite_God", "GetVoiceComponent");

	Params::HWCharacter_Smite_God_GetVoiceComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.AddDynamicDisplayCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class URHCurrency>       CURRENCY                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWStoreSubsystem::AddDynamicDisplayCurrency(TSoftObjectPtr<class URHCurrency> CURRENCY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "AddDynamicDisplayCurrency");

	Params::HWStoreSubsystem_AddDynamicDisplayCurrency Parms{};

	Parms.CURRENCY = CURRENCY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWStoreSubsystem.ClearDynamicDisplayCurrencies
// (Final, Native, Public, BlueprintCallable)

void UHWStoreSubsystem::ClearDynamicDisplayCurrencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "ClearDynamicDisplayCurrencies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWStoreSubsystem.GetPriceForDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URHStoreItem*                     StoreItem                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class URHStoreItemPrice* ItemPrice, const struct FGameplayTag& PriceGroupTag)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWStoreSubsystem::GetPriceForDisplay(class URHStoreItem* StoreItem, const class URH_PlayerInfo* PlayerInfo, TDelegate<void(const class URHStoreItemPrice* ItemPrice, const struct FGameplayTag& PriceGroupTag)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetPriceForDisplay");

	Params::HWStoreSubsystem_GetPriceForDisplay Parms{};

	Parms.StoreItem = StoreItem;
	Parms.PlayerInfo = PlayerInfo;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWStoreSubsystem.GetVIPStoreItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URHStoreItem*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHStoreItem* UHWStoreSubsystem::GetVIPStoreItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetVIPStoreItem");

	Params::HWStoreSubsystem_GetVIPStoreItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.RemoveDynamicDisplayCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class URHCurrency>       CURRENCY                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWStoreSubsystem::RemoveDynamicDisplayCurrency(TSoftObjectPtr<class URHCurrency> CURRENCY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "RemoveDynamicDisplayCurrency");

	Params::HWStoreSubsystem_RemoveDynamicDisplayCurrency Parms{};

	Parms.CURRENCY = CURRENCY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWStoreSubsystem.ShowEmptyStoreMessage
// (Final, Native, Public, BlueprintCallable)

void UHWStoreSubsystem::ShowEmptyStoreMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "ShowEmptyStoreMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWStoreSubsystem.CurrencyIdToType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                CurrencyId                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCurrencyType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWCurrencyType UHWStoreSubsystem::CurrencyIdToType(const struct FRH_ItemId& CurrencyId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "CurrencyIdToType");

	Params::HWStoreSubsystem_CurrencyIdToType Parms{};

	Parms.CurrencyId = std::move(CurrencyId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.CurrencyTypeToId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCurrencyType                         CurrencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRH_ItemId                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRH_ItemId UHWStoreSubsystem::CurrencyTypeToId(EHWCurrencyType CurrencyType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "CurrencyTypeToId");

	Params::HWStoreSubsystem_CurrencyTypeToId Parms{};

	Parms.CurrencyType = CurrencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetArePurchasesWithCurrencyEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWStoreSubsystem::GetArePurchasesWithCurrencyEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetArePurchasesWithCurrencyEnabled");

	Params::HWStoreSubsystem_GetArePurchasesWithCurrencyEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetCachedPlayerVIPOwnershipExpiration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UHWStoreSubsystem::GetCachedPlayerVIPOwnershipExpiration(const class URH_PlayerInfo* PlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetCachedPlayerVIPOwnershipExpiration");

	Params::HWStoreSubsystem_GetCachedPlayerVIPOwnershipExpiration Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetCachedPlayerVIPOwnershipLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWVIPOwnershipLevel                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWVIPOwnershipLevel UHWStoreSubsystem::GetCachedPlayerVIPOwnershipLevel(const class URH_PlayerInfo* PlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetCachedPlayerVIPOwnershipLevel");

	Params::HWStoreSubsystem_GetCachedPlayerVIPOwnershipLevel Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetCurrencyById
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHCurrency*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHCurrency* UHWStoreSubsystem::GetCurrencyById(const struct FRH_ItemId& ItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetCurrencyById");

	Params::HWStoreSubsystem_GetCurrencyById Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetCurrencyByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCurrencyType                         CurrencyType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHCurrency*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHCurrency* UHWStoreSubsystem::GetCurrencyByType(EHWCurrencyType CurrencyType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetCurrencyByType");

	Params::HWStoreSubsystem_GetCurrencyByType Parms{};

	Parms.CurrencyType = CurrencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetDynamicDisplayCurrencies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<TSoftObjectPtr<class URHCurrency>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftObjectPtr<class URHCurrency>> UHWStoreSubsystem::GetDynamicDisplayCurrencies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetDynamicDisplayCurrencies");

	Params::HWStoreSubsystem_GetDynamicDisplayCurrencies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetGenericCollectionItemById
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGenericCollectionMappedData*  OutMappedData                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWCollectionItem> ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWCollectionItem> UHWStoreSubsystem::GetGenericCollectionItemById(const struct FRH_ItemId& ItemId, struct FHWGenericCollectionMappedData* OutMappedData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetGenericCollectionItemById");

	Params::HWStoreSubsystem_GetGenericCollectionItemById Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMappedData != nullptr)
		*OutMappedData = std::move(Parms.OutMappedData);

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetLegacyCurrencyItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URHCurrency*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHCurrency* UHWStoreSubsystem::GetLegacyCurrencyItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetLegacyCurrencyItem");

	Params::HWStoreSubsystem_GetLegacyCurrencyItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetPlayerFoundersOwnershipLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWFoundersOwnershipLevel               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWFoundersOwnershipLevel UHWStoreSubsystem::GetPlayerFoundersOwnershipLevel(const class URH_PlayerInfo* PlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetPlayerFoundersOwnershipLevel");

	Params::HWStoreSubsystem_GetPlayerFoundersOwnershipLevel Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetPrismBundleUpsell
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                BaseSkinId                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRH_LootId                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRH_LootId UHWStoreSubsystem::GetPrismBundleUpsell(const struct FRH_ItemId& BaseSkinId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetPrismBundleUpsell");

	Params::HWStoreSubsystem_GetPrismBundleUpsell Parms{};

	Parms.BaseSkinId = std::move(BaseSkinId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetPurchaseRequestDataForItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWInventoryItem*           Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStorePurchaseRequest*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHStorePurchaseRequest* UHWStoreSubsystem::GetPurchaseRequestDataForItem(const class UHWInventoryItem* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetPurchaseRequestDataForItem");

	Params::HWStoreSubsystem_GetPurchaseRequestDataForItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetSoftCurrencyById
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class URHCurrency>       ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class URHCurrency> UHWStoreSubsystem::GetSoftCurrencyById(const struct FRH_ItemId& ItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetSoftCurrencyById");

	Params::HWStoreSubsystem_GetSoftCurrencyById Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.GetStoreItemBySKU
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Sku                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStoreItem*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHStoreItem* UHWStoreSubsystem::GetStoreItemBySKU(const class FString& Sku) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "GetStoreItemBySKU");

	Params::HWStoreSubsystem_GetStoreItemBySKU Parms{};

	Parms.Sku = std::move(Sku);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWStoreSubsystem.IsReadyForQueries
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWStoreSubsystem::IsReadyForQueries() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWStoreSubsystem", "IsReadyForQueries");

	Params::HWStoreSubsystem_IsReadyForQueries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Custom.BP_CalcHighlightingTargetList
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWAttackTargetingInfo&    TargetingInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListDataHandle                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilityAttackSettings_Custom::BP_CalcHighlightingTargetList(const struct FHWAttackTargetingInfo& TargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetListDataHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Custom", "BP_CalcHighlightingTargetList");

	Params::HWAbilityAttackSettings_Custom_BP_CalcHighlightingTargetList Parms{};

	Parms.TargetingInfo = std::move(TargetingInfo);
	Parms.TargetListDataHandle = std::move(TargetListDataHandle);

	UObject::ProcessEvent(Func, &Parms);

	TargetListDataHandle = std::move(Parms.TargetListDataHandle);
}


// Function Hemingway.HWAbilityCollisionProxy.ClearProxyTouchListRehitTimes
// (Final, Native, Public, BlueprintCallable)

void UHWAbilityCollisionProxy::ClearProxyTouchListRehitTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy", "ClearProxyTouchListRehitTimes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityCollisionProxy.OnBeginOverlap
// (Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWAbilityCollisionProxy::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy", "OnBeginOverlap");

	Params::HWAbilityCollisionProxy_OnBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityCollisionProxy.OnEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityCollisionProxy::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy", "OnEndOverlap");

	Params::HWAbilityCollisionProxy_OnEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityCollisionProxy.RemoveActorFromProxyTouchList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityCollisionProxy::RemoveActorFromProxyTouchList(const class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy", "RemoveActorFromProxyTouchList");

	Params::HWAbilityCollisionProxy_RemoveActorFromProxyTouchList Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityCollisionProxy.ShouldUseBaseCollisionFollow
// (Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy::ShouldUseBaseCollisionFollow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy", "ShouldUseBaseCollisionFollow");

	Params::HWAbilityCollisionProxy_ShouldUseBaseCollisionFollow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.CalcCharacterVelocityAdjustmentFactorPercent
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityCollisionProxy_PushPull::CalcCharacterVelocityAdjustmentFactorPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "CalcCharacterVelocityAdjustmentFactorPercent");

	Params::HWAbilityCollisionProxy_PushPull_CalcCharacterVelocityAdjustmentFactorPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.CalcMovementForceSpeed
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityCollisionProxy_PushPull::CalcMovementForceSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "CalcMovementForceSpeed");

	Params::HWAbilityCollisionProxy_PushPull_CalcMovementForceSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.CanPushOrPullOverlappingActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy_PushPull::CanPushOrPullOverlappingActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "CanPushOrPullOverlappingActors");

	Params::HWAbilityCollisionProxy_PushPull_CanPushOrPullOverlappingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.GetPullLocation
// (Final, Native, Protected, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAbilityCollisionProxy_PushPull::GetPullLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "GetPullLocation");

	Params::HWAbilityCollisionProxy_PushPull_GetPullLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.GetPushDirection
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     OverlappedActor                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAbilityCollisionProxy_PushPull::GetPushDirection(const class AActor* OverlappedActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "GetPushDirection");

	Params::HWAbilityCollisionProxy_PushPull_GetPushDirection Parms{};

	Parms.OverlappedActor = OverlappedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.IsUsingAdjustmentFactorCurve
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy_PushPull::IsUsingAdjustmentFactorCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "IsUsingAdjustmentFactorCurve");

	Params::HWAbilityCollisionProxy_PushPull_IsUsingAdjustmentFactorCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.IsUsingSpeedCurve
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy_PushPull::IsUsingSpeedCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "IsUsingSpeedCurve");

	Params::HWAbilityCollisionProxy_PushPull_IsUsingSpeedCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.ShouldPushOrPullActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     Other                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy_PushPull::ShouldPushOrPullActor(const class AActor* Other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "ShouldPushOrPullActor");

	Params::HWAbilityCollisionProxy_PushPull_ShouldPushOrPullActor Parms{};

	Parms.Other = Other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityCollisionProxy_PushPull.ShouldTrackOverlappedActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     Other                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityCollisionProxy_PushPull::ShouldTrackOverlappedActor(const class AActor* Other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityCollisionProxy_PushPull", "ShouldTrackOverlappedActor");

	Params::HWAbilityCollisionProxy_PushPull_ShouldTrackOverlappedActor Parms{};

	Parms.Other = Other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPostProcessComponent.PerformSkinUpdate
// (Final, Native, Public)

void UHWPostProcessComponent::PerformSkinUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPostProcessComponent", "PerformSkinUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Blueprintable.ActivateBlueprintAbilityTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWAbilityTask_Blueprintable>TaskClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_Blueprintable*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_Blueprintable* UHWAbilityTask_Blueprintable::ActivateBlueprintAbilityTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWAbilityTask_Blueprintable> TaskClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_Blueprintable", "ActivateBlueprintAbilityTask");

	Params::HWAbilityTask_Blueprintable_ActivateBlueprintAbilityTask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.TaskClass = TaskClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UHWAbilityTask_Blueprintable::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bWasDeactivatedDueToAbilityEnding                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Blueprintable::BP_OnDeactivated(const bool bWasDeactivatedDueToAbilityEnding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_OnDeactivated");

	Params::HWAbilityTask_Blueprintable_BP_OnDeactivated Parms{};

	Parms.bWasDeactivatedDueToAbilityEnding = bWasDeactivatedDueToAbilityEnding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_TickTask
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Blueprintable::BP_TickTask(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_TickTask");

	Params::HWAbilityTask_Blueprintable_BP_TickTask Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_IsForRemoteClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_Blueprintable::BP_IsForRemoteClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_IsForRemoteClient");

	Params::HWAbilityTask_Blueprintable_BP_IsForRemoteClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_Blueprintable::BP_IsLocallyControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_IsLocallyControlled");

	Params::HWAbilityTask_Blueprintable_BP_IsLocallyControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Blueprintable.BP_IsPredictingClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_Blueprintable::BP_IsPredictingClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "BP_IsPredictingClient");

	Params::HWAbilityTask_Blueprintable_BP_IsPredictingClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Blueprintable.GetOwningHWAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayAbility*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayAbility* UHWAbilityTask_Blueprintable::GetOwningHWAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "GetOwningHWAbility");

	Params::HWAbilityTask_Blueprintable_GetOwningHWAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Blueprintable.GetOwningHWAbilitySystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWAbilityTask_Blueprintable::GetOwningHWAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Blueprintable", "GetOwningHWAbilitySystemComponent");

	Params::HWAbilityTask_Blueprintable_GetOwningHWAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Hercules.ToggleBoulderMeshVisibility
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bVisible                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Hercules::ToggleBoulderMeshVisibility(const bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Hercules", "ToggleBoulderMeshVisibility");

	Params::HWCharacter_Hercules_ToggleBoulderMeshVisibility Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Hercules.GetBoulderMeshScale
// (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWCharacter_Hercules::GetBoulderMeshScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Hercules", "GetBoulderMeshScale");

	Params::HWCharacter_Hercules_GetBoulderMeshScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Hercules.GetBoulderSocketName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AHWCharacter_Hercules::GetBoulderSocketName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Hercules", "GetBoulderSocketName");

	Params::HWCharacter_Hercules_GetBoulderSocketName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.PerformGameplayLevitateOnTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayLevitate>  Levitation                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                LevitationSource_0                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                LevitationTarget                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayLevitate*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayLevitate* UHWAbilityTask_GameplayLevitate::PerformGameplayLevitateOnTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayLevitate> Levitation, class AHWCharacter_Base* LevitationSource_0, class AHWCharacter_Base* LevitationTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayLevitate", "PerformGameplayLevitateOnTarget");

	Params::HWAbilityTask_GameplayLevitate_PerformGameplayLevitateOnTarget Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Levitation = Levitation;
	Parms.LevitationSource_0 = LevitationSource_0;
	Parms.LevitationTarget = LevitationTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnAscentEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnAscentEnded(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnAscentEnded");

	Params::HWAbilityTask_GameplayLevitate_OnAscentEnded Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnAscentStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnAscentStarted(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnAscentStarted");

	Params::HWAbilityTask_GameplayLevitate_OnAscentStarted Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnDescentEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnDescentEnded(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnDescentEnded");

	Params::HWAbilityTask_GameplayLevitate_OnDescentEnded Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnDescentStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnDescentStarted(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnDescentStarted");

	Params::HWAbilityTask_GameplayLevitate_OnDescentStarted Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnHoverEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnHoverEnded(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnHoverEnded");

	Params::HWAbilityTask_GameplayLevitate_OnHoverEnded Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnHoverStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnHoverStarted(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnHoverStarted");

	Params::HWAbilityTask_GameplayLevitate_OnHoverStarted Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnLevitateCleansed
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayEffectRemovalInfo&GameplayEffectRemovalInfo                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnLevitateCleansed(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnLevitateCleansed");

	Params::HWAbilityTask_GameplayLevitate_OnLevitateCleansed Parms{};

	Parms.GameplayEffectRemovalInfo = std::move(GameplayEffectRemovalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnLevitationEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              Levitation                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndLevitationReason            EndLevitationReason                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnLevitationEnded(class UHWGameplayLevitate* Levitation, const EHWEndLevitationReason EndLevitationReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnLevitationEnded");

	Params::HWAbilityTask_GameplayLevitate_OnLevitationEnded Parms{};

	Parms.Levitation = Levitation;
	Parms.EndLevitationReason = EndLevitationReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayLevitate.OnLevitationStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayLevitate*              LevitationInstance                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayLevitate::OnLevitationStarted(class UHWGameplayLevitate* LevitationInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayLevitate", "OnLevitationStarted");

	Params::HWAbilityTask_GameplayLevitate_OnLevitationStarted Parms{};

	Parms.LevitationInstance = LevitationInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitCastStyleInput.WaitForAblityCastInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityCastStyle                 CastStyle                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPreventAbilityInputFromConfirming                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitCastStyleInput*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitCastStyleInput* UHWAbilityTask_WaitCastStyleInput::WaitForAblityCastInput(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const EAbilityCastStyle CastStyle, const bool bPreventAbilityInputFromConfirming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitCastStyleInput", "WaitForAblityCastInput");

	Params::HWAbilityTask_WaitCastStyleInput_WaitForAblityCastInput Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.CastStyle = CastStyle;
	Parms.bPreventAbilityInputFromConfirming = bPreventAbilityInputFromConfirming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitCastStyleInput.OnAbilityInputPressed
// (Final, Native, Protected)
// Parameters:
// const float                             TimeWaited                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitCastStyleInput::OnAbilityInputPressed(const float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitCastStyleInput", "OnAbilityInputPressed");

	Params::HWAbilityTask_WaitCastStyleInput_OnAbilityInputPressed Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitCastStyleInput.OnAbilityInputReleased
// (Final, Native, Protected)
// Parameters:
// const float                             TimeHeld                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitCastStyleInput::OnAbilityInputReleased(const float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitCastStyleInput", "OnAbilityInputReleased");

	Params::HWAbilityTask_WaitCastStyleInput_OnAbilityInputReleased Parms{};

	Parms.TimeHeld = TimeHeld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitCastStyleInput.OnAbilitySystemCancelledInputPressed
// (Final, Native, Protected)

void UHWAbilityTask_WaitCastStyleInput::OnAbilitySystemCancelledInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitCastStyleInput", "OnAbilitySystemCancelledInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitCastStyleInput.OnAbilitySystemConfirmedInputPressed
// (Final, Native, Protected)

void UHWAbilityTask_WaitCastStyleInput::OnAbilitySystemConfirmedInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitCastStyleInput", "OnAbilitySystemConfirmedInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWActorComponent.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWActorComponent::HasAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActorComponent", "HasAuthority");

	Params::HWActorComponent_HasAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployableDestructionComponent.OnComponentOverlaps
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWDeployableDestructionComponent::OnComponentOverlaps(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployableDestructionComponent", "OnComponentOverlaps");

	Params::HWDeployableDestructionComponent_OnComponentOverlaps Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitForTargeterValidationChange.WaitForTargetDataValidationChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bListenOnce                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitForTargeterValidationChange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitForTargeterValidationChange* UHWAbilityTask_WaitForTargeterValidationChange::WaitForTargetDataValidationChange(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& AttackID, const bool bListenOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitForTargeterValidationChange", "WaitForTargetDataValidationChange");

	Params::HWAbilityTask_WaitForTargeterValidationChange_WaitForTargetDataValidationChange Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.AttackID = std::move(AttackID);
	Parms.bListenOnce = bListenOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitForTargeterValidationChange.OnTargeterValidationChanged
// (Native, Protected)
// Parameters:
// class AHWTargeter*                      Targeter                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAttackId                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bValid                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitForTargeterValidationChange::OnTargeterValidationChanged(class AHWTargeter* Targeter, const struct FGameplayTag& InAttackId, const bool bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitForTargeterValidationChange", "OnTargeterValidationChanged");

	Params::HWAbilityTask_WaitForTargeterValidationChange_OnTargeterValidationChanged Parms{};

	Parms.Targeter = Targeter;
	Parms.InAttackId = std::move(InAttackId);
	Parms.bValid = bValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.AddBlockedAbilityTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::AddBlockedAbilityTags(const struct FGameplayTagContainer& InTags, class UHWAbilitySystemComponent* OwningAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "AddBlockedAbilityTags");

	Params::HWGameplayAbility_AddBlockedAbilityTags Parms{};

	Parms.InTags = std::move(InTags);
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.AddDynamicGameplayTagsToAvatar
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::AddDynamicGameplayTagsToAvatar(const struct FGameplayTagContainer& InTags, class UHWAbilitySystemComponent* OwningAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "AddDynamicGameplayTagsToAvatar");

	Params::HWGameplayAbility_AddDynamicGameplayTagsToAvatar Parms{};

	Parms.InTags = std::move(InTags);
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.ApplyGameplayEffectGroupsToSelf
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CurrentAttackId                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>*OutActiveEffectHandles                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameplayAbility::ApplyGameplayEffectGroupsToSelf(const struct FGameplayTagContainer& EffectGroupTags, const struct FGameplayTag& CurrentAttackId, TArray<struct FActiveGameplayEffectHandle>* OutActiveEffectHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ApplyGameplayEffectGroupsToSelf");

	Params::HWGameplayAbility_ApplyGameplayEffectGroupsToSelf Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);
	Parms.CurrentAttackId = std::move(CurrentAttackId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveEffectHandles != nullptr)
		*OutActiveEffectHandles = std::move(Parms.OutActiveEffectHandles);
}


// Function Hemingway.HWGameplayAbility.ApplyGameplayEffectGroupsToTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CurrentAttackId                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (Parm, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>*OutActiveEffectHandles                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameplayAbility::ApplyGameplayEffectGroupsToTarget(const struct FGameplayTagContainer& EffectGroupTags, const struct FGameplayTag& CurrentAttackId, const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, TArray<struct FActiveGameplayEffectHandle>* OutActiveEffectHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ApplyGameplayEffectGroupsToTarget");

	Params::HWGameplayAbility_ApplyGameplayEffectGroupsToTarget Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);
	Parms.CurrentAttackId = std::move(CurrentAttackId);
	Parms.TargetDataHandle = std::move(TargetDataHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveEffectHandles != nullptr)
		*OutActiveEffectHandles = std::move(Parms.OutActiveEffectHandles);
}


// Function Hemingway.HWGameplayAbility.ApplyGameplayEffectGroupToSelf
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EffectGroupTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CurrentAttackId                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>*OutActiveEffectHandles                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameplayAbility::ApplyGameplayEffectGroupToSelf(const struct FGameplayTag& EffectGroupTag, const struct FGameplayTag& CurrentAttackId, TArray<struct FActiveGameplayEffectHandle>* OutActiveEffectHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ApplyGameplayEffectGroupToSelf");

	Params::HWGameplayAbility_ApplyGameplayEffectGroupToSelf Parms{};

	Parms.EffectGroupTag = std::move(EffectGroupTag);
	Parms.CurrentAttackId = std::move(CurrentAttackId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveEffectHandles != nullptr)
		*OutActiveEffectHandles = std::move(Parms.OutActiveEffectHandles);
}


// Function Hemingway.HWGameplayAbility.ApplyGameplayEffectGroupToTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EffectGroupTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CurrentAttackId                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (Parm, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>*OutActiveEffectHandles                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameplayAbility::ApplyGameplayEffectGroupToTarget(const struct FGameplayTag& EffectGroupTag, const struct FGameplayTag& CurrentAttackId, const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, TArray<struct FActiveGameplayEffectHandle>* OutActiveEffectHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ApplyGameplayEffectGroupToTarget");

	Params::HWGameplayAbility_ApplyGameplayEffectGroupToTarget Parms{};

	Parms.EffectGroupTag = std::move(EffectGroupTag);
	Parms.CurrentAttackId = std::move(CurrentAttackId);
	Parms.TargetDataHandle = std::move(TargetDataHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveEffectHandles != nullptr)
		*OutActiveEffectHandles = std::move(Parms.OutActiveEffectHandles);
}


// Function Hemingway.HWGameplayAbility.BP_PostAbilityActivationLogic
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility::BP_PostAbilityActivationLogic(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_PostAbilityActivationLogic");

	Params::HWGameplayAbility_BP_PostAbilityActivationLogic Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility.HandleMontagePhaseBehavior
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const EMontagePhaseNotifyEvent          PhaseEventType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::HandleMontagePhaseBehavior(const struct FGameplayTag& PhaseTag, const struct FGameplayEventData& Payload, const EMontagePhaseNotifyEvent PhaseEventType, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "HandleMontagePhaseBehavior");

	Params::HWGameplayAbility_HandleMontagePhaseBehavior Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.Payload = std::move(Payload);
	Parms.PhaseEventType = PhaseEventType;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.OnCooldownCommited
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility::OnCooldownCommited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "OnCooldownCommited");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.OnCostsCommited
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility::OnCostsCommited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "OnCostsCommited");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.ProcessAbilitySwappedPersistentState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    PreviousState                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::ProcessAbilitySwappedPersistentState(const class FString& PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ProcessAbilitySwappedPersistentState");

	Params::HWGameplayAbility_ProcessAbilitySwappedPersistentState Parms{};

	Parms.PreviousState = std::move(PreviousState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.RemoveBlockedAbilityTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             CountToRemove                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::RemoveBlockedAbilityTags(const struct FGameplayTagContainer& InTags, const int32 CountToRemove, class UHWAbilitySystemComponent* OwningAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "RemoveBlockedAbilityTags");

	Params::HWGameplayAbility_RemoveBlockedAbilityTags Parms{};

	Parms.InTags = std::move(InTags);
	Parms.CountToRemove = CountToRemove;
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.RemoveDynamicGameplayTagsFromAvatar
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             CountToRemove                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::RemoveDynamicGameplayTagsFromAvatar(const struct FGameplayTagContainer& InTags, const int32 CountToRemove, class UHWAbilitySystemComponent* OwningAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "RemoveDynamicGameplayTagsFromAvatar");

	Params::HWGameplayAbility_RemoveDynamicGameplayTagsFromAvatar Parms{};

	Parms.InTags = std::move(InTags);
	Parms.CountToRemove = CountToRemove;
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.RemoveGameplayEffectGroupFromSelf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EffectGroupTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameplayAbility::RemoveGameplayEffectGroupFromSelf(const struct FGameplayTag& EffectGroupTag, const struct FGameplayTag& AttackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "RemoveGameplayEffectGroupFromSelf");

	Params::HWGameplayAbility_RemoveGameplayEffectGroupFromSelf Parms{};

	Parms.EffectGroupTag = std::move(EffectGroupTag);
	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.RemoveGameplayEffectGroupsFromSelf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameplayAbility::RemoveGameplayEffectGroupsFromSelf(const struct FGameplayTagContainer& EffectGroupTags, const struct FGameplayTag& AttackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "RemoveGameplayEffectGroupsFromSelf");

	Params::HWGameplayAbility_RemoveGameplayEffectGroupsFromSelf Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);
	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.RemoveGameplayEffectGroupsFromTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameplayAbility::RemoveGameplayEffectGroupsFromTarget(const struct FGameplayTagContainer& EffectGroupTags, const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, const struct FGameplayTag& AttackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "RemoveGameplayEffectGroupsFromTarget");

	Params::HWGameplayAbility_RemoveGameplayEffectGroupsFromTarget Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);
	Parms.TargetDataHandle = std::move(TargetDataHandle);
	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.TriggerAbilityRefire
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void UHWGameplayAbility::TriggerAbilityRefire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "TriggerAbilityRefire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.UpdateIsChannelingStatus
// (Final, Native, Public, BlueprintCallable)

void UHWGameplayAbility::UpdateIsChannelingStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "UpdateIsChannelingStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility.BP_CheckCost
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&Handle                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer&           OptionalRelevantTags                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bCanConsumeCosts                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::BP_CheckCost(const struct FGameplayAbilitySpecHandle& Handle, const struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayTagContainer& OptionalRelevantTags, const bool bCanConsumeCosts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_CheckCost");

	Params::HWGameplayAbility_BP_CheckCost Parms{};

	Parms.Handle = std::move(Handle);
	Parms.ActorInfo = std::move(ActorInfo);
	Parms.OptionalRelevantTags = std::move(OptionalRelevantTags);
	Parms.bCanConsumeCosts = bCanConsumeCosts;

	UObject::ProcessEvent(Func, &Parms);

	OptionalRelevantTags = std::move(Parms.OptionalRelevantTags);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_GetCooldownTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWGameplayAbility::BP_GetCooldownTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_GetCooldownTags");

	Params::HWGameplayAbility_BP_GetCooldownTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_GetCooldownTimeRemainingAndDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float&                                  OutTimeRemaining                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float&                                  OutDuration                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility::BP_GetCooldownTimeRemainingAndDuration(const struct FGameplayAbilityActorInfo& ActorInfo, float& OutTimeRemaining, float& OutDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_GetCooldownTimeRemainingAndDuration");

	Params::HWGameplayAbility_BP_GetCooldownTimeRemainingAndDuration Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.OutTimeRemaining = OutTimeRemaining;
	Parms.OutDuration = OutDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutTimeRemaining = Parms.OutTimeRemaining;
	OutDuration = Parms.OutDuration;
}


// Function Hemingway.HWGameplayAbility.BP_IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::BP_IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_IsActive");

	Params::HWGameplayAbility_BP_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_IsForRemoteClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::BP_IsForRemoteClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_IsForRemoteClient");

	Params::HWGameplayAbility_BP_IsForRemoteClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_IsPredictingClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::BP_IsPredictingClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_IsPredictingClient");

	Params::HWGameplayAbility_BP_IsPredictingClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_MakeEffectContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWGameplayAbility::BP_MakeEffectContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_MakeEffectContext");

	Params::HWGameplayAbility_BP_MakeEffectContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.BP_MakeEffectContext_FromGrantedEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWGameplayAbility::BP_MakeEffectContext_FromGrantedEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "BP_MakeEffectContext_FromGrantedEffect");

	Params::HWGameplayAbility_BP_MakeEffectContext_FromGrantedEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.CanAbilityBeUseAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::CanAbilityBeUseAtLevel(const int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "CanAbilityBeUseAtLevel");

	Params::HWGameplayAbility_CanAbilityBeUseAtLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.CanAbilityLevelUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningASC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::CanAbilityLevelUp(const struct FGameplayAbilitySpecHandle& AbilityHandle, class UHWAbilitySystemComponent* OwningASC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "CanAbilityLevelUp");

	Params::HWGameplayAbility_CanAbilityLevelUp Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.OwningASC = OwningASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.CanConfirmTargeting
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bTargetingExpiring                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::CanConfirmTargeting(const struct FGameplayAbilityTargetDataHandle& TargetingData, const bool bTargetingExpiring) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "CanConfirmTargeting");

	Params::HWGameplayAbility_CanConfirmTargeting Parms{};

	Parms.TargetingData = std::move(TargetingData);
	Parms.bTargetingExpiring = bTargetingExpiring;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.CanHighlightTargets
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::CanHighlightTargets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "CanHighlightTargets");

	Params::HWGameplayAbility_CanHighlightTargets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.CanSetAbilityLevelTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             DesiredLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningASC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::CanSetAbilityLevelTo(const int32 DesiredLevel, const struct FGameplayAbilitySpecHandle& AbilityHandle, class UHWAbilitySystemComponent* OwningASC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "CanSetAbilityLevelTo");

	Params::HWGameplayAbility_CanSetAbilityLevelTo Parms{};

	Parms.DesiredLevel = DesiredLevel;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.OwningASC = OwningASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAbilityHandleFromAvatarBySlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilitySpecHandle*      outHandle                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::GetAbilityHandleFromAvatarBySlot(const struct FHWInventorySlot& Slot, struct FGameplayAbilitySpecHandle* outHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAbilityHandleFromAvatarBySlot");

	Params::HWGameplayAbility_GetAbilityHandleFromAvatarBySlot Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outHandle != nullptr)
		*outHandle = std::move(Parms.outHandle);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAbilityId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UHWGameplayAbility::GetAbilityId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAbilityId");

	Params::HWGameplayAbility_GetAbilityId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAbilityLevelAsFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility::GetAbilityLevelAsFloat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAbilityLevelAsFloat");

	Params::HWGameplayAbility_GetAbilityLevelAsFloat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAbilityLevelFromAvatarBySlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameplayAbility::GetAbilityLevelFromAvatarBySlot(const struct FHWInventorySlot& Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAbilityLevelFromAvatarBySlot");

	Params::HWGameplayAbility_GetAbilityLevelFromAvatarBySlot Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAbilitySwappedPersistentState
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWGameplayAbility::GetAbilitySwappedPersistentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAbilitySwappedPersistentState");

	Params::HWGameplayAbility_GetAbilitySwappedPersistentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAllActivationBlockedTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWGameplayAbility::GetAllActivationBlockedTags(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayAbilityActorInfo& ActorInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAllActivationBlockedTags");

	Params::HWGameplayAbility_GetAllActivationBlockedTags Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.ActorInfo = std::move(ActorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetAllCancelTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWGameplayAbility::GetAllCancelTags(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayAbilityActorInfo& ActorInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetAllCancelTags");

	Params::HWGameplayAbility_GetAllCancelTags Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.ActorInfo = std::move(ActorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetCachedAITarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWGameplayAbility::GetCachedAITarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetCachedAITarget");

	Params::HWGameplayAbility_GetCachedAITarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetCharacterAvatarFromActorInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWGameplayAbility::GetCharacterAvatarFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetCharacterAvatarFromActorInfo");

	Params::HWGameplayAbility_GetCharacterAvatarFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetCurrentFiringInstanceId
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWAbilityFiringInstanceId       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWAbilityFiringInstanceId UHWGameplayAbility::GetCurrentFiringInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetCurrentFiringInstanceId");

	Params::HWGameplayAbility_GetCurrentFiringInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetCurrentLevelConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWAbilityLevelConfig*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityLevelConfig* UHWGameplayAbility::GetCurrentLevelConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetCurrentLevelConfig");

	Params::HWGameplayAbility_GetCurrentLevelConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetEquipmentComponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UHWEquipmentComponent>ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentComponent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentComponent* UHWGameplayAbility::GetEquipmentComponentByClass(TSubclassOf<class UHWEquipmentComponent> ComponentClass, const struct FGameplayTag& ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetEquipmentComponentByClass");

	Params::HWGameplayAbility_GetEquipmentComponentByClass Parms{};

	Parms.ComponentClass = ComponentClass;
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetEquipmentInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWGameplayAbility::GetEquipmentInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetEquipmentInstance");

	Params::HWGameplayAbility_GetEquipmentInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetEquipmentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWEquipmentItem* UHWGameplayAbility::GetEquipmentItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetEquipmentItem");

	Params::HWGameplayAbility_GetEquipmentItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetGrantedByActiveGameplayEffectHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActiveGameplayEffectHandle      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActiveGameplayEffectHandle UHWGameplayAbility::GetGrantedByActiveGameplayEffectHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetGrantedByActiveGameplayEffectHandle");

	Params::HWGameplayAbility_GetGrantedByActiveGameplayEffectHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetHWAbilitySystemComponentFromActorInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWGameplayAbility::GetHWAbilitySystemComponentFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetHWAbilitySystemComponentFromActorInfo");

	Params::HWGameplayAbility_GetHWAbilitySystemComponentFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetInventoryManagerFromActorInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* UHWGameplayAbility::GetInventoryManagerFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetInventoryManagerFromActorInfo");

	Params::HWGameplayAbility_GetInventoryManagerFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetLevelConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityLevelConfig*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityLevelConfig* UHWGameplayAbility::GetLevelConfig(const int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetLevelConfig");

	Params::HWGameplayAbility_GetLevelConfig Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetMaxLevel");

	Params::HWGameplayAbility_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.GetTargetsHitArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UHWGameplayAbility::GetTargetsHitArray() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "GetTargetsHitArray");

	Params::HWGameplayAbility_GetTargetsHitArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsAbilityEnding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsAbilityEnding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsAbilityEnding");

	Params::HWGameplayAbility_IsAbilityEnding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsAChannelingAbility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsAChannelingAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsAChannelingAbility");

	Params::HWGameplayAbility_IsAChannelingAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsAvatarAIControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsAvatarAIControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsAvatarAIControlled");

	Params::HWGameplayAbility_IsAvatarAIControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsChanneling
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsChanneling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsChanneling");

	Params::HWGameplayAbility_IsChanneling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsOwnerNetAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsOwnerNetAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsOwnerNetAuthority");

	Params::HWGameplayAbility_IsOwnerNetAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsPlayingMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsPlayingMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsPlayingMontage");

	Params::HWGameplayAbility_IsPlayingMontage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsPredictingOrStandaloneClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsPredictingOrStandaloneClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsPredictingOrStandaloneClient");

	Params::HWGameplayAbility_IsPredictingOrStandaloneClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsRunningOnDedicatedServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsRunningOnDedicatedServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsRunningOnDedicatedServer");

	Params::HWGameplayAbility_IsRunningOnDedicatedServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.IsRunningOnStandalone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::IsRunningOnStandalone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "IsRunningOnStandalone");

	Params::HWGameplayAbility_IsRunningOnStandalone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.ShouldCancelAbilityOnLevelUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::ShouldCancelAbilityOnLevelUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ShouldCancelAbilityOnLevelUp");

	Params::HWGameplayAbility_ShouldCancelAbilityOnLevelUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility.ShouldIncrementFiringInstanceId
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility::ShouldIncrementFiringInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility", "ShouldIncrementFiringInstanceId");

	Params::HWGameplayAbility_ShouldIncrementFiringInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.ApplyTargetAgrroEffect
// (Native, Event, Public, BlueprintEvent)

void AHWCharacter_NPC::ApplyTargetAgrroEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "ApplyTargetAgrroEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.BP_OnBlackboardTargetChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UBlackboardComponent*       Blackboard                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::BP_OnBlackboardTargetChange(const class UBlackboardComponent* Blackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "BP_OnBlackboardTargetChange");

	Params::HWCharacter_NPC_BP_OnBlackboardTargetChange Parms{};

	Parms.Blackboard = Blackboard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWCharacter_NPC.ClearSpreadLocation
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_NPC::ClearSpreadLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "ClearSpreadLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.ClientPlayArenaPortalOutro
// (Net, Native, Event, NetMulticast, Protected)

void AHWCharacter_NPC::ClientPlayArenaPortalOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "ClientPlayArenaPortalOutro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.EnterHibernation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   tickRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::EnterHibernation(float tickRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "EnterHibernation");

	Params::HWCharacter_NPC_EnterHibernation Parms{};

	Parms.tickRate = tickRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.LeaveHibernation
// (Final, Native, Public, BlueprintCallable)

void AHWCharacter_NPC::LeaveHibernation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "LeaveHibernation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.ProcessPotentialTargetList
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AHWCharacter_Base*>&       PotentialTargetList                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::ProcessPotentialTargetList(TArray<class AHWCharacter_Base*>& PotentialTargetList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "ProcessPotentialTargetList");

	Params::HWCharacter_NPC_ProcessPotentialTargetList Parms{};

	Parms.PotentialTargetList = std::move(PotentialTargetList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	PotentialTargetList = std::move(Parms.PotentialTargetList);
}


// Function Hemingway.HWCharacter_NPC.SetCanCatchUpToSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCanCatchUp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::SetCanCatchUpToSquad(bool bCanCatchUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "SetCanCatchUpToSquad");

	Params::HWCharacter_NPC_SetCanCatchUpToSquad Parms{};

	Parms.bCanCatchUp = bCanCatchUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.SetIsBehindSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsBehind                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::SetIsBehindSquad(bool bIsBehind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "SetIsBehindSquad");

	Params::HWCharacter_NPC_SetIsBehindSquad Parms{};

	Parms.bIsBehind = bIsBehind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.SetSpreadLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InSpreadLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::SetSpreadLocation(const struct FVector& InSpreadLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "SetSpreadLocation");

	Params::HWCharacter_NPC_SetSpreadLocation Parms{};

	Parms.InSpreadLocation = std::move(InSpreadLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.ToggleAntiSquadmateIntersection
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NPC::ToggleAntiSquadmateIntersection(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "ToggleAntiSquadmateIntersection");

	Params::HWCharacter_NPC_ToggleAntiSquadmateIntersection Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_NPC.CanCatchUpToSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::CanCatchUpToSquad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "CanCatchUpToSquad");

	Params::HWCharacter_NPC_CanCatchUpToSquad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.CanPerformSquadTactics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::CanPerformSquadTactics() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "CanPerformSquadTactics");

	Params::HWCharacter_NPC_CanPerformSquadTactics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.CanSpreadOut
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::CanSpreadOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "CanSpreadOut");

	Params::HWCharacter_NPC_CanSpreadOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.GetSpreadLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWCharacter_NPC::GetSpreadLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "GetSpreadLocation");

	Params::HWCharacter_NPC_GetSpreadLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.HasSpreadLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::HasSpreadLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "HasSpreadLocation");

	Params::HWCharacter_NPC_HasSpreadLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.IsBehindSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::IsBehindSquad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "IsBehindSquad");

	Params::HWCharacter_NPC_IsBehindSquad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.IsHibernating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::IsHibernating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "IsHibernating");

	Params::HWCharacter_NPC_IsHibernating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NPC.IsSpawnCached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_NPC::IsSpawnCached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NPC", "IsSpawnCached");

	Params::HWCharacter_NPC_IsSpawnCached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.AbilityPhaseEnumToTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayAbility_Enhanced::AbilityPhaseEnumToTag(const EAbilityFlowPhase Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWGameplayAbility_Enhanced", "AbilityPhaseEnumToTag");

	Params::HWGameplayAbility_Enhanced_AbilityPhaseEnumToTag Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.AbilityPhaseTagToEnum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityFlowPhase                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityFlowPhase UHWGameplayAbility_Enhanced::AbilityPhaseTagToEnum(const struct FGameplayTag& PhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWGameplayAbility_Enhanced", "AbilityPhaseTagToEnum");

	Params::HWGameplayAbility_Enhanced_AbilityPhaseTagToEnum Parms{};

	Parms.PhaseTag = std::move(PhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.AttemptAbilityAttackHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::AttemptAbilityAttackHit(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack, const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTagContainer& HitTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "AttemptAbilityAttackHit");

	Params::HWGameplayAbility_Enhanced_AttemptAbilityAttackHit Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);
	Parms.TargetData = std::move(TargetData);
	Parms.HitTags = std::move(HitTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.BP_AdjustTargetActorSettings
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWTargeter*                      Targeter                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::BP_AdjustTargetActorSettings(class AHWTargeter* Targeter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "BP_AdjustTargetActorSettings");

	Params::HWGameplayAbility_Enhanced_BP_AdjustTargetActorSettings Parms{};

	Parms.Targeter = Targeter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility_Enhanced.BP_OnPreFirePhaseEnded
// (Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::BP_OnPreFirePhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "BP_OnPreFirePhaseEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWGameplayAbility_Enhanced.BP_OnTargetingCancelled
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::BP_OnTargetingCancelled(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "BP_OnTargetingCancelled");

	Params::HWGameplayAbility_Enhanced_BP_OnTargetingCancelled Parms{};

	Parms.TargetingData = std::move(TargetingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility_Enhanced.BP_OnTargetingConfirmed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::BP_OnTargetingConfirmed(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "BP_OnTargetingConfirmed");

	Params::HWGameplayAbility_Enhanced_BP_OnTargetingConfirmed Parms{};

	Parms.TargetingData = std::move(TargetingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility_Enhanced.BP_OnTargetingStarted
// (Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::BP_OnTargetingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "BP_OnTargetingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWGameplayAbility_Enhanced.CalcHomingTargetForProjectileAttack
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWGameplayAbility_Enhanced::CalcHomingTargetForProjectileAttack(const struct FGameplayTag& AttackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CalcHomingTargetForProjectileAttack");

	Params::HWGameplayAbility_Enhanced_CalcHomingTargetForProjectileAttack Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CancelTargeting
// (Final, Native, Protected, BlueprintCallable)

void UHWGameplayAbility_Enhanced::CancelTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CancelTargeting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ClearFiringMontageListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::ClearFiringMontageListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ClearFiringMontageListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ClearTargetingMontageListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::ClearTargetingMontageListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ClearTargetingMontageListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ConfirmTargeting
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bEndTargetingTask                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ConfirmTargeting(const bool bEndTargetingTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ConfirmTargeting");

	Params::HWGameplayAbility_Enhanced_ConfirmTargeting Parms{};

	Parms.bEndTargetingTask = bEndTargetingTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CurrentFiringDataUpdated
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&NewFiringTargetData                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::CurrentFiringDataUpdated(const struct FGameplayAbilityTargetDataHandle& NewFiringTargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CurrentFiringDataUpdated");

	Params::HWGameplayAbility_Enhanced_CurrentFiringDataUpdated Parms{};

	Parms.NewFiringTargetData = std::move(NewFiringTargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.EndAbilityEndingPhase
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::EndAbilityEndingPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "EndAbilityEndingPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.EndTargeting
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bWasCancelled                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::EndTargeting(const bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "EndTargeting");

	Params::HWGameplayAbility_Enhanced_EndTargeting Parms{};

	Parms.bWasCancelled = bWasCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.FamiliarSpawnParamsOverrideCharacter
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGameplayAbility_Enhanced::FamiliarSpawnParamsOverrideCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "FamiliarSpawnParamsOverrideCharacter");

	Params::HWGameplayAbility_Enhanced_FamiliarSpawnParamsOverrideCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.FamiliarSpawnParamsOverrideController
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// const class AController*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class AController* UHWGameplayAbility_Enhanced::FamiliarSpawnParamsOverrideController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "FamiliarSpawnParamsOverrideController");

	Params::HWGameplayAbility_Enhanced_FamiliarSpawnParamsOverrideController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.FamiliarSpawnParamsOverrideSkin
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* UHWGameplayAbility_Enhanced::FamiliarSpawnParamsOverrideSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "FamiliarSpawnParamsOverrideSkin");

	Params::HWGameplayAbility_Enhanced_FamiliarSpawnParamsOverrideSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.FireCustomAttack
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Custom*AttackSettings                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&AimData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetList                                             (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::FireCustomAttack(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack, const class UHWAbilityAttackSettings_Custom* AttackSettings, const struct FGameplayAbilityTargetDataHandle& AimData, const struct FGameplayAbilityTargetDataHandle& TargetList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "FireCustomAttack");

	Params::HWGameplayAbility_Enhanced_FireCustomAttack Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);
	Parms.AttackSettings = AttackSettings;
	Parms.AimData = std::move(AimData);
	Parms.TargetList = std::move(TargetList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ManagePendingAttackTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHWHitResultsReference&          HitArray                                               (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FHWHitResultsReference*          OutHitArray                                            (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ManagePendingAttackTargets(struct FHWHitResultsReference& HitArray, struct FHWHitResultsReference* OutHitArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ManagePendingAttackTargets");

	Params::HWGameplayAbility_Enhanced_ManagePendingAttackTargets Parms{};

	Parms.HitArray = std::move(HitArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	HitArray = std::move(Parms.HitArray);

	if (OutHitArray != nullptr)
		*OutHitArray = std::move(Parms.OutHitArray);
}


// Function Hemingway.HWGameplayAbility_Enhanced.ModifyTargetingHighlightListForAttack
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWAttackTargetingInfo&    TargetingInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListDataHandle                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ModifyTargetingHighlightListForAttack(const struct FHWAttackTargetingInfo& TargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetListDataHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ModifyTargetingHighlightListForAttack");

	Params::HWGameplayAbility_Enhanced_ModifyTargetingHighlightListForAttack Parms{};

	Parms.TargetingInfo = std::move(TargetingInfo);
	Parms.TargetListDataHandle = std::move(TargetListDataHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetListDataHandle = std::move(Parms.TargetListDataHandle);
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnAbilityAttackProgressedEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const int32                             AttackID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AttackEventID                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnAbilityAttackProgressedEvent(const int32 AttackID, const int32 AttackEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnAbilityAttackProgressedEvent");

	Params::HWGameplayAbility_Enhanced_OnAbilityAttackProgressedEvent Parms{};

	Parms.AttackID = AttackID;
	Parms.AttackEventID = AttackEventID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnAbilityPhaseChangeStarted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const EAbilityFlowPhase                 PrevPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityFlowPhase                 NextPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnAbilityPhaseChangeStarted(const EAbilityFlowPhase PrevPhase, const EAbilityFlowPhase NextPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnAbilityPhaseChangeStarted");

	Params::HWGameplayAbility_Enhanced_OnAbilityPhaseChangeStarted Parms{};

	Parms.PrevPhase = PrevPhase;
	Parms.NextPhase = NextPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnAttackEnded
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnAttackEnded(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnAttackEnded");

	Params::HWGameplayAbility_Enhanced_OnAttackEnded Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnAttackFired
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListHandle                                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnAttackFired(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack, struct FGameplayAbilityTargetDataHandle& TargetListHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnAttackFired");

	Params::HWGameplayAbility_Enhanced_OnAttackFired Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);
	Parms.TargetListHandle = std::move(TargetListHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetListHandle = std::move(Parms.TargetListHandle);
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnAttackStarted
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnAttackStarted(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnAttackStarted");

	Params::HWGameplayAbility_Enhanced_OnAttackStarted Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnBuildUpPhaseEnded
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::OnBuildUpPhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnBuildUpPhaseEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnBuildUpPhaseStarted
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::OnBuildUpPhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnBuildUpPhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnCancelWhileFiringInputPressed
// (Final, Native, Protected)

void UHWGameplayAbility_Enhanced::OnCancelWhileFiringInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnCancelWhileFiringInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnCastStyleCancelled
// (Final, Native, Protected)
// Parameters:
// const float                             TimeElapsed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnCastStyleCancelled(const float TimeElapsed, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnCastStyleCancelled");

	Params::HWGameplayAbility_Enhanced_OnCastStyleCancelled Parms{};

	Parms.TimeElapsed = TimeElapsed;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnCastStyleConfirmed
// (Final, Native, Protected)
// Parameters:
// const float                             TimeElapsed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnCastStyleConfirmed(const float TimeElapsed, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnCastStyleConfirmed");

	Params::HWGameplayAbility_Enhanced_OnCastStyleConfirmed Parms{};

	Parms.TimeElapsed = TimeElapsed;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnDeployableBeginSpawning
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Deployable*DeployableAttackSettings                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnDeployableBeginSpawning(class AHWDeployable* SpawnedDeployable, const class UHWAbilityAttackSettings_Deployable* DeployableAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnDeployableBeginSpawning");

	Params::HWGameplayAbility_Enhanced_OnDeployableBeginSpawning Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;
	Parms.DeployableAttackSettings = DeployableAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnDeployableSpawned
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Deployable*DeployableAttackSettings                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnDeployableSpawned(class AHWDeployable* SpawnedDeployable, const class UHWAbilityAttackSettings_Deployable* DeployableAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnDeployableSpawned");

	Params::HWGameplayAbility_Enhanced_OnDeployableSpawned Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;
	Parms.DeployableAttackSettings = DeployableAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnFamiliarSpawned
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarHandle&   FamiliarHandle                                         (ConstParm, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWFamiliarManagerComponent*      FamiliarManager                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_SpawnFamiliar*FamiliarAttackSettings                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnFamiliarSpawned(const struct FHWActiveFamiliarHandle& FamiliarHandle, class UHWFamiliarManagerComponent* FamiliarManager, const class UHWAbilityAttackSettings_SpawnFamiliar* FamiliarAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnFamiliarSpawned");

	Params::HWGameplayAbility_Enhanced_OnFamiliarSpawned Parms{};

	Parms.FamiliarHandle = std::move(FamiliarHandle);
	Parms.FamiliarManager = FamiliarManager;
	Parms.FamiliarAttackSettings = FamiliarAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnFirePhaseStarted
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::OnFirePhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnFirePhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnFiringMontageEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnFiringMontageEnded(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnFiringMontageEnded");

	Params::HWGameplayAbility_Enhanced_OnFiringMontageEnded Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnFiringMontagePhaseEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnFiringMontagePhaseEnded(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnFiringMontagePhaseEnded");

	Params::HWGameplayAbility_Enhanced_OnFiringMontagePhaseEnded Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnFiringMontagePhaseStarted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnFiringMontagePhaseStarted(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnFiringMontagePhaseStarted");

	Params::HWGameplayAbility_Enhanced_OnFiringMontagePhaseStarted Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnPostFirePhaseStarted
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::OnPostFirePhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnPostFirePhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnPreFirePhaseStarted
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::OnPreFirePhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnPreFirePhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnProjectileBeginSpawning
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWProjectile*                    SpawnedProjectile                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Projectile*ProjectileAttackSettings                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnProjectileBeginSpawning(class AHWProjectile* SpawnedProjectile, const class UHWAbilityAttackSettings_Projectile* ProjectileAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnProjectileBeginSpawning");

	Params::HWGameplayAbility_Enhanced_OnProjectileBeginSpawning Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;
	Parms.ProjectileAttackSettings = ProjectileAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnProjectileSpawned
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWProjectile*                    SpawnedProjectile                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Projectile*ProjectileAttackSettings                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnProjectileSpawned(class AHWProjectile* SpawnedProjectile, const class UHWAbilityAttackSettings_Projectile* ProjectileAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnProjectileSpawned");

	Params::HWGameplayAbility_Enhanced_OnProjectileSpawned Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;
	Parms.ProjectileAttackSettings = ProjectileAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnSpawnedProjectileHitTarget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWProjectile*                    SpawnedProjectile                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HitTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnSpawnedProjectileHitTarget(class AHWProjectile* SpawnedProjectile, class AActor* HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnSpawnedProjectileHitTarget");

	Params::HWGameplayAbility_Enhanced_OnSpawnedProjectileHitTarget Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;
	Parms.HitTarget = HitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargeterValidationChanged
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bValid                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargeterValidationChanged(const bool bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargeterValidationChanged");

	Params::HWGameplayAbility_Enhanced_OnTargeterValidationChanged Parms{};

	Parms.bValid = bValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingAbilityPhaseTimerEnd
// (Final, Native, Public)

void UHWGameplayAbility_Enhanced::OnTargetingAbilityPhaseTimerEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingAbilityPhaseTimerEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingCancelled
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargetingCancelled(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingCancelled");

	Params::HWGameplayAbility_Enhanced_OnTargetingCancelled Parms{};

	Parms.TargetingData = std::move(TargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingConfirmationLockoutExpired
// (Final, Native, Protected)

void UHWGameplayAbility_Enhanced::OnTargetingConfirmationLockoutExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingConfirmationLockoutExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingConfirmed
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargetingConfirmed(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingConfirmed");

	Params::HWGameplayAbility_Enhanced_OnTargetingConfirmed Parms{};

	Parms.TargetingData = std::move(TargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingMontageEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargetingMontageEnded(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingMontageEnded");

	Params::HWGameplayAbility_Enhanced_OnTargetingMontageEnded Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingMontagePhaseEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargetingMontagePhaseEnded(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingMontagePhaseEnded");

	Params::HWGameplayAbility_Enhanced_OnTargetingMontagePhaseEnded Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OnTargetingMontagePhaseStarted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PhaseDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     MontageTask                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::OnTargetingMontagePhaseStarted(const struct FGameplayTag& PhaseTag, const float PhaseDuration, class UHWAbilityTask_PhasedMontage* MontageTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OnTargetingMontagePhaseStarted");

	Params::HWGameplayAbility_Enhanced_OnTargetingMontagePhaseStarted Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseDuration = PhaseDuration;
	Parms.MontageTask = MontageTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.OverrideAbilityPhaseTransition
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const EAbilityFlowPhase                 PrevPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityFlowPhase                 NextPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::OverrideAbilityPhaseTransition(const EAbilityFlowPhase PrevPhase, const EAbilityFlowPhase NextPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "OverrideAbilityPhaseTransition");

	Params::HWGameplayAbility_Enhanced_OverrideAbilityPhaseTransition Parms{};

	Parms.PrevPhase = PrevPhase;
	Parms.NextPhase = NextPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.PlayFiringMontage
// (Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bRestartActiveFiringMontage                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::PlayFiringMontage(const bool bRestartActiveFiringMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "PlayFiringMontage");

	Params::HWGameplayAbility_Enhanced_PlayFiringMontage Parms{};

	Parms.bRestartActiveFiringMontage = bRestartActiveFiringMontage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.PlayTargetingMontage
// (Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bRestartActiveTargetingMontage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::PlayTargetingMontage(const bool bRestartActiveTargetingMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "PlayTargetingMontage");

	Params::HWGameplayAbility_Enhanced_PlayTargetingMontage Parms{};

	Parms.bRestartActiveTargetingMontage = bRestartActiveTargetingMontage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.PreTargetingStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayAbility_Enhanced::PreTargetingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "PreTargetingStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.RemoveAbilityAttackHit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::RemoveAbilityAttackHit(class UHWAbilityTask_FireAttack* AttackTask, const struct FGameplayTagContainer& HitTags, const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "RemoveAbilityAttackHit");

	Params::HWGameplayAbility_Enhanced_RemoveAbilityAttackHit Parms{};

	Parms.AttackTask = AttackTask;
	Parms.HitTags = std::move(HitTags);
	Parms.TargetData = std::move(TargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetAttacksToTargetDuringTargetingPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     TargetAttacks                                          (Parm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::SetAttacksToTargetDuringTargetingPhase(const struct FGameplayTagContainer& TargetAttacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetAttacksToTargetDuringTargetingPhase");

	Params::HWGameplayAbility_Enhanced_SetAttacksToTargetDuringTargetingPhase Parms{};

	Parms.TargetAttacks = std::move(TargetAttacks);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetProjectileSpawnCustomData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_SpawnProjectile*   SpawnTask                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::SetProjectileSpawnCustomData(class UHWAbilityTask_SpawnProjectile* SpawnTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetProjectileSpawnCustomData");

	Params::HWGameplayAbility_Enhanced_SetProjectileSpawnCustomData Parms{};

	Parms.SpawnTask = SpawnTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetShouldUseLevelConfigForPhaseTiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldUseLevelConfig                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::SetShouldUseLevelConfigForPhaseTiming(const EAbilityFlowPhase Phase, bool bShouldUseLevelConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetShouldUseLevelConfigForPhaseTiming");

	Params::HWGameplayAbility_Enhanced_SetShouldUseLevelConfigForPhaseTiming Parms{};

	Parms.Phase = Phase;
	Parms.bShouldUseLevelConfig = bShouldUseLevelConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetupFiringMontageListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::SetupFiringMontageListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetupFiringMontageListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetupTargetingMontageListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::SetupTargetingMontageListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetupTargetingMontageListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.SetupWaitWhileFiringCancelTask
// (Final, Native, Protected)

void UHWGameplayAbility_Enhanced::SetupWaitWhileFiringCancelTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "SetupWaitWhileFiringCancelTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ShouldAllowCancellationWhileFiring
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::ShouldAllowCancellationWhileFiring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ShouldAllowCancellationWhileFiring");

	Params::HWGameplayAbility_Enhanced_ShouldAllowCancellationWhileFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.StartAbilityEndingPhase
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::StartAbilityEndingPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "StartAbilityEndingPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.StopFiringAbility
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsCanceling                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::StopFiringAbility(bool bIsCanceling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "StopFiringAbility");

	Params::HWGameplayAbility_Enhanced_StopFiringAbility Parms{};

	Parms.bIsCanceling = bIsCanceling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.StopTargetingMontage
// (Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bWasCancelled                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::StopTargetingMontage(const bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "StopTargetingMontage");

	Params::HWGameplayAbility_Enhanced_StopTargetingMontage Parms{};

	Parms.bWasCancelled = bWasCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ToggleIgnoreControlRotationSimulated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShouldIgnoreControlRotation                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ToggleIgnoreControlRotationSimulated(const bool bShouldIgnoreControlRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ToggleIgnoreControlRotationSimulated");

	Params::HWGameplayAbility_Enhanced_ToggleIgnoreControlRotationSimulated Parms{};

	Parms.bShouldIgnoreControlRotation = bShouldIgnoreControlRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ToggleIgnoreMovementInputSimulated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShouldIgnoreMovementInput                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ToggleIgnoreMovementInputSimulated(const bool bShouldIgnoreMovementInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ToggleIgnoreMovementInputSimulated");

	Params::HWGameplayAbility_Enhanced_ToggleIgnoreMovementInputSimulated Parms{};

	Parms.bShouldIgnoreMovementInput = bShouldIgnoreMovementInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.TransitionToAbilityPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAbilityFlowPhase                       PhaseToEnter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             TimingError                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bForceToClients                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::TransitionToAbilityPhase(EAbilityFlowPhase PhaseToEnter, const float TimingError, const bool bForceToClients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "TransitionToAbilityPhase");

	Params::HWGameplayAbility_Enhanced_TransitionToAbilityPhase Parms{};

	Parms.PhaseToEnter = PhaseToEnter;
	Parms.TimingError = TimingError;
	Parms.bForceToClients = bForceToClients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.TriggerCustomFireAbilityLogic
// (Native, Event, Protected, BlueprintEvent)

void UHWGameplayAbility_Enhanced::TriggerCustomFireAbilityLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "TriggerCustomFireAbilityLogic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.UpdateFiringAimDataForAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_Enhanced::UpdateFiringAimDataForAttack(const struct FGameplayTag& AttackID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "UpdateFiringAimDataForAttack");

	Params::HWGameplayAbility_Enhanced_UpdateFiringAimDataForAttack Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ValidatedAttemptAbilityAttackHit
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Enhanced::ValidatedAttemptAbilityAttackHit(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack, const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTagContainer& HitTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ValidatedAttemptAbilityAttackHit");

	Params::HWGameplayAbility_Enhanced_ValidatedAttemptAbilityAttackHit Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);
	Parms.TargetData = std::move(TargetData);
	Parms.HitTags = std::move(HitTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Enhanced.WantsToOverrideFamiliarSpawnParams
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::WantsToOverrideFamiliarSpawnParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "WantsToOverrideFamiliarSpawnParams");

	Params::HWGameplayAbility_Enhanced_WantsToOverrideFamiliarSpawnParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CanBeCancelledByAnotherFiringAbility
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::CanBeCancelledByAnotherFiringAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CanBeCancelledByAnotherFiringAbility");

	Params::HWGameplayAbility_Enhanced_CanBeCancelledByAnotherFiringAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CanCancelWhileFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::CanCancelWhileFiring() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CanCancelWhileFiring");

	Params::HWGameplayAbility_Enhanced_CanCancelWhileFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CanRestartFiring
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::CanRestartFiring() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CanRestartFiring");

	Params::HWGameplayAbility_Enhanced_CanRestartFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.CanTransitionToPhase
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 DesiredPhase                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::CanTransitionToPhase(const EAbilityFlowPhase DesiredPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "CanTransitionToPhase");

	Params::HWGameplayAbility_Enhanced_CanTransitionToPhase Parms{};

	Parms.DesiredPhase = DesiredPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetAbilityPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityFlowPhase                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityFlowPhase UHWGameplayAbility_Enhanced::GetAbilityPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetAbilityPhase");

	Params::HWGameplayAbility_Enhanced_GetAbilityPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetAbilityPhaseDuration
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 CurrentAbilityPhase                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetAbilityPhaseDuration(const EAbilityFlowPhase CurrentAbilityPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetAbilityPhaseDuration");

	Params::HWGameplayAbility_Enhanced_GetAbilityPhaseDuration Parms{};

	Parms.CurrentAbilityPhase = CurrentAbilityPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetAbilityPhaseDurationScale
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 CurrentAbilityPhase                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetAbilityPhaseDurationScale(const EAbilityFlowPhase CurrentAbilityPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetAbilityPhaseDurationScale");

	Params::HWGameplayAbility_Enhanced_GetAbilityPhaseDurationScale Parms{};

	Parms.CurrentAbilityPhase = CurrentAbilityPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetActiveAttackTaskById
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AttackIdToGet                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_FireAttack*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_FireAttack* UHWGameplayAbility_Enhanced::GetActiveAttackTaskById(const struct FGameplayTag& AttackIdToGet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetActiveAttackTaskById");

	Params::HWGameplayAbility_Enhanced_GetActiveAttackTaskById Parms{};

	Parms.AttackIdToGet = std::move(AttackIdToGet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetCachedFiringAbilityPhaseDuration
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetCachedFiringAbilityPhaseDuration(const EAbilityFlowPhase Phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetCachedFiringAbilityPhaseDuration");

	Params::HWGameplayAbility_Enhanced_GetCachedFiringAbilityPhaseDuration Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetCastStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle UHWGameplayAbility_Enhanced::GetCastStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetCastStyle");

	Params::HWGameplayAbility_Enhanced_GetCastStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetCurrentFiringTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_Enhanced::GetCurrentFiringTargetData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetCurrentFiringTargetData");

	Params::HWGameplayAbility_Enhanced_GetCurrentFiringTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetFiringMontageInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FHWMontageInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWMontageInfo UHWGameplayAbility_Enhanced::GetFiringMontageInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetFiringMontageInfo");

	Params::HWGameplayAbility_Enhanced_GetFiringMontageInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetFiringMontagePlayRate
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetFiringMontagePlayRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetFiringMontagePlayRate");

	Params::HWGameplayAbility_Enhanced_GetFiringMontagePlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetFiringMontageStartingSection
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWGameplayAbility_Enhanced::GetFiringMontageStartingSection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetFiringMontageStartingSection");

	Params::HWGameplayAbility_Enhanced_GetFiringMontageStartingSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetFiringMontageTag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayAbility_Enhanced::GetFiringMontageTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetFiringMontageTag");

	Params::HWGameplayAbility_Enhanced_GetFiringMontageTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetOverrideCastStyle
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     Avatar                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle UHWGameplayAbility_Enhanced::GetOverrideCastStyle(const class AActor* Avatar) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetOverrideCastStyle");

	Params::HWGameplayAbility_Enhanced_GetOverrideCastStyle Parms{};

	Parms.Avatar = Avatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetTargetingMontageInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FHWMontageInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWMontageInfo UHWGameplayAbility_Enhanced::GetTargetingMontageInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetTargetingMontageInfo");

	Params::HWGameplayAbility_Enhanced_GetTargetingMontageInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetTargetingMontagePlayRate
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetTargetingMontagePlayRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetTargetingMontagePlayRate");

	Params::HWGameplayAbility_Enhanced_GetTargetingMontagePlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetTargetingMontageStartingSection
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWGameplayAbility_Enhanced::GetTargetingMontageStartingSection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetTargetingMontageStartingSection");

	Params::HWGameplayAbility_Enhanced_GetTargetingMontageStartingSection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetTargetingMontageTag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayAbility_Enhanced::GetTargetingMontageTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetTargetingMontageTag");

	Params::HWGameplayAbility_Enhanced_GetTargetingMontageTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.GetTargetingTimeElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayAbility_Enhanced::GetTargetingTimeElapsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "GetTargetingTimeElapsed");

	Params::HWGameplayAbility_Enhanced_GetTargetingTimeElapsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsCastStyleSupported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityCastStyle                 CastStyleToCheck                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsUsingGamepad                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsCastStyleSupported(const EAbilityCastStyle CastStyleToCheck, const bool bIsUsingGamepad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsCastStyleSupported");

	Params::HWGameplayAbility_Enhanced_IsCastStyleSupported Parms{};

	Parms.CastStyleToCheck = CastStyleToCheck;
	Parms.bIsUsingGamepad = bIsUsingGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsContinousFireAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsContinousFireAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsContinousFireAbility");

	Params::HWGameplayAbility_Enhanced_IsContinousFireAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsFiring() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsFiring");

	Params::HWGameplayAbility_Enhanced_IsFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsInAbilityPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsInAbilityPhase(const EAbilityFlowPhase Phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsInAbilityPhase");

	Params::HWGameplayAbility_Enhanced_IsInAbilityPhase Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsInBuildUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsInBuildUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsInBuildUp");

	Params::HWGameplayAbility_Enhanced_IsInBuildUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.IsInstantFireAbility
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::IsInstantFireAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "IsInstantFireAbility");

	Params::HWGameplayAbility_Enhanced_IsInstantFireAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Enhanced.ShouldUseLevelConfigForPhaseTiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_Enhanced::ShouldUseLevelConfigForPhaseTiming(const EAbilityFlowPhase Phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Enhanced", "ShouldUseLevelConfigForPhaseTiming");

	Params::HWGameplayAbility_Enhanced_ShouldUseLevelConfigForPhaseTiming Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Agni_A04.ShouldAllowTransitionBackToTargetingPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Agni_A04::ShouldAllowTransitionBackToTargetingPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Agni_A04", "ShouldAllowTransitionBackToTargetingPhase");

	Params::HWAbility_Agni_A04_ShouldAllowTransitionBackToTargetingPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_CerberusSoul.OnRep_SoulOwner
// (Native, Protected)

void AHWCharacter_CerberusSoul::OnRep_SoulOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_CerberusSoul", "OnRep_SoulOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_CerberusSoul.SetSoulOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                NewOwner                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_CerberusSoul::SetSoulOwner(class AHWCharacter_Base* NewOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_CerberusSoul", "SetSoulOwner");

	Params::HWCharacter_CerberusSoul_SetSoulOwner Parms{};

	Parms.NewOwner = NewOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_CerberusSoul.GetSoulOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWCharacter_CerberusSoul::GetSoulOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_CerberusSoul", "GetSoulOwner");

	Params::HWCharacter_CerberusSoul_GetSoulOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Aladdin_A03.ClampWallRunAngle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             InitialImpactAngle                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             CurrentHeight                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAladdinWallRunPathClampInfo&ClampSettings                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbility_Aladdin_A03::ClampWallRunAngle(const float InitialImpactAngle, const float CurrentHeight, const struct FHWAladdinWallRunPathClampInfo& ClampSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbility_Aladdin_A03", "ClampWallRunAngle");

	Params::HWAbility_Aladdin_A03_ClampWallRunAngle Parms{};

	Parms.InitialImpactAngle = InitialImpactAngle;
	Parms.CurrentHeight = CurrentHeight;
	Parms.ClampSettings = std::move(ClampSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Aladdin_A03.GenerateWallRunPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                Aladdin                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                InitialWallHit                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FHWAladdinWallRunPathClampInfo&ClampSettings                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              bDrawDebug                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DebugPersistTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWWallRunPathInfo               ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHWWallRunPathInfo UHWAbility_Aladdin_A03::GenerateWallRunPath(class AHWCharacter_Base* Aladdin, const struct FHitResult& InitialWallHit, const struct FHWAladdinWallRunPathClampInfo& ClampSettings, const bool bDrawDebug, const float DebugPersistTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbility_Aladdin_A03", "GenerateWallRunPath");

	Params::HWAbility_Aladdin_A03_GenerateWallRunPath Parms{};

	Parms.Aladdin = Aladdin;
	Parms.InitialWallHit = std::move(InitialWallHit);
	Parms.ClampSettings = std::move(ClampSettings);
	Parms.bDrawDebug = bDrawDebug;
	Parms.DebugPersistTime = DebugPersistTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Aladdin_A03.OnRep_WallRunPathInfo
// (Native, Event, Protected, BlueprintEvent)

void UHWAbility_Aladdin_A03::OnRep_WallRunPathInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Aladdin_A03", "OnRep_WallRunPathInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Aladdin_A03.SetWallRunPathInfo
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHWWallRunPathInfo&              PathInfo                                               (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWAbility_Aladdin_A03::SetWallRunPathInfo(struct FHWWallRunPathInfo& PathInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Aladdin_A03", "SetWallRunPathInfo");

	Params::HWAbility_Aladdin_A03_SetWallRunPathInfo Parms{};

	Parms.PathInfo = std::move(PathInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	PathInfo = std::move(Parms.PathInfo);
}


// Function Hemingway.HWAttributeSet_Core.OnRep_Health
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_Health(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_Health");

	Params::HWAttributeSet_Core_OnRep_Health Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_HealthPerTime
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_HealthPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_HealthPerTime");

	Params::HWAttributeSet_Core_OnRep_HealthPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_HealthPerTimeBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_HealthPerTimeBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_HealthPerTimeBase");

	Params::HWAttributeSet_Core_OnRep_HealthPerTimeBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_HealthPerTimeItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_HealthPerTimeItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_HealthPerTimeItem");

	Params::HWAttributeSet_Core_OnRep_HealthPerTimeItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_MaxHealth
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_MaxHealth(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_MaxHealth");

	Params::HWAttributeSet_Core_OnRep_MaxHealth Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_MaxHealthBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_MaxHealthBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_MaxHealthBase");

	Params::HWAttributeSet_Core_OnRep_MaxHealthBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.OnRep_MaxHealthItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Core::OnRep_MaxHealthItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "OnRep_MaxHealthItem");

	Params::HWAttributeSet_Core_OnRep_MaxHealthItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Core.IsDebugImmuneFromDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAttributeSet_Core::IsDebugImmuneFromDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Core", "IsDebugImmuneFromDamage");

	Params::HWAttributeSet_Core_IsDebugImmuneFromDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_AbilityCostReductionPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_AbilityCostReductionPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_AbilityCostReductionPercent");

	Params::HWAttributeSet_Character_Base_OnRep_AbilityCostReductionPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_AbilityCostReductionPercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_AbilityCostReductionPercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_AbilityCostReductionPercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_AbilityCostReductionPercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_AbilityCostReductionPercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_AbilityCostReductionPercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_AbilityCostReductionPercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_AbilityCostReductionPercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_AttackSpeed
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_AttackSpeed(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_AttackSpeed");

	Params::HWAttributeSet_Character_Base_OnRep_AttackSpeed Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_BaseAttackSpeed
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_BaseAttackSpeed(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_BaseAttackSpeed");

	Params::HWAttributeSet_Character_Base_OnRep_BaseAttackSpeed Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CooldownRate
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CooldownRate(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CooldownRate");

	Params::HWAttributeSet_Character_Base_OnRep_CooldownRate Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CooldownRateBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CooldownRateBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CooldownRateBase");

	Params::HWAttributeSet_Character_Base_OnRep_CooldownRateBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CooldownRateItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CooldownRateItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CooldownRateItem");

	Params::HWAttributeSet_Character_Base_OnRep_CooldownRateItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CritChancePercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CritChancePercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CritChancePercent");

	Params::HWAttributeSet_Character_Base_OnRep_CritChancePercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CritChancePercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CritChancePercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CritChancePercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_CritChancePercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CritChancePercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CritChancePercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CritChancePercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_CritChancePercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionFlat
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionFlat(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionFlat");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionFlat Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionFlatBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionFlatBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionFlatBase");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionFlatBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionFlatItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionFlatItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionFlatItem");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionFlatItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionPercent");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionPercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionPercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionPercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionPercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionPercentFromDR
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionPercentFromDR(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionPercentFromDR");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionPercentFromDR Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_CrowdControlReductionPercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_CrowdControlReductionPercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_CrowdControlReductionPercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_CrowdControlReductionPercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtFlatModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtFlatModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtFlatModifier");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtFlatModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtFlatModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtFlatModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtFlatModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtFlatModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtFlatModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtFlatModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtFlatModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtFlatModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtPercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtPercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtPercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtPercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtPercentModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtPercentModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtPercentModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtPercentModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageDealtPercentModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageDealtPercentModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageDealtPercentModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_DamageDealtPercentModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenFlatModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenFlatModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenFlatModifier");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenFlatModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenFlatModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenFlatModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenFlatModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenFlatModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenFlatModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenFlatModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenFlatModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenFlatModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenPercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenPercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenPercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenPercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenPercentModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenPercentModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenPercentModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenPercentModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_DamageTakenPercentModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_DamageTakenPercentModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_DamageTakenPercentModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_DamageTakenPercentModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_Gold
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_Gold(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_Gold");

	Params::HWAttributeSet_Character_Base_OnRep_Gold Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_GoldPerTime
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_GoldPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_GoldPerTime");

	Params::HWAttributeSet_Character_Base_OnRep_GoldPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_GroundSpeedBackpedalPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_GroundSpeedBackpedalPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_GroundSpeedBackpedalPercent");

	Params::HWAttributeSet_Character_Base_OnRep_GroundSpeedBackpedalPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_GroundSpeedForwardPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_GroundSpeedForwardPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_GroundSpeedForwardPercent");

	Params::HWAttributeSet_Character_Base_OnRep_GroundSpeedForwardPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_GroundSpeedStrafePercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_GroundSpeedStrafePercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_GroundSpeedStrafePercent");

	Params::HWAttributeSet_Character_Base_OnRep_GroundSpeedStrafePercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingDealtPercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingDealtPercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingDealtPercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_HealingDealtPercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingDealtPercentModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingDealtPercentModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingDealtPercentModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_HealingDealtPercentModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingDealtPercentModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingDealtPercentModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingDealtPercentModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_HealingDealtPercentModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingTakenPercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingTakenPercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingTakenPercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_HealingTakenPercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingTakenPercentModifierBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingTakenPercentModifierBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingTakenPercentModifierBase");

	Params::HWAttributeSet_Character_Base_OnRep_HealingTakenPercentModifierBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_HealingTakenPercentModifierItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_HealingTakenPercentModifierItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_HealingTakenPercentModifierItem");

	Params::HWAttributeSet_Character_Base_OnRep_HealingTakenPercentModifierItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_InhandMoveSpeedPenaltyPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_InhandMoveSpeedPenaltyPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_InhandMoveSpeedPenaltyPercent");

	Params::HWAttributeSet_Character_Base_OnRep_InhandMoveSpeedPenaltyPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_InhandPower
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_InhandPower(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_InhandPower");

	Params::HWAttributeSet_Character_Base_OnRep_InhandPower Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_InhandPowerBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_InhandPowerBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_InhandPowerBase");

	Params::HWAttributeSet_Character_Base_OnRep_InhandPowerBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_InhandPowerItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_InhandPowerItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_InhandPowerItem");

	Params::HWAttributeSet_Character_Base_OnRep_InhandPowerItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_InhandProjectileSpeedModifierPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_InhandProjectileSpeedModifierPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_InhandProjectileSpeedModifierPercent");

	Params::HWAttributeSet_Character_Base_OnRep_InhandProjectileSpeedModifierPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedAccelerationForce
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedAccelerationForce(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedAccelerationForce");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedAccelerationForce Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedInterval
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedInterval(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedInterval");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedInterval Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedMaxPitchRotation
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedMaxPitchRotation(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedMaxPitchRotation");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedMaxPitchRotation Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedMaxStrafeDuration
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedMaxStrafeDuration(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedMaxStrafeDuration");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedMaxStrafeDuration Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedMaxYawRotation
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedMaxYawRotation(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedMaxYawRotation");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedMaxYawRotation Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedMinStrafeDuration
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedMinStrafeDuration(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedMinStrafeDuration");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedMinStrafeDuration Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_IntoxicatedOrder
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_IntoxicatedOrder(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_IntoxicatedOrder");

	Params::HWAttributeSet_Character_Base_OnRep_IntoxicatedOrder Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_Level
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_Level(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_Level");

	Params::HWAttributeSet_Character_Base_OnRep_Level Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_LifeStealPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_LifeStealPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_LifeStealPercent");

	Params::HWAttributeSet_Character_Base_OnRep_LifeStealPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_LifeStealPercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_LifeStealPercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_LifeStealPercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_LifeStealPercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_LifeStealPercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_LifeStealPercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_LifeStealPercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_LifeStealPercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationFlat
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationFlat(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationFlat");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationFlat Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationFlatBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationFlatBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationFlatBase");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationFlatBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationFlatItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationFlatItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationFlatItem");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationFlatItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationPercent");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationPercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationPercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationPercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationPercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPenetrationPercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPenetrationPercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPenetrationPercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPenetrationPercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPower
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPower(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPower");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPower Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPowerBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPowerBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPowerBase");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPowerBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalPowerItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalPowerItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalPowerItem");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalPowerItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalProtection
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalProtection(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalProtection");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalProtection Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalProtectionBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalProtectionBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalProtectionBase");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalProtectionBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MagicalProtectionItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MagicalProtectionItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MagicalProtectionItem");

	Params::HWAttributeSet_Character_Base_OnRep_MagicalProtectionItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_Mana
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_Mana(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_Mana");

	Params::HWAttributeSet_Character_Base_OnRep_Mana Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_ManaPerTime
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_ManaPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_ManaPerTime");

	Params::HWAttributeSet_Character_Base_OnRep_ManaPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_ManaPerTimeBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_ManaPerTimeBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_ManaPerTimeBase");

	Params::HWAttributeSet_Character_Base_OnRep_ManaPerTimeBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_ManaPerTimeItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_ManaPerTimeItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_ManaPerTimeItem");

	Params::HWAttributeSet_Character_Base_OnRep_ManaPerTimeItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MaxMana
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MaxMana(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MaxMana");

	Params::HWAttributeSet_Character_Base_OnRep_MaxMana Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MaxManaBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MaxManaBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MaxManaBase");

	Params::HWAttributeSet_Character_Base_OnRep_MaxManaBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_MaxManaItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_MaxManaItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_MaxManaItem");

	Params::HWAttributeSet_Character_Base_OnRep_MaxManaItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationFlat
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationFlat(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationFlat");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationFlat Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationFlatBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationFlatBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationFlatBase");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationFlatBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationFlatItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationFlatItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationFlatItem");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationFlatItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationPercent
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationPercent(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationPercent");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationPercent Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationPercentBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationPercentBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationPercentBase");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationPercentBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPenetrationPercentItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPenetrationPercentItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPenetrationPercentItem");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPenetrationPercentItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPower
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPower(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPower");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPower Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPowerBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPowerBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPowerBase");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPowerBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalPowerItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalPowerItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalPowerItem");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalPowerItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalProtection
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalProtection(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalProtection");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalProtection Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalProtectionBase
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalProtectionBase(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalProtectionBase");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalProtectionBase Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_PhysicalProtectionItem
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_PhysicalProtectionItem(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_PhysicalProtectionItem");

	Params::HWAttributeSet_Character_Base_OnRep_PhysicalProtectionItem Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_RevealRangeFlatModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_RevealRangeFlatModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_RevealRangeFlatModifier");

	Params::HWAttributeSet_Character_Base_OnRep_RevealRangeFlatModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_RevealRangePercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_RevealRangePercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_RevealRangePercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_RevealRangePercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_SkillPoint
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_SkillPoint(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_SkillPoint");

	Params::HWAttributeSet_Character_Base_OnRep_SkillPoint Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_VisionRangeFlatModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_VisionRangeFlatModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_VisionRangeFlatModifier");

	Params::HWAttributeSet_Character_Base_OnRep_VisionRangeFlatModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_VisionRangePercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_VisionRangePercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_VisionRangePercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_VisionRangePercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_XP
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_XP(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_XP");

	Params::HWAttributeSet_Character_Base_OnRep_XP Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_XPFlatModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_XPFlatModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_XPFlatModifier");

	Params::HWAttributeSet_Character_Base_OnRep_XPFlatModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_XPPercentModifier
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_XPPercentModifier(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_XPPercentModifier");

	Params::HWAttributeSet_Character_Base_OnRep_XPPercentModifier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Character_Base.OnRep_XPPerTime
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Character_Base::OnRep_XPPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Character_Base", "OnRep_XPPerTime");

	Params::HWAttributeSet_Character_Base_OnRep_XPPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_God.OnRep_Hysteria
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_God::OnRep_Hysteria(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_God", "OnRep_Hysteria");

	Params::HWAttributeSet_God_OnRep_Hysteria Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Poseidon.OnRep_Tide
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Poseidon::OnRep_Tide(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Poseidon", "OnRep_Tide");

	Params::HWAttributeSet_Poseidon_OnRep_Tide Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.HandleOnPawnControllerChanged
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::HandleOnPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "HandleOnPawnControllerChanged");

	Params::HWAbility_Amaterasu_A02_HandleOnPawnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.HandleRefireDelayEnd
// (Final, Native, Protected)

void UHWAbility_Amaterasu_A02::HandleRefireDelayEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "HandleRefireDelayEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.HandleTagUpdated_AmaA02RefireEnabled
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::HandleTagUpdated_AmaA02RefireEnabled(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "HandleTagUpdated_AmaA02RefireEnabled");

	Params::HWAbility_Amaterasu_A02_HandleTagUpdated_AmaA02RefireEnabled Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.OnAdjustBaseDamageToTarget
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BaseDamageValue                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::OnAdjustBaseDamageToTarget(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "OnAdjustBaseDamageToTarget");

	Params::HWAbility_Amaterasu_A02_OnAdjustBaseDamageToTarget Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamageValue = BaseDamageValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.OnRep_PlayFiringMontage
// (Final, Native, Protected)

void UHWAbility_Amaterasu_A02::OnRep_PlayFiringMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "OnRep_PlayFiringMontage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.SetPlayFiringMontage
// (Final, Native, Protected)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::SetPlayFiringMontage(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "SetPlayFiringMontage");

	Params::HWAbility_Amaterasu_A02_SetPlayFiringMontage Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.StoreDamage
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::StoreDamage(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "StoreDamage");

	Params::HWAbility_Amaterasu_A02_StoreDamage Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.StoreDealtDamage
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Amaterasu_A02::StoreDealtDamage(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "StoreDealtDamage");

	Params::HWAbility_Amaterasu_A02_StoreDealtDamage Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.TriggerAutoRefire
// (Final, Native, Protected)

void UHWAbility_Amaterasu_A02::TriggerAutoRefire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "TriggerAutoRefire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Amaterasu_A02.UpdateStoredDamageAttribute
// (Native, Protected)

void UHWAbility_Amaterasu_A02::UpdateStoredDamageAttribute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Amaterasu_A02", "UpdateStoredDamageAttribute");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWChatManager.SendPlayerChatEntry
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWChatEntry&              ChatEntry                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWChatManager::SendPlayerChatEntry(const struct FHWChatEntry& ChatEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "SendPlayerChatEntry");

	Params::HWChatManager_SendPlayerChatEntry Parms{};

	Parms.ChatEntry = std::move(ChatEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWChatManager.UpdatePlayerChatMode
// (Final, Native, Private)

void AHWChatManager::UpdatePlayerChatMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "UpdatePlayerChatMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWChatManager.IsPlayerChatEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWChatManager::IsPlayerChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "IsPlayerChatEnabled");

	Params::HWChatManager_IsPlayerChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWChatManager.MulticastSendChatEntry
// (Net, NetReliable, Native, Event, NetMulticast, Protected, Const)
// Parameters:
// const struct FHWChatEntry&              ChatEntry                                              (Parm, NativeAccessSpecifierPublic)

void AHWChatManager::MulticastSendChatEntry(const struct FHWChatEntry& ChatEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "MulticastSendChatEntry");

	Params::HWChatManager_MulticastSendChatEntry Parms{};

	Parms.ChatEntry = std::move(ChatEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWChatManager.SendChatEntry
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWChatEntry&              ChatEntry                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWChatManager::SendChatEntry(const struct FHWChatEntry& ChatEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "SendChatEntry");

	Params::HWChatManager_SendChatEntry Parms{};

	Parms.ChatEntry = std::move(ChatEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWChatManager.SendSystemMessageEntry
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              MessageTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            ExclusiveToTeam                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGuid&                     ExclusiveToPlayer                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    MessageContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWChatManager::SendSystemMessageEntry(const struct FGameplayTag& MessageTag, const struct FGenericTeamId& ExclusiveToTeam, const struct FGuid& ExclusiveToPlayer, const class UObject* MessageContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManager", "SendSystemMessageEntry");

	Params::HWChatManager_SendSystemMessageEntry Parms{};

	Parms.MessageTag = std::move(MessageTag);
	Parms.ExclusiveToTeam = std::move(ExclusiveToTeam);
	Parms.ExclusiveToPlayer = std::move(ExclusiveToPlayer);
	Parms.MessageContext = MessageContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.ActivateBuildUpVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::ActivateBuildUpVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "ActivateBuildUpVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.ActivateDeathVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::ActivateDeathVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "ActivateDeathVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.ActivateFiringVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::ActivateFiringVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "ActivateFiringVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.ActivatePrefireVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::ActivatePrefireVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "ActivatePrefireVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.BP_PostInitialized
// (Event, Protected, BlueprintEvent)

void AHWDeployable::BP_PostInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "BP_PostInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable.DeactivateBuildUpVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::DeactivateBuildUpVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "DeactivateBuildUpVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.DeactivateFiringVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::DeactivateFiringVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "DeactivateFiringVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.DeactivatePrefireVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWDeployable::DeactivatePrefireVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "DeactivatePrefireVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.HandleTagUpdated_InstigatorDied
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::HandleTagUpdated_InstigatorDied(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "HandleTagUpdated_InstigatorDied");

	Params::HWDeployable_HandleTagUpdated_InstigatorDied Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.HandleTagUpdated_OwnerDied
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::HandleTagUpdated_OwnerDied(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "HandleTagUpdated_OwnerDied");

	Params::HWDeployable_HandleTagUpdated_OwnerDied Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.OnRep_CurrentVisualPhase
// (Final, Native, Protected)
// Parameters:
// EAbilityFlowPhase                       OldPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::OnRep_CurrentVisualPhase(EAbilityFlowPhase OldPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "OnRep_CurrentVisualPhase");

	Params::HWDeployable_OnRep_CurrentVisualPhase Parms{};

	Parms.OldPhase = OldPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.OnRep_IsDead
// (Native, Event, Protected, BlueprintEvent)

void AHWDeployable::OnRep_IsDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "OnRep_IsDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.OnRep_RepositionData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWDeployableRepositionData&OldRepositionData                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AHWDeployable::OnRep_RepositionData(const struct FHWDeployableRepositionData& OldRepositionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "OnRep_RepositionData");

	Params::HWDeployable_OnRep_RepositionData Parms{};

	Parms.OldRepositionData = std::move(OldRepositionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.OnRepositionDataReceived
// (Native, Event, Public, BlueprintEvent)

void AHWDeployable::OnRepositionDataReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "OnRepositionDataReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.SetDeployableLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::SetDeployableLevel(float Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "SetDeployableLevel");

	Params::HWDeployable_SetDeployableLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.SetDeployablePhase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EAbilityFlowPhase                       Phase                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::SetDeployablePhase(EAbilityFlowPhase Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "SetDeployablePhase");

	Params::HWDeployable_SetDeployablePhase Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.SetSkinnedData
// (Final, Native, Public)

void AHWDeployable::SetSkinnedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "SetSkinnedData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.StartDestroy
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSkipTimeAfterDeath                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable::StartDestroy(bool bSkipTimeAfterDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "StartDestroy");

	Params::HWDeployable_StartDestroy Parms{};

	Parms.bSkipTimeAfterDeath = bSkipTimeAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable.CalcHighlightingTargetList
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWAttackTargetingInfo&    TargetingInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListDataHandle                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWDeployable::CalcHighlightingTargetList(const struct FHWAttackTargetingInfo& TargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetListDataHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "CalcHighlightingTargetList");

	Params::HWDeployable_CalcHighlightingTargetList Parms{};

	Parms.TargetingInfo = std::move(TargetingInfo);
	Parms.TargetListDataHandle = std::move(TargetListDataHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetListDataHandle = std::move(Parms.TargetListDataHandle);
}


// Function Hemingway.HWDeployable.GetAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* AHWDeployable::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetAbilitySystemComponent");

	Params::HWDeployable_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetApparelComponent
// (Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWDeployable::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetApparelComponent");

	Params::HWDeployable_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetCurrentSkin
// (Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWDeployable::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetCurrentSkin");

	Params::HWDeployable_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetDeployableLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWDeployable::GetDeployableLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetDeployableLevel");

	Params::HWDeployable_GetDeployableLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetDeployableType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWDeployable::GetDeployableType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetDeployableType");

	Params::HWDeployable_GetDeployableType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetFiringInstanceId
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWAbilityFiringInstanceId       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWAbilityFiringInstanceId AHWDeployable::GetFiringInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetFiringInstanceId");

	Params::HWDeployable_GetFiringInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.GetHWAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* AHWDeployable::GetHWAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "GetHWAbilitySystemComponent");

	Params::HWDeployable_GetHWAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable.IsSkinningReady
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable", "IsSkinningReady");

	Params::HWDeployable_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Sol_A01.BP_UpdateHeatRingVFXRadius
// (Event, Protected, BlueprintEvent)

void AHWDeployable_Sol_A01::BP_UpdateHeatRingVFXRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Sol_A01", "BP_UpdateHeatRingVFXRadius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAbility_Passive.CleanupListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWAbility_Passive::CleanupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Passive", "CleanupListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Passive.OnInternalCooldownRemoved
// (BlueprintAuthorityOnly, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEffectRemovalInfo&GameplayEffectRemovalInfo                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbility_Passive::OnInternalCooldownRemoved(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Passive", "OnInternalCooldownRemoved");

	Params::HWAbility_Passive_OnInternalCooldownRemoved Parms{};

	Parms.GameplayEffectRemovalInfo = std::move(GameplayEffectRemovalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Passive.SetupListeners
// (Native, Event, Protected, BlueprintEvent)

void UHWAbility_Passive::SetupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Passive", "SetupListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Passive.IsInternalCooldownActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Passive::IsInternalCooldownActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Passive", "IsInternalCooldownActive");

	Params::HWAbility_Passive_IsInternalCooldownActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Buff.ApplyBuffToTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Buff::ApplyBuffToTarget(class AHWCharacter_Base* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Buff", "ApplyBuffToTarget");

	Params::HWDeployable_Buff_ApplyBuffToTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Buff.CanApplyBuffToTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Buff::CanApplyBuffToTarget(const class AHWCharacter_Base* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Buff", "CanApplyBuffToTarget");

	Params::HWDeployable_Buff_CanApplyBuffToTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Cabrakan_EmpoweredA01_Listener.ConfigureCustomEnhancedA01Context
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWAbility_Cabrakan_EmpoweredA01_Listener::ConfigureCustomEnhancedA01Context()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Cabrakan_EmpoweredA01_Listener", "ConfigureCustomEnhancedA01Context");

	Params::HWAbility_Cabrakan_EmpoweredA01_Listener_ConfigureCustomEnhancedA01Context Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Leap.ActivateLeap
// (Final, Native, Protected, BlueprintCallable)

void UHWAbility_Leap::ActivateLeap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Leap", "ActivateLeap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Leap.OnLeapEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Leap::OnLeapEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Leap", "OnLeapEnded");

	Params::HWAbility_Leap_OnLeapEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Leap.OnLeapStarted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Leap::OnLeapStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Leap", "OnLeapStarted");

	Params::HWAbility_Leap_OnLeapStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Thanatos_Passive.GetExecuteThresholdByAbilityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             AbilityLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbility_Thanatos_Passive::GetExecuteThresholdByAbilityLevel(const int32 AbilityLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Thanatos_Passive", "GetExecuteThresholdByAbilityLevel");

	Params::HWAbility_Thanatos_Passive_GetExecuteThresholdByAbilityLevel Parms{};

	Parms.AbilityLevel = AbilityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeserterSubsystem.GetDeserterList
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FGuid>*                   DeserterList                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWDeserterSubsystem::GetDeserterList(TArray<struct FGuid>* DeserterList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "GetDeserterList");

	Params::HWDeserterSubsystem_GetDeserterList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeserterList != nullptr)
		*DeserterList = std::move(Parms.DeserterList);
}


// Function Hemingway.HWDeserterSubsystem.GetPrimaryDeserter
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FGuid*                           DeserterId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDeserterSubsystem::GetPrimaryDeserter(struct FGuid* DeserterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "GetPrimaryDeserter");

	Params::HWDeserterSubsystem_GetPrimaryDeserter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeserterId != nullptr)
		*DeserterId = std::move(Parms.DeserterId);
}


// Function Hemingway.HWDeserterSubsystem.GetPrimaryDeserterThreshold
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWDeserterSubsystem::GetPrimaryDeserterThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "GetPrimaryDeserterThreshold");

	Params::HWDeserterSubsystem_GetPrimaryDeserterThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeserterSubsystem.HasMatchBeenDeserted
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDeserterSubsystem::HasMatchBeenDeserted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "HasMatchBeenDeserted");

	Params::HWDeserterSubsystem_HasMatchBeenDeserted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeserterSubsystem.IsSingleDeserterSystemEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDeserterSubsystem::IsSingleDeserterSystemEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "IsSingleDeserterSystemEnabled");

	Params::HWDeserterSubsystem_IsSingleDeserterSystemEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeserterSubsystem.MarkAsPrimaryDeserter
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDeserterSubsystem::MarkAsPrimaryDeserter(const struct FGuid& PlayerUuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "MarkAsPrimaryDeserter");

	Params::HWDeserterSubsystem_MarkAsPrimaryDeserter Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeserterSubsystem.GetHasAppliedAnyDeserters
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDeserterSubsystem::GetHasAppliedAnyDeserters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeserterSubsystem", "GetHasAppliedAnyDeserters");

	Params::HWDeserterSubsystem_GetHasAppliedAnyDeserters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Danzaburou_A04.FireAoeExplosion
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void UHWAbility_Danzaburou_A04::FireAoeExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Danzaburou_A04", "FireAoeExplosion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Danzaburou_A04.GetRocketHomingTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&AimData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAbility_Danzaburou_A04::GetRocketHomingTarget(const struct FGameplayAbilityTargetDataHandle& AimData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Danzaburou_A04", "GetRocketHomingTarget");

	Params::HWAbility_Danzaburou_A04_GetRocketHomingTarget Parms{};

	Parms.AimData = std::move(AimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_GroundTargetHelper.BP_OnDistanceLineIndicatorSettingUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UHWAbility_GroundTargetHelper::BP_OnDistanceLineIndicatorSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_GroundTargetHelper", "BP_OnDistanceLineIndicatorSettingUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAbility_GroundTargetHelper.BP_OnGroundTargetIndicatorSettingUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UHWAbility_GroundTargetHelper::BP_OnGroundTargetIndicatorSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_GroundTargetHelper", "BP_OnGroundTargetIndicatorSettingUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDraftRules.ConvertToDraftPlayerIdHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     InPlayerId                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDraftPlayerIdHandle             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDraftPlayerIdHandle UHWDraftRules::ConvertToDraftPlayerIdHandle(const struct FHWPersistentPlayerId& InPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWDraftRules", "ConvertToDraftPlayerIdHandle");

	Params::HWDraftRules_ConvertToDraftPlayerIdHandle Parms{};

	Parms.InPlayerId = std::move(InPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftRules.ConvertToHWPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDraftPlayerIdHandle&      InDraftPlayerId                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWPersistentPlayerId            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWPersistentPlayerId UHWDraftRules::ConvertToHWPlayerId(const struct FDraftPlayerIdHandle& InDraftPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWDraftRules", "ConvertToHWPlayerId");

	Params::HWDraftRules_ConvertToHWPlayerId Parms{};

	Parms.InDraftPlayerId = std::move(InDraftPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftRules.IsValidRandomBotChoice
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDraftChoice&              InDraftChoice                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FDraftTask&                InDraftTask                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class ADraftAuthority*                  InDraftAuthority                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDraftRules::IsValidRandomBotChoice(const struct FDraftChoice& InDraftChoice, const struct FDraftTask& InDraftTask, class ADraftAuthority* InDraftAuthority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftRules", "IsValidRandomBotChoice");

	Params::HWDraftRules_IsValidRandomBotChoice Parms{};

	Parms.InDraftChoice = std::move(InDraftChoice);
	Parms.InDraftTask = std::move(InDraftTask);
	Parms.InDraftAuthority = InDraftAuthority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftRules.IsValidRandomPlayerChoice
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDraftChoice&              InDraftChoice                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FDraftTask&                InDraftTask                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class ADraftAuthority*                  InDraftAuthority                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDraftRules::IsValidRandomPlayerChoice(const struct FDraftChoice& InDraftChoice, const struct FDraftTask& InDraftTask, class ADraftAuthority* InDraftAuthority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftRules", "IsValidRandomPlayerChoice");

	Params::HWDraftRules_IsValidRandomPlayerChoice Parms{};

	Parms.InDraftChoice = std::move(InDraftChoice);
	Parms.InDraftTask = std::move(InDraftTask);
	Parms.InDraftAuthority = InDraftAuthority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftRules.HandleGodLoadoutReceived
// (Final, Native, Protected, HasOutParams, Const)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_PlayerSettingsDataWrapper&SettingsWrapper                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TWeakObjectPtr<class ADraftAuthority>   InDraftAuthority                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     PlayerId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDraftRules::HandleGodLoadoutReceived(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& SettingsWrapper, TWeakObjectPtr<class ADraftAuthority> InDraftAuthority, const struct FHWPersistentPlayerId& PlayerId, const class UHWCharacterItem* CharacterItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftRules", "HandleGodLoadoutReceived");

	Params::HWDraftRules_HandleGodLoadoutReceived Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SettingsWrapper = std::move(SettingsWrapper);
	Parms.InDraftAuthority = InDraftAuthority;
	Parms.PlayerId = std::move(PlayerId);
	Parms.CharacterItem = CharacterItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftRules.HandlePlayerLoadoutReceived
// (Final, Native, Protected, HasOutParams, Const)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_PlayerSettingsDataWrapper&SettingsWrapper                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TWeakObjectPtr<class ADraftAuthority>   InDraftAuthority                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     PlayerId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDraftRules::HandlePlayerLoadoutReceived(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& SettingsWrapper, TWeakObjectPtr<class ADraftAuthority> InDraftAuthority, const struct FHWPersistentPlayerId& PlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftRules", "HandlePlayerLoadoutReceived");

	Params::HWDraftRules_HandlePlayerLoadoutReceived Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SettingsWrapper = std::move(SettingsWrapper);
	Parms.InDraftAuthority = InDraftAuthority;
	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Levitate.HandleEarlyEndTrigger
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Levitate::HandleEarlyEndTrigger(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Levitate", "HandleEarlyEndTrigger");

	Params::HWAbility_Levitate_HandleEarlyEndTrigger Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Levitate.OnLevitationEnded
// (Final, Native, Protected)
// Parameters:
// EHWEndLevitationReason                  EndLevitationReason                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Levitate::OnLevitationEnded(EHWEndLevitationReason EndLevitationReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Levitate", "OnLevitationEnded");

	Params::HWAbility_Levitate_OnLevitationEnded Parms{};

	Parms.EndLevitationReason = EndLevitationReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.AdjustLocationToGround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWLibrary_Core::AdjustLocationToGround(const class UObject* WorldContextObject, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "AdjustLocationToGround");

	Params::HWLibrary_Core_AdjustLocationToGround Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.BP_TraceBookmark
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::BP_TraceBookmark(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "BP_TraceBookmark");

	Params::HWLibrary_Core_BP_TraceBookmark Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.ClearAndInvalidateTimerHandleWithWorldContext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle&                    Handle                                                 (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ClearAndInvalidateTimerHandleWithWorldContext(const class UObject* WorldContextObject, struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ClearAndInvalidateTimerHandleWithWorldContext");

	Params::HWLibrary_Core_ClearAndInvalidateTimerHandleWithWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function Hemingway.HWLibrary_Core.CloneHWTargetDataFilter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTargetDataFilterHandle&FilterHandle                                           (Parm, NativeAccessSpecifierPublic)
// class AActor*                           NewAvatar                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWLibrary_Core::CloneHWTargetDataFilter(const struct FGameplayTargetDataFilterHandle& FilterHandle, class AActor* NewAvatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "CloneHWTargetDataFilter");

	Params::HWLibrary_Core_CloneHWTargetDataFilter Parms{};

	Parms.FilterHandle = std::move(FilterHandle);
	Parms.NewAvatar = NewAvatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.ConstrainCameraLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CameraLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   FocusLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       ProbeChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProbeSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWLibrary_Core::ConstrainCameraLocation(const class UObject* WorldContextObject, class AActor* SourceActor, const struct FVector& CameraLocation, const struct FVector& FocusLocation, ECollisionChannel ProbeChannel, float ProbeSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ConstrainCameraLocation");

	Params::HWLibrary_Core_ConstrainCameraLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SourceActor = SourceActor;
	Parms.CameraLocation = std::move(CameraLocation);
	Parms.FocusLocation = std::move(FocusLocation);
	Parms.ProbeChannel = ProbeChannel;
	Parms.ProbeSize = ProbeSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.ConvertSocketWorldToParentSpace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector&                   ParentLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  ParentRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const class USkeletalMeshComponent*     Mesh                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SocketName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ConvertSocketWorldToParentSpace(const struct FVector& ParentLocation, const struct FRotator& ParentRotation, const class USkeletalMeshComponent* Mesh, const class FName& SocketName, struct FVector* OutOffset, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ConvertSocketWorldToParentSpace");

	Params::HWLibrary_Core_ConvertSocketWorldToParentSpace Parms{};

	Parms.ParentLocation = std::move(ParentLocation);
	Parms.ParentRotation = std::move(ParentRotation);
	Parms.Mesh = Mesh;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOffset != nullptr)
		*OutOffset = std::move(Parms.OutOffset);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function Hemingway.HWLibrary_Core.CumulativeDistributionFunction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Mu                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Sigma                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_Core::CumulativeDistributionFunction(float X, float Mu, float Sigma)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "CumulativeDistributionFunction");

	Params::HWLibrary_Core_CumulativeDistributionFunction Parms{};

	Parms.X = X;
	Parms.Mu = Mu;
	Parms.Sigma = Sigma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.DoesActorHaveLineOfSightOfLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            IgnoreActors                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::DoesActorHaveLineOfSightOfLocation(const class AActor* TargetActor, const struct FVector& EndLocation, const TArray<class AActor*>& IgnoreActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "DoesActorHaveLineOfSightOfLocation");

	Params::HWLibrary_Core_DoesActorHaveLineOfSightOfLocation Parms{};

	Parms.TargetActor = TargetActor;
	Parms.EndLocation = std::move(EndLocation);
	Parms.IgnoreActors = std::move(IgnoreActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.EqualEqual_FGenericTeamId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGenericTeamId&            A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::EqualEqual_FGenericTeamId(const struct FGenericTeamId& A, const struct FGenericTeamId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "EqualEqual_FGenericTeamId");

	Params::HWLibrary_Core_EqualEqual_FGenericTeamId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.EqualEqual_FHWAbilityFiringInstanceId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWAbilityFiringInstanceId&A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::EqualEqual_FHWAbilityFiringInstanceId(const struct FHWAbilityFiringInstanceId& A, const struct FHWAbilityFiringInstanceId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "EqualEqual_FHWAbilityFiringInstanceId");

	Params::HWLibrary_Core_EqualEqual_FHWAbilityFiringInstanceId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.EqualEqual_FHWActiveFamiliarHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWActiveFamiliarHandle&   A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWActiveFamiliarHandle&   B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::EqualEqual_FHWActiveFamiliarHandle(const struct FHWActiveFamiliarHandle& A, const struct FHWActiveFamiliarHandle& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "EqualEqual_FHWActiveFamiliarHandle");

	Params::HWLibrary_Core_EqualEqual_FHWActiveFamiliarHandle Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.EqualEqual_FHWActiveFamiliarInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWActiveFamiliarInfo&     A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWActiveFamiliarInfo&     B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::EqualEqual_FHWActiveFamiliarInfo(const struct FHWActiveFamiliarInfo& A, const struct FHWActiveFamiliarInfo& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "EqualEqual_FHWActiveFamiliarInfo");

	Params::HWLibrary_Core_EqualEqual_FHWActiveFamiliarInfo Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.EqualEqual_FHWPersistentPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::EqualEqual_FHWPersistentPlayerId(const struct FHWPersistentPlayerId& A, const struct FHWPersistentPlayerId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "EqualEqual_FHWPersistentPlayerId");

	Params::HWLibrary_Core_EqualEqual_FHWPersistentPlayerId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.ErrorFunction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_Core::ErrorFunction(float X)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ErrorFunction");

	Params::HWLibrary_Core_ErrorFunction Parms{};

	Parms.X = X;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.FindEdgeOfWorldGeometryCheck
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TraceOrigin                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TraceDirection                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Extent                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ProfileName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     SourceActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutEdgeLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldFindSpotClosestFromTraceOrigin                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShowDebug                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::FindEdgeOfWorldGeometryCheck(const class UObject* WorldContextObject, const struct FVector& TraceOrigin, const struct FVector& TraceDirection, const float Range, const struct FVector& Extent, const class FName ProfileName, const class AActor* SourceActor, struct FVector* OutEdgeLocation, const bool bShouldFindSpotClosestFromTraceOrigin, const bool bShowDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "FindEdgeOfWorldGeometryCheck");

	Params::HWLibrary_Core_FindEdgeOfWorldGeometryCheck Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TraceOrigin = std::move(TraceOrigin);
	Parms.TraceDirection = std::move(TraceDirection);
	Parms.Range = Range;
	Parms.Extent = std::move(Extent);
	Parms.ProfileName = ProfileName;
	Parms.SourceActor = SourceActor;
	Parms.bShouldFindSpotClosestFromTraceOrigin = bShouldFindSpotClosestFromTraceOrigin;
	Parms.bShowDebug = bShowDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEdgeLocation != nullptr)
		*OutEdgeLocation = std::move(Parms.OutEdgeLocation);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.FindNearestValidGroundLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MinDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCheckInsideCollision                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     ActorToCheck                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     ActorToIgnoreCollision                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWLibrary_Core::FindNearestValidGroundLocation(const class UObject* WorldContextObject, const struct FVector& StartLocation, const struct FVector& EndLocation, const float MinDistance, const bool bCheckInsideCollision, const class AActor* ActorToCheck, const class AActor* ActorToIgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "FindNearestValidGroundLocation");

	Params::HWLibrary_Core_FindNearestValidGroundLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.MinDistance = MinDistance;
	Parms.bCheckInsideCollision = bCheckInsideCollision;
	Parms.ActorToCheck = ActorToCheck;
	Parms.ActorToIgnoreCollision = ActorToIgnoreCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.FindWorldImpact
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartTrace                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndTrace                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CollisionExtents                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     TraceActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult*                      OutWorldImpact                                         (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class FName                       CollisionProfileOverride                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamOverride                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::FindWorldImpact(const class UObject* WorldContextObject, const struct FVector& StartTrace, const struct FVector& EndTrace, const struct FVector& CollisionExtents, const class AActor* TraceActor, struct FHitResult* OutWorldImpact, const class FName CollisionProfileOverride, const struct FGenericTeamId& TeamOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "FindWorldImpact");

	Params::HWLibrary_Core_FindWorldImpact Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartTrace = std::move(StartTrace);
	Parms.EndTrace = std::move(EndTrace);
	Parms.CollisionExtents = std::move(CollisionExtents);
	Parms.TraceActor = TraceActor;
	Parms.CollisionProfileOverride = CollisionProfileOverride;
	Parms.TeamOverride = std::move(TeamOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldImpact != nullptr)
		*OutWorldImpact = std::move(Parms.OutWorldImpact);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetAbilitySpecFromAbilityFiringInstanceId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayAbilitySpecHandle       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAbilitySpecHandle UHWLibrary_Core::GetAbilitySpecFromAbilityFiringInstanceId(const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetAbilitySpecFromAbilityFiringInstanceId");

	Params::HWLibrary_Core_GetAbilitySpecFromAbilityFiringInstanceId Parms{};

	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetActorAttitudeTowardsLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamAttitude                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamAttitude UHWLibrary_Core::GetActorAttitudeTowardsLocalPlayer(const class UObject* WorldContextObject, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetActorAttitudeTowardsLocalPlayer");

	Params::HWLibrary_Core_GetActorAttitudeTowardsLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetActorGameTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWSmiteTeamId                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWSmiteTeamId UHWLibrary_Core::GetActorGameTeam(const class UObject* WorldContextObject, const class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetActorGameTeam");

	Params::HWLibrary_Core_GetActorGameTeam Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetAngleBetweenTwoVectors
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector&                   A                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   B                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_Core::GetAngleBetweenTwoVectors(const struct FVector& A, const struct FVector& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetAngleBetweenTwoVectors");

	Params::HWLibrary_Core_GetAngleBetweenTwoVectors Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetAnnouncerCueFromAnnouncerPack
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAnnouncerPackItem*       AnnouncerPack                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundBase> UHWLibrary_Core::GetAnnouncerCueFromAnnouncerPack(const class UObject* WorldContextObject, const class UHWAnnouncerPackItem* AnnouncerPack, const struct FAssetRequestKey& AssetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetAnnouncerCueFromAnnouncerPack");

	Params::HWLibrary_Core_GetAnnouncerCueFromAnnouncerPack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AnnouncerPack = AnnouncerPack;
	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetAnnouncerCueFromLocalPlayerAnnouncerPack
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundBase> UHWLibrary_Core::GetAnnouncerCueFromLocalPlayerAnnouncerPack(const class UObject* WorldContextObject, const struct FAssetRequestKey& AssetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetAnnouncerCueFromLocalPlayerAnnouncerPack");

	Params::HWLibrary_Core_GetAnnouncerCueFromLocalPlayerAnnouncerPack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetBooleanAppSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutSettingValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetBooleanAppSetting(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, bool* bOutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetBooleanAppSetting");

	Params::HWLibrary_Core_GetBooleanAppSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSettingValue != nullptr)
		*bOutSettingValue = Parms.bOutSettingValue;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetBooleanGameUserSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SettingName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutSettingValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetBooleanGameUserSetting(const class UObject* WorldContextObject, class FName SettingName, bool* bOutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetBooleanGameUserSetting");

	Params::HWLibrary_Core_GetBooleanGameUserSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSettingValue != nullptr)
		*bOutSettingValue = Parms.bOutSettingValue;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetBotGameplayTagForRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterRole                          Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWLibrary_Core::GetBotGameplayTagForRole(ECharacterRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetBotGameplayTagForRole");

	Params::HWLibrary_Core_GetBotGameplayTagForRole Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetCachedGodMasteryLevelInfoForPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWLevelInfo*                    OutLevelInfo                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetCachedGodMasteryLevelInfoForPlayer(class UObject* WorldContextObject, const class UHWCharacterItem* GodItem, const class URH_PlayerInfo* PlayerInfo, struct FHWLevelInfo* OutLevelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetCachedGodMasteryLevelInfoForPlayer");

	Params::HWLibrary_Core_GetCachedGodMasteryLevelInfoForPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GodItem = GodItem;
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLevelInfo != nullptr)
		*OutLevelInfo = std::move(Parms.OutLevelInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetCapturedTargetTagsFromEffectSpecHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWLibrary_Core::GetCapturedTargetTagsFromEffectSpecHandle(const struct FGameplayEffectSpecHandle& EffectSpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetCapturedTargetTagsFromEffectSpecHandle");

	Params::HWLibrary_Core_GetCapturedTargetTagsFromEffectSpecHandle Parms{};

	Parms.EffectSpecHandle = std::move(EffectSpecHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetCollectionTagFromType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHWCollectionItemType                   CollectionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWLibrary_Core::GetCollectionTagFromType(EHWCollectionItemType CollectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetCollectionTagFromType");

	Params::HWLibrary_Core_GetCollectionTagFromType Parms{};

	Parms.CollectionType = CollectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetConsoleType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHWConsoleType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWConsoleType UHWLibrary_Core::GetConsoleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetConsoleType");

	Params::HWLibrary_Core_GetConsoleType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetDraftLobbyTeamIndexForPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADraftReplicatedActor*      InDraftActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWPlayerState*             PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_Core::GetDraftLobbyTeamIndexForPlayer(const class ADraftReplicatedActor* InDraftActor, const class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetDraftLobbyTeamIndexForPlayer");

	Params::HWLibrary_Core_GetDraftLobbyTeamIndexForPlayer Parms{};

	Parms.InDraftActor = InDraftActor;
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetFirstMatchingTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer&     Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              TagToMatch                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWLibrary_Core::GetFirstMatchingTag(const struct FGameplayTagContainer& Container, const struct FGameplayTag& TagToMatch, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetFirstMatchingTag");

	Params::HWLibrary_Core_GetFirstMatchingTag Parms{};

	Parms.Container = std::move(Container);
	Parms.TagToMatch = std::move(TagToMatch);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetFloatGameUserSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SettingName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  bOutSettingValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetFloatGameUserSetting(const class UObject* WorldContextObject, class FName SettingName, float* bOutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetFloatGameUserSetting");

	Params::HWLibrary_Core_GetFloatGameUserSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSettingValue != nullptr)
		*bOutSettingValue = Parms.bOutSettingValue;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGameModeInfo
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGameModeInfo*                 GameModeInfo                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bUseDefaultGameModeInfoTag                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetGameModeInfo(const class UObject* WorldContextObject, struct FHWGameModeInfo* GameModeInfo, bool bUseDefaultGameModeInfoTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGameModeInfo");

	Params::HWLibrary_Core_GetGameModeInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bUseDefaultGameModeInfoTag = bUseDefaultGameModeInfoTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GameModeInfo != nullptr)
		*GameModeInfo = std::move(Parms.GameModeInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGameplayEffectContext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectSpec&       GameplayEffectSpec                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWLibrary_Core::GetGameplayEffectContext(const struct FGameplayEffectSpec& GameplayEffectSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGameplayEffectContext");

	Params::HWLibrary_Core_GetGameplayEffectContext Parms{};

	Parms.GameplayEffectSpec = std::move(GameplayEffectSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGameplayTagForRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterRole                          Role                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWLibrary_Core::GetGameplayTagForRole(ECharacterRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGameplayTagForRole");

	Params::HWLibrary_Core_GetGameplayTagForRole Parms{};

	Parms.Role = Role;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGameTeamFromGenericTeamId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            InTeamId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWSmiteTeamId                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWSmiteTeamId UHWLibrary_Core::GetGameTeamFromGenericTeamId(const class UObject* WorldContextObject, const struct FGenericTeamId& InTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGameTeamFromGenericTeamId");

	Params::HWLibrary_Core_GetGameTeamFromGenericTeamId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InTeamId = std::move(InTeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGameTeamFromRHTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   RHTeamId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWSmiteTeamId                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWSmiteTeamId UHWLibrary_Core::GetGameTeamFromRHTeamId(int32 RHTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGameTeamFromRHTeamId");

	Params::HWLibrary_Core_GetGameTeamFromRHTeamId Parms{};

	Parms.RHTeamId = RHTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGenericTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TeamMemberActor                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId UHWLibrary_Core::GetGenericTeamId(const class AActor* TeamMemberActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGenericTeamId");

	Params::HWLibrary_Core_GetGenericTeamId Parms{};

	Parms.TeamMemberActor = TeamMemberActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetGodMasteryLevelForPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const class UHWCharacterItem* Character, const class URH_PlayerInfo* InPlayerInfo, int32 Level, float LevelProgressPercent)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::GetGodMasteryLevelForPlayer(class UObject* WorldContextObject, const class UHWCharacterItem* GodItem, const class URH_PlayerInfo* PlayerInfo, const TDelegate<void(const class UHWCharacterItem* Character, const class URH_PlayerInfo* InPlayerInfo, int32 Level, float LevelProgressPercent)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGodMasteryLevelForPlayer");

	Params::HWLibrary_Core_GetGodMasteryLevelForPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GodItem = GodItem;
	Parms.PlayerInfo = PlayerInfo;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.GetGodSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGodSubsystem*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGodSubsystem* UHWLibrary_Core::GetGodSubsystem(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetGodSubsystem");

	Params::HWLibrary_Core_GetGodSubsystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetHWGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameInstance*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameInstance* UHWLibrary_Core::GetHWGameInstance(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetHWGameInstance");

	Params::HWLibrary_Core_GetHWGameInstance Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetHWGameMode
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWGameMode*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameMode* UHWLibrary_Core::GetHWGameMode(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetHWGameMode");

	Params::HWLibrary_Core_GetHWGameMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetHWGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWGameState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameState* UHWLibrary_Core::GetHWGameState(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetHWGameState");

	Params::HWLibrary_Core_GetHWGameState Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetHWGameStateWithManualWorldContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWGameState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameState* UHWLibrary_Core::GetHWGameStateWithManualWorldContext(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetHWGameStateWithManualWorldContext");

	Params::HWLibrary_Core_GetHWGameStateWithManualWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetHWTagManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWTagManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWTagManager* UHWLibrary_Core::GetHWTagManager(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetHWTagManager");

	Params::HWLibrary_Core_GetHWTagManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetIntegerAppSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSettingValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetIntegerAppSetting(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, int32* OutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetIntegerAppSetting");

	Params::HWLibrary_Core_GetIntegerAppSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSettingValue != nullptr)
		*OutSettingValue = Parms.OutSettingValue;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetIntegerGameUserSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SettingName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSettingValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetIntegerGameUserSetting(const class UObject* WorldContextObject, class FName SettingName, int32* OutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetIntegerGameUserSetting");

	Params::HWLibrary_Core_GetIntegerGameUserSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSettingValue != nullptr)
		*OutSettingValue = Parms.OutSettingValue;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetLocalPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UHWLibrary_Core::GetLocalPlayerController(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetLocalPlayerController");

	Params::HWLibrary_Core_GetLocalPlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetMusicCueFromLocalPlayerMusicPack
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMetaSoundSource>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMetaSoundSource> UHWLibrary_Core::GetMusicCueFromLocalPlayerMusicPack(const class UObject* WorldContextObject, const struct FAssetRequestKey& AssetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetMusicCueFromLocalPlayerMusicPack");

	Params::HWLibrary_Core_GetMusicCueFromLocalPlayerMusicPack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetMusicCueFromMusicPack
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWMusicPackItem*           MusicPack                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMetaSoundSource>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMetaSoundSource> UHWLibrary_Core::GetMusicCueFromMusicPack(const class UObject* WorldContextObject, const class UHWMusicPackItem* MusicPack, const struct FAssetRequestKey& AssetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetMusicCueFromMusicPack");

	Params::HWLibrary_Core_GetMusicCueFromMusicPack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MusicPack = MusicPack;
	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetNPCType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_NPC*           NPCCharacter                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWLibrary_Core::GetNPCType(const class AHWCharacter_NPC* NPCCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetNPCType");

	Params::HWLibrary_Core_GetNPCType Parms{};

	Parms.NPCCharacter = NPCCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetObjectFirstMatchingTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    ObjectToCheck                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWLibrary_Core::GetObjectFirstMatchingTag(const class UObject* ObjectToCheck, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetObjectFirstMatchingTag");

	Params::HWLibrary_Core_GetObjectFirstMatchingTag Parms{};

	Parms.ObjectToCheck = ObjectToCheck;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetPlayerCohort
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumCohorts                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_Core::GetPlayerCohort(class URH_PlayerInfo* PlayerInfo, int32 NumCohorts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetPlayerCohort");

	Params::HWLibrary_Core_GetPlayerCohort Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.NumCohorts = NumCohorts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetPlayerFacingGameVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWLibrary_Core::GetPlayerFacingGameVersion(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetPlayerFacingGameVersion");

	Params::HWLibrary_Core_GetPlayerFacingGameVersion Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetPlayerNameFromDraftTask
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ADraftReplicatedActor*      InDraftActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDraftTask&                DraftTask                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString*                          OutName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetPlayerNameFromDraftTask(const class ADraftReplicatedActor* InDraftActor, const struct FDraftTask& DraftTask, class FString* OutName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetPlayerNameFromDraftTask");

	Params::HWLibrary_Core_GetPlayerNameFromDraftTask Parms{};

	Parms.InDraftActor = InDraftActor;
	Parms.DraftTask = std::move(DraftTask);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetReflexAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetReflexAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetReflexAvailable");

	Params::HWLibrary_Core_GetReflexAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetRewardsForQuestTier
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWQuest*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            QuestTier                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRH_ItemId>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRH_ItemId> UHWLibrary_Core::GetRewardsForQuestTier(class UObject* WorldContextObject, const class UHWQuest* Quest, const class UHWCharacterItem* CharacterItem, const int32& QuestTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetRewardsForQuestTier");

	Params::HWLibrary_Core_GetRewardsForQuestTier Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Quest = Quest;
	Parms.CharacterItem = CharacterItem;
	Parms.QuestTier = QuestTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetRHTeamIdFromGameTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   GameTeamId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_Core::GetRHTeamIdFromGameTeamId(int32 GameTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetRHTeamIdFromGameTeamId");

	Params::HWLibrary_Core_GetRHTeamIdFromGameTeamId Parms{};

	Parms.GameTeamId = GameTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetRoleForGameplayTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              RoleTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterRole                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterRole UHWLibrary_Core::GetRoleForGameplayTag(const struct FGameplayTag& RoleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetRoleForGameplayTag");

	Params::HWLibrary_Core_GetRoleForGameplayTag Parms{};

	Parms.RoleTag = std::move(RoleTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetSimpleTagName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWLibrary_Core::GetSimpleTagName(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetSimpleTagName");

	Params::HWLibrary_Core_GetSimpleTagName Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetSoftInventoryItemFromItemId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWInventoryItem>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWInventoryItem> UHWLibrary_Core::GetSoftInventoryItemFromItemId(const struct FRH_ItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetSoftInventoryItemFromItemId");

	Params::HWLibrary_Core_GetSoftInventoryItemFromItemId Parms{};

	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetSoftInventoryItemFromLootId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_LootId&                InLootId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWInventoryItem>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWInventoryItem> UHWLibrary_Core::GetSoftInventoryItemFromLootId(const struct FRH_LootId& InLootId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetSoftInventoryItemFromLootId");

	Params::HWLibrary_Core_GetSoftInventoryItemFromLootId Parms{};

	Parms.InLootId = std::move(InLootId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetStringAppSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutSettingValue                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetStringAppSetting(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, class FString* OutSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetStringAppSetting");

	Params::HWLibrary_Core_GetStringAppSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSettingValue != nullptr)
		*OutSettingValue = std::move(Parms.OutSettingValue);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetStringArrayAppSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutSettingValues                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const class FString&                    Delimiter                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::GetStringArrayAppSetting(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, TArray<class FString>* OutSettingValues, const class FString& Delimiter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetStringArrayAppSetting");

	Params::HWLibrary_Core_GetStringArrayAppSetting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);
	Parms.Delimiter = std::move(Delimiter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSettingValues != nullptr)
		*OutSettingValues = std::move(Parms.OutSettingValues);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetStringFromFiringInstance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWLibrary_Core::GetStringFromFiringInstance(const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetStringFromFiringInstance");

	Params::HWLibrary_Core_GetStringFromFiringInstance Parms{};

	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetTeamAttitudeTowards
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     TeamMemberActor                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamAttitude                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamAttitude UHWLibrary_Core::GetTeamAttitudeTowards(const class AActor* TeamMemberActor, const class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetTeamAttitudeTowards");

	Params::HWLibrary_Core_GetTeamAttitudeTowards Parms{};

	Parms.TeamMemberActor = TeamMemberActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetTeamState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWLibrary_Core::GetTeamState(const class UObject* WorldContextObject, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetTeamState");

	Params::HWLibrary_Core_GetTeamState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.GetWorldTimeStamp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_Core::GetWorldTimeStamp(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "GetWorldTimeStamp");

	Params::HWLibrary_Core_GetWorldTimeStamp Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.HW_PlaySoftSound2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        SoftSound                                              (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OwningActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUISound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::HW_PlaySoftSound2D(const class UObject* WorldContextObject, TSoftObjectPtr<class USoundBase> SoftSound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, const class AActor* OwningActor, bool bIsUISound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_PlaySoftSound2D");

	Params::HWLibrary_Core_HW_PlaySoftSound2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoftSound = SoftSound;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.OwningActor = OwningActor;
	Parms.bIsUISound = bIsUISound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.HW_PlaySound2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OwningActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUISound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::HW_PlaySound2D(const class AActor* SkinningInstigatorActor, class USoundBase* Sound, const struct FAssetRequestKey& SkinningKey, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, const class AActor* OwningActor, bool bIsUISound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_PlaySound2D");

	Params::HWLibrary_Core_HW_PlaySound2D Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.Sound = Sound;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.OwningActor = OwningActor;
	Parms.bIsUISound = bIsUISound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.HW_PlaySoundAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                AttenuationSettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OwningActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInitialActiveSoundParams*  InitialParams                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::HW_PlaySoundAtLocation(const class AActor* SkinningInstigatorActor, class USoundBase* Sound, const struct FAssetRequestKey& SkinningKey, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, const class AActor* OwningActor, const class UInitialActiveSoundParams* InitialParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_PlaySoundAtLocation");

	Params::HWLibrary_Core_HW_PlaySoundAtLocation Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.Sound = Sound;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.AttenuationSettings = AttenuationSettings;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.OwningActor = OwningActor;
	Parms.InitialParams = InitialParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.HW_SetUnfocusedVolumeMultiplier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const float                             InVolumeMultiplier                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::HW_SetUnfocusedVolumeMultiplier(const float InVolumeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_SetUnfocusedVolumeMultiplier");

	Params::HWLibrary_Core_HW_SetUnfocusedVolumeMultiplier Parms{};

	Parms.InVolumeMultiplier = InVolumeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.HW_SpawnNiagaraSystemAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*                   SystemTemplate                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoActivate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENCPoolMethod                           PoolingMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPreCullCheck                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* UHWLibrary_Core::HW_SpawnNiagaraSystemAtLocation(const class AActor* SkinningInstigatorActor, class UNiagaraSystem* SystemTemplate, const struct FAssetRequestKey& SkinningKey, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool bAutoDestroy, bool bAutoActivate, ENCPoolMethod PoolingMethod, bool bPreCullCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_SpawnNiagaraSystemAtLocation");

	Params::HWLibrary_Core_HW_SpawnNiagaraSystemAtLocation Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.SystemTemplate = SystemTemplate;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Scale = std::move(Scale);
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.bAutoActivate = bAutoActivate;
	Parms.PoolingMethod = PoolingMethod;
	Parms.bPreCullCheck = bPreCullCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.HW_SpawnNiagaraSystemAttached
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*                   SystemTemplate                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoActivate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENCPoolMethod                           PoolingMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPreCullCheck                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* UHWLibrary_Core::HW_SpawnNiagaraSystemAttached(const class AActor* SkinningInstigatorActor, class UNiagaraSystem* SystemTemplate, const struct FAssetRequestKey& SkinningKey, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bAutoDestroy, bool bAutoActivate, ENCPoolMethod PoolingMethod, bool bPreCullCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_SpawnNiagaraSystemAttached");

	Params::HWLibrary_Core_HW_SpawnNiagaraSystemAttached Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.SystemTemplate = SystemTemplate;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LocationType = LocationType;
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.bAutoActivate = bAutoActivate;
	Parms.PoolingMethod = PoolingMethod;
	Parms.bPreCullCheck = bPreCullCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.HW_SpawnSoundAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                AttenuationSettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWLibrary_Core::HW_SpawnSoundAtLocation(const class AActor* SkinningInstigatorActor, class USoundBase* Sound, const struct FAssetRequestKey& SkinningKey, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_SpawnSoundAtLocation");

	Params::HWLibrary_Core_HW_SpawnSoundAtLocation Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.Sound = Sound;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.AttenuationSettings = AttenuationSettings;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.HW_SpawnSoundAttached
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     SkinningInstigatorActor                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAssetRequestKey&          SkinningKey                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopWhenAttachedToDestroyed                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                AttenuationSettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWLibrary_Core::HW_SpawnSoundAttached(const class AActor* SkinningInstigatorActor, class USoundBase* Sound, const struct FAssetRequestKey& SkinningKey, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "HW_SpawnSoundAttached");

	Params::HWLibrary_Core_HW_SpawnSoundAttached Parms{};

	Parms.SkinningInstigatorActor = SkinningInstigatorActor;
	Parms.Sound = Sound;
	Parms.SkinningKey = std::move(SkinningKey);
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LocationType = LocationType;
	Parms.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.AttenuationSettings = AttenuationSettings;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsBot_FHWPersistentPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsBot_FHWPersistentPlayerId(const struct FHWPersistentPlayerId& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsBot_FHWPersistentPlayerId");

	Params::HWLibrary_Core_IsBot_FHWPersistentPlayerId Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsDLSSAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsDLSSAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsDLSSAvailable");

	Params::HWLibrary_Core_IsDLSSAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsDLSSFrameGenAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsDLSSFrameGenAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsDLSSFrameGenAvailable");

	Params::HWLibrary_Core_IsDLSSFrameGenAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsGameplayTagRequirementMet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    ObjectToCheck                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  TagRequirements                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsGameplayTagRequirementMet(const class UObject* ObjectToCheck, const struct FGameplayTagRequirements& TagRequirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsGameplayTagRequirementMet");

	Params::HWLibrary_Core_IsGameplayTagRequirementMet Parms{};

	Parms.ObjectToCheck = ObjectToCheck;
	Parms.TagRequirements = std::move(TagRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsGameplayTagRequirementMetForTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer&     TagsToCheck                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  TagRequirements                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsGameplayTagRequirementMetForTags(const struct FGameplayTagContainer& TagsToCheck, const struct FGameplayTagRequirements& TagRequirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsGameplayTagRequirementMetForTags");

	Params::HWLibrary_Core_IsGameplayTagRequirementMetForTags Parms{};

	Parms.TagsToCheck = std::move(TagsToCheck);
	Parms.TagRequirements = std::move(TagRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsHuman_FHWPersistentPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsHuman_FHWPersistentPlayerId(const struct FHWPersistentPlayerId& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsHuman_FHWPersistentPlayerId");

	Params::HWLibrary_Core_IsHuman_FHWPersistentPlayerId Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsValid_FHWPersistentPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsValid_FHWPersistentPlayerId(const struct FHWPersistentPlayerId& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsValid_FHWPersistentPlayerId");

	Params::HWLibrary_Core_IsValid_FHWPersistentPlayerId Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.IsValidWorldHit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHitResult&                HitToCheck                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class AActor*                     TraceActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamOverride                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::IsValidWorldHit(const struct FHitResult& HitToCheck, const class AActor* TraceActor, const struct FGenericTeamId& TeamOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "IsValidWorldHit");

	Params::HWLibrary_Core_IsValidWorldHit Parms{};

	Parms.HitToCheck = std::move(HitToCheck);
	Parms.TraceActor = TraceActor;
	Parms.TeamOverride = std::move(TeamOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.MakeAssetRequestKeyUsingKeyword
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FName                       Keyword                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAssetRequestKey                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FAssetRequestKey UHWLibrary_Core::MakeAssetRequestKeyUsingKeyword(const class FName Keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "MakeAssetRequestKeyUsingKeyword");

	Params::HWLibrary_Core_MakeAssetRequestKeyUsingKeyword Parms{};

	Parms.Keyword = Keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.MakeHWTargetDataFilterHandle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWGameplayTargetDataFilter&Filter                                                 (Parm, NativeAccessSpecifierPublic)
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWLibrary_Core::MakeHWTargetDataFilterHandle(const struct FHWGameplayTargetDataFilter& Filter, class AActor* Avatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "MakeHWTargetDataFilterHandle");

	Params::HWLibrary_Core_MakeHWTargetDataFilterHandle Parms{};

	Parms.Filter = std::move(Filter);
	Parms.Avatar = Avatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.NotEqual_FGenericTeamId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGenericTeamId&            A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::NotEqual_FGenericTeamId(const struct FGenericTeamId& A, const struct FGenericTeamId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "NotEqual_FGenericTeamId");

	Params::HWLibrary_Core_NotEqual_FGenericTeamId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.NotEqual_FHWAbilityFiringInstanceId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWAbilityFiringInstanceId&A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::NotEqual_FHWAbilityFiringInstanceId(const struct FHWAbilityFiringInstanceId& A, const struct FHWAbilityFiringInstanceId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "NotEqual_FHWAbilityFiringInstanceId");

	Params::HWLibrary_Core_NotEqual_FHWAbilityFiringInstanceId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.NotEqual_FHWActiveFamiliarHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWActiveFamiliarHandle&   A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWActiveFamiliarHandle&   B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::NotEqual_FHWActiveFamiliarHandle(const struct FHWActiveFamiliarHandle& A, const struct FHWActiveFamiliarHandle& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "NotEqual_FHWActiveFamiliarHandle");

	Params::HWLibrary_Core_NotEqual_FHWActiveFamiliarHandle Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.NotEqual_FHWActiveFamiliarInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWActiveFamiliarInfo&     A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWActiveFamiliarInfo&     B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::NotEqual_FHWActiveFamiliarInfo(const struct FHWActiveFamiliarInfo& A, const struct FHWActiveFamiliarInfo& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "NotEqual_FHWActiveFamiliarInfo");

	Params::HWLibrary_Core_NotEqual_FHWActiveFamiliarInfo Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.NotEqual_FHWPersistentPlayerId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWPersistentPlayerId&     A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::NotEqual_FHWPersistentPlayerId(const struct FHWPersistentPlayerId& A, const struct FHWPersistentPlayerId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "NotEqual_FHWPersistentPlayerId");

	Params::HWLibrary_Core_NotEqual_FHWPersistentPlayerId Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.ParseMatchData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRHAPI_MatchPlayerWithMatch&PlayerMatchData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHWPlayerMatchData*              OutPlayerMatchData                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ParseMatchData(const struct FRHAPI_MatchPlayerWithMatch& PlayerMatchData, struct FHWPlayerMatchData* OutPlayerMatchData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ParseMatchData");

	Params::HWLibrary_Core_ParseMatchData Parms{};

	Parms.PlayerMatchData = std::move(PlayerMatchData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerMatchData != nullptr)
		*OutPlayerMatchData = std::move(Parms.OutPlayerMatchData);
}


// Function Hemingway.HWLibrary_Core.ParsePlayerData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRHAPI_MatchPlayerResponse&PlayerMatchData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTimespan&                 Duration                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWPlayerMatchData*              OutMatchData                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ParsePlayerData(const struct FRHAPI_MatchPlayerResponse& PlayerMatchData, const struct FTimespan& Duration, struct FHWPlayerMatchData* OutMatchData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ParsePlayerData");

	Params::HWLibrary_Core_ParsePlayerData Parms{};

	Parms.PlayerMatchData = std::move(PlayerMatchData);
	Parms.Duration = std::move(Duration);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMatchData != nullptr)
		*OutMatchData = std::move(Parms.OutMatchData);
}


// Function Hemingway.HWLibrary_Core.ParsePlayerDataFromFullMatch
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRHAPI_MatchWithPlayers&   MatchData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGuid&                     RHPlayerUuid                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWPlayerMatchData*              OutPlayerMatchData                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ParsePlayerDataFromFullMatch(const struct FRHAPI_MatchWithPlayers& MatchData, const struct FGuid& RHPlayerUuid, struct FHWPlayerMatchData* OutPlayerMatchData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ParsePlayerDataFromFullMatch");

	Params::HWLibrary_Core_ParsePlayerDataFromFullMatch Parms{};

	Parms.MatchData = std::move(MatchData);
	Parms.RHPlayerUuid = std::move(RHPlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerMatchData != nullptr)
		*OutPlayerMatchData = std::move(Parms.OutPlayerMatchData);
}


// Function Hemingway.HWLibrary_Core.RegisterToBooleanAppSettingUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFireInitialState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bValueIfNotFound                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::RegisterToBooleanAppSettingUpdates(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> Callback, bool bFireInitialState, bool bValueIfNotFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "RegisterToBooleanAppSettingUpdates");

	Params::HWLibrary_Core_RegisterToBooleanAppSettingUpdates Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);
	Parms.Callback = Callback;
	Parms.bFireInitialState = bFireInitialState;
	Parms.bValueIfNotFound = bValueIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.RegisterToIntegerAppSettingUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& AppSettingTag, int32 Value)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFireInitialState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueIfNotFound                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::RegisterToIntegerAppSettingUpdates(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, TDelegate<void(const struct FGameplayTag& AppSettingTag, int32 Value)> Callback, bool bFireInitialState, int32 ValueIfNotFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "RegisterToIntegerAppSettingUpdates");

	Params::HWLibrary_Core_RegisterToIntegerAppSettingUpdates Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);
	Parms.Callback = Callback;
	Parms.bFireInitialState = bFireInitialState;
	Parms.ValueIfNotFound = ValueIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.RegisterToStringAppSettingUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& AppSettingTag, const class FString& Value)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFireInitialState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::RegisterToStringAppSettingUpdates(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, TDelegate<void(const struct FGameplayTag& AppSettingTag, const class FString& Value)> Callback, bool bFireInitialState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "RegisterToStringAppSettingUpdates");

	Params::HWLibrary_Core_RegisterToStringAppSettingUpdates Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);
	Parms.Callback = Callback;
	Parms.bFireInitialState = bFireInitialState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.RegisterToStringArrayAppSettingUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SettingTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& AppSettingTag, const TArray<class FString>& Values)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFireInitialState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Delimiter                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::RegisterToStringArrayAppSettingUpdates(const class UObject* WorldContextObject, const struct FGameplayTag& SettingTag, TDelegate<void(const struct FGameplayTag& AppSettingTag, const TArray<class FString>& Values)> Callback, bool bFireInitialState, const class FString& Delimiter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "RegisterToStringArrayAppSettingUpdates");

	Params::HWLibrary_Core_RegisterToStringArrayAppSettingUpdates Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SettingTag = std::move(SettingTag);
	Parms.Callback = Callback;
	Parms.bFireInitialState = bFireInitialState;
	Parms.Delimiter = std::move(Delimiter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.ReturnToMainLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::ReturnToMainLobby(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ReturnToMainLobby");

	Params::HWLibrary_Core_ReturnToMainLobby Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.SetGenericTeamId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           TeamMemberActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::SetGenericTeamId(class AActor* TeamMemberActor, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "SetGenericTeamId");

	Params::HWLibrary_Core_SetGenericTeamId Parms{};

	Parms.TeamMemberActor = TeamMemberActor;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.SetReflexMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const EHWNvidiaReflexMode               Mode                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::SetReflexMode(const EHWNvidiaReflexMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "SetReflexMode");

	Params::HWLibrary_Core_SetReflexMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.SortActiveDraftPlayers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<struct FDraftTask>&        DraftTasks                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     LHS                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWPersistentPlayerId&     RHS                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::SortActiveDraftPlayers(const TArray<struct FDraftTask>& DraftTasks, const struct FHWPersistentPlayerId& LHS, const struct FHWPersistentPlayerId& RHS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "SortActiveDraftPlayers");

	Params::HWLibrary_Core_SortActiveDraftPlayers Parms{};

	Parms.DraftTasks = std::move(DraftTasks);
	Parms.LHS = std::move(LHS);
	Parms.RHS = std::move(RHS);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Core.UnregisterToAppSettingUpdates
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Core::UnregisterToAppSettingUpdates(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "UnregisterToAppSettingUpdates");

	Params::HWLibrary_Core_UnregisterToAppSettingUpdates Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_Core.ValidateGroundLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Orientation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   CollisionExtents                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     SourceActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsCapsule                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_Core::ValidateGroundLocation(const class UObject* WorldContextObject, const struct FVector& Origin, const struct FRotator& Orientation, const struct FVector& CollisionExtents, const class AActor* SourceActor, const bool bIsCapsule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Core", "ValidateGroundLocation");

	Params::HWLibrary_Core_ValidateGroundLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.Orientation = std::move(Orientation);
	Parms.CollisionExtents = std::move(CollisionExtents);
	Parms.SourceActor = SourceActor;
	Parms.bIsCapsule = bIsCapsule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_EscalatingDamageOnTarget.OnAdjustDamageToTarget
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BaseDamage                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_EscalatingDamageOnTarget::OnAdjustDamageToTarget(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_EscalatingDamageOnTarget", "OnAdjustDamageToTarget");

	Params::HWAbility_EscalatingDamageOnTarget_OnAdjustDamageToTarget Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamage = BaseDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.ApplyInhandResetEffect
// (Final, Native, Protected)

void UHWAbility_Inhand::ApplyInhandResetEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "ApplyInhandResetEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.BP_OnInhandResetTimerCompleted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEffectRemovalInfo&RemovalInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbility_Inhand::BP_OnInhandResetTimerCompleted(const struct FGameplayEffectRemovalInfo& RemovalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "BP_OnInhandResetTimerCompleted");

	Params::HWAbility_Inhand_BP_OnInhandResetTimerCompleted Parms{};

	Parms.RemovalInfo = std::move(RemovalInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Inhand.IncrementInhandAttackChain
// (Final, Native, Protected, BlueprintCallable)

void UHWAbility_Inhand::IncrementInhandAttackChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "IncrementInhandAttackChain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.OnAttackChainTimerTagUpdated
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Inhand::OnAttackChainTimerTagUpdated(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "OnAttackChainTimerTagUpdated");

	Params::HWAbility_Inhand_OnAttackChainTimerTagUpdated Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.OnInhandResetTimerCompleted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayEffectRemovalInfo&RemovalInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbility_Inhand::OnInhandResetTimerCompleted(const struct FGameplayEffectRemovalInfo& RemovalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "OnInhandResetTimerCompleted");

	Params::HWAbility_Inhand_OnInhandResetTimerCompleted Parms{};

	Parms.RemovalInfo = std::move(RemovalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.ResetInhandAttackChain
// (Final, Native, Protected, BlueprintCallable)

void UHWAbility_Inhand::ResetInhandAttackChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "ResetInhandAttackChain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.UpdateTargetingForInhandAttackChain
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   nChainIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Inhand::UpdateTargetingForInhandAttackChain(int32 nChainIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "UpdateTargetingForInhandAttackChain");

	Params::HWAbility_Inhand_UpdateTargetingForInhandAttackChain Parms{};

	Parms.nChainIndex = nChainIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Inhand.GetCurrentInhandAttackChainIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UHWAbility_Inhand::GetCurrentInhandAttackChainIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "GetCurrentInhandAttackChainIndex");

	Params::HWAbility_Inhand_GetCurrentInhandAttackChainIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Inhand.GetCurrentInhandAttackChainTag
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWAbility_Inhand::GetCurrentInhandAttackChainTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "GetCurrentInhandAttackChainTag");

	Params::HWAbility_Inhand_GetCurrentInhandAttackChainTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Inhand.GetMaxInhandAttackChainIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UHWAbility_Inhand::GetMaxInhandAttackChainIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "GetMaxInhandAttackChainIndex");

	Params::HWAbility_Inhand_GetMaxInhandAttackChainIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Inhand.IsAttackChainActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Inhand::IsAttackChainActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "IsAttackChainActive");

	Params::HWAbility_Inhand_IsAttackChainActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Inhand.ShouldIncrementInhandChainAttack
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Inhand::ShouldIncrementInhandChainAttack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Inhand", "ShouldIncrementInhandChainAttack");

	Params::HWAbility_Inhand_ShouldIncrementInhandChainAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Wall.OnBeginOverlapWithWall
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWDeployable_Wall::OnBeginOverlapWithWall(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "OnBeginOverlapWithWall");

	Params::HWDeployable_Wall_OnBeginOverlapWithWall Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Wall.OnBeginOverlapWithWallPushoutCollision
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWDeployable_Wall::OnBeginOverlapWithWallPushoutCollision(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "OnBeginOverlapWithWallPushoutCollision");

	Params::HWDeployable_Wall_OnBeginOverlapWithWallPushoutCollision Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Wall.OnEndOverlapWithWall
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Wall::OnEndOverlapWithWall(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "OnEndOverlapWithWall");

	Params::HWDeployable_Wall_OnEndOverlapWithWall Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Wall.OnEndOverlapWithWallPushoutCollision
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Wall::OnEndOverlapWithWallPushoutCollision(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "OnEndOverlapWithWallPushoutCollision");

	Params::HWDeployable_Wall_OnEndOverlapWithWallPushoutCollision Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Wall.CanPushOverlappingActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Wall::CanPushOverlappingActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "CanPushOverlappingActors");

	Params::HWDeployable_Wall_CanPushOverlappingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Wall.ShouldPushActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     Other                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Wall::ShouldPushActor(const class AActor* Other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Wall", "ShouldPushActor");

	Params::HWDeployable_Wall_ShouldPushActor Parms{};

	Parms.Other = Other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Pele_Inhand.OnConeAttackTagUpdated
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Pele_Inhand::OnConeAttackTagUpdated(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Pele_Inhand", "OnConeAttackTagUpdated");

	Params::HWAbility_Pele_Inhand_OnConeAttackTagUpdated Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetEquippedBadgesForGod
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHWCollectionItem*>*       OutBadgeItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLocalPlayerLoadoutSubsystem::GetEquippedBadgesForGod(const class UHWCharacterItem* GodItem, TArray<class UHWCollectionItem*>* OutBadgeItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetEquippedBadgesForGod");

	Params::HWLocalPlayerLoadoutSubsystem_GetEquippedBadgesForGod Parms{};

	Parms.GodItem = GodItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBadgeItems != nullptr)
		*OutBadgeItems = std::move(Parms.OutBadgeItems);
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetEquippedSkinForGod
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWSkinItem*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWSkinItem* UHWLocalPlayerLoadoutSubsystem::GetEquippedSkinForGod(const class UHWCharacterItem* GodItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetEquippedSkinForGod");

	Params::HWLocalPlayerLoadoutSubsystem_GetEquippedSkinForGod Parms{};

	Parms.GodItem = GodItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetEquippedTrackersForGod
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHWCollectionItem*>*       OutTrackerItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLocalPlayerLoadoutSubsystem::GetEquippedTrackersForGod(const class UHWCharacterItem* GodItem, TArray<class UHWCollectionItem*>* OutTrackerItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetEquippedTrackersForGod");

	Params::HWLocalPlayerLoadoutSubsystem_GetEquippedTrackersForGod Parms{};

	Parms.GodItem = GodItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTrackerItems != nullptr)
		*OutTrackerItems = std::move(Parms.OutTrackerItems);
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetGodLoadout
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWCharacterItem*           GodItem                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGodLoadout*                   OutLoadout                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bCreateIfMissing                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLocalPlayerLoadoutSubsystem::GetGodLoadout(const class UHWCharacterItem* GodItem, struct FHWGodLoadout* OutLoadout, bool bCreateIfMissing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetGodLoadout");

	Params::HWLocalPlayerLoadoutSubsystem_GetGodLoadout Parms{};

	Parms.GodItem = GodItem;
	Parms.bCreateIfMissing = bCreateIfMissing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLoadout != nullptr)
		*OutLoadout = std::move(Parms.OutLoadout);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetPlayerLoadoutItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EHWCollectionItemType             ItemType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWCollectionItem*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWCollectionItem* UHWLocalPlayerLoadoutSubsystem::GetPlayerLoadoutItem(const EHWCollectionItemType ItemType, const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetPlayerLoadoutItem");

	Params::HWLocalPlayerLoadoutSubsystem_GetPlayerLoadoutItem Parms{};

	Parms.ItemType = ItemType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetPlayerLoadoutItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EHWCollectionItemType             ItemType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FRH_ItemId UHWLocalPlayerLoadoutSubsystem::GetPlayerLoadoutItemId(const EHWCollectionItemType ItemType, const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetPlayerLoadoutItemId");

	Params::HWLocalPlayerLoadoutSubsystem_GetPlayerLoadoutItemId Parms{};

	Parms.ItemType = ItemType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.AreLocalGodLoadoutsLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLocalPlayerLoadoutSubsystem::AreLocalGodLoadoutsLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "AreLocalGodLoadoutsLoaded");

	Params::HWLocalPlayerLoadoutSubsystem_AreLocalGodLoadoutsLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerLoadoutSubsystem.GetPlayerLoadout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWPlayerLoadout           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FHWPlayerLoadout UHWLocalPlayerLoadoutSubsystem::GetPlayerLoadout() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerLoadoutSubsystem", "GetPlayerLoadout");

	Params::HWLocalPlayerLoadoutSubsystem_GetPlayerLoadout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Rama_Talent1_Listener.OnEquipmentSlotChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UHWInventoryManagerComponent*     InventoryManager                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Rama_Talent1_Listener::OnEquipmentSlotChanged(class UHWInventoryManagerComponent* InventoryManager, class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& Slot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Rama_Talent1_Listener", "OnEquipmentSlotChanged");

	Params::HWAbility_Rama_Talent1_Listener_OnEquipmentSlotChanged Parms{};

	Parms.InventoryManager = InventoryManager;
	Parms.EquipmentInstance = EquipmentInstance;
	Parms.Slot = std::move(Slot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Susano_A03_Refire.FindSafeTeleportSpot
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AActor*                     TestActor                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector&                         PlaceLocation                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  PlaceRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Susano_A03_Refire::FindSafeTeleportSpot(const class AActor* TestActor, struct FVector& PlaceLocation, const struct FRotator& PlaceRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Susano_A03_Refire", "FindSafeTeleportSpot");

	Params::HWAbility_Susano_A03_Refire_FindSafeTeleportSpot Parms{};

	Parms.TestActor = TestActor;
	Parms.PlaceLocation = std::move(PlaceLocation);
	Parms.PlaceRotation = std::move(PlaceRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	PlaceLocation = std::move(Parms.PlaceLocation);

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings.IsMultipleSupported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponentSettings::IsMultipleSupported() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings", "IsMultipleSupported");

	Params::HWEquipmentComponentSettings_IsMultipleSupported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Susano_A04.OnAdjustDamageToTarget
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BaseDamageValue                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Susano_A04::OnAdjustDamageToTarget(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Susano_A04", "OnAdjustDamageToTarget");

	Params::HWAbility_Susano_A04_OnAdjustDamageToTarget Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamageValue = BaseDamageValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Susano_A04.OnDeath
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RespawnTimerDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Susano_A04::OnDeath(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, float RespawnTimerDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Susano_A04", "OnDeath");

	Params::HWAbility_Susano_A04_OnDeath Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.RespawnTimerDuration = RespawnTimerDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSettingsInfo_Generic.OnSettingApplied
// (Final, Native, Protected, BlueprintCallable)

void UHWSettingsInfo_Generic::OnSettingApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsInfo_Generic", "OnSettingApplied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSettingsInfo_Generic.OnSettingSaved
// (Final, Native, Protected, BlueprintCallable)

void UHWSettingsInfo_Generic::OnSettingSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsInfo_Generic", "OnSettingSaved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSettingsInfo_Generic.GetVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSettingsInfo_Generic::GetVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsInfo_Generic", "GetVersion");

	Params::HWSettingsInfo_Generic_GetVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_VGS.HandleAbilityTaskReceived
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWAbility_VGS::HandleAbilityTaskReceived(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_VGS", "HandleAbilityTaskReceived");

	Params::HWAbility_VGS_HandleAbilityTaskReceived Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_VGS.HandleCancelTaskReceived
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWAbility_VGS::HandleCancelTaskReceived(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_VGS", "HandleCancelTaskReceived");

	Params::HWAbility_VGS_HandleCancelTaskReceived Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBoosterSubsystem.ApplyBooster
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              BoosterTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWBoosterSubsystem::ApplyBooster(const struct FGuid& PlayerId, const struct FGameplayTag& BoosterTag, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "ApplyBooster");

	Params::HWBoosterSubsystem_ApplyBooster Parms{};

	Parms.PlayerId = std::move(PlayerId);
	Parms.BoosterTag = std::move(BoosterTag);
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBoosterSubsystem.HandleSoftTableLoaded
// (Final, Native, Protected)

void UHWBoosterSubsystem::HandleSoftTableLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "HandleSoftTableLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBoosterSubsystem.UpdateAppliedTeamBoosters
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TMap<struct FGenericTeamId, struct FHWTeamBoosters>&InAppliedTeamBoosters                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWBoosterSubsystem::UpdateAppliedTeamBoosters(const TMap<struct FGenericTeamId, struct FHWTeamBoosters>& InAppliedTeamBoosters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "UpdateAppliedTeamBoosters");

	Params::HWBoosterSubsystem_UpdateAppliedTeamBoosters Parms{};

	Parms.InAppliedTeamBoosters = std::move(InAppliedTeamBoosters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBoosterSubsystem.UpdateGrantedSkins
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TMap<struct FGenericTeamId, struct FHWTeamGrantedSkins>&InGrantedSkinItems                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWBoosterSubsystem::UpdateGrantedSkins(const TMap<struct FGenericTeamId, struct FHWTeamGrantedSkins>& InGrantedSkinItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "UpdateGrantedSkins");

	Params::HWBoosterSubsystem_UpdateGrantedSkins Parms{};

	Parms.InGrantedSkinItems = std::move(InGrantedSkinItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBoosterSubsystem.GetBoosterConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              BoosterTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWBoosterTableRow*              OutBoosterConfig                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBoosterSubsystem::GetBoosterConfig(const struct FGameplayTag& BoosterTag, struct FHWBoosterTableRow* OutBoosterConfig) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "GetBoosterConfig");

	Params::HWBoosterSubsystem_GetBoosterConfig Parms{};

	Parms.BoosterTag = std::move(BoosterTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBoosterConfig != nullptr)
		*OutBoosterConfig = std::move(Parms.OutBoosterConfig);

	return Parms.ReturnValue;
}


// Function Hemingway.HWBoosterSubsystem.IsSkinGrantedByBooster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                SkinItem                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBoosterSubsystem::IsSkinGrantedByBooster(const class UHWSkinItem* SkinItem, const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBoosterSubsystem", "IsSkinGrantedByBooster");

	Params::HWBoosterSubsystem_IsSkinGrantedByBooster Parms{};

	Parms.SkinItem = SkinItem;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Yemoja_PSV.OnYemojaCooldownAdjusted
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       EffectBeingModified                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             InCooldownMultiplier                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InCooldownFlatDelta                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Yemoja_PSV::OnYemojaCooldownAdjusted(const struct FGameplayEffectSpec& EffectSpec, const struct FGameplayEffectSpec& EffectBeingModified, const float InCooldownMultiplier, const float InCooldownFlatDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Yemoja_PSV", "OnYemojaCooldownAdjusted");

	Params::HWAbility_Yemoja_PSV_OnYemojaCooldownAdjusted Parms{};

	Parms.EffectSpec = std::move(EffectSpec);
	Parms.EffectBeingModified = std::move(EffectBeingModified);
	Parms.InCooldownMultiplier = InCooldownMultiplier;
	Parms.InCooldownFlatDelta = InCooldownFlatDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Yemoja_PSV.RegisterCooldownReductionDelegate
// (Final, Native, Public, BlueprintCallable)

void UHWAbility_Yemoja_PSV::RegisterCooldownReductionDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Yemoja_PSV", "RegisterCooldownReductionDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Visibility.AbilityAddVisibilityData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UVisibilityData*                  NewVisibilityData                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilitySpecHandle                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_Visibility::AbilityAddVisibilityData(class UVisibilityData* NewVisibilityData, const struct FGameplayAbilitySpecHandle& AbilitySpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "AbilityAddVisibilityData");

	Params::HWInterface_Visibility_AbilityAddVisibilityData Parms{};

	Parms.NewVisibilityData = NewVisibilityData;
	Parms.AbilitySpecHandle = std::move(AbilitySpecHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Visibility.AbilityRemoveVisibilityData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UVisibilityData*                  OldVisibilityData                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_Visibility::AbilityRemoveVisibilityData(class UVisibilityData* OldVisibilityData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "AbilityRemoveVisibilityData");

	Params::HWInterface_Visibility_AbilityRemoveVisibilityData Parms{};

	Parms.OldVisibilityData = OldVisibilityData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Visibility.SetVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bNewVisible                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWVisibilityType                 VisibilityType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_Visibility::SetVisibility(const bool bNewVisible, const EHWVisibilityType VisibilityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "SetVisibility");

	Params::HWInterface_Visibility_SetVisibility Parms{};

	Parms.bNewVisible = bNewVisible;
	Parms.VisibilityType = VisibilityType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Visibility.GetLineOfSightOrigin
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         OutOrigin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseCameraLocation                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_Visibility::GetLineOfSightOrigin(struct FVector* OutOrigin, const bool bUseCameraLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "GetLineOfSightOrigin");

	Params::HWInterface_Visibility_GetLineOfSightOrigin Parms{};

	Parms.bUseCameraLocation = bUseCameraLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOrigin != nullptr)
		*OutOrigin = std::move(Parms.OutOrigin);
}


// Function Hemingway.HWInterface_Visibility.GetVisibilityComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UHWVisibilityComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWVisibilityComponent* IHWInterface_Visibility::GetVisibilityComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "GetVisibilityComponent");

	Params::HWInterface_Visibility_GetVisibilityComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Visibility.IsValidForMinimap
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Visibility::IsValidForMinimap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "IsValidForMinimap");

	Params::HWInterface_Visibility_IsValidForMinimap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Visibility.VisGetAbilitySystemComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* IHWInterface_Visibility::VisGetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Visibility", "VisGetAbilitySystemComponent");

	Params::HWInterface_Visibility_VisGetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVGSManager.AttemptPlayEmote
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWVGSActionRow&           Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldPlayOnRemoteClients                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWVGSManager::AttemptPlayEmote(const struct FHWVGSActionRow& Action, class AHWPlayerState* PlayerState, bool bShouldPlayOnRemoteClients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "AttemptPlayEmote");

	Params::HWVGSManager_AttemptPlayEmote Parms{};

	Parms.Action = std::move(Action);
	Parms.PlayerState = PlayerState;
	Parms.bShouldPlayOnRemoteClients = bShouldPlayOnRemoteClients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVGSManager.GetItemQuantityForGC
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWVGSActionRow&           Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWVGSManager::GetItemQuantityForGC(const struct FHWVGSActionRow& Action, class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "GetItemQuantityForGC");

	Params::HWVGSManager_GetItemQuantityForGC Parms{};

	Parms.Action = std::move(Action);
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVGSManager.GetQuestQuantityForGC
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWVGSActionRow&           Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWVGSManager::GetQuestQuantityForGC(const struct FHWVGSActionRow& Action, class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "GetQuestQuantityForGC");

	Params::HWVGSManager_GetQuestQuantityForGC Parms{};

	Parms.Action = std::move(Action);
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVGSManager.HandlePostKeyHandled
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             InputEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWVGSManager::HandlePostKeyHandled(const struct FKey& Key, EInputEvent InputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "HandlePostKeyHandled");

	Params::HWVGSManager_HandlePostKeyHandled Parms{};

	Parms.Key = std::move(Key);
	Parms.InputEvent = InputEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVGSManager.IsEmoteItemOwnershipRequired
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWVGSActionRow&           Action                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWVGSManager::IsEmoteItemOwnershipRequired(const struct FHWVGSActionRow& Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "IsEmoteItemOwnershipRequired");

	Params::HWVGSManager_IsEmoteItemOwnershipRequired Parms{};

	Parms.Action = std::move(Action);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVGSManager.OnCollectionItemLoaded
// (Final, Native, Public)
// Parameters:
// const struct FHWVGSActionRow&           Action                                                 (Parm, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                ItemId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWCollectionItem> CollectionItem                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldPlayOnRemoteClients                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWVGSManager::OnCollectionItemLoaded(const struct FHWVGSActionRow& Action, class AHWPlayerState* PlayerState, const struct FRH_ItemId& ItemId, TSoftObjectPtr<class UHWCollectionItem> CollectionItem, bool bShouldPlayOnRemoteClients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "OnCollectionItemLoaded");

	Params::HWVGSManager_OnCollectionItemLoaded Parms{};

	Parms.Action = std::move(Action);
	Parms.PlayerState = PlayerState;
	Parms.ItemId = std::move(ItemId);
	Parms.CollectionItem = CollectionItem;
	Parms.bShouldPlayOnRemoteClients = bShouldPlayOnRemoteClients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVGSManager.TriggerAction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              ActionId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWVGSManager::TriggerAction(const struct FGameplayTag& ActionId, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "TriggerAction");

	Params::HWVGSManager_TriggerAction Parms{};

	Parms.ActionId = std::move(ActionId);
	Parms.Sender = Sender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVGSManager.MulticastSendVGS
// (Net, NetReliable, Native, Event, NetMulticast, Protected, Const)
// Parameters:
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              VgsEntry                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWVGSManager::MulticastSendVGS(class AActor* Sender, const struct FGameplayTag& VgsEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVGSManager", "MulticastSendVGS");

	Params::HWVGSManager_MulticastSendVGS Parms{};

	Parms.Sender = Sender;
	Parms.VgsEntry = std::move(VgsEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetAbilitySwapBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWAbilitySwapBehavior                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWAbilitySwapBehavior UHWEquipmentComponentSettings_AbilitySwap::GetAbilitySwapBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetAbilitySwapBehavior");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetAbilitySwapBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetInputTagOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentComponentSettings_AbilitySwap::GetInputTagOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetInputTagOverride");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetInputTagOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetNumPhases
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponentSettings_AbilitySwap::GetNumPhases() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetNumPhases");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetNumPhases Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetSwapAbilityAdditionalCooldownCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             PhaseIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponentSettings_AbilitySwap::GetSwapAbilityAdditionalCooldownCost(const int32 PhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetSwapAbilityAdditionalCooldownCost");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetSwapAbilityAdditionalCooldownCost Parms{};

	Parms.PhaseIndex = PhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetSwapAbilityDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             PhaseIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponentSettings_AbilitySwap::GetSwapAbilityDelay(const int32 PhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetSwapAbilityDelay");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetSwapAbilityDelay Parms{};

	Parms.PhaseIndex = PhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetSwapAbilityWindowDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             PhaseIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponentSettings_AbilitySwap::GetSwapAbilityWindowDuration(const int32 PhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetSwapAbilityWindowDuration");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetSwapAbilityWindowDuration Parms{};

	Parms.PhaseIndex = PhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.GetSwapEquipmentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             PhaseIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWEquipmentItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWEquipmentItem* UHWEquipmentComponentSettings_AbilitySwap::GetSwapEquipmentItem(const int32 PhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "GetSwapEquipmentItem");

	Params::HWEquipmentComponentSettings_AbilitySwap_GetSwapEquipmentItem Parms{};

	Parms.PhaseIndex = PhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_AbilitySwap.IsValidPhaseIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             PhaseIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponentSettings_AbilitySwap::IsValidPhaseIndex(const int32 PhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_AbilitySwap", "IsValidPhaseIndex");

	Params::HWEquipmentComponentSettings_AbilitySwap_IsValidPhaseIndex Parms{};

	Parms.PhaseIndex = PhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.ApplyObstacleAvoidanceToVectorField
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWObstacleAvoidanceParams&avoidanceParams                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::ApplyObstacleAvoidanceToVectorField(class UObject* WorldContextObject, const struct FHWObstacleAvoidanceParams& avoidanceParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "ApplyObstacleAvoidanceToVectorField");

	Params::HWAIBlueprintLibrary_ApplyObstacleAvoidanceToVectorField Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.avoidanceParams = std::move(avoidanceParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.AssignBotToNearestLane
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              Lanes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::AssignBotToNearestLane(const class AHWCharacter_Base* SourceCharacter, const TArray<class FName>& Lanes, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "AssignBotToNearestLane");

	Params::HWAIBlueprintLibrary_AssignBotToNearestLane Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Lanes = std::move(Lanes);
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.CalculateAimPointWithPrediction
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              abilityEquipPoint                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   abilitySlotIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outAimFromPoint                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outAimToPoint                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::CalculateAimPointWithPrediction(const class AHWCharacter_Base* SourceCharacter, const class AHWCharacter_Base* TargetCharacter, const struct FGameplayTag& abilityEquipPoint, int32 abilitySlotIndex, struct FVector* outAimFromPoint, struct FVector* outAimToPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "CalculateAimPointWithPrediction");

	Params::HWAIBlueprintLibrary_CalculateAimPointWithPrediction Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.abilityEquipPoint = std::move(abilityEquipPoint);
	Parms.abilitySlotIndex = abilitySlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outAimFromPoint != nullptr)
		*outAimFromPoint = std::move(Parms.outAimFromPoint);

	if (outAimToPoint != nullptr)
		*outAimToPoint = std::move(Parms.outAimToPoint);
}


// Function Hemingway.HWAIBlueprintLibrary.CalculateAimPointWithPredictionByLevelConfig
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityLevelConfig*      levelConfig                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outAimFromPoint                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         outAimToPoint                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::CalculateAimPointWithPredictionByLevelConfig(const class AHWCharacter_Base* SourceCharacter, const class AHWCharacter_Base* TargetCharacter, const class UHWAbilityLevelConfig* levelConfig, struct FVector* outAimFromPoint, struct FVector* outAimToPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "CalculateAimPointWithPredictionByLevelConfig");

	Params::HWAIBlueprintLibrary_CalculateAimPointWithPredictionByLevelConfig Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.levelConfig = levelConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outAimFromPoint != nullptr)
		*outAimFromPoint = std::move(Parms.outAimFromPoint);

	if (outAimToPoint != nullptr)
		*outAimToPoint = std::move(Parms.outAimToPoint);
}


// Function Hemingway.HWAIBlueprintLibrary.CalculateBestLaneWaitLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Aggression                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAIBlueprintLibrary::CalculateBestLaneWaitLocation(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, EWaypointPathDirectionType Direction, float Aggression, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "CalculateBestLaneWaitLocation");

	Params::HWAIBlueprintLibrary_CalculateBestLaneWaitLocation Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.Direction = Direction;
	Parms.Aggression = Aggression;
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.CalculateBestLaningLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FHWLaneAggressionParams&   inParams                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAIBlueprintLibrary::CalculateBestLaningLocation(const struct FHWLaneAggressionParams& inParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "CalculateBestLaningLocation");

	Params::HWAIBlueprintLibrary_CalculateBestLaningLocation Parms{};

	Parms.inParams = std::move(inParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.CalculateCombatAdvantage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWCombatAdvantageParams&  inParams                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EHWAdvantageTypes                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWAdvantageTypes UHWAIBlueprintLibrary::CalculateCombatAdvantage(const struct FHWCombatAdvantageParams& inParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "CalculateCombatAdvantage");

	Params::HWAIBlueprintLibrary_CalculateCombatAdvantage Parms{};

	Parms.inParams = std::move(inParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.ClearNavigationAvoidanceGroupsToAvoidMask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::ClearNavigationAvoidanceGroupsToAvoidMask(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "ClearNavigationAvoidanceGroupsToAvoidMask");

	Params::HWAIBlueprintLibrary_ClearNavigationAvoidanceGroupsToAvoidMask Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.ComputeGodBackToBaseWeight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Source                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   healthWeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   manaWeight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIBlueprintLibrary::ComputeGodBackToBaseWeight(const class AHWCharacter_Base* Source, float healthWeight, float manaWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "ComputeGodBackToBaseWeight");

	Params::HWAIBlueprintLibrary_ComputeGodBackToBaseWeight Parms{};

	Parms.Source = Source;
	Parms.healthWeight = healthWeight;
	Parms.manaWeight = manaWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.DoesCharacterMatchRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ECharacterRole                    RoleToCheck                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::DoesCharacterMatchRole(const class AHWCharacter_Base* Character, const ECharacterRole RoleToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "DoesCharacterMatchRole");

	Params::HWAIBlueprintLibrary_DoesCharacterMatchRole Parms{};

	Parms.Character = Character;
	Parms.RoleToCheck = RoleToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.DoesFactoryHaveLivingBots
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHWBotFactory*                    factory                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::DoesFactoryHaveLivingBots(class AHWBotFactory* factory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "DoesFactoryHaveLivingBots");

	Params::HWAIBlueprintLibrary_DoesFactoryHaveLivingBots Parms{};

	Parms.factory = factory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.DoesLaneExist
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::DoesLaneExist(const class AHWCharacter_Base* SourceCharacter, class FName LaneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "DoesLaneExist");

	Params::HWAIBlueprintLibrary_DoesLaneExist Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.FilterByTeam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>&                  Actors                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            matchTeam                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::FilterByTeam(TArray<class AActor*>& Actors, const struct FGenericTeamId& matchTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "FilterByTeam");

	Params::HWAIBlueprintLibrary_FilterByTeam Parms{};

	Parms.Actors = std::move(Actors);
	Parms.matchTeam = std::move(matchTeam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Actors = std::move(Parms.Actors);
}


// Function Hemingway.HWAIBlueprintLibrary.FindLaneWaypoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* UHWAIBlueprintLibrary::FindLaneWaypoint(const class AHWCharacter_Base* SourceCharacter, class FName LaneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "FindLaneWaypoint");

	Params::HWAIBlueprintLibrary_FindLaneWaypoint Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetAllFactoriesByLane
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  TagRequirements                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWBotFactory*>*           outFactories                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::GetAllFactoriesByLane(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, const struct FGameplayTagRequirements& TagRequirements, TArray<class AHWBotFactory*>* outFactories)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetAllFactoriesByLane");

	Params::HWAIBlueprintLibrary_GetAllFactoriesByLane Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.TagRequirements = std::move(TagRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outFactories != nullptr)
		*outFactories = std::move(Parms.outFactories);
}


// Function Hemingway.HWAIBlueprintLibrary.GetAlliesWithinRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       outTargets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::GetAlliesWithinRange(const class AHWCharacter_Base* SourceCharacter, float Radius, const struct FGameplayTagContainer& tagsToIgnore, TArray<class AHWCharacter_Base*>* outTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetAlliesWithinRange");

	Params::HWAIBlueprintLibrary_GetAlliesWithinRange Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outTargets != nullptr)
		*outTargets = std::move(Parms.outTargets);
}


// Function Hemingway.HWAIBlueprintLibrary.GetAllyCountThatAreFocusedOnTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetAllyCountThatAreFocusedOnTarget(const class AHWCharacter_Base* SourceCharacter, const class AHWCharacter_Base* TargetCharacter, bool bIncludeSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetAllyCountThatAreFocusedOnTarget");

	Params::HWAIBlueprintLibrary_GetAllyCountThatAreFocusedOnTarget Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.bIncludeSource = bIncludeSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetAllyCountWithinRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetAllyCountWithinRange(const class AHWCharacter_Base* SourceCharacter, float Radius, const struct FGameplayTagContainer& tagsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetAllyCountWithinRange");

	Params::HWAIBlueprintLibrary_GetAllyCountWithinRange Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetAverageTeamLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               Team                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetAverageTeamLevel(const class AHWTeamState* Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetAverageTeamLevel");

	Params::HWAIBlueprintLibrary_GetAverageTeamLevel Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetBestJungleObjective
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWBotFactory*>&           jungleFactories                                        (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWBotFactory*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWBotFactory* UHWAIBlueprintLibrary::GetBestJungleObjective(const class AHWCharacter_Base* SourceCharacter, TArray<class AHWBotFactory*>& jungleFactories)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetBestJungleObjective");

	Params::HWAIBlueprintLibrary_GetBestJungleObjective Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.jungleFactories = std::move(jungleFactories);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	jungleFactories = std::move(Parms.jungleFactories);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetCharactersInRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ignoreActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  outCharacters                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::GetCharactersInRadius(class UObject* WorldContextObject, const struct FVector& Location, float Radius, class AActor* ignoreActor, TArray<class AActor*>* outCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetCharactersInRadius");

	Params::HWAIBlueprintLibrary_GetCharactersInRadius Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.ignoreActor = ignoreActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outCharacters != nullptr)
		*outCharacters = std::move(Parms.outCharacters);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetClosestAllyWithinRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWAIBlueprintLibrary::GetClosestAllyWithinRange(const class AHWCharacter_Base* SourceCharacter, float Range, const struct FGameplayTagContainer& tagsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetClosestAllyWithinRange");

	Params::HWAIBlueprintLibrary_GetClosestAllyWithinRange Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Range = Range;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetClosestTeamStructure
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOpposing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  outDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWAIBlueprintLibrary::GetClosestTeamStructure(const class AHWCharacter_Base* SourceCharacter, bool bOpposing, float* outDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetClosestTeamStructure");

	Params::HWAIBlueprintLibrary_GetClosestTeamStructure Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.bOpposing = bOpposing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outDistance != nullptr)
		*outDistance = Parms.outDistance;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetDefeatedLaneCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              Lanes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetDefeatedLaneCount(const class AHWCharacter_Base* Character, const TArray<class FName>& Lanes, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetDefeatedLaneCount");

	Params::HWAIBlueprintLibrary_GetDefeatedLaneCount Parms{};

	Parms.Character = Character;
	Parms.Lanes = std::move(Lanes);
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetDistanceAlongLane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIBlueprintLibrary::GetDistanceAlongLane(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetDistanceAlongLane");

	Params::HWAIBlueprintLibrary_GetDistanceAlongLane Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetDistancePercentageAlongLane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIBlueprintLibrary::GetDistancePercentageAlongLane(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetDistancePercentageAlongLane");

	Params::HWAIBlueprintLibrary_GetDistancePercentageAlongLane Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetEnemiesWithinRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       outTargets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::GetEnemiesWithinRange(const class AHWCharacter_Base* SourceCharacter, float Radius, const struct FGameplayTagContainer& tagsToIgnore, TArray<class AHWCharacter_Base*>* outTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetEnemiesWithinRange");

	Params::HWAIBlueprintLibrary_GetEnemiesWithinRange Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outTargets != nullptr)
		*outTargets = std::move(Parms.outTargets);
}


// Function Hemingway.HWAIBlueprintLibrary.GetEnemyCountWithinRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetEnemyCountWithinRange(const class AHWCharacter_Base* SourceCharacter, float Radius, const struct FGameplayTagContainer& tagsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetEnemyCountWithinRange");

	Params::HWAIBlueprintLibrary_GetEnemyCountWithinRange Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetFurthestLaneObjective
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIBlueprintLibrary::GetFurthestLaneObjective(const class AHWCharacter_Base* SourceCharacter, class FName LaneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetFurthestLaneObjective");

	Params::HWAIBlueprintLibrary_GetFurthestLaneObjective Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetGodBotInhandRange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIBlueprintLibrary::GetGodBotInhandRange(const class AHWCharacter_Base* SourceCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetGodBotInhandRange");

	Params::HWAIBlueprintLibrary_GetGodBotInhandRange Parms{};

	Parms.SourceCharacter = SourceCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetNearestLaneID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              Lanes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWAIBlueprintLibrary::GetNearestLaneID(const class AHWCharacter_Base* SourceCharacter, const TArray<class FName>& Lanes, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetNearestLaneID");

	Params::HWAIBlueprintLibrary_GetNearestLaneID Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Lanes = std::move(Lanes);
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetNearestLaneObjectiveToEscapeTo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIBlueprintLibrary::GetNearestLaneObjectiveToEscapeTo(const class AHWCharacter_Base* SourceCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetNearestLaneObjectiveToEscapeTo");

	Params::HWAIBlueprintLibrary_GetNearestLaneObjectiveToEscapeTo Parms{};

	Parms.SourceCharacter = SourceCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetNextLaneObjectiveToAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIBlueprintLibrary::GetNextLaneObjectiveToAttack(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetNextLaneObjectiveToAttack");

	Params::HWAIBlueprintLibrary_GetNextLaneObjectiveToAttack Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetNextLaneObjectiveToDefend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ImmunityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIBlueprintLibrary::GetNextLaneObjectiveToDefend(const class AHWCharacter_Base* SourceCharacter, class FName LaneId, const struct FGameplayTag& ImmunityTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetNextLaneObjectiveToDefend");

	Params::HWAIBlueprintLibrary_GetNextLaneObjectiveToDefend Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;
	Parms.ImmunityTag = std::move(ImmunityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetOpposingTeamState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWAIBlueprintLibrary::GetOpposingTeamState(const class AHWCharacter_Base* SourceCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetOpposingTeamState");

	Params::HWAIBlueprintLibrary_GetOpposingTeamState Parms{};

	Parms.SourceCharacter = SourceCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetOpposingTeamStateByTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               Team                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWAIBlueprintLibrary::GetOpposingTeamStateByTeam(const class AHWTeamState* Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetOpposingTeamStateByTeam");

	Params::HWAIBlueprintLibrary_GetOpposingTeamStateByTeam Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetRoleForCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterRole                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterRole UHWAIBlueprintLibrary::GetRoleForCharacter(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetRoleForCharacter");

	Params::HWAIBlueprintLibrary_GetRoleForCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetStructureInhandRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_Base*          SourceStructure                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIBlueprintLibrary::GetStructureInhandRange(const class AHWCharacter_Base* SourceStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetStructureInhandRange");

	Params::HWAIBlueprintLibrary_GetStructureInhandRange Parms{};

	Parms.SourceStructure = SourceStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetTeamNumbersAdvantage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               Team                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetTeamNumbersAdvantage(const class AHWTeamState* Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetTeamNumbersAdvantage");

	Params::HWAIBlueprintLibrary_GetTeamNumbersAdvantage Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetTeamPhoenixCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               TeamState                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetTeamPhoenixCount(const class AHWTeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetTeamPhoenixCount");

	Params::HWAIBlueprintLibrary_GetTeamPhoenixCount Parms{};

	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetTeamPhoenixCountByCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::GetTeamPhoenixCountByCharacter(const class AHWCharacter_Base* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetTeamPhoenixCountByCharacter");

	Params::HWAIBlueprintLibrary_GetTeamPhoenixCountByCharacter Parms{};

	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetTeamState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWAIBlueprintLibrary::GetTeamState(const class AHWCharacter_Base* SourceCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetTeamState");

	Params::HWAIBlueprintLibrary_GetTeamState Parms{};

	Parms.SourceCharacter = SourceCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.GetWorldGeoInRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>*              outHitResults                                          (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::GetWorldGeoInRadius(class UObject* WorldContextObject, const struct FVector& Location, float Radius, TArray<struct FHitResult>* outHitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "GetWorldGeoInRadius");

	Params::HWAIBlueprintLibrary_GetWorldGeoInRadius Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outHitResults != nullptr)
		*outHitResults = std::move(Parms.outHitResults);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.HaveMinionsSpawnedForLane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::HaveMinionsSpawnedForLane(const class AHWCharacter_Base* SourceCharacter, class FName LaneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "HaveMinionsSpawnedForLane");

	Params::HWAIBlueprintLibrary_HaveMinionsSpawnedForLane Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneId = LaneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsAbilityFiring
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EquipTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             EquipSlot                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsAbilityFiring(const class AHWCharacter_Base* SourceCharacter, const struct FGameplayTag& EquipTag, const int32 EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsAbilityFiring");

	Params::HWAIBlueprintLibrary_IsAbilityFiring Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.EquipTag = std::move(EquipTag);
	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsAnyGodInRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsAnyGodInRange(class UObject* WorldContextObject, const struct FVector& Location, float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsAnyGodInRange");

	Params::HWAIBlueprintLibrary_IsAnyGodInRange Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsAnyOffhandFiring
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bChannelingOnly                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsAnyOffhandFiring(const class AHWCharacter_Base* SourceCharacter, bool bChannelingOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsAnyOffhandFiring");

	Params::HWAIBlueprintLibrary_IsAnyOffhandFiring Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.bChannelingOnly = bChannelingOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterJungleRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterJungleRole(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterJungleRole");

	Params::HWAIBlueprintLibrary_IsCharacterJungleRole Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterProtectedByTower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Buffer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterProtectedByTower(const class AHWCharacter_Base* TargetCharacter, float Buffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterProtectedByTower");

	Params::HWAIBlueprintLibrary_IsCharacterProtectedByTower Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.Buffer = Buffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterSoloRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterSoloRole(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterSoloRole");

	Params::HWAIBlueprintLibrary_IsCharacterSoloRole Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterSupportRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterSupportRole(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterSupportRole");

	Params::HWAIBlueprintLibrary_IsCharacterSupportRole Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterUntargetable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterUntargetable(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterUntargetable");

	Params::HWAIBlueprintLibrary_IsCharacterUntargetable Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterWithinAnyLaningArea
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FName>&              Lanes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistanceFromLane                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterWithinAnyLaningArea(const class AHWCharacter_Base* Character, const TArray<class FName>& Lanes, EWaypointPathDirectionType Direction, float MaxDistanceFromLane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterWithinAnyLaningArea");

	Params::HWAIBlueprintLibrary_IsCharacterWithinAnyLaningArea Parms{};

	Parms.Character = Character;
	Parms.Lanes = std::move(Lanes);
	Parms.Direction = Direction;
	Parms.MaxDistanceFromLane = MaxDistanceFromLane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsCharacterWithinLaningArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistanceFromLane                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsCharacterWithinLaningArea(const class AHWCharacter_Base* Character, class FName LaneId, EWaypointPathDirectionType Direction, float MaxDistanceFromLane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsCharacterWithinLaningArea");

	Params::HWAIBlueprintLibrary_IsCharacterWithinLaningArea Parms{};

	Parms.Character = Character;
	Parms.LaneId = LaneId;
	Parms.Direction = Direction;
	Parms.MaxDistanceFromLane = MaxDistanceFromLane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsGodBotAheadOfWave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      LaneWaypoint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AheadByAmount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsGodBotAheadOfWave(const class AHWCharacter_Base* SourceCharacter, class AHWWaypoint* LaneWaypoint, float AheadByAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsGodBotAheadOfWave");

	Params::HWAIBlueprintLibrary_IsGodBotAheadOfWave Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.LaneWaypoint = LaneWaypoint;
	Parms.AheadByAmount = AheadByAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsLocationInCharacterAttackRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Buffer                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsLocationInCharacterAttackRange(const class AHWCharacter_Base* Character, const struct FVector& Location, const float Buffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsLocationInCharacterAttackRange");

	Params::HWAIBlueprintLibrary_IsLocationInCharacterAttackRange Parms{};

	Parms.Character = Character;
	Parms.Location = std::move(Location);
	Parms.Buffer = Buffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsLocationProtectedByOpposingTower
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               AttackingTeam                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Buffer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsLocationProtectedByOpposingTower(const class AHWTeamState* AttackingTeam, const struct FVector& Location, float Buffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsLocationProtectedByOpposingTower");

	Params::HWAIBlueprintLibrary_IsLocationProtectedByOpposingTower Parms{};

	Parms.AttackingTeam = AttackingTeam;
	Parms.Location = std::move(Location);
	Parms.Buffer = Buffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsLocationProtectedByTower
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class AHWTeamState*               ProtectingTeam                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Buffer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsLocationProtectedByTower(const class AHWTeamState* ProtectingTeam, const struct FVector& Location, float Buffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsLocationProtectedByTower");

	Params::HWAIBlueprintLibrary_IsLocationProtectedByTower Parms{};

	Parms.ProtectingTeam = ProtectingTeam;
	Parms.Location = std::move(Location);
	Parms.Buffer = Buffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.IsTargetProtectedByTower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          AttackingCharacter                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::IsTargetProtectedByTower(const class AHWCharacter_Base* AttackingCharacter, const class AHWCharacter_Base* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "IsTargetProtectedByTower");

	Params::HWAIBlueprintLibrary_IsTargetProtectedByTower Parms{};

	Parms.AttackingCharacter = AttackingCharacter;
	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.ManageCharacterLane
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWManageCharacterLaneParams&LaneParams                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::ManageCharacterLane(const struct FHWManageCharacterLaneParams& LaneParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "ManageCharacterLane");

	Params::HWAIBlueprintLibrary_ManageCharacterLane Parms{};

	Parms.LaneParams = std::move(LaneParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.PickRandomIndexFromWeightedSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    Weights                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIBlueprintLibrary::PickRandomIndexFromWeightedSet(const TArray<float>& Weights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "PickRandomIndexFromWeightedSet");

	Params::HWAIBlueprintLibrary_PickRandomIndexFromWeightedSet Parms{};

	Parms.Weights = std::move(Weights);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.PostNPEProgressPointEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString&                          ProgressPoint                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::PostNPEProgressPointEvent(class UObject* WorldContextObject, class FString& ProgressPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "PostNPEProgressPointEvent");

	Params::HWAIBlueprintLibrary_PostNPEProgressPointEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ProgressPoint = std::move(ProgressPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ProgressPoint = std::move(Parms.ProgressPoint);
}


// Function Hemingway.HWAIBlueprintLibrary.PostNPEProgressPointEventWithTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ProgressPoint                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::PostNPEProgressPointEventWithTag(class UObject* WorldContextObject, const struct FGameplayTag& ProgressPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "PostNPEProgressPointEventWithTag");

	Params::HWAIBlueprintLibrary_PostNPEProgressPointEventWithTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ProgressPoint = std::move(ProgressPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.RemoveComponentFromNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::RemoveComponentFromNavigation(class UPrimitiveComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "RemoveComponentFromNavigation");

	Params::HWAIBlueprintLibrary_RemoveComponentFromNavigation Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.RequestGameplayTagFromName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag*                    outTag                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::RequestGameplayTagFromName(class FName InName, struct FGameplayTag* outTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "RequestGameplayTagFromName");

	Params::HWAIBlueprintLibrary_RequestGameplayTagFromName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outTag != nullptr)
		*outTag = std::move(Parms.outTag);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIBlueprintLibrary.SetNavigationAvoidanceGroupsToAvoidMask_AllGods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::SetNavigationAvoidanceGroupsToAvoidMask_AllGods(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "SetNavigationAvoidanceGroupsToAvoidMask_AllGods");

	Params::HWAIBlueprintLibrary_SetNavigationAvoidanceGroupsToAvoidMask_AllGods Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.SetNavigationAvoidanceGroupsToAvoidMask_AllGodsEnemyMinions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::SetNavigationAvoidanceGroupsToAvoidMask_AllGodsEnemyMinions(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "SetNavigationAvoidanceGroupsToAvoidMask_AllGodsEnemyMinions");

	Params::HWAIBlueprintLibrary_SetNavigationAvoidanceGroupsToAvoidMask_AllGodsEnemyMinions Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.SetNavigationAvoidanceGroupsToAvoidMask_AllyGodsEnemyMinions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIBlueprintLibrary::SetNavigationAvoidanceGroupsToAvoidMask_AllyGodsEnemyMinions(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "SetNavigationAvoidanceGroupsToAvoidMask_AllyGodsEnemyMinions");

	Params::HWAIBlueprintLibrary_SetNavigationAvoidanceGroupsToAvoidMask_AllyGodsEnemyMinions Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIBlueprintLibrary.ShouldGodBackToBase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Source                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   healthThreshold                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   manaThreshold                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIBlueprintLibrary::ShouldGodBackToBase(const class AHWCharacter_Base* Source, float healthThreshold, float manaThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAIBlueprintLibrary", "ShouldGodBackToBase");

	Params::HWAIBlueprintLibrary_ShouldGodBackToBase Parms{};

	Parms.Source = Source;
	Parms.healthThreshold = healthThreshold;
	Parms.manaThreshold = manaThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetLastDamageTakenWorldTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetLastDamageTakenWorldTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetLastDamageTakenWorldTime");

	Params::HWAIController_GetLastDamageTakenWorldTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.InitializeBotComponents
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWBotFactory*              factory                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAIBotConfig&            botConfig                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWAIController::InitializeBotComponents(const class AHWBotFactory* factory, const struct FHWAIBotConfig& botConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "InitializeBotComponents");

	Params::HWAIController_InitializeBotComponents Parms{};

	Parms.factory = factory;
	Parms.botConfig = std::move(botConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.InitializePerception
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWAIPerceptionComponent>PerceptionComponentClass                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAIController::InitializePerception(TSubclassOf<class UHWAIPerceptionComponent> PerceptionComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "InitializePerception");

	Params::HWAIController_InitializePerception Parms{};

	Parms.PerceptionComponentClass = PerceptionComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.LockGoalSystemForFrame
// (Final, Native, Public, BlueprintCallable)

void AHWAIController::LockGoalSystemForFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "LockGoalSystemForFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.OnCharacterDamaged
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void AHWAIController::OnCharacterDamaged(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "OnCharacterDamaged");

	Params::HWAIController_OnCharacterDamaged Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.OnTargetPerceptionUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIStimulus&               Stimulus                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AHWAIController::OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "OnTargetPerceptionUpdated");

	Params::HWAIController_OnTargetPerceptionUpdated Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.ResetAverageDamageCounters
// (Final, Native, Public, BlueprintCallable)

void AHWAIController::ResetAverageDamageCounters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "ResetAverageDamageCounters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.SetCurrentThreatEvaluator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHWAIThreatEvaluator*             inEvaluator                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAIController::SetCurrentThreatEvaluator(class UHWAIThreatEvaluator* inEvaluator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "SetCurrentThreatEvaluator");

	Params::HWAIController_SetCurrentThreatEvaluator Parms{};

	Parms.inEvaluator = inEvaluator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.ToggleFocusOnPlayActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAIController::ToggleFocusOnPlayActor(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "ToggleFocusOnPlayActor");

	Params::HWAIController_ToggleFocusOnPlayActor Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.ToggleLockCurrentThreat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAIController::ToggleLockCurrentThreat(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "ToggleLockCurrentThreat");

	Params::HWAIController_ToggleLockCurrentThreat Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIController.AreThereCredibleThreatsWithinRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::AreThereCredibleThreatsWithinRange(float Range) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "AreThereCredibleThreatsWithinRange");

	Params::HWAIController_AreThereCredibleThreatsWithinRange Parms{};

	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.CanSeeHostileTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeMiniMap                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::CanSeeHostileTarget(const class AActor* InActor, bool bIncludeMiniMap) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "CanSeeHostileTarget");

	Params::HWAIController_CanSeeHostileTarget Parms{};

	Parms.InActor = InActor;
	Parms.bIncludeMiniMap = bIncludeMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetAbilitySystemActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* AHWAIController::GetAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetAbilitySystemActor");

	Params::HWAIController_GetAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetAllThreats
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeCurrentThreat                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       outThreats                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWAIController::GetAllThreats(bool bIncludeCurrentThreat, TArray<class AHWCharacter_Base*>* outThreats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetAllThreats");

	Params::HWAIController_GetAllThreats Parms{};

	Parms.bIncludeCurrentThreat = bIncludeCurrentThreat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outThreats != nullptr)
		*outThreats = std::move(Parms.outThreats);
}


// Function Hemingway.HWAIController.GetAverageIncomingDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetAverageIncomingDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetAverageIncomingDamage");

	Params::HWAIController_GetAverageIncomingDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetAverageOutgoingDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetAverageOutgoingDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetAverageOutgoingDamage");

	Params::HWAIController_GetAverageOutgoingDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetAvgThreatLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAIController::GetAvgThreatLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetAvgThreatLocation");

	Params::HWAIController_GetAvgThreatLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetBehaviorTreeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBehaviorTreeComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBehaviorTreeComponent* AHWAIController::GetBehaviorTreeComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetBehaviorTreeComponent");

	Params::HWAIController_GetBehaviorTreeComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetCurrentThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWAIController::GetCurrentThreat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetCurrentThreat");

	Params::HWAIController_GetCurrentThreat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetCurrentThreatLastKnownLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAIController::GetCurrentThreatLastKnownLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetCurrentThreatLastKnownLocation");

	Params::HWAIController_GetCurrentThreatLastKnownLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetGankAbleThreatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasSight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAIController::GetGankAbleThreatCount(float Range, bool bHasSight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetGankAbleThreatCount");

	Params::HWAIController_GetGankAbleThreatCount Parms{};

	Parms.Range = Range;
	Parms.bHasSight = bHasSight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetGodThreatAvgHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             MaxDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetGodThreatAvgHealthPct(const float MaxDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetGodThreatAvgHealthPct");

	Params::HWAIController_GetGodThreatAvgHealthPct Parms{};

	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetGodThreatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             MaxDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAIController::GetGodThreatCount(const float MaxDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetGodThreatCount");

	Params::HWAIController_GetGodThreatCount Parms{};

	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetGodThreatTotalHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             MaxDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetGodThreatTotalHealthPct(const float MaxDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetGodThreatTotalHealthPct");

	Params::HWAIController_GetGodThreatTotalHealthPct Parms{};

	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetHostileThreatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bOnlyWithinAttackRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDamagedByTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGodOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAIController::GetHostileThreatCount(bool bOnlyWithinAttackRange, float MaxDamagedByTime, bool bGodOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetHostileThreatCount");

	Params::HWAIController_GetHostileThreatCount Parms{};

	Parms.bOnlyWithinAttackRange = bOnlyWithinAttackRange;
	Parms.MaxDamagedByTime = MaxDamagedByTime;
	Parms.bGodOnly = bGodOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetIncomingDamagePerSecond
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetIncomingDamagePerSecond() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetIncomingDamagePerSecond");

	Params::HWAIController_GetIncomingDamagePerSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetLaneDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWaypointPathDirectionType              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWaypointPathDirectionType AHWAIController::GetLaneDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetLaneDirection");

	Params::HWAIController_GetLaneDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetLaneID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AHWAIController::GetLaneID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetLaneID");

	Params::HWAIController_GetLaneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetMinionThreatAggroCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAIController::GetMinionThreatAggroCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetMinionThreatAggroCount");

	Params::HWAIController_GetMinionThreatAggroCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetMinionThreatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             MaxDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAIController::GetMinionThreatCount(const float MaxDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetMinionThreatCount");

	Params::HWAIController_GetMinionThreatCount Parms{};

	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetNearestStructureThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWAIController::GetNearestStructureThreat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetNearestStructureThreat");

	Params::HWAIController_GetNearestStructureThreat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetNearestThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bGodOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWAIController::GetNearestThreat(bool bGodOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetNearestThreat");

	Params::HWAIController_GetNearestThreat Parms{};

	Parms.bGodOnly = bGodOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetOutgoingDamagePerSecond
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::GetOutgoingDamagePerSecond() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetOutgoingDamagePerSecond");

	Params::HWAIController_GetOutgoingDamagePerSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.GetTeamRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWAIController::GetTeamRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "GetTeamRole");

	Params::HWAIController_GetTeamRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsAHostileThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Threat                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDamagedByTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsAHostileThreat(const class AHWCharacter_Base* Threat, float MaxDamagedByTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsAHostileThreat");

	Params::HWAIController_IsAHostileThreat Parms{};

	Parms.Threat = Threat;
	Parms.MaxDamagedByTime = MaxDamagedByTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsCurrentThreatGankable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsCurrentThreatGankable(float Range) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsCurrentThreatGankable");

	Params::HWAIController_IsCurrentThreatGankable Parms{};

	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsCurrentThreatLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsCurrentThreatLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsCurrentThreatLocked");

	Params::HWAIController_IsCurrentThreatLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsGoalSystemLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsGoalSystemLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsGoalSystemLocked");

	Params::HWAIController_IsGoalSystemLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsGodThreatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             MaxDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsGodThreatAvailable(const float MaxDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsGodThreatAvailable");

	Params::HWAIController_IsGodThreatAvailable Parms{};

	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsHostileThreatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bOnlyWithinAttackRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDamagedByTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGodOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsHostileThreatAvailable(bool bOnlyWithinAttackRange, float MaxDamagedByTime, bool bGodOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsHostileThreatAvailable");

	Params::HWAIController_IsHostileThreatAvailable Parms{};

	Parms.bOnlyWithinAttackRange = bOnlyWithinAttackRange;
	Parms.MaxDamagedByTime = MaxDamagedByTime;
	Parms.bGodOnly = bGodOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsThreat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsThreat(const class AActor* InActor, int32* OutIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsThreat");

	Params::HWAIController_IsThreat Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.IsThreatGankable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Threat                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAIController::IsThreatGankable(const class AHWCharacter_Base* Threat, float Range) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "IsThreatGankable");

	Params::HWAIController_IsThreatGankable Parms{};

	Parms.Threat = Threat;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.PredictNextIncomingDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::PredictNextIncomingDamageAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "PredictNextIncomingDamageAmount");

	Params::HWAIController_PredictNextIncomingDamageAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIController.PredictNextOutgoingDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAIController::PredictNextOutgoingDamageAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIController", "PredictNextOutgoingDamageAmount");

	Params::HWAIController_PredictNextOutgoingDamageAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShopVendorVolume.OnOverlappedCharacterAbilitySystemChanged
// (Final, Native, Public)
// Parameters:
// class UHWAbilitySystemComponent*        NewAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWShopVendorVolume::OnOverlappedCharacterAbilitySystemChanged(class UHWAbilitySystemComponent* NewAbilitySystem, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShopVendorVolume", "OnOverlappedCharacterAbilitySystemChanged");

	Params::HWShopVendorVolume_OnOverlappedCharacterAbilitySystemChanged Parms{};

	Parms.NewAbilitySystem = NewAbilitySystem;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShopVendorVolume.CanShopActivateFor
// (Final, Native, Public, Const)
// Parameters:
// class AHWCharacter_Base*                NewTouchingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWShopVendorVolume::CanShopActivateFor(class AHWCharacter_Base* NewTouchingCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShopVendorVolume", "CanShopActivateFor");

	Params::HWShopVendorVolume_CanShopActivateFor Parms{};

	Parms.NewTouchingCharacter = NewTouchingCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFountain.HandleTeamsUpdated
// (Final, Native, Public)

void AHWFountain::HandleTeamsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFountain", "HandleTeamsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIDifficultyConfig.GetMaxFocusFireOnPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIDifficultyConfig::GetMaxFocusFireOnPlayer(const float DifficultyScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "GetMaxFocusFireOnPlayer");

	Params::HWAIDifficultyConfig_GetMaxFocusFireOnPlayer Parms{};

	Parms.DifficultyScale = DifficultyScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.GetMinPlayerLevelForAggression
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIDifficultyConfig::GetMinPlayerLevelForAggression(const float DifficultyScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "GetMinPlayerLevelForAggression");

	Params::HWAIDifficultyConfig_GetMinPlayerLevelForAggression Parms{};

	Parms.DifficultyScale = DifficultyScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.GetPlayerThreatModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIDifficultyConfig::GetPlayerThreatModifier(const float DifficultyScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "GetPlayerThreatModifier");

	Params::HWAIDifficultyConfig_GetPlayerThreatModifier Parms{};

	Parms.DifficultyScale = DifficultyScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.GetPlayWeightPenalty
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              PlayTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIDifficultyConfig::GetPlayWeightPenalty(const float DifficultyScale, const struct FGameplayTag& PlayTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "GetPlayWeightPenalty");

	Params::HWAIDifficultyConfig_GetPlayWeightPenalty Parms{};

	Parms.DifficultyScale = DifficultyScale;
	Parms.PlayTag = std::move(PlayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.IsPlayDisabled
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              PlayTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIDifficultyConfig::IsPlayDisabled(const float DifficultyScale, const struct FGameplayTag& PlayTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "IsPlayDisabled");

	Params::HWAIDifficultyConfig_IsPlayDisabled Parms{};

	Parms.DifficultyScale = DifficultyScale;
	Parms.PlayTag = std::move(PlayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.ShouldAllowAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIDifficultyConfig::ShouldAllowAbility(const float DifficultyScale, const struct FGameplayTagContainer& Tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "ShouldAllowAbility");

	Params::HWAIDifficultyConfig_ShouldAllowAbility Parms{};

	Parms.DifficultyScale = DifficultyScale;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.ShouldAllowAbilityCombos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIDifficultyConfig::ShouldAllowAbilityCombos(const float DifficultyScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "ShouldAllowAbilityCombos");

	Params::HWAIDifficultyConfig_ShouldAllowAbilityCombos Parms{};

	Parms.DifficultyScale = DifficultyScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.ShouldAllowAggressiveAbilityUsage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             DifficultyScale                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             TimeSinceLastAggressiveAbilityUsage                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIDifficultyConfig::ShouldAllowAggressiveAbilityUsage(const float DifficultyScale, const float TimeSinceLastAggressiveAbilityUsage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "ShouldAllowAggressiveAbilityUsage");

	Params::HWAIDifficultyConfig_ShouldAllowAggressiveAbilityUsage Parms{};

	Parms.DifficultyScale = DifficultyScale;
	Parms.TimeSinceLastAggressiveAbilityUsage = TimeSinceLastAggressiveAbilityUsage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIDifficultyConfig.ShouldAvoidDangerousDeployables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIDifficultyConfig::ShouldAvoidDangerousDeployables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIDifficultyConfig", "ShouldAvoidDangerousDeployables");

	Params::HWAIDifficultyConfig_ShouldAvoidDangerousDeployables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Mulan_Evolution.GetNonGodXpPercentReduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponentSettings_Mulan_Evolution::GetNonGodXpPercentReduction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Mulan_Evolution", "GetNonGodXpPercentReduction");

	Params::HWEquipmentComponentSettings_Mulan_Evolution_GetNonGodXpPercentReduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.BailOnCurrentPlay
// (Final, Native, Protected, BlueprintCallable)

void UHWAIGoal::BailOnCurrentPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "BailOnCurrentPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.CalculateWeight
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::CalculateWeight(class AHWAIController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "CalculateWeight");

	Params::HWAIGoal_CalculateWeight Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.CheckPreconditionsBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIGoal::CheckPreconditionsBP(class AHWAIController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "CheckPreconditionsBP");

	Params::HWAIGoal_CheckPreconditionsBP Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.ClearBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::ClearBlackboardVariable(class FName VarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "ClearBlackboardVariable");

	Params::HWAIGoal_ClearBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.CollectDebugText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          outDebugText                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TabsCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::CollectDebugText(class FString* outDebugText, int32 TabsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "CollectDebugText");

	Params::HWAIGoal_CollectDebugText Parms{};

	Parms.TabsCount = TabsCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outDebugText != nullptr)
		*outDebugText = std::move(Parms.outDebugText);
}


// Function Hemingway.HWAIGoal.EndGoal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHWAIGoalStatus                         Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTriggerCompletedDel                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::EndGoal(EHWAIGoalStatus Status, bool bTriggerCompletedDel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "EndGoal");

	Params::HWAIGoal_EndGoal Parms{};

	Parms.Status = Status;
	Parms.bTriggerCompletedDel = bTriggerCompletedDel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.EndGoalBP
// (Event, Protected, BlueprintEvent)

void UHWAIGoal::EndGoalBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "EndGoalBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAIGoal.OnSubGoalCompleted
// (Final, Native, Protected)
// Parameters:
// EHWAIGoalStatus                         Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::OnSubGoalCompleted(EHWAIGoalStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "OnSubGoalCompleted");

	Params::HWAIGoal_OnSubGoalCompleted Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetActorBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InValue                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetActorBlackboardVariable(class FName VarName, class AActor* InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetActorBlackboardVariable");

	Params::HWAIGoal_SetActorBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetBoolBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetBoolBlackboardVariable(class FName VarName, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetBoolBlackboardVariable");

	Params::HWAIGoal_SetBoolBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetEnumBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetEnumBlackboardVariable(class FName VarName, uint8 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetEnumBlackboardVariable");

	Params::HWAIGoal_SetEnumBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetFloatBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetFloatBlackboardVariable(class FName VarName, float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetFloatBlackboardVariable");

	Params::HWAIGoal_SetFloatBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetIntBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetIntBlackboardVariable(class FName VarName, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetIntBlackboardVariable");

	Params::HWAIGoal_SetIntBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetNameBlackboardVariable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetNameBlackboardVariable(class FName VarName, class FName InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetNameBlackboardVariable");

	Params::HWAIGoal_SetNameBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SetVectorBlackboardVariable
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::SetVectorBlackboardVariable(class FName VarName, const struct FVector& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SetVectorBlackboardVariable");

	Params::HWAIGoal_SetVectorBlackboardVariable Parms{};

	Parms.VarName = VarName;
	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIGoal.SpawnDebugDisplayActor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass*                           debugActorClass                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIGoal::SpawnDebugDisplayActor(class UClass* debugActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "SpawnDebugDisplayActor");

	Params::HWAIGoal_SpawnDebugDisplayActor Parms{};

	Parms.debugActorClass = debugActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.StartGoalBP
// (Event, Protected, BlueprintEvent)

void UHWAIGoal::StartGoalBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "StartGoalBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAIGoal.TickGoalBP
// (Event, Protected, BlueprintEvent)

void UHWAIGoal::TickGoalBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "TickGoalBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAIGoal.ToggleDebugDisplay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIGoal::ToggleDebugDisplay(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "ToggleDebugDisplay");

	Params::HWAIGoal_ToggleDebugDisplay Parms{};

	Parms.bOn = bOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAIGoal.UpdateDebugText
// (Event, Protected, BlueprintEvent)

void UHWAIGoal::UpdateDebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "UpdateDebugText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAIGoal.CalculateMaxETAForPlayParticipants
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWAIController*            InController                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArrivalDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::CalculateMaxETAForPlayParticipants(const class AHWAIController* InController, float ArrivalDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "CalculateMaxETAForPlayParticipants");

	Params::HWAIGoal_CalculateMaxETAForPlayParticipants Parms{};

	Parms.InController = InController;
	Parms.ArrivalDistance = ArrivalDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetActorBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIGoal::GetActorBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetActorBlackboardVariable");

	Params::HWAIGoal_GetActorBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetBoolBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIGoal::GetBoolBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetBoolBlackboardVariable");

	Params::HWAIGoal_GetBoolBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWAIGoal::GetCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetCharacter");

	Params::HWAIGoal_GetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetCurrentFrameTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::GetCurrentFrameTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetCurrentFrameTime");

	Params::HWAIGoal_GetCurrentFrameTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetCurrentPlayStateTag
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWAIGoal::GetCurrentPlayStateTag(const class AHWCharacter_Base* SourceCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetCurrentPlayStateTag");

	Params::HWAIGoal_GetCurrentPlayStateTag Parms{};

	Parms.SourceCharacter = SourceCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetEnumBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UHWAIGoal::GetEnumBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetEnumBlackboardVariable");

	Params::HWAIGoal_GetEnumBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetFloatBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::GetFloatBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetFloatBlackboardVariable");

	Params::HWAIGoal_GetFloatBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetGameMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWGameMode*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameMode* UHWAIGoal::GetGameMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetGameMode");

	Params::HWAIGoal_GetGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetGameState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWGameState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameState* UHWAIGoal::GetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetGameState");

	Params::HWAIGoal_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetIntBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAIGoal::GetIntBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetIntBlackboardVariable");

	Params::HWAIGoal_GetIntBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetNameBlackboardVariable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWAIGoal::GetNameBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetNameBlackboardVariable");

	Params::HWAIGoal_GetNameBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetPlayerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* UHWAIGoal::GetPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetPlayerState");

	Params::HWAIGoal_GetPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetPlayParticipants
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWCharacter_Base*>*       OutParticipants                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIGoal::GetPlayParticipants(TArray<class AHWCharacter_Base*>* OutParticipants) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetPlayParticipants");

	Params::HWAIGoal_GetPlayParticipants Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParticipants != nullptr)
		*OutParticipants = std::move(Parms.OutParticipants);
}


// Function Hemingway.HWAIGoal.GetTimeInGoal
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::GetTimeInGoal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetTimeInGoal");

	Params::HWAIGoal_GetTimeInGoal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetTimeInPlay
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIGoal::GetTimeInPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetTimeInPlay");

	Params::HWAIGoal_GetTimeInPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.GetVectorBlackboardVariable
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             VarName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAIGoal::GetVectorBlackboardVariable(class FName VarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "GetVectorBlackboardVariable");

	Params::HWAIGoal_GetVectorBlackboardVariable Parms{};

	Parms.VarName = VarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.IsCloseEnoughToPlayActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWAIController*            InController                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArrivalDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIGoal::IsCloseEnoughToPlayActor(const class AHWAIController* InController, const class AHWCharacter_Base* Character, float ArrivalDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "IsCloseEnoughToPlayActor");

	Params::HWAIGoal_IsCloseEnoughToPlayActor Parms{};

	Parms.InController = InController;
	Parms.Character = Character;
	Parms.ArrivalDistance = ArrivalDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.IsCurrentPlayStateEqualTo
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIGoal::IsCurrentPlayStateEqualTo(const class AHWCharacter_Base* SourceCharacter, const struct FGameplayTag& Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "IsCurrentPlayStateEqualTo");

	Params::HWAIGoal_IsCurrentPlayStateEqualTo Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIGoal.IsInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIGoal::IsInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIGoal", "IsInProgress");

	Params::HWAIGoal_IsInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAILearningRecorder.OnRecordingTimer
// (Final, Native, Protected)

void UHWAILearningRecorder::OnRecordingTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAILearningRecorder", "OnRecordingTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAILearningRecorder.StartRecording
// (Final, Native, Public, BlueprintCallable)

void UHWAILearningRecorder::StartRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAILearningRecorder", "StartRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAILearningRecorder.StopRecording
// (Final, Native, Public, BlueprintCallable)

void UHWAILearningRecorder::StopRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAILearningRecorder", "StopRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAILearningRecorder.GetAgentSamples
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FHWAILearningAgentData>*  OutAllSamples                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAILearningRecorder::GetAgentSamples(TArray<struct FHWAILearningAgentData>* OutAllSamples) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAILearningRecorder", "GetAgentSamples");

	Params::HWAILearningRecorder_GetAgentSamples Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllSamples != nullptr)
		*OutAllSamples = std::move(Parms.OutAllSamples);
}


// Function Hemingway.HWAILearningRecorder.GetSamples
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FHWAILearningSampleData>* OutAllSamples                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAILearningRecorder::GetSamples(TArray<struct FHWAILearningSampleData>* OutAllSamples) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAILearningRecorder", "GetSamples");

	Params::HWAILearningRecorder_GetSamples Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllSamples != nullptr)
		*OutAllSamples = std::move(Parms.OutAllSamples);
}


// Function Hemingway.HWAILearningRecorderBlueprintLibrary.LoadAILearningRecordingFromJson
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    LearningDataFileName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWAILearningAgentData>*  OutAllSamples                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAILearningRecorderBlueprintLibrary::LoadAILearningRecordingFromJson(const class FString& LearningDataFileName, TArray<struct FHWAILearningAgentData>* OutAllSamples)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAILearningRecorderBlueprintLibrary", "LoadAILearningRecordingFromJson");

	Params::HWAILearningRecorderBlueprintLibrary_LoadAILearningRecordingFromJson Parms{};

	Parms.LearningDataFileName = std::move(LearningDataFileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllSamples != nullptr)
		*OutAllSamples = std::move(Parms.OutAllSamples);
}


// Function Hemingway.HWAILearningRecorderBlueprintLibrary.LoadAILearningRecordingFromSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    SaveSlotName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWAILearningAgentData>*  OutAllSamples                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAILearningRecorderBlueprintLibrary::LoadAILearningRecordingFromSlot(const class FString& SaveSlotName, int32 UserIndex, TArray<struct FHWAILearningAgentData>* OutAllSamples)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAILearningRecorderBlueprintLibrary", "LoadAILearningRecordingFromSlot");

	Params::HWAILearningRecorderBlueprintLibrary_LoadAILearningRecordingFromSlot Parms{};

	Parms.SaveSlotName = std::move(SaveSlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllSamples != nullptr)
		*OutAllSamples = std::move(Parms.OutAllSamples);
}


// Function Hemingway.HWAILearningRecorderBlueprintLibrary.LoadAILearningRecordingFromSlotWithTimeStamps
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    SaveSlotName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWAILearningSampleData>* OutAllSamples                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAILearningRecorderBlueprintLibrary::LoadAILearningRecordingFromSlotWithTimeStamps(const class FString& SaveSlotName, int32 UserIndex, TArray<struct FHWAILearningSampleData>* OutAllSamples)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAILearningRecorderBlueprintLibrary", "LoadAILearningRecordingFromSlotWithTimeStamps");

	Params::HWAILearningRecorderBlueprintLibrary_LoadAILearningRecordingFromSlotWithTimeStamps Parms{};

	Parms.SaveSlotName = std::move(SaveSlotName);
	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllSamples != nullptr)
		*OutAllSamples = std::move(Parms.OutAllSamples);
}


// Function Hemingway.HWEventHandlerBase.OnEventEnd
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWEventConfig&            EventConfig                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWEventHandlerBase::OnEventEnd(const struct FHWEventConfig& EventConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventHandlerBase", "OnEventEnd");

	Params::HWEventHandlerBase_OnEventEnd Parms{};

	Parms.EventConfig = std::move(EventConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEventHandlerBase.OnEventStart
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWEventConfig&            EventConfig                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           EventContext                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWEventHandlerBase::OnEventStart(const struct FHWEventConfig& EventConfig, const struct FHWEventContext& EventContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventHandlerBase", "OnEventStart");

	Params::HWEventHandlerBase_OnEventStart Parms{};

	Parms.EventConfig = std::move(EventConfig);
	Parms.EventContext = std::move(EventContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEventHandlerBase.ShouldOverrideDuration
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWEventConfig&            EventConfig                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           EventContext                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float*                                  OutDuration                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEventHandlerBase::ShouldOverrideDuration(const struct FHWEventConfig& EventConfig, const struct FHWEventContext& EventContext, float* OutDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventHandlerBase", "ShouldOverrideDuration");

	Params::HWEventHandlerBase_ShouldOverrideDuration Parms{};

	Parms.EventConfig = std::move(EventConfig);
	Parms.EventContext = std::move(EventContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDuration != nullptr)
		*OutDuration = Parms.OutDuration;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPerceptionComponent.GetIdTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWAIPerceptionComponent::GetIdTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPerceptionComponent", "GetIdTag");

	Params::HWAIPerceptionComponent_GetIdTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Actor.BP_OnGameplayEventReceived
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Actor::BP_OnGameplayEventReceived(const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Actor", "BP_OnGameplayEventReceived");

	Params::HWGameplayCueNotify_Actor_BP_OnGameplayEventReceived Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayCueNotify_Actor.HandleLocalOwnerVisibilityComponentUpdated
// (Final, Native, Protected)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Actor::HandleLocalOwnerVisibilityComponentUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Actor", "HandleLocalOwnerVisibilityComponentUpdated");

	Params::HWGameplayCueNotify_Actor_HandleLocalOwnerVisibilityComponentUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Actor.HandleLocalOwnerVisibilityUpdated
// (Final, Native, Protected)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Actor::HandleLocalOwnerVisibilityUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Actor", "HandleLocalOwnerVisibilityUpdated");

	Params::HWGameplayCueNotify_Actor_HandleLocalOwnerVisibilityUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Actor.SetSkinnedData
// (Final, Native, Public)

void AHWGameplayCueNotify_Actor::SetSkinnedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Actor", "SetSkinnedData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayEffect.BP_GetStackLimitCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameplayEffect::BP_GetStackLimitCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "BP_GetStackLimitCount");

	Params::HWGameplayEffect_BP_GetStackLimitCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect.GetApplicationPolicy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWEffectApplicationPolicy              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWEffectApplicationPolicy UHWGameplayEffect::GetApplicationPolicy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "GetApplicationPolicy");

	Params::HWGameplayEffect_GetApplicationPolicy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect.GetApplicationStrength
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayEffectSpec&       RelevantSpec                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect::GetApplicationStrength(const struct FGameplayEffectSpec& RelevantSpec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "GetApplicationStrength");

	Params::HWGameplayEffect_GetApplicationStrength Parms{};

	Parms.RelevantSpec = std::move(RelevantSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect.GetApplicationTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect::GetApplicationTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "GetApplicationTag");

	Params::HWGameplayEffect_GetApplicationTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect.GetKeywordTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect::GetKeywordTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "GetKeywordTag");

	Params::HWGameplayEffect_GetKeywordTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect.ShouldOnlyInhibitSameInstigatorEffects
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect::ShouldOnlyInhibitSameInstigatorEffects() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect", "ShouldOnlyInhibitSameInstigatorEffects");

	Params::HWGameplayEffect_ShouldOnlyInhibitSameInstigatorEffects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.InvalidatePlay
// (Final, Native, Public, BlueprintCallable)

void UHWAIPlayLogic::InvalidatePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "InvalidatePlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayLogic.GetAssociatedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAIPlayLogic::GetAssociatedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetAssociatedActor");

	Params::HWAIPlayLogic_GetAssociatedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.GetCurrentPlayState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWAIPlayLogic::GetCurrentPlayState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetCurrentPlayState");

	Params::HWAIPlayLogic_GetCurrentPlayState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.GetHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UHWAIPlayLogic::GetHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetHandle");

	Params::HWAIPlayLogic_GetHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.GetMinExecutionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIPlayLogic::GetMinExecutionTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetMinExecutionTime");

	Params::HWAIPlayLogic_GetMinExecutionTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.GetParticipants
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWCharacter_Base*>*       OutParticipants                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIPlayLogic::GetParticipants(TArray<class AHWCharacter_Base*>* OutParticipants) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetParticipants");

	Params::HWAIPlayLogic_GetParticipants Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParticipants != nullptr)
		*OutParticipants = std::move(Parms.OutParticipants);
}


// Function Hemingway.HWAIPlayLogic.GetPlayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIPlayLogic::GetPlayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "GetPlayTime");

	Params::HWAIPlayLogic_GetPlayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayLogic.HasParticipantsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIPlayLogic::HasParticipantsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayLogic", "HasParticipantsActive");

	Params::HWAIPlayLogic_HasParticipantsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.AddNPEBoostsToPlayer
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerController*              TrackedPlayerController                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::AddNPEBoostsToPlayer(class AHWPlayerController* TrackedPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "AddNPEBoostsToPlayer");

	Params::HWGameMode_AddNPEBoostsToPlayer Parms{};

	Parms.TrackedPlayerController = TrackedPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.AddPhaseRulesToNewTeamMember
// (Native, Public)
// Parameters:
// class AHWPlayerState*                   NewMember                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::AddPhaseRulesToNewTeamMember(class AHWPlayerState* NewMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "AddPhaseRulesToNewTeamMember");

	Params::HWGameMode_AddPhaseRulesToNewTeamMember Parms{};

	Parms.NewMember = NewMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.ApplyGameModeModifiersToPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::ApplyGameModeModifiersToPlayer(class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ApplyGameModeModifiersToPlayer");

	Params::HWGameMode_ApplyGameModeModifiersToPlayer Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.BroadcastConnectionStates
// (Final, Native, Public)

void AHWGameMode::BroadcastConnectionStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "BroadcastConnectionStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.BroadcastMatchComposition
// (Final, Native, Public)

void AHWGameMode::BroadcastMatchComposition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "BroadcastMatchComposition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.CacheMatchmadeProfileId
// (Final, Native, Public)

void AHWGameMode::CacheMatchmadeProfileId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CacheMatchmadeProfileId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.CaptureMatchSnapshot
// (Final, Native, Public)

void AHWGameMode::CaptureMatchSnapshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CaptureMatchSnapshot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.CheckForAddingNPEBoosts
// (Final, Native, Protected)

void AHWGameMode::CheckForAddingNPEBoosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CheckForAddingNPEBoosts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.CombatLogRewards
// (Final, Native, Protected)
// Parameters:
// class AHWCharacter_Base*                RewardSource                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                RewardTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::CombatLogRewards(class AHWCharacter_Base* RewardSource, class AHWCharacter_Base* RewardTarget, uint8 EventType, int32 Quantity, uint8 RewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CombatLogRewards");

	Params::HWGameMode_CombatLogRewards Parms{};

	Parms.RewardSource = RewardSource;
	Parms.RewardTarget = RewardTarget;
	Parms.EventType = EventType;
	Parms.Quantity = Quantity;
	Parms.RewardType = RewardType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.DeactivatePhaseRulesFromOldTeamMember
// (Native, Public)
// Parameters:
// class AHWPlayerState*                   OldMember                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::DeactivatePhaseRulesFromOldTeamMember(class AHWPlayerState* OldMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "DeactivatePhaseRulesFromOldTeamMember");

	Params::HWGameMode_DeactivatePhaseRulesFromOldTeamMember Parms{};

	Parms.OldMember = OldMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.DoesPlayerMeetNPEBoostCriteria
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerController*              TrackedPlayerController                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::DoesPlayerMeetNPEBoostCriteria(class AHWPlayerController* TrackedPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "DoesPlayerMeetNPEBoostCriteria");

	Params::HWGameMode_DoesPlayerMeetNPEBoostCriteria Parms{};

	Parms.TrackedPlayerController = TrackedPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.DynamicallySelectGodBotCharacters
// (Final, Native, Protected, BlueprintCallable)

void AHWGameMode::DynamicallySelectGodBotCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "DynamicallySelectGodBotCharacters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.EndMatchOnSurrender
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const class AHWTeamState*               TeamState                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::EndMatchOnSurrender(const class AHWTeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "EndMatchOnSurrender");

	Params::HWGameMode_EndMatchOnSurrender Parms{};

	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.FillTeamsWithAIPlayers
// (Final, Native, Protected, BlueprintCallable)

void AHWGameMode::FillTeamsWithAIPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "FillTeamsWithAIPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.GetRespawnDelayTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::GetRespawnDelayTime(class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetRespawnDelayTime");

	Params::HWGameMode_GetRespawnDelayTime Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GoToMatchPhase
// (Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NextPhaseTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::GoToMatchPhase(const struct FGameplayTag& NextPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GoToMatchPhase");

	Params::HWGameMode_GoToMatchPhase Parms{};

	Parms.NextPhaseTag = std::move(NextPhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.HandleKillCreditDeath
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHWCharacter_Base*                KilledCharacter                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FHWAssistCandidate>&AssistingTeamMembers                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHWGameMode::HandleKillCreditDeath(class AHWCharacter_Base* KilledCharacter, class AHWCharacter_Base* Killer, const TArray<struct FHWAssistCandidate>& AssistingTeamMembers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "HandleKillCreditDeath");

	Params::HWGameMode_HandleKillCreditDeath Parms{};

	Parms.KilledCharacter = KilledCharacter;
	Parms.Killer = Killer;
	Parms.AssistingTeamMembers = std::move(AssistingTeamMembers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.InitializePlayerBehaviorTracking
// (Final, Native, Protected)

void AHWGameMode::InitializePlayerBehaviorTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "InitializePlayerBehaviorTracking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.IsMatchmadeQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::IsMatchmadeQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "IsMatchmadeQueue");

	Params::HWGameMode_IsMatchmadeQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.IsShopUnrestrictedForStartup
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::IsShopUnrestrictedForStartup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "IsShopUnrestrictedForStartup");

	Params::HWGameMode_IsShopUnrestrictedForStartup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.LockPhaseRulesDuringTransferFor
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWPersistentPlayerId&     TransferringPlayerId                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::LockPhaseRulesDuringTransferFor(const struct FHWPersistentPlayerId& TransferringPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "LockPhaseRulesDuringTransferFor");

	Params::HWGameMode_LockPhaseRulesDuringTransferFor Parms{};

	Parms.TransferringPlayerId = std::move(TransferringPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.LogRHSessionData
// (Final, Native, Public)

void AHWGameMode::LogRHSessionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "LogRHSessionData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.ModeSupportsQuests
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::ModeSupportsQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ModeSupportsQuests");

	Params::HWGameMode_ModeSupportsQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.PendingLoginDisconnected
// (Final, Native, Public)
// Parameters:
// class URH_IpConnection*                 Connection                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::PendingLoginDisconnected(class URH_IpConnection* Connection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "PendingLoginDisconnected");

	Params::HWGameMode_PendingLoginDisconnected Parms{};

	Parms.Connection = Connection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.PlayerStateChangedClientLoadStatus
// (Native, Protected, BlueprintCallable)

void AHWGameMode::PlayerStateChangedClientLoadStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "PlayerStateChangedClientLoadStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.RemoveGameModeModifiersFromAllPlayers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AHWGameMode::RemoveGameModeModifiersFromAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "RemoveGameModeModifiersFromAllPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.RemoveGameModeModifiersFromPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::RemoveGameModeModifiersFromPlayer(class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "RemoveGameModeModifiersFromPlayer");

	Params::HWGameMode_RemoveGameModeModifiersFromPlayer Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.RestartPlayerWithCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      ControllerToRestart                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterToGive                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWSkinItem*                SkinToGive                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           StartSpot                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bFullyResetCharacter                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::RestartPlayerWithCharacter(class AController* ControllerToRestart, const class UHWCharacterItem* CharacterToGive, const class UHWSkinItem* SkinToGive, class AActor* StartSpot, const bool bFullyResetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "RestartPlayerWithCharacter");

	Params::HWGameMode_RestartPlayerWithCharacter Parms{};

	Parms.ControllerToRestart = ControllerToRestart;
	Parms.CharacterToGive = CharacterToGive;
	Parms.SkinToGive = SkinToGive;
	Parms.StartSpot = StartSpot;
	Parms.bFullyResetCharacter = bFullyResetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.SendMatchCompositionToPlayer
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UNetConnection*                   Connection                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInstanceInfo_PlayerDataList&PlayerDataList                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWGameMode::SendMatchCompositionToPlayer(class UNetConnection* Connection, const struct FHWInstanceInfo_PlayerDataList& PlayerDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "SendMatchCompositionToPlayer");

	Params::HWGameMode_SendMatchCompositionToPlayer Parms{};

	Parms.Connection = Connection;
	Parms.PlayerDataList = std::move(PlayerDataList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.SessionDataChangeTriggered
// (Final, Native, Public)

void AHWGameMode::SessionDataChangeTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "SessionDataChangeTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.SetCurrentMatchPhaseDuration
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewPhaseDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::SetCurrentMatchPhaseDuration(float NewPhaseDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "SetCurrentMatchPhaseDuration");

	Params::HWGameMode_SetCurrentMatchPhaseDuration Parms{};

	Parms.NewPhaseDuration = NewPhaseDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.SetGameModeFinishedWaitingOnLoadScreens
// (Final, Native, Public)
// Parameters:
// bool                                    bFinishedWaiting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::SetGameModeFinishedWaitingOnLoadScreens(bool bFinishedWaiting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "SetGameModeFinishedWaitingOnLoadScreens");

	Params::HWGameMode_SetGameModeFinishedWaitingOnLoadScreens Parms{};

	Parms.bFinishedWaiting = bFinishedWaiting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.UnlockPhaseRulesAfterTransferFor
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWPersistentPlayerId&     TransferringPlayerId                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode::UnlockPhaseRulesAfterTransferFor(const struct FHWPersistentPlayerId& TransferringPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "UnlockPhaseRulesAfterTransferFor");

	Params::HWGameMode_UnlockPhaseRulesAfterTransferFor Parms{};

	Parms.TransferringPlayerId = std::move(TransferringPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode.WantsToInitializePlayerBehaviorTracking
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::WantsToInitializePlayerBehaviorTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "WantsToInitializePlayerBehaviorTracking");

	Params::HWGameMode_WantsToInitializePlayerBehaviorTracking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.ApplyNpcAssistGoldFormula
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const float                             BaseValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ContributorCount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::ApplyNpcAssistGoldFormula(const float BaseValue, const int32 ContributorCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ApplyNpcAssistGoldFormula");

	Params::HWGameMode_ApplyNpcAssistGoldFormula Parms{};

	Parms.BaseValue = BaseValue;
	Parms.ContributorCount = ContributorCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.ApplyNpcAssistXpFormula
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const float                             BaseValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ContributorCount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::ApplyNpcAssistXpFormula(const float BaseValue, const int32 ContributorCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ApplyNpcAssistXpFormula");

	Params::HWGameMode_ApplyNpcAssistXpFormula Parms{};

	Parms.BaseValue = BaseValue;
	Parms.ContributorCount = ContributorCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.ApplyNpcKillGoldFormula
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const float                             BaseValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ContributorCount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::ApplyNpcKillGoldFormula(const float BaseValue, const int32 ContributorCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ApplyNpcKillGoldFormula");

	Params::HWGameMode_ApplyNpcKillGoldFormula Parms{};

	Parms.BaseValue = BaseValue;
	Parms.ContributorCount = ContributorCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.ApplyNpcKillXpFormula
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const float                             BaseValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ContributorCount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::ApplyNpcKillXpFormula(const float BaseValue, const int32 ContributorCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "ApplyNpcKillXpFormula");

	Params::HWGameMode_ApplyNpcKillXpFormula Parms{};

	Parms.BaseValue = BaseValue;
	Parms.ContributorCount = ContributorCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.CalcPlayerAssistGoldReward
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_PlayableCharacter*   VictimPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                AssistingPlayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AssisterCount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::CalcPlayerAssistGoldReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* AssistingPlayer, const int32 AssisterCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CalcPlayerAssistGoldReward");

	Params::HWGameMode_CalcPlayerAssistGoldReward Parms{};

	Parms.VictimPlayer = VictimPlayer;
	Parms.AssistingPlayer = AssistingPlayer;
	Parms.AssisterCount = AssisterCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.CalcPlayerAssistXpReward
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_PlayableCharacter*   VictimPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                AssistingPlayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AssisterCount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::CalcPlayerAssistXpReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* AssistingPlayer, const int32 AssisterCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CalcPlayerAssistXpReward");

	Params::HWGameMode_CalcPlayerAssistXpReward Parms{};

	Parms.VictimPlayer = VictimPlayer;
	Parms.AssistingPlayer = AssistingPlayer;
	Parms.AssisterCount = AssisterCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.CalcPlayerKillGoldReward
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_PlayableCharacter*   VictimPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                KillerPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bApplyFirstBloodBonus                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::CalcPlayerKillGoldReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* KillerPlayer, const bool bApplyFirstBloodBonus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CalcPlayerKillGoldReward");

	Params::HWGameMode_CalcPlayerKillGoldReward Parms{};

	Parms.VictimPlayer = VictimPlayer;
	Parms.KillerPlayer = KillerPlayer;
	Parms.bApplyFirstBloodBonus = bApplyFirstBloodBonus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.CalcPlayerKillXpReward
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_PlayableCharacter*   VictimPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                KillerPlayer                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::CalcPlayerKillXpReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* KillerPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CalcPlayerKillXpReward");

	Params::HWGameMode_CalcPlayerKillXpReward Parms{};

	Parms.VictimPlayer = VictimPlayer;
	Parms.KillerPlayer = KillerPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.CurrentlyTrackingPlayerBehaviors
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::CurrentlyTrackingPlayerBehaviors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "CurrentlyTrackingPlayerBehaviors");

	Params::HWGameMode_CurrentlyTrackingPlayerBehaviors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.DoesNPCAwardLastHitGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWAbilitySystemComponent*  KilledNPCASC                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::DoesNPCAwardLastHitGold(const class UHWAbilitySystemComponent* KilledNPCASC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "DoesNPCAwardLastHitGold");

	Params::HWGameMode_DoesNPCAwardLastHitGold Parms{};

	Parms.KilledNPCASC = KilledNPCASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetChaosPlayCaller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAIPlayCaller*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAIPlayCaller* AHWGameMode::GetChaosPlayCaller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetChaosPlayCaller");

	Params::HWGameMode_GetChaosPlayCaller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetChaosTeamId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AHWGameMode::GetChaosTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetChaosTeamId");

	Params::HWGameMode_GetChaosTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetCurrentMatchPhaseTag
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWGameMode::GetCurrentMatchPhaseTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetCurrentMatchPhaseTag");

	Params::HWGameMode_GetCurrentMatchPhaseTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetGameModeTypeTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWGameMode::GetGameModeTypeTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetGameModeTypeTag");

	Params::HWGameMode_GetGameModeTypeTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetGodBotDifficultyConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAIDifficultyConfig*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAIDifficultyConfig* AHWGameMode::GetGodBotDifficultyConfig(const struct FGenericTeamId& Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetGodBotDifficultyConfig");

	Params::HWGameMode_GetGodBotDifficultyConfig Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetGodBotDifficultyConfigForOpposingTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAIDifficultyConfig*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAIDifficultyConfig* AHWGameMode::GetGodBotDifficultyConfigForOpposingTeam(const struct FGenericTeamId& Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetGodBotDifficultyConfigForOpposingTeam");

	Params::HWGameMode_GetGodBotDifficultyConfigForOpposingTeam Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetNeutralTeamId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AHWGameMode::GetNeutralTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetNeutralTeamId");

	Params::HWGameMode_GetNeutralTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetNpcLastHitGoldMultiplier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameMode::GetNpcLastHitGoldMultiplier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetNpcLastHitGoldMultiplier");

	Params::HWGameMode_GetNpcLastHitGoldMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetOpposingTeamIds
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGenericTeamId>*          OpposingTeamIds                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::GetOpposingTeamIds(const struct FGenericTeamId& TeamId, TArray<struct FGenericTeamId>* OpposingTeamIds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetOpposingTeamIds");

	Params::HWGameMode_GetOpposingTeamIds Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OpposingTeamIds != nullptr)
		*OpposingTeamIds = std::move(Parms.OpposingTeamIds);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetOrderPlayCaller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAIPlayCaller*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAIPlayCaller* AHWGameMode::GetOrderPlayCaller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetOrderPlayCaller");

	Params::HWGameMode_GetOrderPlayCaller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetOrderTeamId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AHWGameMode::GetOrderTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetOrderTeamId");

	Params::HWGameMode_GetOrderTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetPlayCaller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAIPlayCaller*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAIPlayCaller* AHWGameMode::GetPlayCaller(const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetPlayCaller");

	Params::HWGameMode_GetPlayCaller Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetPlayerModifiersAbilitySet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWAbilitySet*              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilitySet* AHWGameMode::GetPlayerModifiersAbilitySet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetPlayerModifiersAbilitySet");

	Params::HWGameMode_GetPlayerModifiersAbilitySet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.GetTransitionInfoTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWGameMode::GetTransitionInfoTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "GetTransitionInfoTag");

	Params::HWGameMode_GetTransitionInfoTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.IsANPCTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::IsANPCTeam(int32 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "IsANPCTeam");

	Params::HWGameMode_IsANPCTeam Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.IsAPlayerTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::IsAPlayerTeam(int32 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "IsAPlayerTeam");

	Params::HWGameMode_IsAPlayerTeam Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameMode.IsASpectatorTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameMode::IsASpectatorTeam(int32 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode", "IsASpectatorTeam");

	Params::HWGameMode_IsASpectatorTeam Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Stacks.GetEffectToGrantPerStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWEquipmentInfo_EffectInfo      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWEquipmentInfo_EffectInfo UHWEquipmentComponentSettings_Stacks::GetEffectToGrantPerStack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Stacks", "GetEffectToGrantPerStack");

	Params::HWEquipmentComponentSettings_Stacks_GetEffectToGrantPerStack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Stacks.GetInitialStackCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponentSettings_Stacks::GetInitialStackCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Stacks", "GetInitialStackCount");

	Params::HWEquipmentComponentSettings_Stacks_GetInitialStackCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Stacks.GetMaxStackCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponentSettings_Stacks::GetMaxStackCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Stacks", "GetMaxStackCount");

	Params::HWEquipmentComponentSettings_Stacks_GetMaxStackCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGEModiferMagnitudeCalc_Base.GetCharacterInfoFromInstigator
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWCharacterInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterInfo* UHWGEModiferMagnitudeCalc_Base::GetCharacterInfoFromInstigator(const struct FGameplayEffectContextHandle& EffectContextHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGEModiferMagnitudeCalc_Base", "GetCharacterInfoFromInstigator");

	Params::HWGEModiferMagnitudeCalc_Base_GetCharacterInfoFromInstigator Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGEModiferMagnitudeCalc_Base.GetCharacterItemFromInstigator
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGEModiferMagnitudeCalc_Base::GetCharacterItemFromInstigator(const struct FGameplayEffectContextHandle& EffectContextHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGEModiferMagnitudeCalc_Base", "GetCharacterItemFromInstigator");

	Params::HWGEModiferMagnitudeCalc_Base_GetCharacterItemFromInstigator Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayComponent.RegisterPlays
// (Final, Native, Protected, BlueprintCallable)

void UHWAIPlayComponent::RegisterPlays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayComponent", "RegisterPlays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.BailOnCurrentPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::BailOnCurrentPlay(const class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "BailOnCurrentPlay");

	Params::HWAIPlayCaller_BailOnCurrentPlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.DebugForcePlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PlayRowName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::DebugForcePlay(class FName PlayRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "DebugForcePlay");

	Params::HWAIPlayCaller_DebugForcePlay Parms{};

	Parms.PlayRowName = PlayRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.ForceQueryForNewPlays
// (Final, Native, Public, BlueprintCallable)

void UHWAIPlayCaller::ForceQueryForNewPlays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "ForceQueryForNewPlays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.QueryForNewPlays
// (Final, Native, Protected)

void UHWAIPlayCaller::QueryForNewPlays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "QueryForNewPlays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.RegisterPlays
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           AssociatedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FDataTableRowHandle>&plays                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bForceUpdate                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::RegisterPlays(class AActor* AssociatedActor, const TArray<struct FDataTableRowHandle>& plays, const bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "RegisterPlays");

	Params::HWAIPlayCaller_RegisterPlays Parms{};

	Parms.AssociatedActor = AssociatedActor;
	Parms.plays = std::move(plays);
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.StartPlayCalling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWTeamState*                     inTeam                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::StartPlayCalling(class AHWTeamState* inTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "StartPlayCalling");

	Params::HWAIPlayCaller_StartPlayCalling Parms{};

	Parms.inTeam = inTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.StopPlayCalling
// (Final, Native, Public, BlueprintCallable)

void UHWAIPlayCaller::StopPlayCalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "StopPlayCalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.UnregisterPlays
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AssociatedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::UnregisterPlays(class AActor* AssociatedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "UnregisterPlays");

	Params::HWAIPlayCaller_UnregisterPlays Parms{};

	Parms.AssociatedActor = AssociatedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.UpdateCurrentPlays
// (Final, Native, Protected)

void UHWAIPlayCaller::UpdateCurrentPlays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "UpdateCurrentPlays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIPlayCaller.GetActivePlayCurrentStateTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWAIPlayCaller::GetActivePlayCurrentStateTag(const class AHWCharacter_Base* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "GetActivePlayCurrentStateTag");

	Params::HWAIPlayCaller_GetActivePlayCurrentStateTag Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayCaller.GetPlayParticipants
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       OutParticipants                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAIPlayCaller::GetPlayParticipants(const class AHWCharacter_Base* Character, TArray<class AHWCharacter_Base*>* OutParticipants) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "GetPlayParticipants");

	Params::HWAIPlayCaller_GetPlayParticipants Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParticipants != nullptr)
		*OutParticipants = std::move(Parms.OutParticipants);
}


// Function Hemingway.HWAIPlayCaller.GetTimeInPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIPlayCaller::GetTimeInPlay(const class AHWCharacter_Base* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "GetTimeInPlay");

	Params::HWAIPlayCaller_GetTimeInPlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayCaller.IsCharacterInActivePlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIPlayCaller::IsCharacterInActivePlay(const class AHWCharacter_Base* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "IsCharacterInActivePlay");

	Params::HWAIPlayCaller_IsCharacterInActivePlay Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIPlayCaller.IsCharacterInActiveSpecificPlay
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDataTableRowHandle&       PlayId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIPlayCaller::IsCharacterInActiveSpecificPlay(const class AHWCharacter_Base* Character, const struct FDataTableRowHandle& PlayId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIPlayCaller", "IsCharacterInActiveSpecificPlay");

	Params::HWAIPlayCaller_IsCharacterInActiveSpecificPlay Parms{};

	Parms.Character = Character;
	Parms.PlayId = std::move(PlayId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGEMMC_Cooldown.BP_AdjustCooldown
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayEffectSpec&       Spec                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             InCooldownBase                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InCooldownMultiplier                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InCooldownFlatDelta                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCooldownMultiplier                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCooldownFlatDelta                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGEMMC_Cooldown::BP_AdjustCooldown(const struct FGameplayEffectSpec& Spec, const float InCooldownBase, const float InCooldownMultiplier, const float InCooldownFlatDelta, float* OutCooldownMultiplier, float* OutCooldownFlatDelta) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGEMMC_Cooldown", "BP_AdjustCooldown");

	Params::HWGEMMC_Cooldown_BP_AdjustCooldown Parms{};

	Parms.Spec = std::move(Spec);
	Parms.InCooldownBase = InCooldownBase;
	Parms.InCooldownMultiplier = InCooldownMultiplier;
	Parms.InCooldownFlatDelta = InCooldownFlatDelta;

	UObject::ProcessEvent(Func, &Parms);

	if (OutCooldownMultiplier != nullptr)
		*OutCooldownMultiplier = Parms.OutCooldownMultiplier;

	if (OutCooldownFlatDelta != nullptr)
		*OutCooldownFlatDelta = Parms.OutCooldownFlatDelta;
}


// Function Hemingway.HWPlayCallSuggestionManager.ClearPlayCallSuggestionVFX
// (Event, Protected, BlueprintEvent)

void AHWPlayCallSuggestionManager::ClearPlayCallSuggestionVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayCallSuggestionManager", "ClearPlayCallSuggestionVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPlayCallSuggestionManager.CreatePlayCallSuggestionVFX
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   P0                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   P1                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Tangent0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Tangent1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartSegment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEndSegment                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayCallSuggestionManager::CreatePlayCallSuggestionVFX(const struct FVector& P0, const struct FVector& P1, const struct FVector& Tangent0, const struct FVector& Tangent1, bool bStartSegment, bool bEndSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayCallSuggestionManager", "CreatePlayCallSuggestionVFX");

	Params::HWPlayCallSuggestionManager_CreatePlayCallSuggestionVFX Parms{};

	Parms.P0 = std::move(P0);
	Parms.P1 = std::move(P1);
	Parms.Tangent0 = std::move(Tangent0);
	Parms.Tangent1 = std::move(Tangent1);
	Parms.bStartSegment = bStartSegment;
	Parms.bEndSegment = bEndSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWPlayCallSuggestionManager.HandleEndSuggestion
// (Event, Protected, BlueprintEvent)

void AHWPlayCallSuggestionManager::HandleEndSuggestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayCallSuggestionManager", "HandleEndSuggestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPlayCallSuggestionManager.HandleStartSuggestion
// (Event, Protected, BlueprintEvent)

void AHWPlayCallSuggestionManager::HandleStartSuggestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayCallSuggestionManager", "HandleStartSuggestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPlayCallSuggestionManager.OnRep_PlayCallSuggestion
// (Final, Native, Protected)

void AHWPlayCallSuggestionManager::OnRep_PlayCallSuggestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayCallSuggestionManager", "OnRep_PlayCallSuggestion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerComponent.DetermineCurrentAction
// (Final, Native, Protected, BlueprintCallable)

void UHWAIReasonerComponent::DetermineCurrentAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "DetermineCurrentAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerComponent.GetLandmarkTargets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     TargetTags                                             (Parm, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       OutResults                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIReasonerComponent::GetLandmarkTargets(const struct FGameplayTagContainer& TargetTags, TArray<class AHWCharacter_Base*>* OutResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "GetLandmarkTargets");

	Params::HWAIReasonerComponent_GetLandmarkTargets Parms{};

	Parms.TargetTags = std::move(TargetTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResults != nullptr)
		*OutResults = std::move(Parms.OutResults);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerComponent.GetLaneByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UHWAIReasonerComponent::GetLaneByIndex(int32 Index_0, bool bSetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "GetLaneByIndex");

	Params::HWAIReasonerComponent_GetLaneByIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bSetIndex = bSetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerComponent.InitilizeBotProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWBotPropertiesDefinition* Properties                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIReasonerComponent::InitilizeBotProperties(const class UHWBotPropertiesDefinition* Properties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "InitilizeBotProperties");

	Params::HWAIReasonerComponent_InitilizeBotProperties Parms{};

	Parms.Properties = Properties;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerComponent.SelectNextLaneID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELaneSelectType                         SelectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UHWAIReasonerComponent::SelectNextLaneID(ELaneSelectType SelectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "SelectNextLaneID");

	Params::HWAIReasonerComponent_SelectNextLaneID Parms{};

	Parms.SelectType = SelectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerComponent.SetBaseActiveActions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<TSubclassOf<class UHWAIReasonerOption>>&NewOptions                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWAIReasonerComponent::SetBaseActiveActions(const TArray<TSubclassOf<class UHWAIReasonerOption>>& NewOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerComponent", "SetBaseActiveActions");

	Params::HWAIReasonerComponent_SetBaseActiveActions Parms{};

	Parms.NewOptions = std::move(NewOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerOption.CalculateWeight
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAIReasonerOption::CalculateWeight(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "CalculateWeight");

	Params::HWAIReasonerOption_CalculateWeight Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerOption.CanActivate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAIReasonerOption::CanActivate(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "CanActivate");

	Params::HWAIReasonerOption_CanActivate Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerOption.GetGameState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGameStateBase*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGameStateBase* UHWAIReasonerOption::GetGameState(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "GetGameState");

	Params::HWAIReasonerOption_GetGameState Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerOption.GetWorldFromController
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UHWAIReasonerOption::GetWorldFromController(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "GetWorldFromController");

	Params::HWAIReasonerOption_GetWorldFromController Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAIReasonerOption.StartAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIReasonerOption::StartAction(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "StartAction");

	Params::HWAIReasonerOption_StartAction Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerOption.StopAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIReasonerOption::StopAction(class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "StopAction");

	Params::HWAIReasonerOption_StopAction Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAIReasonerOption.TickAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWAIController*                  AIController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAIReasonerOption::TickAction(float DeltaTime, class AHWAIController* AIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAIReasonerOption", "TickAction");

	Params::HWAIReasonerOption_TickAction Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAISquadManager.AddSquadMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_NPC*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAISquadManager::AddSquadMember(class AHWCharacter_NPC* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "AddSquadMember");

	Params::HWAISquadManager_AddSquadMember Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAISquadManager.GetSquadMemberRelativeLocationAlongRoute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAISquadManager::GetSquadMemberRelativeLocationAlongRoute(int32 Index_0, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadMemberRelativeLocationAlongRoute");

	Params::HWAISquadManager_GetSquadMemberRelativeLocationAlongRoute Parms{};

	Parms.Index_0 = Index_0;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.OnSquadMemberAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_NPC*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAISquadManager::OnSquadMemberAdded(class AHWCharacter_NPC* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "OnSquadMemberAdded");

	Params::HWAISquadManager_OnSquadMemberAdded Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAISquadManager.RemoveSquadMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_NPC*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAISquadManager::RemoveSquadMember(class AHWCharacter_NPC* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "RemoveSquadMember");

	Params::HWAISquadManager_RemoveSquadMember Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAISquadManager.SpreadSquad
// (Final, Native, Public, BlueprintCallable)

void AHWAISquadManager::SpreadSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "SpreadSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAISquadManager.AreAllMembersWithinRange
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Center                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::AreAllMembersWithinRange(const struct FVector& Center, float Range) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "AreAllMembersWithinRange");

	Params::HWAISquadManager_AreAllMembersWithinRange Parms{};

	Parms.Center = std::move(Center);
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.CanMemberPerformSquadTactics
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_NPC*           member                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::CanMemberPerformSquadTactics(const class AHWCharacter_NPC* member) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "CanMemberPerformSquadTactics");

	Params::HWAISquadManager_CanMemberPerformSquadTactics Parms{};

	Parms.member = member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.DoesSquadHaveTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     TagsToCheck                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    bCheckAll                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::DoesSquadHaveTag(const struct FGameplayTagContainer& TagsToCheck, bool bCheckAll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "DoesSquadHaveTag");

	Params::HWAISquadManager_DoesSquadHaveTag Parms{};

	Parms.TagsToCheck = std::move(TagsToCheck);
	Parms.bCheckAll = bCheckAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.DoesSquadMemberHaveTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TagsToCheck                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    bCheckAll                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::DoesSquadMemberHaveTag(int32 Index_0, const struct FGameplayTagContainer& TagsToCheck, bool bCheckAll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "DoesSquadMemberHaveTag");

	Params::HWAISquadManager_DoesSquadMemberHaveTag Parms{};

	Parms.Index_0 = Index_0;
	Parms.TagsToCheck = std::move(TagsToCheck);
	Parms.bCheckAll = bCheckAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetBotFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWBotFactory*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWBotFactory* AHWAISquadManager::GetBotFactory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetBotFactory");

	Params::HWAISquadManager_GetBotFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWCharacter_NPC*>*        outMembers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWAISquadManager::GetMembers(TArray<class AHWCharacter_NPC*>* outMembers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetMembers");

	Params::HWAISquadManager_GetMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outMembers != nullptr)
		*outMembers = std::move(Parms.outMembers);
}


// Function Hemingway.HWAISquadManager.GetMembersAsActors
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>*                  outMembers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWAISquadManager::GetMembersAsActors(TArray<class AActor*>* outMembers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetMembersAsActors");

	Params::HWAISquadManager_GetMembersAsActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outMembers != nullptr)
		*outMembers = std::move(Parms.outMembers);
}


// Function Hemingway.HWAISquadManager.GetMembersAvgLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAISquadManager::GetMembersAvgLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetMembersAvgLocation");

	Params::HWAISquadManager_GetMembersAvgLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetSquadLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_NPC*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_NPC* AHWAISquadManager::GetSquadLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadLeader");

	Params::HWAISquadManager_GetSquadLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetSquadMemberByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_NPC*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_NPC* AHWAISquadManager::GetSquadMemberByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadMemberByIndex");

	Params::HWAISquadManager_GetSquadMemberByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetSquadMemberCombatFormationRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAISquadManager::GetSquadMemberCombatFormationRelativeLocation(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadMemberCombatFormationRelativeLocation");

	Params::HWAISquadManager_GetSquadMemberCombatFormationRelativeLocation Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetSquadMemberRelativeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAISquadManager::GetSquadMemberRelativeLocation(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadMemberRelativeLocation");

	Params::HWAISquadManager_GetSquadMemberRelativeLocation Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.GetSquadTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWAISquadManager::GetSquadTeamNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "GetSquadTeamNum");

	Params::HWAISquadManager_GetSquadTeamNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.IsMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_NPC*           Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::IsMember(const class AHWCharacter_NPC* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "IsMember");

	Params::HWAISquadManager_IsMember Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.IsMerged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::IsMerged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "IsMerged");

	Params::HWAISquadManager_IsMerged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAISquadManager.IsSquadInCombat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAISquadManager::IsSquadInCombat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAISquadManager", "IsSquadInCombat");

	Params::HWAISquadManager_IsSquadInCombat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.ApplyDynamicSubLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           SubLevel                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWDynamicSubLevelHandle         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHWDynamicSubLevelHandle AHWGameState::ApplyDynamicSubLevel(class UWorld* SubLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "ApplyDynamicSubLevel");

	Params::HWGameState_ApplyDynamicSubLevel Parms{};

	Parms.SubLevel = SubLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.ApplyDynamicSubLevelBySoftObjectPtr
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UWorld>            SubLevel                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWDynamicSubLevelHandle         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHWDynamicSubLevelHandle AHWGameState::ApplyDynamicSubLevelBySoftObjectPtr(TSoftObjectPtr<class UWorld> SubLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "ApplyDynamicSubLevelBySoftObjectPtr");

	Params::HWGameState_ApplyDynamicSubLevelBySoftObjectPtr Parms{};

	Parms.SubLevel = SubLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.CacheStartingPropertiesForStats
// (Final, Native, Public)

void AHWGameState::CacheStartingPropertiesForStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "CacheStartingPropertiesForStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.GamePhaseEnding
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// const struct FGameplayTag&              EndingPhase                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::GamePhaseEnding(const struct FGameplayTag& EndingPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GamePhaseEnding");

	Params::HWGameState_GamePhaseEnding Parms{};

	Parms.EndingPhase = std::move(EndingPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.GamePhaseStarting
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// const struct FGameplayTag&              NewPhase                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::GamePhaseStarting(const struct FGameplayTag& NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GamePhaseStarting");

	Params::HWGameState_GamePhaseStarting Parms{};

	Parms.NewPhase = std::move(NewPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.GenerateNextClientOnlyProjectileInstanceId
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GenerateNextClientOnlyProjectileInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GenerateNextClientOnlyProjectileInstanceId");

	Params::HWGameState_GenerateNextClientOnlyProjectileInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GenerateNextProjectileInstanceId
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GenerateNextProjectileInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GenerateNextProjectileInstanceId");

	Params::HWGameState_GenerateNextProjectileInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetGudSendStartGame
// (Final, Native, Protected)

void AHWGameState::GetGudSendStartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetGudSendStartGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.GetTeamCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GetTeamCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTeamCount");

	Params::HWGameState_GetTeamCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetWaypointSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AHWWaypointSet*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypointSet* AHWGameState::GetWaypointSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetWaypointSet");

	Params::HWGameState_GetWaypointSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.HandleTeamKillsUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewTeamKills                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::HandleTeamKillsUpdated(class AHWTeamState* TeamState, int32 NewTeamKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "HandleTeamKillsUpdated");

	Params::HWGameState_HandleTeamKillsUpdated Parms{};

	Parms.TeamState = TeamState;
	Parms.NewTeamKills = NewTeamKills;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.HandleTeamStatsTrackerReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamStatsTracker*              TeamStatsTracker                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::HandleTeamStatsTrackerReplicated(class AHWTeamState* TeamState, class AHWTeamStatsTracker* TeamStatsTracker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "HandleTeamStatsTrackerReplicated");

	Params::HWGameState_HandleTeamStatsTrackerReplicated Parms{};

	Parms.TeamState = TeamState;
	Parms.TeamStatsTracker = TeamStatsTracker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MarkAllPlayersConnected
// (Final, Native, Public)
// Parameters:
// bool                                    bAreAllConnected                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::MarkAllPlayersConnected(bool bAreAllConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MarkAllPlayersConnected");

	Params::HWGameState_MarkAllPlayersConnected Parms{};

	Parms.bAreAllConnected = bAreAllConnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MulticastNotifyGameFeedEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     EventInstigator                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Affected                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UObject*>&           Info                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHWGameState::MulticastNotifyGameFeedEvent(const struct FGameplayTag& EventTag, const class AActor* EventInstigator, const class AActor* Affected, const TArray<class UObject*>& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MulticastNotifyGameFeedEvent");

	Params::HWGameState_MulticastNotifyGameFeedEvent Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventInstigator = EventInstigator;
	Parms.Affected = Affected;
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MulticastPlayerDraftChoiceUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           Choice                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::MulticastPlayerDraftChoiceUpdated(class AHWPlayerState* PlayerState, const class UHWCharacterItem* Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MulticastPlayerDraftChoiceUpdated");

	Params::HWGameState_MulticastPlayerDraftChoiceUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Choice = Choice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MulticastSendGameplayEventToActor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void AHWGameState::MulticastSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MulticastSendGameplayEventToActor");

	Params::HWGameState_MulticastSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MulticastUpdatePauseState
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// bool                                    bInIsPaused                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InPausingTeam                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDateTime&                 InPauseStartTime                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::MulticastUpdatePauseState(bool bInIsPaused, class AHWTeamState* InPausingTeam, const struct FDateTime& InPauseStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MulticastUpdatePauseState");

	Params::HWGameState_MulticastUpdatePauseState Parms{};

	Parms.bInIsPaused = bInIsPaused;
	Parms.InPausingTeam = InPausingTeam;
	Parms.InPauseStartTime = std::move(InPauseStartTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.MulticastUpdateUnpauseDelay
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   UnpauseDelayRemaining                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::MulticastUpdateUnpauseDelay(int32 UnpauseDelayRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "MulticastUpdateUnpauseDelay");

	Params::HWGameState_MulticastUpdateUnpauseDelay Parms{};

	Parms.UnpauseDelayRemaining = UnpauseDelayRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_ChatManager
// (Final, Native, Protected)

void AHWGameState::OnRep_ChatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_ChatManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_CurrentPhaseConfig
// (Final, Native, Protected)

void AHWGameState::OnRep_CurrentPhaseConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_CurrentPhaseConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_GameStatsTracker
// (Final, Native, Protected)

void AHWGameState::OnRep_GameStatsTracker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_GameStatsTracker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_IsPaused
// (Final, Native, Protected)

void AHWGameState::OnRep_IsPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_IsPaused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_MatchDeserted
// (Final, Native, Protected)

void AHWGameState::OnRep_MatchDeserted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_MatchDeserted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_PauseStartTime
// (Final, Native, Protected)

void AHWGameState::OnRep_PauseStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_PauseStartTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_PausingTeam
// (Final, Native, Protected)

void AHWGameState::OnRep_PausingTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_PausingTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_PingManager
// (Final, Native, Protected)

void AHWGameState::OnRep_PingManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_PingManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_TeamPlacementOrder
// (Final, Native, Protected)

void AHWGameState::OnRep_TeamPlacementOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_TeamPlacementOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_Teams
// (Final, Native, Protected)

void AHWGameState::OnRep_Teams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_Teams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_TransitionInfoTag
// (Final, Native, Protected)

void AHWGameState::OnRep_TransitionInfoTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_TransitionInfoTag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_UploadPex
// (Final, Native, Protected)

void AHWGameState::OnRep_UploadPex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_UploadPex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OnRep_VGSManager
// (Final, Native, Protected)

void AHWGameState::OnRep_VGSManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OnRep_VGSManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.OwningClientSendGameplayEventToActor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void AHWGameState::OwningClientSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "OwningClientSendGameplayEventToActor");

	Params::HWGameState_OwningClientSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.RemoveDynamicSubLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWDynamicSubLevelHandle&  LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWGameState::RemoveDynamicSubLevel(const struct FHWDynamicSubLevelHandle& LevelHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "RemoveDynamicSubLevel");

	Params::HWGameState_RemoveDynamicSubLevel Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.ServerSendGameplayEventToActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void AHWGameState::ServerSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "ServerSendGameplayEventToActor");

	Params::HWGameState_ServerSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.SetAbilitiesCanBeCanceledPreFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bOn                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::SetAbilitiesCanBeCanceledPreFire(const bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "SetAbilitiesCanBeCanceledPreFire");

	Params::HWGameState_SetAbilitiesCanBeCanceledPreFire Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.SetDynamicSubLevelInvisible
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWDynamicSubLevelHandle&  LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWGameState::SetDynamicSubLevelInvisible(const struct FHWDynamicSubLevelHandle& LevelHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "SetDynamicSubLevelInvisible");

	Params::HWGameState_SetDynamicSubLevelInvisible Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.SetDynamicSubLevelVisible
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWDynamicSubLevelHandle&  LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWGameState::SetDynamicSubLevelVisible(const struct FHWDynamicSubLevelHandle& LevelHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "SetDynamicSubLevelVisible");

	Params::HWGameState_SetDynamicSubLevelVisible Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.SetPauseState
// (Final, Native, Public, HasDefaults)
// Parameters:
// bool                                    bInIsPaused                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InPausingTeam                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDateTime&                 InPauseStartTime                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState::SetPauseState(bool bInIsPaused, class AHWTeamState* InPausingTeam, const struct FDateTime& InPauseStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "SetPauseState");

	Params::HWGameState_SetPauseState Parms{};

	Parms.bInIsPaused = bInIsPaused;
	Parms.InPausingTeam = InPausingTeam;
	Parms.InPauseStartTime = std::move(InPauseStartTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState.TeamCaresAboutObservingOthersInMinimap
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::TeamCaresAboutObservingOthersInMinimap(const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "TeamCaresAboutObservingOthersInMinimap");

	Params::HWGameState_TeamCaresAboutObservingOthersInMinimap Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.CanAbilitiesBeCanceledPreFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::CanAbilitiesBeCanceledPreFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "CanAbilitiesBeCanceledPreFire");

	Params::HWGameState_CanAbilitiesBeCanceledPreFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.CanEarlySurrender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::CanEarlySurrender(int32 TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "CanEarlySurrender");

	Params::HWGameState_CanEarlySurrender Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetAladdinArenaManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWAladdinArenaManager*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWAladdinArenaManager* AHWGameState::GetAladdinArenaManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetAladdinArenaManager");

	Params::HWGameState_GetAladdinArenaManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetAllBotFactories
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWBotFactory*>*           outBotFactories                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWGameState::GetAllBotFactories(TArray<class AHWBotFactory*>* outBotFactories) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetAllBotFactories");

	Params::HWGameState_GetAllBotFactories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outBotFactories != nullptr)
		*outBotFactories = std::move(Parms.outBotFactories);
}


// Function Hemingway.HWGameState.GetAllBotFactoriesWithAssetTags
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagRequirements&  TagRequirements                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWBotFactory*>*           outFactories                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWGameState::GetAllBotFactoriesWithAssetTags(const struct FGameplayTagRequirements& TagRequirements, TArray<class AHWBotFactory*>* outFactories) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetAllBotFactoriesWithAssetTags");

	Params::HWGameState_GetAllBotFactoriesWithAssetTags Parms{};

	Parms.TagRequirements = std::move(TagRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outFactories != nullptr)
		*outFactories = std::move(Parms.outFactories);
}


// Function Hemingway.HWGameState.GetAudioManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameAudioManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameAudioManagerComponent* AHWGameState::GetAudioManagerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetAudioManagerComponent");

	Params::HWGameState_GetAudioManagerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetChatManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWChatManager*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWChatManager* AHWGameState::GetChatManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetChatManager");

	Params::HWGameState_GetChatManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentGamePhaseTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWGameState::GetCurrentGamePhaseTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentGamePhaseTag");

	Params::HWGameState_GetCurrentGamePhaseTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentPhaseConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWGamePhaseConfig         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FHWGamePhaseConfig AHWGameState::GetCurrentPhaseConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentPhaseConfig");

	Params::HWGameState_GetCurrentPhaseConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentPhaseDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameState::GetCurrentPhaseDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentPhaseDuration");

	Params::HWGameState_GetCurrentPhaseDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentPhaseElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameState::GetCurrentPhaseElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentPhaseElapsedTime");

	Params::HWGameState_GetCurrentPhaseElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentPhaseRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameState::GetCurrentPhaseRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentPhaseRemainingTime");

	Params::HWGameState_GetCurrentPhaseRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetCurrentPhaseStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameState::GetCurrentPhaseStartTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetCurrentPhaseStartTime");

	Params::HWGameState_GetCurrentPhaseStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetDisplayInfoManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWDisplayInfoManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWDisplayInfoManager* AHWGameState::GetDisplayInfoManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetDisplayInfoManager");

	Params::HWGameState_GetDisplayInfoManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetEventManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWEventManager*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWEventManager* AHWGameState::GetEventManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetEventManager");

	Params::HWGameState_GetEventManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetGameStatsTracker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWGameStatsTracker*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameStatsTracker* AHWGameState::GetGameStatsTracker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetGameStatsTracker");

	Params::HWGameState_GetGameStatsTracker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetHaveAllPlayersInitiallyConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::GetHaveAllPlayersInitiallyConnected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetHaveAllPlayersInitiallyConnected");

	Params::HWGameState_GetHaveAllPlayersInitiallyConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetLocalPlayerTeamPlacementOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GetLocalPlayerTeamPlacementOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetLocalPlayerTeamPlacementOrder");

	Params::HWGameState_GetLocalPlayerTeamPlacementOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetMatchActivePhaseTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWGameState::GetMatchActivePhaseTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetMatchActivePhaseTime");

	Params::HWGameState_GetMatchActivePhaseTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetOpposingTeams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            FriendlyTeamId                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeNeutralTeam                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWTeamState*>*            OutOpposingTeams                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::GetOpposingTeams(const struct FGenericTeamId& FriendlyTeamId, bool bIncludeNeutralTeam, TArray<class AHWTeamState*>* OutOpposingTeams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetOpposingTeams");

	Params::HWGameState_GetOpposingTeams Parms{};

	Parms.FriendlyTeamId = std::move(FriendlyTeamId);
	Parms.bIncludeNeutralTeam = bIncludeNeutralTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOpposingTeams != nullptr)
		*OutOpposingTeams = std::move(Parms.OutOpposingTeams);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetPingManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPingManager*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPingManager* AHWGameState::GetPingManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetPingManager");

	Params::HWGameState_GetPingManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* AHWGameState::GetPlayer(const struct FHWPersistentPlayerId& PlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetPlayer");

	Params::HWGameState_GetPlayer Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetSimulatedProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ProjectileId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWProjectile*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWProjectile* AHWGameState::GetSimulatedProjectile(const int32 ProjectileId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetSimulatedProjectile");

	Params::HWGameState_GetSimulatedProjectile Parms{};

	Parms.ProjectileId = ProjectileId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* AHWGameState::GetTeam(const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTeam");

	Params::HWGameState_GetTeam Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetTeamPlacementOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class APlayerController*          PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GetTeamPlacementOrder(const class APlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTeamPlacementOrder");

	Params::HWGameState_GetTeamPlacementOrder Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetTeamPlacementOrderWithTeamId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState::GetTeamPlacementOrderWithTeamId(const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTeamPlacementOrderWithTeamId");

	Params::HWGameState_GetTeamPlacementOrderWithTeamId Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetTeams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWTeamState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AHWTeamState*> AHWGameState::GetTeams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTeams");

	Params::HWGameState_GetTeams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetTransitionInfoTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWGameState::GetTransitionInfoTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetTransitionInfoTag");

	Params::HWGameState_GetTransitionInfoTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.GetVGSManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWVGSManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWVGSManager* AHWGameState::GetVGSManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "GetVGSManager");

	Params::HWGameState_GetVGSManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.IsDyanmicSubLevelVisible
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWDynamicSubLevelHandle&  LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::IsDyanmicSubLevelVisible(const struct FHWDynamicSubLevelHandle& LevelHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "IsDyanmicSubLevelVisible");

	Params::HWGameState_IsDyanmicSubLevelVisible Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.IsDynamicSubLevelLoaded
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWDynamicSubLevelHandle&  LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::IsDynamicSubLevelLoaded(const struct FHWDynamicSubLevelHandle& LevelHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "IsDynamicSubLevelLoaded");

	Params::HWGameState_IsDynamicSubLevelLoaded Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.IsMatchDeserted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::IsMatchDeserted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "IsMatchDeserted");

	Params::HWGameState_IsMatchDeserted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState.IsTutorialAnnouncementsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameState::IsTutorialAnnouncementsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState", "IsTutorialAnnouncementsEnabled");

	Params::HWGameState_IsTutorialAnnouncementsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_DraftLobby.CharacterSwapRequestTimedOut
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FPGame_ReplicatedTimerId&  InTimerId                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TradeId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_DraftLobby::CharacterSwapRequestTimedOut(const struct FPGame_ReplicatedTimerId& InTimerId, int32 TradeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_DraftLobby", "CharacterSwapRequestTimedOut");

	Params::HWGameState_DraftLobby_CharacterSwapRequestTimedOut Parms{};

	Parms.InTimerId = std::move(InTimerId);
	Parms.TradeId = TradeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_DraftLobby.OnRep_AppliedTeamBoosters
// (Final, Native, Protected)

void AHWGameState_DraftLobby::OnRep_AppliedTeamBoosters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_DraftLobby", "OnRep_AppliedTeamBoosters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_DraftLobby.OnRep_GrantedSkins
// (Final, Native, Protected)

void AHWGameState_DraftLobby::OnRep_GrantedSkins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_DraftLobby", "OnRep_GrantedSkins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_DraftLobby.RoleSwapRequestTimedOut
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FPGame_ReplicatedTimerId&  InTimerId                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TradeId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_DraftLobby::RoleSwapRequestTimedOut(const struct FPGame_ReplicatedTimerId& InTimerId, int32 TradeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_DraftLobby", "RoleSwapRequestTimedOut");

	Params::HWGameState_DraftLobby_RoleSwapRequestTimedOut Parms{};

	Parms.InTimerId = std::move(InTimerId);
	Parms.TradeId = TradeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_DraftLobby.ServerRequestRole
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AHWPlayerState*                   RequestingPlayerState                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterRole                          CharacterRole                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_DraftLobby::ServerRequestRole(class AHWPlayerState* RequestingPlayerState, ECharacterRole CharacterRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_DraftLobby", "ServerRequestRole");

	Params::HWGameState_DraftLobby_ServerRequestRole Parms{};

	Parms.RequestingPlayerState = RequestingPlayerState;
	Parms.CharacterRole = CharacterRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAITugOfWarManager.UpdateTugOfWarValue
// (Final, Native, Protected)

void AHWAITugOfWarManager::UpdateTugOfWarValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "UpdateTugOfWarValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAITugOfWarManager.CalculateFormationLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              RoleTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutFormationOffset                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::CalculateFormationLocation(const struct FGenericTeamId& Team, const struct FGameplayTag& RoleTag, struct FVector2D* OutFormationOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "CalculateFormationLocation");

	Params::HWAITugOfWarManager_CalculateFormationLocation Parms{};

	Parms.Team = std::move(Team);
	Parms.RoleTag = std::move(RoleTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFormationOffset != nullptr)
		*OutFormationOffset = std::move(Parms.OutFormationOffset);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.CalculateFormationLocationWithForwardOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              RoleTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ForwardOffset                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutFormationOffset                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::CalculateFormationLocationWithForwardOffset(const struct FGenericTeamId& Team, const struct FGameplayTag& RoleTag, const float ForwardOffset, struct FVector2D* OutFormationOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "CalculateFormationLocationWithForwardOffset");

	Params::HWAITugOfWarManager_CalculateFormationLocationWithForwardOffset Parms{};

	Parms.Team = std::move(Team);
	Parms.RoleTag = std::move(RoleTag);
	Parms.ForwardOffset = ForwardOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFormationOffset != nullptr)
		*OutFormationOffset = std::move(Parms.OutFormationOffset);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.GetCharacterDistanceFromFront
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAITugOfWarManager::GetCharacterDistanceFromFront(const class AHWCharacter_Base* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "GetCharacterDistanceFromFront");

	Params::HWAITugOfWarManager_GetCharacterDistanceFromFront Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.GetSafeZoneForTeam
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutMinBounds                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutMaxBounds                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::GetSafeZoneForTeam(const struct FGenericTeamId& Team, struct FVector2D* OutMinBounds, struct FVector2D* OutMaxBounds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "GetSafeZoneForTeam");

	Params::HWAITugOfWarManager_GetSafeZoneForTeam Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMinBounds != nullptr)
		*OutMinBounds = std::move(Parms.OutMinBounds);

	if (OutMaxBounds != nullptr)
		*OutMaxBounds = std::move(Parms.OutMaxBounds);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.GetSafeZoneFrontForTeam
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutFrontLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::GetSafeZoneFrontForTeam(const struct FGenericTeamId& Team, struct FVector2D* OutFrontLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "GetSafeZoneFrontForTeam");

	Params::HWAITugOfWarManager_GetSafeZoneFrontForTeam Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFrontLocation != nullptr)
		*OutFrontLocation = std::move(Parms.OutFrontLocation);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.GetTugOfWarValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWAITugOfWarManager::GetTugOfWarValue(const struct FGenericTeamId& Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "GetTugOfWarValue");

	Params::HWAITugOfWarManager_GetTugOfWarValue Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.IsCharacterSafe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::IsCharacterSafe(const class AHWCharacter_Base* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "IsCharacterSafe");

	Params::HWAITugOfWarManager_IsCharacterSafe Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.IsLocationInSafeZoneForTeam
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAITugOfWarManager::IsLocationInSafeZoneForTeam(const struct FVector& Location, const struct FGenericTeamId& Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "IsLocationInSafeZoneForTeam");

	Params::HWAITugOfWarManager_IsLocationInSafeZoneForTeam Parms{};

	Parms.Location = std::move(Location);
	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAITugOfWarManager.ProjectCharacterLocationToSafeDistance
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DistanceBuffer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWAITugOfWarManager::ProjectCharacterLocationToSafeDistance(const class AHWCharacter_Base* Character, float DistanceBuffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAITugOfWarManager", "ProjectCharacterLocationToSafeDistance");

	Params::HWAITugOfWarManager_ProjectCharacterLocationToSafeDistance Parms{};

	Parms.Character = Character;
	Parms.DistanceBuffer = DistanceBuffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAnimInst_Danzaburou_A01_Deployable.FlipPlayrate
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const struct FHitResult&                ImpactResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FVector&                   ImpactVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAnimInst_Danzaburou_A01_Deployable::FlipPlayrate(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAnimInst_Danzaburou_A01_Deployable", "FlipPlayrate");

	Params::HWAnimInst_Danzaburou_A01_Deployable_FlipPlayrate Parms{};

	Parms.ImpactResult = std::move(ImpactResult);
	Parms.ImpactVelocity = std::move(ImpactVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.bIsUsingCustomProfile
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayLevitate::bIsUsingCustomProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "bIsUsingCustomProfile");

	Params::HWGameplayLevitate_bIsUsingCustomProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayLevitate.CleanseLevitation
// (Final, Native, Public)

void UHWGameplayLevitate::CleanseLevitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "CleanseLevitation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.OnAscentTweenEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayLevitate::OnAscentTweenEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "OnAscentTweenEnded");

	Params::HWGameplayLevitate_OnAscentTweenEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.OnAscentTweenStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayLevitate::OnAscentTweenStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "OnAscentTweenStarted");

	Params::HWGameplayLevitate_OnAscentTweenStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.OnDescentTweenEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayLevitate::OnDescentTweenEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "OnDescentTweenEnded");

	Params::HWGameplayLevitate_OnDescentTweenEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.OnDescentTweenStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayLevitate::OnDescentTweenStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "OnDescentTweenStarted");

	Params::HWGameplayLevitate_OnDescentTweenStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.OnLevitationHoverEnded
// (Final, Native, Protected)

void UHWGameplayLevitate::OnLevitationHoverEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "OnLevitationHoverEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.StartAscentTween
// (Final, Native, Protected)

void UHWGameplayLevitate::StartAscentTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "StartAscentTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.StartDescentTween
// (Final, Native, Protected)

void UHWGameplayLevitate::StartDescentTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "StartDescentTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.TriggerEarlyLevitationEnd
// (Final, Native, Public)

void UHWGameplayLevitate::TriggerEarlyLevitationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "TriggerEarlyLevitationEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayLevitate.DoesAllowCleansingLevitate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayLevitate::DoesAllowCleansingLevitate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "DoesAllowCleansingLevitate");

	Params::HWGameplayLevitate_DoesAllowCleansingLevitate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayLevitate.GetLevitationIdTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayLevitate::GetLevitationIdTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayLevitate", "GetLevitationIdTag");

	Params::HWGameplayLevitate_GetLevitationIdTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.AddAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              ComponentTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  AudioComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAudioSubsystem::AddAudioComponent(const struct FGameplayTag& ComponentTag, class UAudioComponent* AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "AddAudioComponent");

	Params::HWAudioSubsystem_AddAudioComponent Parms{};

	Parms.ComponentTag = std::move(ComponentTag);
	Parms.AudioComponent = AudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.AudioSettingsUpdated
// (Final, Native, Public, BlueprintCallable)

void UHWAudioSubsystem::AudioSettingsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "AudioSettingsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.AudioTypeTableLoaded
// (Final, Native, Protected)

void UHWAudioSubsystem::AudioTypeTableLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "AudioTypeTableLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.FadeOutCurrentStinger
// (Final, Native, Protected)

void UHWAudioSubsystem::FadeOutCurrentStinger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "FadeOutCurrentStinger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.OnDefaultAnnouncerPackLoaded
// (Final, Native, Protected)

void UHWAudioSubsystem::OnDefaultAnnouncerPackLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "OnDefaultAnnouncerPackLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.OnGlobalDefaultMusicLoaded
// (Final, Native, Protected)

void UHWAudioSubsystem::OnGlobalDefaultMusicLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "OnGlobalDefaultMusicLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.PauseCurrentMusicTrack
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UHWAudioSubsystem::PauseCurrentMusicTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "PauseCurrentMusicTrack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.PlayMusicTrack
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWAudioTrackPlayInfo&     TrackPlayInfo                                          (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const class UHWMusicPackItem*           MusicPack                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWAudioSubsystem::PlayMusicTrack(const struct FHWAudioTrackPlayInfo& TrackPlayInfo, const class UHWMusicPackItem* MusicPack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "PlayMusicTrack");

	Params::HWAudioSubsystem_PlayMusicTrack Parms{};

	Parms.TrackPlayInfo = std::move(TrackPlayInfo);
	Parms.MusicPack = MusicPack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.PlayStinger
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWAudioStingerPlayInfo&   StingerPlayInfo                                        (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWAudioSubsystem::PlayStinger(const struct FHWAudioStingerPlayInfo& StingerPlayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "PlayStinger");

	Params::HWAudioSubsystem_PlayStinger Parms{};

	Parms.StingerPlayInfo = std::move(StingerPlayInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.PlayVOAnnouncement
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const struct FAssetRequestKey&          AnnouncementAssetKey                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWAudioSubsystem::PlayVOAnnouncement(const struct FAssetRequestKey& AnnouncementAssetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "PlayVOAnnouncement");

	Params::HWAudioSubsystem_PlayVOAnnouncement Parms{};

	Parms.AnnouncementAssetKey = std::move(AnnouncementAssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.RemoveAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              ComponentTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAudioSubsystem::RemoveAudioComponent(const struct FGameplayTag& ComponentTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "RemoveAudioComponent");

	Params::HWAudioSubsystem_RemoveAudioComponent Parms{};

	Parms.ComponentTag = std::move(ComponentTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.ResumeCurrentMusicTrack
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UHWAudioSubsystem::ResumeCurrentMusicTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "ResumeCurrentMusicTrack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.VolumeLoweringTableLoaded
// (Final, Native, Protected)

void UHWAudioSubsystem::VolumeLoweringTableLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "VolumeLoweringTableLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioSubsystem.DoesAudioComponentExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              ComponentTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAudioSubsystem::DoesAudioComponentExist(const struct FGameplayTag& ComponentTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "DoesAudioComponentExist");

	Params::HWAudioSubsystem_DoesAudioComponentExist Parms{};

	Parms.ComponentTag = std::move(ComponentTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAudioSubsystem.GetAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              ComponentTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UHWAudioSubsystem::GetAudioComponent(const struct FGameplayTag& ComponentTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioSubsystem", "GetAudioComponent");

	Params::HWAudioSubsystem_GetAudioComponent Parms{};

	Parms.ComponentTag = std::move(ComponentTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Bari_BellRicochetAiming.GetBariBellToShoot
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWDeployable_Bari_A01*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWDeployable_Bari_A01* IHWInterface_Bari_BellRicochetAiming::GetBariBellToShoot(const int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Bari_BellRicochetAiming", "GetBariBellToShoot");

	Params::HWInterface_Bari_BellRicochetAiming_GetBariBellToShoot Parms{};

	Parms.Index_0 = Index_0;

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Bari_BellRicochetAiming.GetBariBellToShootAimTargetingInfo
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWTargetData_LocationInfo ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FHWTargetData_LocationInfo IHWInterface_Bari_BellRicochetAiming::GetBariBellToShootAimTargetingInfo(const int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Bari_BellRicochetAiming", "GetBariBellToShootAimTargetingInfo");

	Params::HWInterface_Bari_BellRicochetAiming_GetBariBellToShootAimTargetingInfo Parms{};

	Parms.Index_0 = Index_0;

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_RefireAbility.Refire
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWEquipmentComponent_Refireable* RefireComponent                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityRefireInfo&      RefireInfo                                             (Parm, NativeAccessSpecifierPublic)
// const float                             ElapsedRefireTime                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_RefireAbility::Refire(class UHWEquipmentComponent_Refireable* RefireComponent, const struct FHWAbilityRefireInfo& RefireInfo, const float ElapsedRefireTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_RefireAbility", "Refire");

	Params::HWInterface_RefireAbility_Refire Parms{};

	Parms.RefireComponent = RefireComponent;
	Parms.RefireInfo = std::move(RefireInfo);
	Parms.ElapsedRefireTime = ElapsedRefireTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_RefireAbility.CanRefire
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentComponent_Refireable*RefireComponent                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityRefireInfo&      RefireInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilitySystemComponent*  AbilitySystem                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     SourceTags                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TargetTags                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_RefireAbility::CanRefire(const class UHWEquipmentComponent_Refireable* RefireComponent, const struct FHWAbilityRefireInfo& RefireInfo, const class UHWAbilitySystemComponent* AbilitySystem, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& TargetTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_RefireAbility", "CanRefire");

	Params::HWInterface_RefireAbility_CanRefire Parms{};

	Parms.RefireComponent = RefireComponent;
	Parms.RefireInfo = std::move(RefireInfo);
	Parms.AbilitySystem = AbilitySystem;
	Parms.SourceTags = std::move(SourceTags);
	Parms.TargetTags = std::move(TargetTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_CallToAction.GetCTAAffixPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHWCallToActionAffixPath                AffixPath                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UHWLibrary_CallToAction::GetCTAAffixPath(EHWCallToActionAffixPath AffixPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_CallToAction", "GetCTAAffixPath");

	Params::HWLibrary_CallToAction_GetCTAAffixPath Parms{};

	Parms.AffixPath = AffixPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_CallToAction.GetCTAAffixPaths
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<EHWCallToActionAffixPath>& AffixPaths                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UHWLibrary_CallToAction::GetCTAAffixPaths(const TArray<EHWCallToActionAffixPath>& AffixPaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_CallToAction", "GetCTAAffixPaths");

	Params::HWLibrary_CallToAction_GetCTAAffixPaths Parms{};

	Parms.AffixPaths = std::move(AffixPaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_CallToAction.GetCTACollectionAffixPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHWCollectionItemType                   CollectionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UHWLibrary_CallToAction::GetCTACollectionAffixPath(EHWCollectionItemType CollectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_CallToAction", "GetCTACollectionAffixPath");

	Params::HWLibrary_CallToAction_GetCTACollectionAffixPath Parms{};

	Parms.CollectionType = CollectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_CallToAction.SetCTASeenByItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWInventoryItem*           InventoryItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCallToActionAffixPath                Preffix                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCallToActionAffixPath                Suffix                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SeenAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_CallToAction::SetCTASeenByItem(const class UObject* WorldContext, const class UHWInventoryItem* InventoryItem, EHWCallToActionAffixPath Preffix, EHWCallToActionAffixPath Suffix, int32 SeenAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_CallToAction", "SetCTASeenByItem");

	Params::HWLibrary_CallToAction_SetCTASeenByItem Parms{};

	Parms.WorldContext = WorldContext;
	Parms.InventoryItem = InventoryItem;
	Parms.Preffix = Preffix;
	Parms.Suffix = Suffix;
	Parms.SeenAmount = SeenAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_CallToAction.SetCTASeenByItemPtr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWInventoryItem>  InventoryItemPtr                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCallToActionAffixPath                Preffix                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCallToActionAffixPath                Suffix                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SeenAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_CallToAction::SetCTASeenByItemPtr(const class UObject* WorldContext, TSoftObjectPtr<class UHWInventoryItem> InventoryItemPtr, EHWCallToActionAffixPath Preffix, EHWCallToActionAffixPath Suffix, int32 SeenAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_CallToAction", "SetCTASeenByItemPtr");

	Params::HWLibrary_CallToAction_SetCTASeenByItemPtr Parms{};

	Parms.WorldContext = WorldContext;
	Parms.InventoryItemPtr = InventoryItemPtr;
	Parms.Preffix = Preffix;
	Parms.Suffix = Suffix;
	Parms.SeenAmount = SeenAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_GameplayMovementActor.SetLobGroundTargetLocation
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InGroundTargetLocation                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_GameplayMovementActor::SetLobGroundTargetLocation(const struct FVector& InGroundTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_GameplayMovementActor", "SetLobGroundTargetLocation");

	Params::HWInterface_GameplayMovementActor_SetLobGroundTargetLocation Parms{};

	Parms.InGroundTargetLocation = std::move(InGroundTargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_GameplayMovementActor.SetMovementRange
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_GameplayMovementActor::SetMovementRange(const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_GameplayMovementActor", "SetMovementRange");

	Params::HWInterface_GameplayMovementActor_SetMovementRange Parms{};

	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_GameplayMovementActor.GetLobGroundTargetLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IHWInterface_GameplayMovementActor::GetLobGroundTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_GameplayMovementActor", "GetLobGroundTargetLocation");

	Params::HWInterface_GameplayMovementActor_GetLobGroundTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_GameplayMovementActor.GetMovementRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IHWInterface_GameplayMovementActor::GetMovementRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_GameplayMovementActor", "GetMovementRange");

	Params::HWInterface_GameplayMovementActor_GetMovementRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAttributeSet_KingArthur.OnRep_Energy
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_KingArthur::OnRep_Energy(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_KingArthur", "OnRep_Energy");

	Params::HWAttributeSet_KingArthur_OnRep_Energy Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_KingArthur.OnRep_EnergyPerTime
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_KingArthur::OnRep_EnergyPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_KingArthur", "OnRep_EnergyPerTime");

	Params::HWAttributeSet_KingArthur_OnRep_EnergyPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSettingsSubsystem.HandleAbilitySystemActorReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharASA                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSettingsSubsystem::HandleAbilitySystemActorReplicated(class AHWPlayerState* PlayerState, class AHWCharacterAbilitySystemActor* CharASA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSettingsSubsystem", "HandleAbilitySystemActorReplicated");

	Params::HWGodSettingsSubsystem_HandleAbilitySystemActorReplicated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.CharASA = CharASA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSettingsSubsystem.HandleCharacterItemUpdated
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class IHWInterface_LoadoutManagement>LoadoutOwner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSettingsSubsystem::HandleCharacterItemUpdated(TScriptInterface<class IHWInterface_LoadoutManagement> LoadoutOwner, const class UHWCharacterItem* CharacterItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSettingsSubsystem", "HandleCharacterItemUpdated");

	Params::HWGodSettingsSubsystem_HandleCharacterItemUpdated Parms{};

	Parms.LoadoutOwner = LoadoutOwner;
	Parms.CharacterItem = CharacterItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSettingsSubsystem.HandleGodLoadoutReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWGodLoadout&             GodLoadout                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGodSettingsSubsystem::HandleGodLoadoutReceived(const class UHWCharacterItem* CharacterItem, const struct FHWGodLoadout& GodLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSettingsSubsystem", "HandleGodLoadoutReceived");

	Params::HWGodSettingsSubsystem_HandleGodLoadoutReceived Parms{};

	Parms.CharacterItem = CharacterItem;
	Parms.GodLoadout = std::move(GodLoadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSettingsSubsystem.HandlePlayerControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSettingsSubsystem::HandlePlayerControllerChanged(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSettingsSubsystem", "HandlePlayerControllerChanged");

	Params::HWGodSettingsSubsystem_HandlePlayerControllerChanged Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSettingsSubsystem.HandlePlayerStateReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSettingsSubsystem::HandlePlayerStateReplicated(class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSettingsSubsystem", "HandlePlayerStateReplicated");

	Params::HWGodSettingsSubsystem_HandlePlayerStateReplicated Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Pele.OnRep_Fuel
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Pele::OnRep_Fuel(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Pele", "OnRep_Fuel");

	Params::HWAttributeSet_Pele_OnRep_Fuel Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Passthrough.GetPassthroughTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer IHWInterface_Passthrough::GetPassthroughTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Passthrough", "GetPassthroughTags");

	Params::HWInterface_Passthrough_GetPassthroughTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAttributeSet_Yemoja.OnRep_MaxOmi
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Yemoja::OnRep_MaxOmi(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Yemoja", "OnRep_MaxOmi");

	Params::HWAttributeSet_Yemoja_OnRep_MaxOmi Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Yemoja.OnRep_Omi
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Yemoja::OnRep_Omi(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Yemoja", "OnRep_Omi");

	Params::HWAttributeSet_Yemoja_OnRep_Omi Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Yemoja.OnRep_OmiPerTime
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Yemoja::OnRep_OmiPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Yemoja", "OnRep_OmiPerTime");

	Params::HWAttributeSet_Yemoja_OnRep_OmiPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAudioComponent.PerformSkinUpdate
// (Final, Native, Public)

void UHWAudioComponent::PerformSkinUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAudioComponent", "PerformSkinUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_StatsParsing.AggregateTimeSeries
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FHWCombatLogEvent>& FilteredEvents                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCumulative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWGroupingField                        GroupingField                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, struct FHWTimeValueArray>*OutGroupedTimeSeries                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::AggregateTimeSeries(const TArray<struct FHWCombatLogEvent>& FilteredEvents, bool bCumulative, EHWGroupingField GroupingField, TMap<class FString, struct FHWTimeValueArray>* OutGroupedTimeSeries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "AggregateTimeSeries");

	Params::HWLibrary_StatsParsing_AggregateTimeSeries Parms{};

	Parms.FilteredEvents = std::move(FilteredEvents);
	Parms.bCumulative = bCumulative;
	Parms.GroupingField = GroupingField;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGroupedTimeSeries != nullptr)
		*OutGroupedTimeSeries = std::move(Parms.OutGroupedTimeSeries);
}


// Function Hemingway.HWLibrary_StatsParsing.CreateFilterFor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    RowType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            RelevantNames                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHWCombatLogEventFilter*         OutRowFilter                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::CreateFilterFor(const class FString& RowType, const TArray<class FString>& RelevantNames, struct FHWCombatLogEventFilter* OutRowFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "CreateFilterFor");

	Params::HWLibrary_StatsParsing_CreateFilterFor Parms{};

	Parms.RowType = std::move(RowType);
	Parms.RelevantNames = std::move(RelevantNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRowFilter != nullptr)
		*OutRowFilter = std::move(Parms.OutRowFilter);
}


// Function Hemingway.HWLibrary_StatsParsing.ExtractTeams
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FHWCombatLogEvent>& MatchEvents                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHWCombatLogTeamData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWCombatLogTeamData UHWLibrary_StatsParsing::ExtractTeams(const TArray<struct FHWCombatLogEvent>& MatchEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "ExtractTeams");

	Params::HWLibrary_StatsParsing_ExtractTeams Parms{};

	Parms.MatchEvents = std::move(MatchEvents);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_StatsParsing.FetchAndParseCombatLog
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGuid&                     MatchID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& LoadedCombatLog)>CombatLogLoadedDelegate                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::FetchAndParseCombatLog(class UObject* WorldContextObject, const struct FGuid& MatchID, TDelegate<void(const class FString& LoadedCombatLog)> CombatLogLoadedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "FetchAndParseCombatLog");

	Params::HWLibrary_StatsParsing_FetchAndParseCombatLog Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MatchID = std::move(MatchID);
	Parms.CombatLogLoadedDelegate = CombatLogLoadedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_StatsParsing.FilterMatchEvents
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FHWCombatLogEvent>& AllEvents                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWCombatLogEventFilter&   Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FHWCombatLogEvent>*       OutFilteredEvents                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::FilterMatchEvents(const TArray<struct FHWCombatLogEvent>& AllEvents, const struct FHWCombatLogEventFilter& Filter, TArray<struct FHWCombatLogEvent>* OutFilteredEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "FilterMatchEvents");

	Params::HWLibrary_StatsParsing_FilterMatchEvents Parms{};

	Parms.AllEvents = std::move(AllEvents);
	Parms.Filter = std::move(Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilteredEvents != nullptr)
		*OutFilteredEvents = std::move(Parms.OutFilteredEvents);
}


// Function Hemingway.HWLibrary_StatsParsing.GenerateTimeSeriesData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FHWCombatLogEvent>& MatchEvents                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    EventTypeFilter                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            SourceActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FString>&            TargetActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCumulative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>*               OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::GenerateTimeSeriesData(const TArray<struct FHWCombatLogEvent>& MatchEvents, const class FString& EventTypeFilter, const TArray<class FString>& SourceActors, const TArray<class FString>& TargetActors, bool bCumulative, TArray<struct FVector2D>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "GenerateTimeSeriesData");

	Params::HWLibrary_StatsParsing_GenerateTimeSeriesData Parms{};

	Parms.MatchEvents = std::move(MatchEvents);
	Parms.EventTypeFilter = std::move(EventTypeFilter);
	Parms.SourceActors = std::move(SourceActors);
	Parms.TargetActors = std::move(TargetActors);
	Parms.bCumulative = bCumulative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);
}


// Function Hemingway.HWLibrary_StatsParsing.GetNamesForRoles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FHWCombatLogEvent>& MatchEvents                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    RoleName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>*                  OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   OutTeamSplitIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::GetNamesForRoles(const TArray<struct FHWCombatLogEvent>& MatchEvents, const class FString& RoleName, const int32 TeamId, TArray<class FString>* OutNames, int32 OutTeamSplitIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "GetNamesForRoles");

	Params::HWLibrary_StatsParsing_GetNamesForRoles Parms{};

	Parms.MatchEvents = std::move(MatchEvents);
	Parms.RoleName = std::move(RoleName);
	Parms.TeamId = TeamId;
	Parms.OutTeamSplitIndex = OutTeamSplitIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function Hemingway.HWLibrary_StatsParsing.LoadCombatLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWCombatLogEvent>*       MatchEvents                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::LoadCombatLog(const class FString& FilePath, TArray<struct FHWCombatLogEvent>* MatchEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "LoadCombatLog");

	Params::HWLibrary_StatsParsing_LoadCombatLog Parms{};

	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MatchEvents != nullptr)
		*MatchEvents = std::move(Parms.MatchEvents);
}


// Function Hemingway.HWLibrary_StatsParsing.ProcessCombatLogString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    CombatLogString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWCombatLogEvent>*       OutMatchEvents                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::ProcessCombatLogString(const class FString& CombatLogString, TArray<struct FHWCombatLogEvent>* OutMatchEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "ProcessCombatLogString");

	Params::HWLibrary_StatsParsing_ProcessCombatLogString Parms{};

	Parms.CombatLogString = std::move(CombatLogString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMatchEvents != nullptr)
		*OutMatchEvents = std::move(Parms.OutMatchEvents);
}


// Function Hemingway.HWLibrary_StatsParsing.UpdateTimeSeriesPlot
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UHWTimeSeriesDataSource*          DataSource                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTimeSeriesPlot*                  TimeSeriesPlot                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FVector2D>&         DataSeries                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    SeriesName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              LineColor                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_StatsParsing::UpdateTimeSeriesPlot(class UHWTimeSeriesDataSource* DataSource, class UTimeSeriesPlot* TimeSeriesPlot, const TArray<struct FVector2D>& DataSeries, const class FString& SeriesName, const struct FLinearColor& LineColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_StatsParsing", "UpdateTimeSeriesPlot");

	Params::HWLibrary_StatsParsing_UpdateTimeSeriesPlot Parms{};

	Parms.DataSource = DataSource;
	Parms.TimeSeriesPlot = TimeSeriesPlot;
	Parms.DataSeries = std::move(DataSeries);
	Parms.SeriesName = std::move(SeriesName);
	Parms.LineColor = std::move(LineColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.OnGodsRotationVendorReceived
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyLoaded                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSubsystem::OnGodsRotationVendorReceived(bool bSuccessfullyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "OnGodsRotationVendorReceived");

	Params::HWGodSubsystem_OnGodsRotationVendorReceived Parms{};

	Parms.bSuccessfullyLoaded = bSuccessfullyLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.OnGodsVendorReceived
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyLoaded                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSubsystem::OnGodsVendorReceived(bool bSuccessfullyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "OnGodsVendorReceived");

	Params::HWGodSubsystem_OnGodsVendorReceived Parms{};

	Parms.bSuccessfullyLoaded = bSuccessfullyLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.OnRHSessionChanged
// (Final, Native, Protected)
// Parameters:
// class URH_JoinedSession*                OldSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ActiveSession                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSubsystem::OnRHSessionChanged(class URH_JoinedSession* OldSession, class URH_JoinedSession* ActiveSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "OnRHSessionChanged");

	Params::HWGodSubsystem_OnRHSessionChanged Parms{};

	Parms.OldSession = OldSession;
	Parms.ActiveSession = ActiveSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.OnSkinsLoaded
// (Final, Native, Protected)

void UHWGodSubsystem::OnSkinsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "OnSkinsLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.OnSkinsVendorReceived
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyLoaded                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodSubsystem::OnSkinsVendorReceived(bool bSuccessfullyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "OnSkinsVendorReceived");

	Params::HWGodSubsystem_OnSkinsVendorReceived Parms{};

	Parms.bSuccessfullyLoaded = bSuccessfullyLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodSubsystem.GetGodByItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGodSubsystem::GetGodByItemId(const struct FRH_ItemId& ItemId, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "GetGodByItemId");

	Params::HWGodSubsystem_GetGodByItemId Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.GetGodByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGodSubsystem::GetGodByName(const class FString& Name_0, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "GetGodByName");

	Params::HWGodSubsystem_GetGodByName Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.GetGodByPrimaryAssetId
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPrimaryAssetId&           PrimaryAssetId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGodSubsystem::GetGodByPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "GetGodByPrimaryAssetId");

	Params::HWGodSubsystem_GetGodByPrimaryAssetId Parms{};

	Parms.PrimaryAssetId = std::move(PrimaryAssetId);
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.GetGodByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWGodSubsystem::GetGodByTag(const struct FGameplayTag& GameplayTag, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "GetGodByTag");

	Params::HWGodSubsystem_GetGodByTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.GetSkinByItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* UHWGodSubsystem::GetSkinByItemId(const struct FRH_ItemId& ItemId, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "GetSkinByItemId");

	Params::HWGodSubsystem_GetSkinByItemId Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.HasLoadedGodsAndSkins
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGodSubsystem::HasLoadedGodsAndSkins() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "HasLoadedGodsAndSkins");

	Params::HWGodSubsystem_HasLoadedGodsAndSkins Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.IsGodInComingSoon
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GodTag                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGodSubsystem::IsGodInComingSoon(const struct FGameplayTag& GodTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "IsGodInComingSoon");

	Params::HWGodSubsystem_IsGodInComingSoon Parms{};

	Parms.GodTag = std::move(GodTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodSubsystem.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGodSubsystem::IsReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodSubsystem", "IsReady");

	Params::HWGodSubsystem_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_SwapAbility.SwapAbility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWEquipmentComponent_AbilitySwap*AbilitySwapComponent                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IHWInterface_SwapAbility::SwapAbility(class UHWEquipmentComponent_AbilitySwap* AbilitySwapComponent, const struct FHWAbilitySwapInfo& SwapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_SwapAbility", "SwapAbility");

	Params::HWInterface_SwapAbility_SwapAbility Parms{};

	Parms.AbilitySwapComponent = AbilitySwapComponent;
	Parms.SwapInfo = std::move(SwapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_SwapAbility.CanSwapAbility
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentComponent_AbilitySwap*AbilitySwapComponent                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const class UHWAbilitySystemComponent*  AbilitySystem                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_SwapAbility::CanSwapAbility(const class UHWEquipmentComponent_AbilitySwap* AbilitySwapComponent, const struct FHWAbilitySwapInfo& SwapInfo, const class UHWAbilitySystemComponent* AbilitySystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_SwapAbility", "CanSwapAbility");

	Params::HWInterface_SwapAbility_CanSwapAbility Parms{};

	Parms.AbilitySwapComponent = AbilitySwapComponent;
	Parms.SwapInfo = std::move(SwapInfo);
	Parms.AbilitySystem = AbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyBuildProfile.GetProfileDesc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWAutoBuyBuildProfile::GetProfileDesc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyBuildProfile", "GetProfileDesc");

	Params::HWAutoBuyBuildProfile_GetProfileDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyBuildProfile.GetProfileDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWAutoBuyBuildProfile::GetProfileDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyBuildProfile", "GetProfileDisplayName");

	Params::HWAutoBuyBuildProfile_GetProfileDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyBuildProfile.GetProfileIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UHWAutoBuyBuildProfile::GetProfileIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyBuildProfile", "GetProfileIcon");

	Params::HWAutoBuyBuildProfile_GetProfileIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyBuildProfile.GetProfileName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWAutoBuyBuildProfile::GetProfileName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyBuildProfile", "GetProfileName");

	Params::HWAutoBuyBuildProfile_GetProfileName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyBuildProfile.GetRecipesToBuild
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UHWEquipmentRecipe*> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UHWEquipmentRecipe*> UHWAutoBuyBuildProfile::GetRecipesToBuild() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyBuildProfile", "GetRecipesToBuild");

	Params::HWAutoBuyBuildProfile_GetRecipesToBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoPingWorldActor.MatchesRequiredTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     PingTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWAutoPingWorldActor::MatchesRequiredTags(const struct FGameplayTagContainer& PingTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoPingWorldActor", "MatchesRequiredTags");

	Params::HWAutoPingWorldActor_MatchesRequiredTags Parms{};

	Parms.PingTags = std::move(PingTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_HUD.GetSeamlessTravelActorList
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bToEntry                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  ActorList                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IHWInterface_HUD::GetSeamlessTravelActorList(bool bToEntry, TArray<class AActor*>* ActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_HUD", "GetSeamlessTravelActorList");

	Params::HWInterface_HUD_GetSeamlessTravelActorList Parms{};

	Parms.bToEntry = bToEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActorList != nullptr)
		*ActorList = std::move(Parms.ActorList);
}


// Function Hemingway.HWInterface_HUD.GetWorldColorForTags
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     ColorTags                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<struct FGameplayTag, struct FLinearColor>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct FGameplayTag, struct FLinearColor> IHWInterface_HUD::GetWorldColorForTags(const struct FGameplayTagContainer& ColorTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_HUD", "GetWorldColorForTags");

	Params::HWInterface_HUD_GetWorldColorForTags Parms{};

	Parms.ColorTags = std::move(ColorTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_HUD.ProcessInput
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETriggerEvent                           TriggerEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_HUD::ProcessInput(const struct FGameplayTag& InputTag, ETriggerEvent TriggerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_HUD", "ProcessInput");

	Params::HWInterface_HUD_ProcessInput Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.TriggerEvent = TriggerEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_HUD.ReceivedGameModeClass
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class AGameModeBase>        GameModeClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_HUD::ReceivedGameModeClass(TSubclassOf<class AGameModeBase> GameModeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_HUD", "ReceivedGameModeClass");

	Params::HWInterface_HUD_ReceivedGameModeClass Parms{};

	Parms.GameModeClass = GameModeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBackfillSubsystem.HandleActiveSessionChanged
// (Final, Native, Public)
// Parameters:
// class URH_JoinedSession*                OldSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                NewSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWBackfillSubsystem::HandleActiveSessionChanged(class URH_JoinedSession* OldSession, class URH_JoinedSession* NewSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBackfillSubsystem", "HandleActiveSessionChanged");

	Params::HWBackfillSubsystem_HandleActiveSessionChanged Parms{};

	Parms.OldSession = OldSession;
	Parms.NewSession = NewSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBackfillSubsystem.GetBackfillQueueInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWBackfillQueueInfo             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWBackfillQueueInfo UHWBackfillSubsystem::GetBackfillQueueInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBackfillSubsystem", "GetBackfillQueueInfo");

	Params::HWBackfillSubsystem_GetBackfillQueueInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.CheckAndUpdateMapVisionFor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBotFactory_VisibilityComponent::CheckAndUpdateMapVisionFor(int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "CheckAndUpdateMapVisionFor");

	Params::HWBotFactory_VisibilityComponent_CheckAndUpdateMapVisionFor Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.DoesTeamNeedUpdatedMapState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBotFactory_VisibilityComponent::DoesTeamNeedUpdatedMapState(int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "DoesTeamNeedUpdatedMapState");

	Params::HWBotFactory_VisibilityComponent_DoesTeamNeedUpdatedMapState Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.GetLocalTeamMinimapState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFactoryMinimapState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFactoryMinimapState UHWBotFactory_VisibilityComponent::GetLocalTeamMinimapState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "GetLocalTeamMinimapState");

	Params::HWBotFactory_VisibilityComponent_GetLocalTeamMinimapState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.IsLocalTeamMinimapStateOutOfSync
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBotFactory_VisibilityComponent::IsLocalTeamMinimapStateOutOfSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "IsLocalTeamMinimapStateOutOfSync");

	Params::HWBotFactory_VisibilityComponent_IsLocalTeamMinimapStateOutOfSync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.OnRep_TeamMinimapStates
// (Final, Native, Protected)

void UHWBotFactory_VisibilityComponent::OnRep_TeamMinimapStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "OnRep_TeamMinimapStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.RepeatingMapVisionUpdate
// (Final, Native, Public, BlueprintCallable)

void UHWBotFactory_VisibilityComponent::RepeatingMapVisionUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "RepeatingMapVisionUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetAllTeamMinimapsTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFactoryMinimapState                    CurrentFactoryState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWBotFactory_VisibilityComponent::SetAllTeamMinimapsTo(EFactoryMinimapState CurrentFactoryState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetAllTeamMinimapsTo");

	Params::HWBotFactory_VisibilityComponent_SetAllTeamMinimapsTo Parms{};

	Parms.CurrentFactoryState = CurrentFactoryState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetAllTeamsRequireVisibilityUpdate
// (Final, Native, Public)

void UHWBotFactory_VisibilityComponent::SetAllTeamsRequireVisibilityUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetAllTeamsRequireVisibilityUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetSyncedTeamMinimapsTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFactoryMinimapState                    CurrentFactoryState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWBotFactory_VisibilityComponent::SetSyncedTeamMinimapsTo(EFactoryMinimapState CurrentFactoryState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetSyncedTeamMinimapsTo");

	Params::HWBotFactory_VisibilityComponent_SetSyncedTeamMinimapsTo Parms{};

	Parms.CurrentFactoryState = CurrentFactoryState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetSyncedTeamStatesToActive
// (Final, Native, Public, BlueprintCallable)

void UHWBotFactory_VisibilityComponent::SetSyncedTeamStatesToActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetSyncedTeamStatesToActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetToActive
// (Final, Native, Public, BlueprintCallable)

void UHWBotFactory_VisibilityComponent::SetToActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetToActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetToEmpty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Causer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRespawning                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWBotFactory_VisibilityComponent::SetToEmpty(class AActor* Causer, bool bIsRespawning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetToEmpty");

	Params::HWBotFactory_VisibilityComponent_SetToEmpty Parms{};

	Parms.Causer = Causer;
	Parms.bIsRespawning = bIsRespawning;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.SetToRespawning
// (Final, Native, Public, BlueprintCallable)

void UHWBotFactory_VisibilityComponent::SetToRespawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "SetToRespawning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.CanLocalTeamSeeCampRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWBotFactory_VisibilityComponent::CanLocalTeamSeeCampRespawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "CanLocalTeamSeeCampRespawn");

	Params::HWBotFactory_VisibilityComponent_CanLocalTeamSeeCampRespawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory_VisibilityComponent.GetServerMapState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFactoryMinimapState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFactoryMinimapState UHWBotFactory_VisibilityComponent::GetServerMapState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory_VisibilityComponent", "GetServerMapState");

	Params::HWBotFactory_VisibilityComponent_GetServerMapState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.AddShieldEntry
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FActiveShieldEntry*              NewShield                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::AddShieldEntry(struct FActiveShieldEntry* NewShield)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "AddShieldEntry");

	Params::HWShieldManagerComponent_AddShieldEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewShield != nullptr)
		*NewShield = std::move(Parms.NewShield);
}


// Function Hemingway.HWShieldManagerComponent.GetAllShieldInstances
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UHWShieldInstance*>*       OutShieldInstances                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::GetAllShieldInstances(TArray<class UHWShieldInstance*>* OutShieldInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetAllShieldInstances");

	Params::HWShieldManagerComponent_GetAllShieldInstances Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShieldInstances != nullptr)
		*OutShieldInstances = std::move(Parms.OutShieldInstances);
}


// Function Hemingway.HWShieldManagerComponent.GetAllShieldInstancesByGrantingASC
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UHWShieldInstance*>*       OutShieldInstances                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        GranterASC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::GetAllShieldInstancesByGrantingASC(TArray<class UHWShieldInstance*>* OutShieldInstances, class UHWAbilitySystemComponent* GranterASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetAllShieldInstancesByGrantingASC");

	Params::HWShieldManagerComponent_GetAllShieldInstancesByGrantingASC Parms{};

	Parms.GranterASC = GranterASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShieldInstances != nullptr)
		*OutShieldInstances = std::move(Parms.OutShieldInstances);
}


// Function Hemingway.HWShieldManagerComponent.GetAllShieldInstancesByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UHWShieldInstance*>*       OutShieldInstances                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ShieldEffectTag                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::GetAllShieldInstancesByTag(TArray<class UHWShieldInstance*>* OutShieldInstances, const struct FGameplayTag& ShieldEffectTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetAllShieldInstancesByTag");

	Params::HWShieldManagerComponent_GetAllShieldInstancesByTag Parms{};

	Parms.ShieldEffectTag = std::move(ShieldEffectTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShieldInstances != nullptr)
		*OutShieldInstances = std::move(Parms.OutShieldInstances);
}


// Function Hemingway.HWShieldManagerComponent.GetAllShieldInstancesByType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UHWShieldInstance*>*       OutShieldInstances                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EShieldType                             ShieldType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::GetAllShieldInstancesByType(TArray<class UHWShieldInstance*>* OutShieldInstances, EShieldType ShieldType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetAllShieldInstancesByType");

	Params::HWShieldManagerComponent_GetAllShieldInstancesByType Parms{};

	Parms.ShieldType = ShieldType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShieldInstances != nullptr)
		*OutShieldInstances = std::move(Parms.OutShieldInstances);
}


// Function Hemingway.HWShieldManagerComponent.GetAllShieldInstancesWithLifetimes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UHWShieldInstance*>*       OutShieldInstances                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::GetAllShieldInstancesWithLifetimes(TArray<class UHWShieldInstance*>* OutShieldInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetAllShieldInstancesWithLifetimes");

	Params::HWShieldManagerComponent_GetAllShieldInstancesWithLifetimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShieldInstances != nullptr)
		*OutShieldInstances = std::move(Parms.OutShieldInstances);
}


// Function Hemingway.HWShieldManagerComponent.GetHighestPriorityShieldInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EShieldType                             TargetShieldType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWShieldInstance*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWShieldInstance* UHWShieldManagerComponent::GetHighestPriorityShieldInstance(EShieldType TargetShieldType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetHighestPriorityShieldInstance");

	Params::HWShieldManagerComponent_GetHighestPriorityShieldInstance Parms{};

	Parms.TargetShieldType = TargetShieldType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.GetShieldInstanceByTagAndASC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              ShieldEffectTag                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        GranterASC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWShieldInstance*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWShieldInstance* UHWShieldManagerComponent::GetShieldInstanceByTagAndASC(const struct FGameplayTag& ShieldEffectTag, class UHWAbilitySystemComponent* GranterASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetShieldInstanceByTagAndASC");

	Params::HWShieldManagerComponent_GetShieldInstanceByTagAndASC Parms{};

	Parms.ShieldEffectTag = std::move(ShieldEffectTag);
	Parms.GranterASC = GranterASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.GetTotalMagicalShieldHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldManagerComponent::GetTotalMagicalShieldHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetTotalMagicalShieldHealth");

	Params::HWShieldManagerComponent_GetTotalMagicalShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.GetTotalOmniShieldHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldManagerComponent::GetTotalOmniShieldHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetTotalOmniShieldHealth");

	Params::HWShieldManagerComponent_GetTotalOmniShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.GetTotalPhysicalShieldHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldManagerComponent::GetTotalPhysicalShieldHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetTotalPhysicalShieldHealth");

	Params::HWShieldManagerComponent_GetTotalPhysicalShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.GetTotalShieldHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldManagerComponent::GetTotalShieldHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "GetTotalShieldHealth");

	Params::HWShieldManagerComponent_GetTotalShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.HandleIncomingShieldModifierEffect
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class UHWGameplayEffect_ShieldModifier*ShieldModifierEffectCDO                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::HandleIncomingShieldModifierEffect(const class UHWGameplayEffect_ShieldModifier* ShieldModifierEffectCDO, const struct FGameplayEffectContextHandle& EffectContextHandle, const struct FGameplayEffectSpec& EffectSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "HandleIncomingShieldModifierEffect");

	Params::HWShieldManagerComponent_HandleIncomingShieldModifierEffect Parms{};

	Parms.ShieldModifierEffectCDO = ShieldModifierEffectCDO;
	Parms.EffectContextHandle = std::move(EffectContextHandle);
	Parms.EffectSpec = std::move(EffectSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldManagerComponent.HandleIncomingShieldOwnerEffect
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class UHWGameplayEffect_ShieldOwner*ShieldOwnerEffectCDO                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ShieldOwnerActiveEffectHandle                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWShieldInstance*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWShieldInstance* UHWShieldManagerComponent::HandleIncomingShieldOwnerEffect(const class UHWGameplayEffect_ShieldOwner* ShieldOwnerEffectCDO, const struct FGameplayEffectContextHandle& EffectContextHandle, const struct FGameplayEffectSpec& EffectSpec, const struct FActiveGameplayEffectHandle& ShieldOwnerActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "HandleIncomingShieldOwnerEffect");

	Params::HWShieldManagerComponent_HandleIncomingShieldOwnerEffect Parms{};

	Parms.ShieldOwnerEffectCDO = ShieldOwnerEffectCDO;
	Parms.EffectContextHandle = std::move(EffectContextHandle);
	Parms.EffectSpec = std::move(EffectSpec);
	Parms.ShieldOwnerActiveEffectHandle = std::move(ShieldOwnerActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldManagerComponent.OnRep_ActiveShields
// (Final, Native, Protected)

void UHWShieldManagerComponent::OnRep_ActiveShields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "OnRep_ActiveShields");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldManagerComponent.RemoveShieldEntry
// (Final, Native, Protected)
// Parameters:
// const struct FActiveShieldEntry&        ShieldToRemove                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWShieldManagerComponent::RemoveShieldEntry(const struct FActiveShieldEntry& ShieldToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "RemoveShieldEntry");

	Params::HWShieldManagerComponent_RemoveShieldEntry Parms{};

	Parms.ShieldToRemove = std::move(ShieldToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldManagerComponent.RemoveShieldInstance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UHWShieldInstance*                ShieldInstanceToRemove                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWShieldManagerComponent::RemoveShieldInstance(class UHWShieldInstance* ShieldInstanceToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldManagerComponent", "RemoveShieldInstance");

	Params::HWShieldManagerComponent_RemoveShieldInstance Parms{};

	Parms.ShieldInstanceToRemove = ShieldInstanceToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.ActivateTrail
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AHWDeployable_Trail::ActivateTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "ActivateTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.BP_OnTrailActivated
// (Event, Protected, BlueprintEvent)

void AHWDeployable_Trail::BP_OnTrailActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "BP_OnTrailActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Trail.BP_OnTrailDeactivated
// (Event, Protected, BlueprintEvent)

void AHWDeployable_Trail::BP_OnTrailDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "BP_OnTrailDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Trail.DeactivateTrail
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bDestroyTrail                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Trail::DeactivateTrail(const bool bDestroyTrail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "DeactivateTrail");

	Params::HWDeployable_Trail_DeactivateTrail Parms{};

	Parms.bDestroyTrail = bDestroyTrail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.DefaultOnTrailActivated
// (Final, Native, Protected)

void AHWDeployable_Trail::DefaultOnTrailActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "DefaultOnTrailActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.OnRep_IsTrailActive
// (Final, Native, Protected)

void AHWDeployable_Trail::OnRep_IsTrailActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "OnRep_IsTrailActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.OnTrailBeginOverlap
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWSplinePathMeshManagerComponent*TrailSpline                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&OverlappedTarget                                       (Parm, NativeAccessSpecifierPublic)
// const struct FHWSplineOverlapInfo&      TrailOverlapInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWDeployable_Trail::OnTrailBeginOverlap(class UHWSplinePathMeshManagerComponent* TrailSpline, const struct FGameplayAbilityTargetDataHandle& OverlappedTarget, const struct FHWSplineOverlapInfo& TrailOverlapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "OnTrailBeginOverlap");

	Params::HWDeployable_Trail_OnTrailBeginOverlap Parms{};

	Parms.TrailSpline = TrailSpline;
	Parms.OverlappedTarget = std::move(OverlappedTarget);
	Parms.TrailOverlapInfo = std::move(TrailOverlapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.OnTrailEndOverlap
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHWSplinePathMeshManagerComponent*TrailSpline                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&OverlappedTarget                                       (Parm, NativeAccessSpecifierPublic)

void AHWDeployable_Trail::OnTrailEndOverlap(class UHWSplinePathMeshManagerComponent* TrailSpline, const struct FGameplayAbilityTargetDataHandle& OverlappedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "OnTrailEndOverlap");

	Params::HWDeployable_Trail_OnTrailEndOverlap Parms{};

	Parms.TrailSpline = TrailSpline;
	Parms.OverlappedTarget = std::move(OverlappedTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.OwningProxyOnTrailActivated
// (Final, Native, Protected)

void AHWDeployable_Trail::OwningProxyOnTrailActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "OwningProxyOnTrailActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.SetAllowNewTrailSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowNewSegments                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Trail::SetAllowNewTrailSegments(bool bAllowNewSegments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "SetAllowNewTrailSegments");

	Params::HWDeployable_Trail_SetAllowNewTrailSegments Parms{};

	Parms.bAllowNewSegments = bAllowNewSegments;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Trail.GetCurrentSegmentDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWDeployable_Trail::GetCurrentSegmentDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "GetCurrentSegmentDistance");

	Params::HWDeployable_Trail_GetCurrentSegmentDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.GetMaxSegmentDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWDeployable_Trail::GetMaxSegmentDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "GetMaxSegmentDistance");

	Params::HWDeployable_Trail_GetMaxSegmentDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.GetOwnerVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWDeployable_Trail::GetOwnerVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "GetOwnerVelocity");

	Params::HWDeployable_Trail_GetOwnerVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.GetTrailOverlaps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<class AActor*, struct FHWSplineOverlapInfo>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TMap<class AActor*, struct FHWSplineOverlapInfo> AHWDeployable_Trail::GetTrailOverlaps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "GetTrailOverlaps");

	Params::HWDeployable_Trail_GetTrailOverlaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.GetTrailStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWDeployable_Trail::GetTrailStartLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "GetTrailStartLocation");

	Params::HWDeployable_Trail_GetTrailStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Trail.IsTrailActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Trail::IsTrailActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Trail", "IsTrailActive");

	Params::HWDeployable_Trail_IsTrailActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.AddGold
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             GoldToAdd                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::AddGold(const int32 GoldToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "AddGold");

	Params::HWCheatComponent_AddGold Parms{};

	Parms.GoldToAdd = GoldToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ApplyBooster
// (Final, Exec, Native, Public)
// Parameters:
// const struct FGameplayTag&              BoosterTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ApplyBooster(const struct FGameplayTag& BoosterTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ApplyBooster");

	Params::HWCheatComponent_ApplyBooster Parms{};

	Parms.BoosterTag = std::move(BoosterTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsAddGold
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsAddGold(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsAddGold");

	Params::HWCheatComponent_BotsAddGold Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsCooldowns
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bIgnoreCooldowns                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsCooldowns(bool bIgnoreCooldowns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsCooldowns");

	Params::HWCheatComponent_BotsCooldowns Parms{};

	Parms.bIgnoreCooldowns = bIgnoreCooldowns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsFight
// (Final, Exec, Native, Public)

void UHWCheatComponent::BotsFight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsFight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotShootHUD
// (Final, Native, Public)
// Parameters:
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             WaitTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotShootHUD(const int32 AbilityNumber, const class FString& BotName, const float WaitTime, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotShootHUD");

	Params::HWCheatComponent_BotShootHUD Parms{};

	Parms.AbilityNumber = AbilityNumber;
	Parms.BotName = std::move(BotName);
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsImmune
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bImmunity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsImmune(bool bImmunity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsImmune");

	Params::HWCheatComponent_BotsImmune Parms{};

	Parms.bImmunity = bImmunity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsLevel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsLevel");

	Params::HWCheatComponent_BotsLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsOrbit
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsOrbit(float Radius, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsOrbit");

	Params::HWCheatComponent_BotsOrbit Parms{};

	Parms.Radius = Radius;
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsPatrol
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsPatrol(float Distance, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsPatrol");

	Params::HWCheatComponent_BotsPatrol Parms{};

	Parms.Distance = Distance;
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShoot
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShoot(const int32 AbilityNumber, float WaitTime, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShoot");

	Params::HWCheatComponent_BotsShoot Parms{};

	Parms.AbilityNumber = AbilityNumber;
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShootOnce
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShootOnce(const int32 AbilityNumber, float WaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShootOnce");

	Params::HWCheatComponent_BotsShootOnce Parms{};

	Parms.AbilityNumber = AbilityNumber;
	Parms.WaitTime = WaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShootOnceSpecific
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShootOnceSpecific(const class FString& BotName, const int32 AbilityNumber, float WaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShootOnceSpecific");

	Params::HWCheatComponent_BotsShootOnceSpecific Parms{};

	Parms.BotName = std::move(BotName);
	Parms.AbilityNumber = AbilityNumber;
	Parms.WaitTime = WaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShootSpecific
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShootSpecific(const class FString& BotName, const int32 AbilityNumber, float WaitTime, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShootSpecific");

	Params::HWCheatComponent_BotsShootSpecific Parms{};

	Parms.BotName = std::move(BotName);
	Parms.AbilityNumber = AbilityNumber;
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShootWithRefire
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RefireTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RefireInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShootWithRefire(const int32 AbilityNumber, float RefireTime, class FName RefireInput, float WaitTime, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShootWithRefire");

	Params::HWCheatComponent_BotsShootWithRefire Parms{};

	Parms.AbilityNumber = AbilityNumber;
	Parms.RefireTime = RefireTime;
	Parms.RefireInput = RefireInput;
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsShootWithRefireSpecific
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RefireTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RefireInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsShootWithRefireSpecific(const class FString& BotName, const int32 AbilityNumber, float RefireTime, class FName RefireInput, float WaitTime, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsShootWithRefireSpecific");

	Params::HWCheatComponent_BotsShootWithRefireSpecific Parms{};

	Parms.BotName = std::move(BotName);
	Parms.AbilityNumber = AbilityNumber;
	Parms.RefireTime = RefireTime;
	Parms.RefireInput = RefireInput;
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsSkillsToLevel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsSkillsToLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsSkillsToLevel");

	Params::HWCheatComponent_BotsSkillsToLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsStopShooting
// (Final, Exec, Native, Public)

void UHWCheatComponent::BotsStopShooting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsStopShooting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.BotsUp
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bToggle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::BotsUp(bool bToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "BotsUp");

	Params::HWCheatComponent_BotsUp Parms{};

	Parms.bToggle = bToggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.CallVGS
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    ActionTag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::CallVGS(const class FString& ActionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "CallVGS");

	Params::HWCheatComponent_CallVGS Parms{};

	Parms.ActionTag = std::move(ActionTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.CharacterTestCheat
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bSetActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   testInt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::CharacterTestCheat(bool bSetActive, int32 testInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "CharacterTestCheat");

	Params::HWCheatComponent_CharacterTestCheat Parms{};

	Parms.bSetActive = bSetActive;
	Parms.testInt = testInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.CheevesMeJeeves
// (Final, Exec, Native, Public)

void UHWCheatComponent::CheevesMeJeeves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "CheevesMeJeeves");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ClientTriggerTestAssert
// (Final, Exec, Native, Public)

void UHWCheatComponent::ClientTriggerTestAssert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ClientTriggerTestAssert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ClientTriggerTestEnsure
// (Final, Exec, Native, Public)

void UHWCheatComponent::ClientTriggerTestEnsure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ClientTriggerTestEnsure");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.Cooldowns
// (Final, Exec, Native, Public)

void UHWCheatComponent::Cooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "Cooldowns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.Costs
// (Final, Exec, Native, Public)

void UHWCheatComponent::Costs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "Costs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DebugMinimap
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      UniqueNameTag                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::DebugMinimap(const class FName& UniqueNameTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DebugMinimap");

	Params::HWCheatComponent_DebugMinimap Parms{};

	Parms.UniqueNameTag = UniqueNameTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DebugSocket
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    SocketName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::DebugSocket(const class FString& SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DebugSocket");

	Params::HWCheatComponent_DebugSocket Parms{};

	Parms.SocketName = std::move(SocketName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DebugStat
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      StatName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::DebugStat(const class FName& StatName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DebugStat");

	Params::HWCheatComponent_DebugStat Parms{};

	Parms.StatName = StatName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DestroyNextAlliedTowerInLane
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::DestroyNextAlliedTowerInLane(class FName Lane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DestroyNextAlliedTowerInLane");

	Params::HWCheatComponent_DestroyNextAlliedTowerInLane Parms{};

	Parms.Lane = Lane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DestroyNextEnemyTowerInLane
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::DestroyNextEnemyTowerInLane(class FName Lane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DestroyNextEnemyTowerInLane");

	Params::HWCheatComponent_DestroyNextEnemyTowerInLane Parms{};

	Parms.Lane = Lane;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.DumpGodVisibilityData
// (Final, Exec, Native, Public)

void UHWCheatComponent::DumpGodVisibilityData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "DumpGodVisibilityData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ForceDraftToComplete
// (Final, Exec, Native, Public)

void UHWCheatComponent::ForceDraftToComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ForceDraftToComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ForceSetFadeParameter
// (Final, Exec, Native, Public)
// Parameters:
// float                                   FadeParameter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ForceSetFadeParameter(float FadeParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ForceSetFadeParameter");

	Params::HWCheatComponent_ForceSetFadeParameter Parms{};

	Parms.FadeParameter = FadeParameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ForceUpdateVisibility
// (Final, Exec, Native, Public)

void UHWCheatComponent::ForceUpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ForceUpdateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.God
// (Final, Exec, Native, Public)

void UHWCheatComponent::God()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "God");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.hmu
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::hmu(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "hmu");

	Params::HWCheatComponent_hmu Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.HookMeUp
// (Final, Exec, Native, Public)

void UHWCheatComponent::HookMeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "HookMeUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.InternalServerQuickTrace
// (Net, Native, Event, Public, NetServer, NetValidate)

void UHWCheatComponent::InternalServerQuickTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "InternalServerQuickTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.KillAllMinions
// (Final, Exec, Native, Public)

void UHWCheatComponent::KillAllMinions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "KillAllMinions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.LogCosmeticInventory
// (Final, Exec, Native, Public)

void UHWCheatComponent::LogCosmeticInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "LogCosmeticInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.MorriganTest
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::MorriganTest(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "MorriganTest");

	Params::HWCheatComponent_MorriganTest Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.NoMoreMinions
// (Final, Exec, Native, Public)

void UHWCheatComponent::NoMoreMinions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "NoMoreMinions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.PopSoundMixModifier
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::PopSoundMixModifier(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "PopSoundMixModifier");

	Params::HWCheatComponent_PopSoundMixModifier Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.PrintGameplayTagNetIndices
// (Final, Exec, Native, Public)

void UHWCheatComponent::PrintGameplayTagNetIndices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "PrintGameplayTagNetIndices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.PushSoundMixModifier
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::PushSoundMixModifier(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "PushSoundMixModifier");

	Params::HWCheatComponent_PushSoundMixModifier Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.QEG
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bWin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::QEG(bool bWin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "QEG");

	Params::HWCheatComponent_QEG Parms{};

	Parms.bWin = bWin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.QuickEndGame
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bWin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::QuickEndGame(bool bWin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "QuickEndGame");

	Params::HWCheatComponent_QuickEndGame Parms{};

	Parms.bWin = bWin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.QuickTrace
// (Final, Exec, Native, Public)

void UHWCheatComponent::QuickTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "QuickTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.RequestPlayerRolePreferences
// (Final, Exec, Native, Public)

void UHWCheatComponent::RequestPlayerRolePreferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "RequestPlayerRolePreferences");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.RequestRelease
// (Final, Exec, Native, Public)

void UHWCheatComponent::RequestRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "RequestRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.RerollCharacter
// (Final, Exec, Native, Public)
// Parameters:
// EHWDraftHealerRequirement               HealerRequirement                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::RerollCharacter(EHWDraftHealerRequirement HealerRequirement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "RerollCharacter");

	Params::HWCheatComponent_RerollCharacter Parms{};

	Parms.HealerRequirement = HealerRequirement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ResetCooldowns
// (Final, Exec, Native, Public)

void UHWCheatComponent::ResetCooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ResetCooldowns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.sc
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::sc(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "sc");

	Params::HWCheatComponent_sc Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerAddGold
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const int32                             GoldToAdd                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerAddGold(const int32 GoldToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerAddGold");

	Params::HWCheatComponent_ServerAddGold Parms{};

	Parms.GoldToAdd = GoldToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerApplyBooster
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const struct FGameplayTag&              BoosterTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerApplyBooster(const struct FGameplayTag& BoosterTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerApplyBooster");

	Params::HWCheatComponent_ServerApplyBooster Parms{};

	Parms.BoosterTag = std::move(BoosterTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsAddGold
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsAddGold(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsAddGold");

	Params::HWCheatComponent_ServerBotsAddGold Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsCooldowns
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bIgnoreCooldowns                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsCooldowns(bool bIgnoreCooldowns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsCooldowns");

	Params::HWCheatComponent_ServerBotsCooldowns Parms{};

	Parms.bIgnoreCooldowns = bIgnoreCooldowns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsFight
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerBotsFight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsFight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotShootHUD
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             WaitTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotShootHUD(const int32 AbilityNumber, const class FString& BotName, const float WaitTime, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotShootHUD");

	Params::HWCheatComponent_ServerBotShootHUD Parms{};

	Parms.AbilityNumber = AbilityNumber;
	Parms.BotName = std::move(BotName);
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsImmune
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bImmunity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsImmune(bool bImmunity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsImmune");

	Params::HWCheatComponent_ServerBotsImmune Parms{};

	Parms.bImmunity = bImmunity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsLevel
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsLevel");

	Params::HWCheatComponent_ServerBotsLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsOrbit
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsOrbit(float Radius, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsOrbit");

	Params::HWCheatComponent_ServerBotsOrbit Parms{};

	Parms.Radius = Radius;
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsPatrol
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGlobal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsPatrol(float Distance, bool bGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsPatrol");

	Params::HWCheatComponent_ServerBotsPatrol Parms{};

	Parms.Distance = Distance;
	Parms.bGlobal = bGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsShoot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FString&                    BotName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilityNumber                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RefireTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RefireInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsShoot(const class FString& BotName, const int32 AbilityNumber, float WaitTime, int32 Count, float RefireTime, class FName RefireInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsShoot");

	Params::HWCheatComponent_ServerBotsShoot Parms{};

	Parms.BotName = std::move(BotName);
	Parms.AbilityNumber = AbilityNumber;
	Parms.WaitTime = WaitTime;
	Parms.Count = Count;
	Parms.RefireTime = RefireTime;
	Parms.RefireInput = RefireInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsSkillsToLevel
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsSkillsToLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsSkillsToLevel");

	Params::HWCheatComponent_ServerBotsSkillsToLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsStopShooting
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerBotsStopShooting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsStopShooting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerBotsUp
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bToggle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerBotsUp(bool bToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerBotsUp");

	Params::HWCheatComponent_ServerBotsUp Parms{};

	Parms.bToggle = bToggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerCharacterTestCheat
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bSetActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   testInt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerCharacterTestCheat(bool bSetActive, int32 testInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerCharacterTestCheat");

	Params::HWCheatComponent_ServerCharacterTestCheat Parms{};

	Parms.bSetActive = bSetActive;
	Parms.testInt = testInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerCooldowns
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerCooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerCooldowns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerCosts
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerCosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerCosts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerDebugMinimap
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      UniqueNameTag                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerDebugMinimap(const class FName& UniqueNameTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerDebugMinimap");

	Params::HWCheatComponent_ServerDebugMinimap Parms{};

	Parms.UniqueNameTag = UniqueNameTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerDestroyNextTowerInLane
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             Lane                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnemy                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerDestroyNextTowerInLane(class FName Lane, bool bEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerDestroyNextTowerInLane");

	Params::HWCheatComponent_ServerDestroyNextTowerInLane Parms{};

	Parms.Lane = Lane;
	Parms.bEnemy = bEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerExec
// (Exec, Native, Public)
// Parameters:
// const class FString&                    Request                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerExec(const class FString& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerExec");

	Params::HWCheatComponent_ServerExec Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerExecCall
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FString&                    Request                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerExecCall(const class FString& Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerExecCall");

	Params::HWCheatComponent_ServerExecCall Parms{};

	Parms.Request = std::move(Request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerForceDraftToComplete
// (Net, Native, Event, Public, NetServer, NetValidate)

void UHWCheatComponent::ServerForceDraftToComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerForceDraftToComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerGod
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerGod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerGod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerHookMeUp
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerHookMeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerHookMeUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerKillAllMinions
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bPreventNewMinions                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerKillAllMinions(bool bPreventNewMinions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerKillAllMinions");

	Params::HWCheatComponent_ServerKillAllMinions Parms{};

	Parms.bPreventNewMinions = bPreventNewMinions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerLogCosmeticInventory
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerLogCosmeticInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerLogCosmeticInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerQuickEndGame
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bWin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerQuickEndGame(bool bWin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerQuickEndGame");

	Params::HWCheatComponent_ServerQuickEndGame Parms{};

	Parms.bWin = bWin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerQuickTrace
// (Final, Exec, Native, Public)

void UHWCheatComponent::ServerQuickTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerQuickTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerRequestRelease
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerRequestRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerRequestRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerResetCooldowns
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerResetCooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerResetCooldowns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetAnnouncerPack
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      AnnouncerPackName                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetAnnouncerPack(const class FName& AnnouncerPackName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetAnnouncerPack");

	Params::HWCheatComponent_ServerSetAnnouncerPack Parms{};

	Parms.AnnouncerPackName = AnnouncerPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetAutoBuy
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetAutoBuy(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetAutoBuy");

	Params::HWCheatComponent_ServerSetAutoBuy Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetAutoSkill
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetAutoSkill(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetAutoSkill");

	Params::HWCheatComponent_ServerSetAutoSkill Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetCharacter
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetCharacter(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetCharacter");

	Params::HWCheatComponent_ServerSetCharacter Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetCharacterRole
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// ECharacterRole                          NewRole                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetCharacterRole(ECharacterRole NewRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetCharacterRole");

	Params::HWCheatComponent_ServerSetCharacterRole Parms{};

	Parms.NewRole = NewRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetGlobalEmote
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      GlobalEmoteName                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetGlobalEmote(const class FName& GlobalEmoteName, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetGlobalEmote");

	Params::HWCheatComponent_ServerSetGlobalEmote Parms{};

	Parms.GlobalEmoteName = GlobalEmoteName;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetInventoryAutoSortEnabled
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bAutoSortEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetInventoryAutoSortEnabled(bool bAutoSortEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetInventoryAutoSortEnabled");

	Params::HWCheatComponent_ServerSetInventoryAutoSortEnabled Parms{};

	Parms.bAutoSortEnabled = bAutoSortEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetJumpStamp
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      JumpStampName                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetJumpStamp(const class FName& JumpStampName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetJumpStamp");

	Params::HWCheatComponent_ServerSetJumpStamp Parms{};

	Parms.JumpStampName = JumpStampName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetLevel
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetLevel(const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetLevel");

	Params::HWCheatComponent_ServerSetLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetScore
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetScore(int32 TeamId, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetScore");

	Params::HWCheatComponent_ServerSetScore Parms{};

	Parms.TeamId = TeamId;
	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetSkin
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetSkin(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetSkin");

	Params::HWCheatComponent_ServerSetSkin Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetSoundEmote
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      SoundEmoteName                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetSoundEmote(const class FName& SoundEmoteName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetSoundEmote");

	Params::HWCheatComponent_ServerSetSoundEmote Parms{};

	Parms.SoundEmoteName = SoundEmoteName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetTeam
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const int32                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetTeam(const int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetTeam");

	Params::HWCheatComponent_ServerSetTeam Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetTeleporterSkin
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      TeleporterSkinName                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetTeleporterSkin(const class FName& TeleporterSkinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetTeleporterSkin");

	Params::HWCheatComponent_ServerSetTeleporterSkin Parms{};

	Parms.TeleporterSkinName = TeleporterSkinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetVoicePackType
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const int32                             VoicePackType                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetVoicePackType(const int32 VoicePackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetVoicePackType");

	Params::HWCheatComponent_ServerSetVoicePackType Parms{};

	Parms.VoicePackType = VoicePackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSetWardSkin
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      WardSkinName                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSetWardSkin(const class FName& WardSkinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSetWardSkin");

	Params::HWCheatComponent_ServerSetWardSkin Parms{};

	Parms.WardSkinName = WardSkinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSlomo
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const float                             NewTimeDilation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSlomo(const float NewTimeDilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSlomo");

	Params::HWCheatComponent_ServerSlomo Parms{};

	Parms.NewTimeDilation = NewTimeDilation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSpawnBot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotSkinName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSpawnBot(const class FName& BotRowName, const class FString& BotSkinName, const class FString& ActorName, const uint8 TeamId, const uint8 Level, const uint8 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSpawnBot");

	Params::HWCheatComponent_ServerSpawnBot Parms{};

	Parms.BotRowName = BotRowName;
	Parms.BotSkinName = std::move(BotSkinName);
	Parms.ActorName = std::move(ActorName);
	Parms.TeamId = TeamId;
	Parms.Level = Level;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSpawnBotHUD
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotSkinName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSpawnBotHUD(const class FName& BotRowName, const class FString& BotSkinName, const class FString& ActorName, const uint8 TeamId, const uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSpawnBotHUD");

	Params::HWCheatComponent_ServerSpawnBotHUD Parms{};

	Parms.BotRowName = BotRowName;
	Parms.BotSkinName = std::move(BotSkinName);
	Parms.ActorName = std::move(ActorName);
	Parms.TeamId = TeamId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSpectate
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerSpectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSpectate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerStartAILearningRecording
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerStartAILearningRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerStartAILearningRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerStopAILearningRecording
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerStopAILearningRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerStopAILearningRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSuicide
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UHWCheatComponent::ServerSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSuicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSuicideBots
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bGodsOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSuicideBots(bool bGodsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSuicideBots");

	Params::HWCheatComponent_ServerSuicideBots Parms{};

	Parms.bGodsOnly = bGodsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerSuperSonic
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerSuperSonic(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerSuperSonic");

	Params::HWCheatComponent_ServerSuperSonic Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTestEffect
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      EffectName                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Magnitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTestEffect(const class FName& EffectName, const float Duration, const float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTestEffect");

	Params::HWCheatComponent_ServerTestEffect Parms{};

	Parms.EffectName = EffectName;
	Parms.Duration = Duration;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTestEffectOnTarget
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      EffectName                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Magnitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTestEffectOnTarget(const class FName& EffectName, const float Duration, const float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTestEffectOnTarget");

	Params::HWCheatComponent_ServerTestEffectOnTarget Parms{};

	Parms.EffectName = EffectName;
	Parms.Duration = Duration;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTestQuest
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTestQuest(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTestQuest");

	Params::HWCheatComponent_ServerTestQuest Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTestTalent
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const class FName&                      TalentName                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTestTalent(const class FName& TalentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTestTalent");

	Params::HWCheatComponent_ServerTestTalent Parms{};

	Parms.TalentName = TalentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerToggleGodBotDebugDisplay
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerToggleGodBotDebugDisplay(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerToggleGodBotDebugDisplay");

	Params::HWCheatComponent_ServerToggleGodBotDebugDisplay Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerToggleItemEquip
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const class UHWEquipmentItem*           Equipment                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          InventorySlot                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerToggleItemEquip(const class UHWEquipmentItem* Equipment, const struct FHWInventorySlot& InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerToggleItemEquip");

	Params::HWCheatComponent_ServerToggleItemEquip Parms{};

	Parms.Equipment = Equipment;
	Parms.InventorySlot = std::move(InventorySlot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTogglePrefireTest
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const bool                              bOn                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTogglePrefireTest(const bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTogglePrefireTest");

	Params::HWCheatComponent_ServerTogglePrefireTest Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerTowerKiller
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ServerTowerKiller(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerTowerKiller");

	Params::HWCheatComponent_ServerTowerKiller Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerUndoAllInvTransactions
// (Net, Native, Event, Public, NetServer, NetValidate)

void UHWCheatComponent::ServerUndoAllInvTransactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerUndoAllInvTransactions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ServerUndoLastInvTransaction
// (Net, Native, Event, Public, NetServer, NetValidate)

void UHWCheatComponent::ServerUndoLastInvTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ServerUndoLastInvTransaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetAbilityTargetingDebug
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetAbilityTargetingDebug(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetAbilityTargetingDebug");

	Params::HWCheatComponent_SetAbilityTargetingDebug Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetAnnouncerPack
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      AnnouncerPackName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetAnnouncerPack(const class FName& AnnouncerPackName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetAnnouncerPack");

	Params::HWCheatComponent_SetAnnouncerPack Parms{};

	Parms.AnnouncerPackName = AnnouncerPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetAutoBuy
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetAutoBuy(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetAutoBuy");

	Params::HWCheatComponent_SetAutoBuy Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetAutoSkill
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetAutoSkill(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetAutoSkill");

	Params::HWCheatComponent_SetAutoSkill Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetCharacter
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetCharacter(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetCharacter");

	Params::HWCheatComponent_SetCharacter Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetCharacterRole
// (Final, Exec, Native, Public)
// Parameters:
// ECharacterRole                          NewRole                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetCharacterRole(ECharacterRole NewRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetCharacterRole");

	Params::HWCheatComponent_SetCharacterRole Parms{};

	Parms.NewRole = NewRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetGlobalEmote
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      GlobalEmoteName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetGlobalEmote(const class FName& GlobalEmoteName, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetGlobalEmote");

	Params::HWCheatComponent_SetGlobalEmote Parms{};

	Parms.GlobalEmoteName = GlobalEmoteName;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetInventoryAutoSortEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bAutoSortEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetInventoryAutoSortEnabled(bool bAutoSortEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetInventoryAutoSortEnabled");

	Params::HWCheatComponent_SetInventoryAutoSortEnabled Parms{};

	Parms.bAutoSortEnabled = bAutoSortEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetJumpStamp
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      JumpStampName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetJumpStamp(const class FName& JumpStampName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetJumpStamp");

	Params::HWCheatComponent_SetJumpStamp Parms{};

	Parms.JumpStampName = JumpStampName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetLevel
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetLevel(const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetLevel");

	Params::HWCheatComponent_SetLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetMusicPack
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      MusicPackName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetMusicPack(const class FName& MusicPackName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetMusicPack");

	Params::HWCheatComponent_SetMusicPack Parms{};

	Parms.MusicPackName = MusicPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetScore
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   TeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetScore(int32 TeamId, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetScore");

	Params::HWCheatComponent_SetScore Parms{};

	Parms.TeamId = TeamId;
	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetSkin
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetSkin(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetSkin");

	Params::HWCheatComponent_SetSkin Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetSoundEmote
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      SoundEmoteName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetSoundEmote(const class FName& SoundEmoteName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetSoundEmote");

	Params::HWCheatComponent_SetSoundEmote Parms{};

	Parms.SoundEmoteName = SoundEmoteName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetTeam
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetTeam(const int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetTeam");

	Params::HWCheatComponent_SetTeam Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetTeleporterSkin
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      TeleporterSkinName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetTeleporterSkin(const class FName& TeleporterSkinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetTeleporterSkin");

	Params::HWCheatComponent_SetTeleporterSkin Parms{};

	Parms.TeleporterSkinName = TeleporterSkinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetVoicePackType
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             VoicePackType                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetVoicePackType(const int32 VoicePackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetVoicePackType");

	Params::HWCheatComponent_SetVoicePackType Parms{};

	Parms.VoicePackType = VoicePackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SetWardSkin
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      WardSkinName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SetWardSkin(const class FName& WardSkinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SetWardSkin");

	Params::HWCheatComponent_SetWardSkin Parms{};

	Parms.WardSkinName = WardSkinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.Slomo
// (Final, Exec, Native, Public)
// Parameters:
// const float                             NewTimeDilation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::Slomo(const float NewTimeDilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "Slomo");

	Params::HWCheatComponent_Slomo Parms{};

	Parms.NewTimeDilation = NewTimeDilation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SpawnBot
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SpawnBot(const class FName& BotRowName, const uint8 TeamId, const uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SpawnBot");

	Params::HWCheatComponent_SpawnBot Parms{};

	Parms.BotRowName = BotRowName;
	Parms.TeamId = TeamId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SpawnBotHUD
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotSkinName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SpawnBotHUD(const class FName& BotRowName, const class FString& BotSkinName, const class FString& ActorName, const uint8 TeamId, const uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SpawnBotHUD");

	Params::HWCheatComponent_SpawnBotHUD Parms{};

	Parms.BotRowName = BotRowName;
	Parms.BotSkinName = std::move(BotSkinName);
	Parms.ActorName = std::move(ActorName);
	Parms.TeamId = TeamId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SpawnBots
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SpawnBots(const class FName& BotRowName, const uint8 TeamId, const uint8 Level, const uint8 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SpawnBots");

	Params::HWCheatComponent_SpawnBots Parms{};

	Parms.BotRowName = BotRowName;
	Parms.TeamId = TeamId;
	Parms.Level = Level;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SpawnBotWithSkin
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BotSkinName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SpawnBotWithSkin(const class FName& BotRowName, const class FString& BotSkinName, const uint8 TeamId, const uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SpawnBotWithSkin");

	Params::HWCheatComponent_SpawnBotWithSkin Parms{};

	Parms.BotRowName = BotRowName;
	Parms.BotSkinName = std::move(BotSkinName);
	Parms.TeamId = TeamId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SpawnNamedBot
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      BotRowName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             TeamId                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SpawnNamedBot(const class FName& BotRowName, const class FString& ActorName, const uint8 TeamId, const uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SpawnNamedBot");

	Params::HWCheatComponent_SpawnNamedBot Parms{};

	Parms.BotRowName = BotRowName;
	Parms.ActorName = std::move(ActorName);
	Parms.TeamId = TeamId;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.Spectate
// (Final, Exec, Native, Public)

void UHWCheatComponent::Spectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "Spectate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.StartAILearningRecording
// (Final, Exec, Native, Public)

void UHWCheatComponent::StartAILearningRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "StartAILearningRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.StopAILearningRecording
// (Final, Exec, Native, Public)

void UHWCheatComponent::StopAILearningRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "StopAILearningRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.Suicide
// (Final, Exec, Native, Public)

void UHWCheatComponent::Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "Suicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SuicideBots
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bGodsOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SuicideBots(bool bGodsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SuicideBots");

	Params::HWCheatComponent_SuicideBots Parms{};

	Parms.bGodsOnly = bGodsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.SuperSonic
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::SuperSonic(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "SuperSonic");

	Params::HWCheatComponent_SuperSonic Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TestEffect
// (Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      EffectName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Magnitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TestEffect(const class FName& EffectName, const float Duration, const float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TestEffect");

	Params::HWCheatComponent_TestEffect Parms{};

	Parms.EffectName = EffectName;
	Parms.Duration = Duration;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TestEffectOnTarget
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      EffectName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Magnitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TestEffectOnTarget(const class FName& EffectName, const float Duration, const float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TestEffectOnTarget");

	Params::HWCheatComponent_TestEffectOnTarget Parms{};

	Parms.EffectName = EffectName;
	Parms.Duration = Duration;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TestQuest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TestQuest(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TestQuest");

	Params::HWCheatComponent_TestQuest Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TestTalent
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      TalentName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TestTalent(const class FName& TalentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TestTalent");

	Params::HWCheatComponent_TestTalent Parms{};

	Parms.TalentName = TalentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.ToggleGodBotDebugDisplay
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::ToggleGodBotDebugDisplay(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ToggleGodBotDebugDisplay");

	Params::HWCheatComponent_ToggleGodBotDebugDisplay Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TogglePrefireTest
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bOn                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TogglePrefireTest(const bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TogglePrefireTest");

	Params::HWCheatComponent_TogglePrefireTest Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.TowerKiller
// (Final, Exec, Native, Public)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::TowerKiller(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "TowerKiller");

	Params::HWCheatComponent_TowerKiller Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.UndoAllInvTransactions
// (Final, Exec, Native, Public)

void UHWCheatComponent::UndoAllInvTransactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "UndoAllInvTransactions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.UndoLastInvTransaction
// (Final, Exec, Native, Public)

void UHWCheatComponent::UndoLastInvTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "UndoLastInvTransaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.UpdatePlayerRolePreferences
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   AssassinPreference                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SupportPreference                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ADCPreference                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SoloPreference                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MidPreference                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRoleFill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCheatComponent::UpdatePlayerRolePreferences(int32 AssassinPreference, int32 SupportPreference, int32 ADCPreference, int32 SoloPreference, int32 MidPreference, bool bRoleFill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "UpdatePlayerRolePreferences");

	Params::HWCheatComponent_UpdatePlayerRolePreferences Parms{};

	Parms.AssassinPreference = AssassinPreference;
	Parms.SupportPreference = SupportPreference;
	Parms.ADCPreference = ADCPreference;
	Parms.SoloPreference = SoloPreference;
	Parms.MidPreference = MidPreference;
	Parms.bRoleFill = bRoleFill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCheatComponent.GetOuterController
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* UHWCheatComponent::GetOuterController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOuterController");

	Params::HWCheatComponent_GetOuterController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.GetOwningAbilitySystem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWCheatComponent::GetOwningAbilitySystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOwningAbilitySystem");

	Params::HWCheatComponent_GetOwningAbilitySystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.GetOwningCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWCheatComponent::GetOwningCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOwningCharacter");

	Params::HWCheatComponent_GetOwningCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.GetOwningCharacterAbilitySystemActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* UHWCheatComponent::GetOwningCharacterAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOwningCharacterAbilitySystemActor");

	Params::HWCheatComponent_GetOwningCharacterAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.GetOwningLoadoutComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWLoadoutComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWLoadoutComponent* UHWCheatComponent::GetOwningLoadoutComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOwningLoadoutComponent");

	Params::HWCheatComponent_GetOwningLoadoutComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.GetOwningPlayerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* UHWCheatComponent::GetOwningPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "GetOwningPlayerState");

	Params::HWCheatComponent_GetOwningPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCheatComponent.ValidateCheatPermission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCheatComponent::ValidateCheatPermission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCheatComponent", "ValidateCheatPermission");

	Params::HWCheatComponent_ValidateCheatPermission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWidgetComponent.SetClampAxes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   InAxisToClamp                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWWidgetComponent::SetClampAxes(uint8 InAxisToClamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWidgetComponent", "SetClampAxes");

	Params::HWWidgetComponent_SetClampAxes Parms{};

	Parms.InAxisToClamp = InAxisToClamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWWidgetComponent.ShouldClampAxes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWClampAxis                            Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWWidgetComponent::ShouldClampAxes(EHWClampAxis Axis) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWidgetComponent", "ShouldClampAxes");

	Params::HWWidgetComponent_ShouldClampAxes Parms{};

	Parms.Axis = Axis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWItemStoreManagerComponent.GamepadClickEquipmentItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SlotTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::GamepadClickEquipmentItem(const class UHWEquipmentItem* EquipmentItem, const struct FGameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "GamepadClickEquipmentItem");

	Params::HWItemStoreManagerComponent_GamepadClickEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.SlotTag = std::move(SlotTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.GamepadHoverBuildsIntoEquipmentItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::GamepadHoverBuildsIntoEquipmentItem(const class UHWEquipmentItem* EquipmentItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "GamepadHoverBuildsIntoEquipmentItem");

	Params::HWItemStoreManagerComponent_GamepadHoverBuildsIntoEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.GamepadHoverEquipmentItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SlotTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::GamepadHoverEquipmentItem(const class UHWEquipmentItem* EquipmentItem, const struct FGameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "GamepadHoverEquipmentItem");

	Params::HWItemStoreManagerComponent_GamepadHoverEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.SlotTag = std::move(SlotTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.SelectComponentItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::SelectComponentItem(const class UHWEquipmentItem* EquipmentItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "SelectComponentItem");

	Params::HWItemStoreManagerComponent_SelectComponentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.SelectEquipmentItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SlotTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWEquipmentItem*           DefaultSelectedItem                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::SelectEquipmentItem(const class UHWEquipmentItem* EquipmentItem, const struct FGameplayTag& SlotTag, const class UHWEquipmentItem* DefaultSelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "SelectEquipmentItem");

	Params::HWItemStoreManagerComponent_SelectEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.SlotTag = std::move(SlotTag);
	Parms.DefaultSelectedItem = DefaultSelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.SellEquipmentInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::SellEquipmentInstance(class UHWEquipmentInstance* EquipmentInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "SellEquipmentInstance");

	Params::HWItemStoreManagerComponent_SellEquipmentInstance Parms{};

	Parms.EquipmentInstance = EquipmentInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.TrackEquipmentItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SlotTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWItemStoreManagerComponent::TrackEquipmentItem(const class UHWEquipmentItem* EquipmentItem, const struct FGameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "TrackEquipmentItem");

	Params::HWItemStoreManagerComponent_TrackEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.SlotTag = std::move(SlotTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWItemStoreManagerComponent.GetCanCraftInfoFromEquipmentItem
// (Final, Native, Protected, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWCanCraftInfo                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWCanCraftInfo UHWItemStoreManagerComponent::GetCanCraftInfoFromEquipmentItem(const class UHWEquipmentItem* EquipmentItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWItemStoreManagerComponent", "GetCanCraftInfoFromEquipmentItem");

	Params::HWItemStoreManagerComponent_GetCanCraftInfoFromEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAnnouncementComponent.AddNewAnnouncement
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              AnnouncementTag                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAnnouncementComponent::AddNewAnnouncement(const struct FGameplayTag& AnnouncementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAnnouncementComponent", "AddNewAnnouncement");

	Params::HWAnnouncementComponent_AddNewAnnouncement Parms{};

	Parms.AnnouncementTag = std::move(AnnouncementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAnnouncementComponent.MulticastSendAnnouncementToClient
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const struct FGameplayTag&              AnnouncementTag                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAnnouncementComponent::MulticastSendAnnouncementToClient(const struct FGameplayTag& AnnouncementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAnnouncementComponent", "MulticastSendAnnouncementToClient");

	Params::HWAnnouncementComponent_MulticastSendAnnouncementToClient Parms{};

	Parms.AnnouncementTag = std::move(AnnouncementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.Play
// (Final, Native, Public, BlueprintCallable)

void UHWFXCurveComponent::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "Play");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.ResetTime
// (Final, Native, Public, BlueprintCallable)

void UHWFXCurveComponent::ResetTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "ResetTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.Reverse
// (Final, Native, Public, BlueprintCallable)

void UHWFXCurveComponent::Reverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "Reverse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void UHWFXCurveComponent::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.UpdateColorTrack
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             TrackName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              TrackValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWFXCurveComponent::UpdateColorTrack(class FName TrackName, const struct FLinearColor& TrackValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "UpdateColorTrack");

	Params::HWFXCurveComponent_UpdateColorTrack Parms{};

	Parms.TrackName = TrackName;
	Parms.TrackValue = std::move(TrackValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.UpdateScalarTrack
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TrackName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TrackValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWFXCurveComponent::UpdateScalarTrack(class FName TrackName, float TrackValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "UpdateScalarTrack");

	Params::HWFXCurveComponent_UpdateScalarTrack Parms{};

	Parms.TrackName = TrackName;
	Parms.TrackValue = TrackValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFXCurveComponent.GetCharacterOwner
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWFXCurveComponent::GetCharacterOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "GetCharacterOwner");

	Params::HWFXCurveComponent_GetCharacterOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFXCurveComponent.GetFxID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHWFXCurveComponent::GetFxID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "GetFxID");

	Params::HWFXCurveComponent_GetFxID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFXCurveComponent.GetPostProcessMID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UHWFXCurveComponent::GetPostProcessMID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "GetPostProcessMID");

	Params::HWFXCurveComponent_GetPostProcessMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFXCurveComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWFXCurveComponent::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFXCurveComponent", "IsPlaying");

	Params::HWFXCurveComponent_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSplineComponent.DrawDebugSpline
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const float                             splineDistanceSteps                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   DepthPriority                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSplineComponent::DrawDebugSpline(const float splineDistanceSteps, const struct FLinearColor& Color, bool bPersistentLines, float Lifetime, uint8 DepthPriority, float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplineComponent", "DrawDebugSpline");

	Params::HWSplineComponent_DrawDebugSpline Parms{};

	Parms.splineDistanceSteps = splineDistanceSteps;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;
	Parms.DepthPriority = DepthPriority;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplineComponent.OnRep_ReplicatedSplinePoints
// (Final, Native, Private)

void UHWSplineComponent::OnRep_ReplicatedSplinePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplineComponent", "OnRep_ReplicatedSplinePoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplineComponent.SetShouldReplicateSplinePoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShouldReplicate                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSplineComponent::SetShouldReplicateSplinePoints(const bool bShouldReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplineComponent", "SetShouldReplicateSplinePoints");

	Params::HWSplineComponent_SetShouldReplicateSplinePoints Parms{};

	Parms.bShouldReplicate = bShouldReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplineComponent.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSplineComponent::HasAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplineComponent", "HasAuthority");

	Params::HWSplineComponent_HasAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.ApplySplineEndCap
// (Final, Native, Public, BlueprintCallable)

void UHWSplinePathMeshManagerComponent::ApplySplineEndCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "ApplySplineEndCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.DestroyAllSplineMeshSegments
// (Final, Native, Public, BlueprintCallable)

void UHWSplinePathMeshManagerComponent::DestroyAllSplineMeshSegments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "DestroyAllSplineMeshSegments");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.HandleOnSplineSegmentBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWSplinePathMeshManagerComponent::HandleOnSplineSegmentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "HandleOnSplineSegmentBeginOverlap");

	Params::HWSplinePathMeshManagerComponent_HandleOnSplineSegmentBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.HandleOnSplineSegmentEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSplinePathMeshManagerComponent::HandleOnSplineSegmentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "HandleOnSplineSegmentEndOverlap");

	Params::HWSplinePathMeshManagerComponent_HandleOnSplineSegmentEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.SetAcceptableCollisionFilter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTargetDataFilterHandle&collisionFilter                                        (Parm, NativeAccessSpecifierPublic)

void UHWSplinePathMeshManagerComponent::SetAcceptableCollisionFilter(const struct FGameplayTargetDataFilterHandle& collisionFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "SetAcceptableCollisionFilter");

	Params::HWSplinePathMeshManagerComponent_SetAcceptableCollisionFilter Parms{};

	Parms.collisionFilter = std::move(collisionFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.SetCollisionProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      ProfileName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSplinePathMeshManagerComponent::SetCollisionProfile(const class FName& ProfileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "SetCollisionProfile");

	Params::HWSplinePathMeshManagerComponent_SetCollisionProfile Parms{};

	Parms.ProfileName = ProfileName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.GetOverlapDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWSplinePathMeshManagerComponent::GetOverlapDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "GetOverlapDistance");

	Params::HWSplinePathMeshManagerComponent_GetOverlapDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.GetPlacementDistanceInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWSplinePathMeshManagerComponent::GetPlacementDistanceInterval() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "GetPlacementDistanceInterval");

	Params::HWSplinePathMeshManagerComponent_GetPlacementDistanceInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSplinePathMeshManagerComponent.GetSkinnedSplineMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWSplineSegmentMeshType                MeshType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UHWSplinePathMeshManagerComponent::GetSkinnedSplineMesh(EHWSplineSegmentMeshType MeshType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSplinePathMeshManagerComponent", "GetSkinnedSplineMesh");

	Params::HWSplinePathMeshManagerComponent_GetSkinnedSplineMesh Parms{};

	Parms.MeshType = MeshType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.EndInteraction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           InteractInstigator                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bWasCancelled                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInteractableComponent::EndInteraction(class AActor* InteractInstigator, const bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "EndInteraction");

	Params::HWInteractableComponent_EndInteraction Parms{};

	Parms.InteractInstigator = InteractInstigator;
	Parms.bWasCancelled = bWasCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.OnInteractFieldBeginOverlap
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWInteractableComponent::OnInteractFieldBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "OnInteractFieldBeginOverlap");

	Params::HWInteractableComponent_OnInteractFieldBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.OnInteractFieldEndOverlap
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInteractableComponent::OnInteractFieldEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "OnInteractFieldEndOverlap");

	Params::HWInteractableComponent_OnInteractFieldEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.OnRep_bEnabled
// (Final, Native, Private)

void UHWInteractableComponent::OnRep_bEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "OnRep_bEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.OnRep_OngoingInteractors
// (Final, Native, Private)

void UHWInteractableComponent::OnRep_OngoingInteractors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "OnRep_OngoingInteractors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.SetEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShouldEnable                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInteractableComponent::SetEnabled(const bool bShouldEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "SetEnabled");

	Params::HWInteractableComponent_SetEnabled Parms{};

	Parms.bShouldEnable = bShouldEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.SetInteractPromptText
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// const class FText&                      NewPromptText                                          (Parm, NativeAccessSpecifierPublic)

void UHWInteractableComponent::SetInteractPromptText(const class FText& NewPromptText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "SetInteractPromptText");

	Params::HWInteractableComponent_SetInteractPromptText Parms{};

	Parms.NewPromptText = std::move(NewPromptText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.StartInteraction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           InteractInstigator                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInteractableComponent::StartInteraction(class AActor* InteractInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "StartInteraction");

	Params::HWInteractableComponent_StartInteraction Parms{};

	Parms.InteractInstigator = InteractInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.UpdatePromptVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bShowPrompt                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInteractableComponent::UpdatePromptVisuals(const bool bShowPrompt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "UpdatePromptVisuals");

	Params::HWInteractableComponent_UpdatePromptVisuals Parms{};

	Parms.bShowPrompt = bShowPrompt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractableComponent.CanEverInteractWith
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     InteractInstigator                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::CanEverInteractWith(const class AActor* InteractInstigator) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "CanEverInteractWith");

	Params::HWInteractableComponent_CanEverInteractWith Parms{};

	Parms.InteractInstigator = InteractInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.CanInteractWith
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     InteractInstigator                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::CanInteractWith(const class AActor* InteractInstigator) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "CanInteractWith");

	Params::HWInteractableComponent_CanInteractWith Parms{};

	Parms.InteractInstigator = InteractInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.CanMoveDuringInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::CanMoveDuringInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "CanMoveDuringInteraction");

	Params::HWInteractableComponent_CanMoveDuringInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.GetInteractionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWInteractableComponent::GetInteractionTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "GetInteractionTime");

	Params::HWInteractableComponent_GetInteractionTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.GetInteractMontageTag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWInteractableComponent::GetInteractMontageTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "GetInteractMontageTag");

	Params::HWInteractableComponent_GetInteractMontageTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.GetInteractPromptText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UHWInteractableComponent::GetInteractPromptText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "GetInteractPromptText");

	Params::HWInteractableComponent_GetInteractPromptText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.IsActorInteractionInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     ActorToCheck                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::IsActorInteractionInProgress(const class AActor* ActorToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "IsActorInteractionInProgress");

	Params::HWInteractableComponent_IsActorInteractionInProgress Parms{};

	Parms.ActorToCheck = ActorToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "IsEnabled");

	Params::HWInteractableComponent_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.IsInInteractionField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     ActorToCheck                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::IsInInteractionField(const class AActor* ActorToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "IsInInteractionField");

	Params::HWInteractableComponent_IsInInteractionField Parms{};

	Parms.ActorToCheck = ActorToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.IsInteractionAllowed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::IsInteractionAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "IsInteractionAllowed");

	Params::HWInteractableComponent_IsInteractionAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.IsInteractionInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::IsInteractionInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "IsInteractionInProgress");

	Params::HWInteractableComponent_IsInteractionInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractableComponent.ShouldShowPromptVisualsOnClient
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInteractableComponent::ShouldShowPromptVisualsOnClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractableComponent", "ShouldShowPromptVisualsOnClient");

	Params::HWInteractableComponent_ShouldShowPromptVisualsOnClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Amaterasu.OnRep_MirrorGlow
// (Final, Native, Protected)

void AHWCharacter_Amaterasu::OnRep_MirrorGlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Amaterasu", "OnRep_MirrorGlow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstNPC.OnNpcASCUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        UpdatedASC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstNPC::OnNpcASCUpdated(class UHWAbilitySystemComponent* UpdatedASC, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstNPC", "OnNpcASCUpdated");

	Params::HWCharacter_AnimInstNPC_OnNpcASCUpdated Parms{};

	Parms.UpdatedASC = UpdatedASC;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstNPC.OnStatusNpcTagsUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedStatusTag                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStackCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstNPC::OnStatusNpcTagsUpdated(const struct FGameplayTag& UpdatedStatusTag, int32 NewStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstNPC", "OnStatusNpcTagsUpdated");

	Params::HWCharacter_AnimInstNPC_OnStatusNpcTagsUpdated Parms{};

	Parms.UpdatedStatusTag = std::move(UpdatedStatusTag);
	Parms.NewStackCount = NewStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstNPC.PlayHitReaction
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   RelativeDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HealthPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstNPC::PlayHitReaction(const struct FVector& RelativeDirection, float HealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstNPC", "PlayHitReaction");

	Params::HWCharacter_AnimInstNPC_PlayHitReaction Parms{};

	Parms.RelativeDirection = std::move(RelativeDirection);
	Parms.HealthPercent = HealthPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayMovementComponent.ConstrainRotation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*                        RotationToConstrain                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHWGameplayMovementComponent::ConstrainRotation(struct FRotator* RotationToConstrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "ConstrainRotation");

	Params::HWGameplayMovementComponent_ConstrainRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RotationToConstrain != nullptr)
		*RotationToConstrain = std::move(Parms.RotationToConstrain);
}


// Function Hemingway.HWGameplayMovementComponent.OnLobTravelTimeComplete
// (Native, Protected)

void UHWGameplayMovementComponent::OnLobTravelTimeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "OnLobTravelTimeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayMovementComponent.ResetDistanceTraveled
// (Final, Native, Public, BlueprintCallable)

void UHWGameplayMovementComponent::ResetDistanceTraveled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "ResetDistanceTraveled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayMovementComponent.GetDistanceTraveled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayMovementComponent::GetDistanceTraveled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "GetDistanceTraveled");

	Params::HWGameplayMovementComponent_GetDistanceTraveled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayMovementComponent.GetLobType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWProjectileLobType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWProjectileLobType UHWGameplayMovementComponent::GetLobType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "GetLobType");

	Params::HWGameplayMovementComponent_GetLobType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayMovementComponent.GetRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayMovementComponent::GetRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "GetRange");

	Params::HWGameplayMovementComponent_GetRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayMovementComponent.HasReachedMaxRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             Distance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayMovementComponent::HasReachedMaxRange(const float Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayMovementComponent", "HasReachedMaxRange");

	Params::HWGameplayMovementComponent_HasReachedMaxRange Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.AddDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyNextTick                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::AddDisplayInfo(const struct FGameplayTag& DisplayInfoTag, bool bApplyNextTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "AddDisplayInfo");

	Params::HWDisplayInfoComponent_AddDisplayInfo Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);
	Parms.bApplyNextTick = bApplyNextTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.AddDisplayInfoFromConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWDisplayInfoConfig&      Config                                                 (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bApplyNextTick                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::AddDisplayInfoFromConfig(const struct FGameplayTag& DisplayInfoTag, const struct FHWDisplayInfoConfig& Config, bool bApplyNextTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "AddDisplayInfoFromConfig");

	Params::HWDisplayInfoComponent_AddDisplayInfoFromConfig Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);
	Parms.Config = std::move(Config);
	Parms.bApplyNextTick = bApplyNextTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.DisplayInfoResetRequested
// (Final, Native, Private)

void UHWDisplayInfoComponent::DisplayInfoResetRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "DisplayInfoResetRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.GetInactiveWidgetComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHWWidgetComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWWidgetComponent* UHWDisplayInfoComponent::GetInactiveWidgetComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetInactiveWidgetComponent");

	Params::HWDisplayInfoComponent_GetInactiveWidgetComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.HandleCharacterAbilitySystemUpdated
// (Final, Native, Private)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleCharacterAbilitySystemUpdated(class UHWAbilitySystemComponent* AbilitySystem, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleCharacterAbilitySystemUpdated");

	Params::HWDisplayInfoComponent_HandleCharacterAbilitySystemUpdated Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleCharacterTeamChanged
// (Final, Native, Private)
// Parameters:
// class AHWCharacterAbilitySystemActor*   OwningAbilitySystemActor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InTeamState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleCharacterTeamChanged(class AHWCharacterAbilitySystemActor* OwningAbilitySystemActor, class AHWTeamState* InTeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleCharacterTeamChanged");

	Params::HWDisplayInfoComponent_HandleCharacterTeamChanged Parms{};

	Parms.OwningAbilitySystemActor = OwningAbilitySystemActor;
	Parms.InTeamState = InTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleLocalFoWVisibilityUpdated
// (Final, Native, Private)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleLocalFoWVisibilityUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleLocalFoWVisibilityUpdated");

	Params::HWDisplayInfoComponent_HandleLocalFoWVisibilityUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleLocalMinimapVisibilityUpdated
// (Final, Native, Private)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleLocalMinimapVisibilityUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleLocalMinimapVisibilityUpdated");

	Params::HWDisplayInfoComponent_HandleLocalMinimapVisibilityUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleLocalOwnerVisibilityUpdated
// (Final, Native, Private)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleLocalOwnerVisibilityUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleLocalOwnerVisibilityUpdated");

	Params::HWDisplayInfoComponent_HandleLocalOwnerVisibilityUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleOnPawnControllerChanged
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleOnPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleOnPawnControllerChanged");

	Params::HWDisplayInfoComponent_HandleOnPawnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleUIRelevanceChange
// (Final, Native, Private)

void UHWDisplayInfoComponent::HandleUIRelevanceChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleUIRelevanceChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HandleVisibilityComponentUpdated
// (Final, Native, Private)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HandleVisibilityComponentUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HandleVisibilityComponentUpdated");

	Params::HWDisplayInfoComponent_HandleVisibilityComponentUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HideActiveDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::HideActiveDisplayInfo(const struct FGameplayTag& DisplayInfoTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HideActiveDisplayInfo");

	Params::HWDisplayInfoComponent_HideActiveDisplayInfo Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.HideActiveDisplayInfos
// (Final, Native, Public, BlueprintCallable)

void UHWDisplayInfoComponent::HideActiveDisplayInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HideActiveDisplayInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.RegisterDisplayInfoConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWDisplayInfoConfig&      NewConfig                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::RegisterDisplayInfoConfig(const struct FGameplayTag& DisplayInfoTag, const struct FHWDisplayInfoConfig& NewConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "RegisterDisplayInfoConfig");

	Params::HWDisplayInfoComponent_RegisterDisplayInfoConfig Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);
	Parms.NewConfig = std::move(NewConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.RemoveDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyNextTick                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::RemoveDisplayInfo(const struct FGameplayTag& DisplayInfoTag, bool bApplyNextTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "RemoveDisplayInfo");

	Params::HWDisplayInfoComponent_RemoveDisplayInfo Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);
	Parms.bApplyNextTick = bApplyNextTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.RemoveDisplayInfoConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::RemoveDisplayInfoConfig(const struct FGameplayTag& DisplayInfoTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "RemoveDisplayInfoConfig");

	Params::HWDisplayInfoComponent_RemoveDisplayInfoConfig Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.RemoveDisplayInfos
// (Final, Native, Public, BlueprintCallable)

void UHWDisplayInfoComponent::RemoveDisplayInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "RemoveDisplayInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.SetFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHWDisplayInfoComponentFlag             flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::SetFlag(EHWDisplayInfoComponentFlag flag, bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "SetFlag");

	Params::HWDisplayInfoComponent_SetFlag Parms{};

	Parms.flag = flag;
	Parms.bActivate = bActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.ShowActiveDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::ShowActiveDisplayInfo(const struct FGameplayTag& DisplayInfoTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "ShowActiveDisplayInfo");

	Params::HWDisplayInfoComponent_ShowActiveDisplayInfo Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.ShowActiveDisplayInfos
// (Final, Native, Public, BlueprintCallable)

void UHWDisplayInfoComponent::ShowActiveDisplayInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "ShowActiveDisplayInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.ToggleFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHWDisplayInfoComponentFlag             flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::ToggleFlag(EHWDisplayInfoComponentFlag flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "ToggleFlag");

	Params::HWDisplayInfoComponent_ToggleFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.UpdateDisplayInfoLifespan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeSpan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoComponent::UpdateDisplayInfoLifespan(const struct FGameplayTag& DisplayInfoTag, float LifeSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "UpdateDisplayInfoLifespan");

	Params::HWDisplayInfoComponent_UpdateDisplayInfoLifespan Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);
	Parms.LifeSpan = LifeSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoComponent.GetDisplayInfoConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWDisplayInfoConfig             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHWDisplayInfoConfig UHWDisplayInfoComponent::GetDisplayInfoConfig(const struct FGameplayTag& DisplayInfoTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetDisplayInfoConfig");

	Params::HWDisplayInfoComponent_GetDisplayInfoConfig Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.GetFloatingTextAlignment
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UHWDisplayInfoComponent::GetFloatingTextAlignment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetFloatingTextAlignment");

	Params::HWDisplayInfoComponent_GetFloatingTextAlignment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.GetFloatingTextAnchor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UHWDisplayInfoComponent::GetFloatingTextAnchor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetFloatingTextAnchor");

	Params::HWDisplayInfoComponent_GetFloatingTextAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.GetFloatingTextOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UHWDisplayInfoComponent::GetFloatingTextOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetFloatingTextOffset");

	Params::HWDisplayInfoComponent_GetFloatingTextOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.GetWorldOverlayAnchor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UHWDisplayInfoComponent::GetWorldOverlayAnchor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "GetWorldOverlayAnchor");

	Params::HWDisplayInfoComponent_GetWorldOverlayAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.HasFloatingTextAnchorOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoComponent::HasFloatingTextAnchorOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HasFloatingTextAnchorOverride");

	Params::HWDisplayInfoComponent_HasFloatingTextAnchorOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.HasWorldOverlayAnchorOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoComponent::HasWorldOverlayAnchorOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "HasWorldOverlayAnchorOverride");

	Params::HWDisplayInfoComponent_HasWorldOverlayAnchorOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.IsDisplayInfoActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              DisplayInfoTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoComponent::IsDisplayInfoActive(const struct FGameplayTag& DisplayInfoTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "IsDisplayInfoActive");

	Params::HWDisplayInfoComponent_IsDisplayInfoActive Parms{};

	Parms.DisplayInfoTag = std::move(DisplayInfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoComponent.IsFlagActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWDisplayInfoComponentFlag             flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoComponent::IsFlagActive(EHWDisplayInfoComponentFlag flag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoComponent", "IsFlagActive");

	Params::HWDisplayInfoComponent_IsFlagActive Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoJungleComponent.HandleFactoryMinimapStateUpdated
// (Final, Native, Private)
// Parameters:
// class AHWBotFactory*                    BotFactory                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoJungleComponent::HandleFactoryMinimapStateUpdated(class AHWBotFactory* BotFactory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoJungleComponent", "HandleFactoryMinimapStateUpdated");

	Params::HWDisplayInfoJungleComponent_HandleFactoryMinimapStateUpdated Parms{};

	Parms.BotFactory = BotFactory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoJungleComponent.CanLocalTeamSeeRespawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoJungleComponent::CanLocalTeamSeeRespawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoJungleComponent", "CanLocalTeamSeeRespawns");

	Params::HWDisplayInfoJungleComponent_CanLocalTeamSeeRespawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoJungleComponent.GetCampTypeTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWDisplayInfoJungleComponent::GetCampTypeTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoJungleComponent", "GetCampTypeTag");

	Params::HWDisplayInfoJungleComponent_GetCampTypeTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoJungleComponent.GetRespawnTimeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                                  OutTotalRespawnTime                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutRemainingRespawnTime                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoJungleComponent::GetRespawnTimeInfo(float* OutTotalRespawnTime, float* OutRemainingRespawnTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoJungleComponent", "GetRespawnTimeInfo");

	Params::HWDisplayInfoJungleComponent_GetRespawnTimeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalRespawnTime != nullptr)
		*OutTotalRespawnTime = Parms.OutTotalRespawnTime;

	if (OutRemainingRespawnTime != nullptr)
		*OutRemainingRespawnTime = Parms.OutRemainingRespawnTime;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoJungleComponent.IsCampActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoJungleComponent::IsCampActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoJungleComponent", "IsCampActive");

	Params::HWDisplayInfoJungleComponent_IsCampActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Geb.ActivateBoulderFormVisuals
// (Final, BlueprintCosmetic, Native, Public)

void AHWCharacter_Geb::ActivateBoulderFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "ActivateBoulderFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.AnimateBoulderOutro
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isLeap                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Geb::AnimateBoulderOutro(bool isLeap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "AnimateBoulderOutro");

	Params::HWCharacter_Geb_AnimateBoulderOutro Parms{};

	Parms.isLeap = isLeap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.DeactivateBoulderFormVisuals
// (Final, BlueprintCosmetic, Native, Public)

void AHWCharacter_Geb::DeactivateBoulderFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "DeactivateBoulderFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.InitializeBoulderMesh
// (Final, Native, Protected)

void AHWCharacter_Geb::InitializeBoulderMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "InitializeBoulderMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.OnRep_BoulderState
// (Final, Native, Protected)

void AHWCharacter_Geb::OnRep_BoulderState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "OnRep_BoulderState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.SetBoulderState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EHWBoulderState                   NewBoulderState                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Geb::SetBoulderState(const EHWBoulderState NewBoulderState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "SetBoulderState");

	Params::HWCharacter_Geb_SetBoulderState Parms{};

	Parms.NewBoulderState = NewBoulderState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Geb.GetBoulderState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWBoulderState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWBoulderState AHWCharacter_Geb::GetBoulderState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "GetBoulderState");

	Params::HWCharacter_Geb_GetBoulderState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Geb.IsBoulderStateActive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Geb::IsBoulderStateActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Geb", "IsBoulderStateActive");

	Params::HWCharacter_Geb_IsBoulderStateActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAITargetChange.WaitForAITargetChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitAITargetChange*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitAITargetChange* UHWAbilityTask_WaitAITargetChange::WaitForAITargetChange(class UGameplayAbility* OwningAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitAITargetChange", "WaitForAITargetChange");

	Params::HWAbilityTask_WaitAITargetChange_WaitForAITargetChange Parms{};

	Parms.OwningAbility = OwningAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Kali.GetBaseA02ProjectileSpline
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                                   SplineIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USplineComponent* AHWCharacter_Kali::GetBaseA02ProjectileSpline(int32 SplineIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Kali", "GetBaseA02ProjectileSpline");

	Params::HWCharacter_Kali_GetBaseA02ProjectileSpline Parms{};

	Parms.SplineIndex = SplineIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Mulan.AssignRopeTarget
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bEnableTether                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     TetherTarget                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   WallTetherLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Mulan::AssignRopeTarget(bool bEnableTether, const class AActor* TetherTarget, const struct FVector& WallTetherLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Mulan", "AssignRopeTarget");

	Params::HWCharacter_Mulan_AssignRopeTarget Parms{};

	Parms.bEnableTether = bEnableTether;
	Parms.TetherTarget = TetherTarget;
	Parms.WallTetherLocation = std::move(WallTetherLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Mulan.OnRep_RopeTetherInfo
// (Final, Native, Protected)

void AHWCharacter_Mulan::OnRep_RopeTetherInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Mulan", "OnRep_RopeTetherInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitGameplayEffectApplied_Self.WaitForGameplayEffectAppliedToSelf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&EffectSourceFilter                                     (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  EffectSourceTagRequirements                            (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  EffectTargetTagRequirements                            (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagRequirements&  EffectRequirements                                     (Parm, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OptionalExternalOwner                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ListenForPeriodicEffect                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitGameplayEffectApplied_Self*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitGameplayEffectApplied_Self* UHWAbilityTask_WaitGameplayEffectApplied_Self::WaitForGameplayEffectAppliedToSelf(class UGameplayAbility* OwningAbility, const struct FGameplayTargetDataFilterHandle& EffectSourceFilter, const struct FGameplayTagRequirements& EffectSourceTagRequirements, const struct FGameplayTagRequirements& EffectTargetTagRequirements, const struct FGameplayTagRequirements& EffectRequirements, bool TriggerOnce, class AActor* OptionalExternalOwner, bool ListenForPeriodicEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitGameplayEffectApplied_Self", "WaitForGameplayEffectAppliedToSelf");

	Params::HWAbilityTask_WaitGameplayEffectApplied_Self_WaitForGameplayEffectAppliedToSelf Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.EffectSourceFilter = std::move(EffectSourceFilter);
	Parms.EffectSourceTagRequirements = std::move(EffectSourceTagRequirements);
	Parms.EffectTargetTagRequirements = std::move(EffectTargetTagRequirements);
	Parms.EffectRequirements = std::move(EffectRequirements);
	Parms.TriggerOnce = TriggerOnce;
	Parms.OptionalExternalOwner = OptionalExternalOwner;
	Parms.ListenForPeriodicEffect = ListenForPeriodicEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitGameplayEffectApplied_Self.WaitGameplayEffectAppliedToSelf_Query
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&EffectSourceFilter                                     (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         EffectSourceTagQuery                                   (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         EffectTargetTagQuery                                   (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectQuery&      EffectQuery                                            (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OptionalExternalOwner                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ListenForPeriodicEffect                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitGameplayEffectApplied_Self*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitGameplayEffectApplied_Self* UHWAbilityTask_WaitGameplayEffectApplied_Self::WaitGameplayEffectAppliedToSelf_Query(class UGameplayAbility* OwningAbility, const struct FGameplayTargetDataFilterHandle& EffectSourceFilter, const struct FGameplayTagQuery& EffectSourceTagQuery, const struct FGameplayTagQuery& EffectTargetTagQuery, const struct FGameplayEffectQuery& EffectQuery, bool TriggerOnce, class AActor* OptionalExternalOwner, bool ListenForPeriodicEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitGameplayEffectApplied_Self", "WaitGameplayEffectAppliedToSelf_Query");

	Params::HWAbilityTask_WaitGameplayEffectApplied_Self_WaitGameplayEffectAppliedToSelf_Query Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.EffectSourceFilter = std::move(EffectSourceFilter);
	Parms.EffectSourceTagQuery = std::move(EffectSourceTagQuery);
	Parms.EffectTargetTagQuery = std::move(EffectTargetTagQuery);
	Parms.EffectQuery = std::move(EffectQuery);
	Parms.TriggerOnce = TriggerOnce;
	Parms.OptionalExternalOwner = OptionalExternalOwner;
	Parms.ListenForPeriodicEffect = ListenForPeriodicEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitGameplayEffectApplied_Self.OnGameplayEffectApplied
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          EffectSourceASC                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       SpecApplied                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitGameplayEffectApplied_Self::OnGameplayEffectApplied(class UAbilitySystemComponent* EffectSourceASC, const struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitGameplayEffectApplied_Self", "OnGameplayEffectApplied");

	Params::HWAbilityTask_WaitGameplayEffectApplied_Self_OnGameplayEffectApplied Parms{};

	Parms.EffectSourceASC = EffectSourceASC;
	Parms.SpecApplied = std::move(SpecApplied);
	Parms.ActiveHandle = std::move(ActiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitGameplayEffectApplied_Self.GetTrackedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAbilityTask_WaitGameplayEffectApplied_Self::GetTrackedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitGameplayEffectApplied_Self", "GetTrackedActor");

	Params::HWAbilityTask_WaitGameplayEffectApplied_Self_GetTrackedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitGameplayEffectApplied_Self.GetTrackedASC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* UHWAbilityTask_WaitGameplayEffectApplied_Self::GetTrackedASC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitGameplayEffectApplied_Self", "GetTrackedASC");

	Params::HWAbilityTask_WaitGameplayEffectApplied_Self_GetTrackedASC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Danzaburou_A01.ActivateExplosionVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AHWDeployable_Danzaburou_A01::ActivateExplosionVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "ActivateExplosionVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Danzaburou_A01.ActivateExplosionWarningVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AHWDeployable_Danzaburou_A01::ActivateExplosionWarningVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "ActivateExplosionWarningVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Danzaburou_A01.OnMaxRangedReached
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayMovementComponent*     GameplayMovementComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Danzaburou_A01::OnMaxRangedReached(class UHWGameplayMovementComponent* GameplayMovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "OnMaxRangedReached");

	Params::HWDeployable_Danzaburou_A01_OnMaxRangedReached Parms{};

	Parms.GameplayMovementComponent = GameplayMovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A01.OnRep_IsExploded
// (Final, Native, Protected)

void AHWDeployable_Danzaburou_A01::OnRep_IsExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "OnRep_IsExploded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A01.OnRep_IsMarkedForExplosion
// (Final, Native, Protected)

void AHWDeployable_Danzaburou_A01::OnRep_IsMarkedForExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "OnRep_IsMarkedForExplosion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A01.StartExplosionTimer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A01::StartExplosionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A01", "StartExplosionTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent.GetComponentSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentComponentSettings*ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWEquipmentComponentSettings* UHWEquipmentComponent::GetComponentSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent", "GetComponentSettings");

	Params::HWEquipmentComponent_GetComponentSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent.GetIdTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentComponent::GetIdTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent", "GetIdTag");

	Params::HWEquipmentComponent_GetIdTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent.GetOwningAbilitySystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWEquipmentComponent::GetOwningAbilitySystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent", "GetOwningAbilitySystem");

	Params::HWEquipmentComponent_GetOwningAbilitySystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent.GetOwningEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWEquipmentComponent::GetOwningEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent", "GetOwningEquipment");

	Params::HWEquipmentComponent_GetOwningEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent.GetOwningInventoryManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* UHWEquipmentComponent::GetOwningInventoryManagerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent", "GetOwningInventoryManagerComponent");

	Params::HWEquipmentComponent_GetOwningInventoryManagerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.OnEquipmentSlotChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UHWInventoryManagerComponent*     InventoryManager                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_ChildEquipment::OnEquipmentSlotChanged(class UHWInventoryManagerComponent* InventoryManager, class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& Slot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "OnEquipmentSlotChanged");

	Params::HWEquipmentComponent_ChildEquipment_OnEquipmentSlotChanged Parms{};

	Parms.InventoryManager = InventoryManager;
	Parms.EquipmentInstance = EquipmentInstance;
	Parms.Slot = std::move(Slot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.OnParentLevelChanged
// (Final, Native, Protected)
// Parameters:
// class UHWEquipmentInstance*             Equipment                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             PreviousLevel                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_ChildEquipment::OnParentLevelChanged(class UHWEquipmentInstance* Equipment, const int32 PreviousLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "OnParentLevelChanged");

	Params::HWEquipmentComponent_ChildEquipment_OnParentLevelChanged Parms{};

	Parms.Equipment = Equipment;
	Parms.PreviousLevel = PreviousLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.OnRep_ParentEquipment
// (Final, Native, Protected)

void UHWEquipmentComponent_ChildEquipment::OnRep_ParentEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "OnRep_ParentEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.GetParentEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWEquipmentComponent_ChildEquipment::GetParentEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "GetParentEquipment");

	Params::HWEquipmentComponent_ChildEquipment_GetParentEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.GetParentEquipmentComponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UHWEquipmentComponent>ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentComponent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentComponent* UHWEquipmentComponent_ChildEquipment::GetParentEquipmentComponentByClass(TSubclassOf<class UHWEquipmentComponent> ComponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "GetParentEquipmentComponentByClass");

	Params::HWEquipmentComponent_ChildEquipment_GetParentEquipmentComponentByClass Parms{};

	Parms.ComponentClass = ComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_ChildEquipment.ShouldUseParentEquipmentFiringInstanceId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_ChildEquipment::ShouldUseParentEquipmentFiringInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_ChildEquipment", "ShouldUseParentEquipmentFiringInstanceId");

	Params::HWEquipmentComponent_ChildEquipment_ShouldUseParentEquipmentFiringInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Statue.FreezeSkeleton
// (Final, Native, Protected)

void AHWDeployable_Statue::FreezeSkeleton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "FreezeSkeleton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Statue.GetTargetCharacterToDepict
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWDeployable_Statue::GetTargetCharacterToDepict()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "GetTargetCharacterToDepict");

	Params::HWDeployable_Statue_GetTargetCharacterToDepict Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Statue.HandleTagUpdated_TargetLock
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Statue::HandleTagUpdated_TargetLock(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "HandleTagUpdated_TargetLock");

	Params::HWDeployable_Statue_HandleTagUpdated_TargetLock Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Statue.InitializeStatue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                InTargetCharacter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Statue::InitializeStatue(class AHWCharacter_Base* InTargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "InitializeStatue");

	Params::HWDeployable_Statue_InitializeStatue Parms{};

	Parms.InTargetCharacter = InTargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Statue.OnDepictedCharacterCopied
// (Event, Protected, BlueprintEvent)

void AHWDeployable_Statue::OnDepictedCharacterCopied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "OnDepictedCharacterCopied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Statue.OnRep_DepictedCharacter
// (Final, Native, Protected)

void AHWDeployable_Statue::OnRep_DepictedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "OnRep_DepictedCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Statue.SetUpCollision
// (Final, Native, Public)

void AHWDeployable_Statue::SetUpCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "SetUpCollision");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Statue.SetUpMeshDepiction
// (Final, Native, Public)

void AHWDeployable_Statue::SetUpMeshDepiction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Statue", "SetUpMeshDepiction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.AddStatusTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::AddStatusTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "AddStatusTag");

	Params::HWEquipmentInstance_AddStatusTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.AssignInputTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::AssignInputTag(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "AssignInputTag");

	Params::HWEquipmentInstance_AssignInputTag Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.ClearInventorySlot
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentInstance::ClearInventorySlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "ClearInventorySlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.GetCastStyle
// (Final, Native, Public)
// Parameters:
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle UHWEquipmentInstance::GetCastStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetCastStyle");

	Params::HWEquipmentInstance_GetCastStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.HandleAbilityActivationBlockedTagUpdated
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              ActivationBlockTag                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::HandleAbilityActivationBlockedTagUpdated(const struct FGameplayTag& ActivationBlockTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "HandleAbilityActivationBlockedTagUpdated");

	Params::HWEquipmentInstance_HandleAbilityActivationBlockedTagUpdated Parms{};

	Parms.ActivationBlockTag = std::move(ActivationBlockTag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnEquipmentLevelChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   PreviousLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::OnEquipmentLevelChanged(int32 PreviousLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnEquipmentLevelChanged");

	Params::HWEquipmentInstance_OnEquipmentLevelChanged Parms{};

	Parms.PreviousLevel = PreviousLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_AssignedInputTag
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              OldInputTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::OnRep_AssignedInputTag(const struct FGameplayTag& OldInputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_AssignedInputTag");

	Params::HWEquipmentInstance_OnRep_AssignedInputTag Parms{};

	Parms.OldInputTag = std::move(OldInputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_CastStyle
// (Native, Protected)

void UHWEquipmentInstance::OnRep_CastStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_CastStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_EquipmentComponents
// (Final, Native, Protected)

void UHWEquipmentInstance::OnRep_EquipmentComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_EquipmentComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_IconOverrideTag
// (Final, Native, Public)

void UHWEquipmentInstance::OnRep_IconOverrideTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_IconOverrideTag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_OwningInventoryManager
// (Final, Native, Protected)

void UHWEquipmentInstance::OnRep_OwningInventoryManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_OwningInventoryManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.OnRep_StatusTags
// (Final, Native, Protected)

void UHWEquipmentInstance::OnRep_StatusTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "OnRep_StatusTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.RefundSkillPoints
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentInstance::RefundSkillPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "RefundSkillPoints");

	Params::HWEquipmentInstance_RefundSkillPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.RemoveGrantedByEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentInstance::RemoveGrantedByEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "RemoveGrantedByEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.RemoveStatusTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::RemoveStatusTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "RemoveStatusTag");

	Params::HWEquipmentInstance_RemoveStatusTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.ServerSetLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             NewLevel                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::ServerSetLevel(const int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "ServerSetLevel");

	Params::HWEquipmentInstance_ServerSetLevel Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.SetAbilityCastStyle
// (Final, Native, Public)
// Parameters:
// EAbilityCastStyle                       InCastStyle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::SetAbilityCastStyle(EAbilityCastStyle InCastStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "SetAbilityCastStyle");

	Params::HWEquipmentInstance_SetAbilityCastStyle Parms{};

	Parms.InCastStyle = InCastStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.SetAbilityPersistentState
// (Final, Native, Public)
// Parameters:
// const class FString&                    PersistentState                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::SetAbilityPersistentState(const class FString& PersistentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "SetAbilityPersistentState");

	Params::HWEquipmentInstance_SetAbilityPersistentState Parms{};

	Parms.PersistentState = std::move(PersistentState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.SetIconOverrideTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NewIconOverrideTag                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::SetIconOverrideTag(const struct FGameplayTag& NewIconOverrideTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "SetIconOverrideTag");

	Params::HWEquipmentInstance_SetIconOverrideTag Parms{};

	Parms.NewIconOverrideTag = std::move(NewIconOverrideTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.SetInventorySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::SetInventorySlot(const struct FHWInventorySlot& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "SetInventorySlot");

	Params::HWEquipmentInstance_SetInventorySlot Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.SetLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             NewLevel                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::SetLevel(const int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "SetLevel");

	Params::HWEquipmentInstance_SetLevel Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.UpdateCastStyle
// (Native, Protected)

void UHWEquipmentInstance::UpdateCastStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "UpdateCastStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentInstance.CanEquipmentLevelUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::CanEquipmentLevelUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "CanEquipmentLevelUp");

	Params::HWEquipmentInstance_CanEquipmentLevelUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.CanSetEquipmentLevelTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             DesiredLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::CanSetEquipmentLevelTo(const int32 DesiredLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "CanSetEquipmentLevelTo");

	Params::HWEquipmentInstance_CanSetEquipmentLevelTo Parms{};

	Parms.DesiredLevel = DesiredLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetAbilityAdditionalActivationBlockTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWEquipmentInstance::GetAbilityAdditionalActivationBlockTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetAbilityAdditionalActivationBlockTags");

	Params::HWEquipmentInstance_GetAbilityAdditionalActivationBlockTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetAbilityHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilitySpecHandle       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAbilitySpecHandle UHWEquipmentInstance::GetAbilityHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetAbilityHandle");

	Params::HWEquipmentInstance_GetAbilityHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetAbilityPersistentState
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWEquipmentInstance::GetAbilityPersistentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetAbilityPersistentState");

	Params::HWEquipmentInstance_GetAbilityPersistentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetCurrentAbilityPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityFlowPhase                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityFlowPhase UHWEquipmentInstance::GetCurrentAbilityPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetCurrentAbilityPhase");

	Params::HWEquipmentInstance_GetCurrentAbilityPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetEquipmentComponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UHWEquipmentComponent>ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentComponent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentComponent* UHWEquipmentInstance::GetEquipmentComponentByClass(TSubclassOf<class UHWEquipmentComponent> ComponentClass, const struct FGameplayTag& ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetEquipmentComponentByClass");

	Params::HWEquipmentInstance_GetEquipmentComponentByClass Parms{};

	Parms.ComponentClass = ComponentClass;
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetEquipmentInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWEquipmentInfo* UHWEquipmentInstance::GetEquipmentInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetEquipmentInfo");

	Params::HWEquipmentInstance_GetEquipmentInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetEquipmentInputTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bIsForDisplay                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentInstance::GetEquipmentInputTag(const bool bIsForDisplay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetEquipmentInputTag");

	Params::HWEquipmentInstance_GetEquipmentInputTag Parms{};

	Parms.bIsForDisplay = bIsForDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetEquipmentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWEquipmentItem* UHWEquipmentInstance::GetEquipmentItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetEquipmentItem");

	Params::HWEquipmentInstance_GetEquipmentItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetEquipmentType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentInstance::GetEquipmentType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetEquipmentType");

	Params::HWEquipmentInstance_GetEquipmentType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetGrantedByEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActiveGameplayEffectHandle      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActiveGameplayEffectHandle UHWEquipmentInstance::GetGrantedByEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetGrantedByEffect");

	Params::HWEquipmentInstance_GetGrantedByEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetIconOverridesTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentInstance::GetIconOverridesTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetIconOverridesTag");

	Params::HWEquipmentInstance_GetIconOverridesTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetInventorySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWInventorySlot                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWInventorySlot UHWEquipmentInstance::GetInventorySlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetInventorySlot");

	Params::HWEquipmentInstance_GetInventorySlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentInstance::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetLevel");

	Params::HWEquipmentInstance_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentInstance::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetMaxLevel");

	Params::HWEquipmentInstance_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetOwningAbilitySystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWEquipmentInstance::GetOwningAbilitySystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetOwningAbilitySystem");

	Params::HWEquipmentInstance_GetOwningAbilitySystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetOwningInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* UHWEquipmentInstance::GetOwningInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetOwningInventory");

	Params::HWEquipmentInstance_GetOwningInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetSkillPointsNeededForLvl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             CurrentLvl                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NewLvl                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentInstance::GetSkillPointsNeededForLvl(const int32 CurrentLvl, const int32 NewLvl) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetSkillPointsNeededForLvl");

	Params::HWEquipmentInstance_GetSkillPointsNeededForLvl Parms{};

	Parms.CurrentLvl = CurrentLvl;
	Parms.NewLvl = NewLvl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.GetStatusTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer*           OutStatusTags                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWEquipmentInstance::GetStatusTags(struct FGameplayTagContainer* OutStatusTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "GetStatusTags");

	Params::HWEquipmentInstance_GetStatusTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatusTags != nullptr)
		*OutStatusTags = std::move(Parms.OutStatusTags);
}


// Function Hemingway.HWEquipmentInstance.HasStatusTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::HasStatusTag(const struct FGameplayTag& Tag, bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "HasStatusTag");

	Params::HWEquipmentInstance_HasStatusTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.IsActivatableItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::IsActivatableItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "IsActivatableItem");

	Params::HWEquipmentInstance_IsActivatableItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::IsEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "IsEquipped");

	Params::HWEquipmentInstance_IsEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.IsInInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::IsInInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "IsInInventory");

	Params::HWEquipmentInstance_IsInInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.MakeEffectContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWEquipmentInstance::MakeEffectContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "MakeEffectContext");

	Params::HWEquipmentInstance_MakeEffectContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInstance.ShouldUseSkillPointToLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInstance::ShouldUseSkillPointToLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInstance", "ShouldUseSkillPointToLevel");

	Params::HWEquipmentInstance_ShouldUseSkillPointToLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftAuthority.KeepAllDraftTimersInSync
// (Final, Native, Protected)

void AHWDraftAuthority::KeepAllDraftTimersInSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftAuthority", "KeepAllDraftTimersInSync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftAuthority.OnAllPlayersConnectedToMatch
// (Final, Native, Protected)
// Parameters:
// bool                                    bDidAllPlayersConnect                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDraftAuthority::OnAllPlayersConnectedToMatch(bool bDidAllPlayersConnect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftAuthority", "OnAllPlayersConnectedToMatch");

	Params::HWDraftAuthority_OnAllPlayersConnectedToMatch Parms{};

	Parms.bDidAllPlayersConnect = bDidAllPlayersConnect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftAuthority.OnGamePhaseStarted
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              NewPhase                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDraftAuthority::OnGamePhaseStarted(const struct FGameplayTag& NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftAuthority", "OnGamePhaseStarted");

	Params::HWDraftAuthority_OnGamePhaseStarted Parms{};

	Parms.NewPhase = std::move(NewPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEventManager.AddEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWEventContext*                 EventContext                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void AHWEventManager::AddEvent(const struct FGameplayTag& EventTag, struct FHWEventContext* EventContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventManager", "AddEvent");

	Params::HWEventManager_AddEvent Parms{};

	Parms.EventTag = std::move(EventTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (EventContext != nullptr)
		*EventContext = std::move(Parms.EventContext);
}


// Function Hemingway.HWEventManager.IsQueueEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWEventManager::IsQueueEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventManager", "IsQueueEmpty");

	Params::HWEventManager_IsQueueEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_Linear.GetManualCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_Linear::GetManualCollisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_Linear", "GetManualCollisionRadius");

	Params::HWAbilityAimSettings_Linear_GetManualCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_Linear.GetMaxRange
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWAimTargetingInfo&       AimTargetingInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_Linear::GetMaxRange(const struct FHWAimTargetingInfo& AimTargetingInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_Linear", "GetMaxRange");

	Params::HWAbilityAimSettings_Linear_GetMaxRange Parms{};

	Parms.AimTargetingInfo = std::move(AimTargetingInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_Linear.GetWorldCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_Linear::GetWorldCollisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_Linear", "GetWorldCollisionRadius");

	Params::HWAbilityAimSettings_Linear_GetWorldCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.GetInputTagOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWEquipmentComponentSettings_Refireable::GetInputTagOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "GetInputTagOverride");

	Params::HWEquipmentComponentSettings_Refireable_GetInputTagOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.GetRefireAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UGameplayAbility>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayAbility> UHWEquipmentComponentSettings_Refireable::GetRefireAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "GetRefireAbility");

	Params::HWEquipmentComponentSettings_Refireable_GetRefireAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.GetRefireBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERefireAbilityBehavior                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERefireAbilityBehavior UHWEquipmentComponentSettings_Refireable::GetRefireBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "GetRefireBehavior");

	Params::HWEquipmentComponentSettings_Refireable_GetRefireBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.ShouldAllowMultipleRefires
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponentSettings_Refireable::ShouldAllowMultipleRefires() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "ShouldAllowMultipleRefires");

	Params::HWEquipmentComponentSettings_Refireable_ShouldAllowMultipleRefires Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.ShouldCancelRefireAbilityImmeditatelyOnRefireWindowEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponentSettings_Refireable::ShouldCancelRefireAbilityImmeditatelyOnRefireWindowEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "ShouldCancelRefireAbilityImmeditatelyOnRefireWindowEnd");

	Params::HWEquipmentComponentSettings_Refireable_ShouldCancelRefireAbilityImmeditatelyOnRefireWindowEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponentSettings_Refireable.ShouldRefireOnTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWRefireTrigger                        RefireTrigger                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponentSettings_Refireable::ShouldRefireOnTrigger(EHWRefireTrigger RefireTrigger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponentSettings_Refireable", "ShouldRefireOnTrigger");

	Params::HWEquipmentComponentSettings_Refireable_ShouldRefireOnTrigger Parms{};

	Parms.RefireTrigger = RefireTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Neith_Weave.ActivateLocalTargetingVFX
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Neith_Weave::ActivateLocalTargetingVFX(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Neith_Weave", "ActivateLocalTargetingVFX");

	Params::HWDeployable_Neith_Weave_ActivateLocalTargetingVFX Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWEventStompAssessorBase.ShouldStomp
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWEventConfig&            Event1Config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           Event1Context                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWEventConfig&            Event2Config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           Event2Context                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEventStompAssessorBase::ShouldStomp(const struct FHWEventConfig& Event1Config, const struct FHWEventContext& Event1Context, const struct FHWEventConfig& Event2Config, const struct FHWEventContext& Event2Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEventStompAssessorBase", "ShouldStomp");

	Params::HWEventStompAssessorBase_ShouldStomp Parms{};

	Parms.Event1Config = std::move(Event1Config);
	Parms.Event1Context = std::move(Event1Context);
	Parms.Event2Config = std::move(Event2Config);
	Parms.Event2Context = std::move(Event2Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_Mordred_B04.OnDashHitGod
// (Event, Public, BlueprintEvent)

void UHWGameplayAbility_Mordred_B04::OnDashHitGod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Mordred_B04", "OnDashHitGod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWGameplayAbility_Mordred_B04.OnRep_DashHitGod
// (Final, Native, Protected)

void UHWGameplayAbility_Mordred_B04::OnRep_DashHitGod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Mordred_B04", "OnRep_DashHitGod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Mordred_B04.SetDashHitGod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Mordred_B04::SetDashHitGod(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Mordred_B04", "SetDashHitGod");

	Params::HWGameplayAbility_Mordred_B04_SetDashHitGod Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_Stealth.EndStealthOnAbilityStartFire
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InAbilityTags                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWGameplayAbility_Stealth::EndStealthOnAbilityStartFire(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& InAbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_Stealth", "EndStealthOnAbilityStartFire");

	Params::HWGameplayAbility_Stealth_EndStealthOnAbilityStartFire Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.InAbilityTags = std::move(InAbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.CalcDashRotation
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Velocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UHWGameplayDash::CalcDashRotation(const float DeltaTime, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcDashRotation");

	Params::HWGameplayDash_CalcDashRotation Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Velocity = std::move(Velocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.CalcDashVelocity
// (Final, Native, Public, HasDefaults)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayDash::CalcDashVelocity(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcDashVelocity");

	Params::HWGameplayDash_CalcDashVelocity Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.CanBeInterruptedByKnockback
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::CanBeInterruptedByKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CanBeInterruptedByKnockback");

	Params::HWGameplayDash_CanBeInterruptedByKnockback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.CollectDashHits
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FVector&                   Start                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   End                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::CollectDashHits(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CollectDashHits");

	Params::HWGameplayDash_CollectDashHits Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.EndDash
// (Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bIsInterrupting                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldStartNextQueuedDash                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::EndDash(const bool bIsInterrupting, const bool bShouldStartNextQueuedDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "EndDash");

	Params::HWGameplayDash_EndDash Parms{};

	Parms.bIsInterrupting = bIsInterrupting;
	Parms.bShouldStartNextQueuedDash = bShouldStartNextQueuedDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.ExtendDash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Distance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::ExtendDash(const float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "ExtendDash");

	Params::HWGameplayDash_ExtendDash Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.GetDashEndClampedSpeed
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayDash::GetDashEndClampedSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashEndClampedSpeed");

	Params::HWGameplayDash_GetDashEndClampedSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.OnCharacterMovementUpdated
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OldLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OldVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnCharacterMovementUpdated");

	Params::HWGameplayDash_OnCharacterMovementUpdated Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OldLocation = std::move(OldLocation);
	Parms.OldVelocity = std::move(OldVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  AttackInstance                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayDash::OnDashBeginOverlap(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& AttackInstance, const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTagContainer& HitTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashBeginOverlap");

	Params::HWGameplayDash_OnDashBeginOverlap Parms{};

	Parms.AttackTask = AttackTask;
	Parms.AttackInstance = std::move(AttackInstance);
	Parms.TargetData = std::move(TargetData);
	Parms.HitTags = std::move(HitTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashCharacterHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWGameplayDash::OnDashCharacterHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashCharacterHit");

	Params::HWGameplayDash_OnDashCharacterHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashEnded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bWasInterrupted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::OnDashEnded(const bool bWasInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashEnded");

	Params::HWGameplayDash_OnDashEnded Parms{};

	Parms.bWasInterrupted = bWasInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashEndOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayDash::OnDashEndOverlap(class UHWAbilityTask_FireAttack* AttackTask, const struct FGameplayTagContainer& HitTags, const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashEndOverlap");

	Params::HWGameplayDash_OnDashEndOverlap Parms{};

	Parms.AttackTask = AttackTask;
	Parms.HitTags = std::move(HitTags);
	Parms.TargetData = std::move(TargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayDash::OnDashStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnDashTimerEnded
// (Final, Native, Protected)

void UHWGameplayDash::OnDashTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnDashTimerEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.OnRep_ExtendedDashDistance
// (Final, Native, Protected)

void UHWGameplayDash::OnRep_ExtendedDashDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "OnRep_ExtendedDashDistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.ShouldClampSpeedOnDashEnd
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::ShouldClampSpeedOnDashEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "ShouldClampSpeedOnDashEnd");

	Params::HWGameplayDash_ShouldClampSpeedOnDashEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.StartDash
// (Native, Public, HasDefaults)
// Parameters:
// const struct FRotator&                  DashRotation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHWGameplayDash::StartDash(const struct FRotator& DashRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "StartDash");

	Params::HWGameplayDash_StartDash Parms{};

	Parms.DashRotation = std::move(DashRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.UpdateMeshCollisionBounds
// (Final, Native, Public)
// Parameters:
// const class UHWAbilityAttackSettings_Dash*DashAttackSettings                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::UpdateMeshCollisionBounds(const class UHWAbilityAttackSettings_Dash* DashAttackSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "UpdateMeshCollisionBounds");

	Params::HWGameplayDash_UpdateMeshCollisionBounds Parms{};

	Parms.DashAttackSettings = DashAttackSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayDash.CalcDashEndLocation
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayDash::CalcDashEndLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcDashEndLocation");

	Params::HWGameplayDash_CalcDashEndLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.CalcDashSpeed
// (Native, Public, Const)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayDash::CalcDashSpeed(const float DeltaTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcDashSpeed");

	Params::HWGameplayDash_CalcDashSpeed Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.CalcHighlightingTargetList
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWAttackTargetingInfo&    TargetingInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListDataHandle                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Dash*DashAttackSettings                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings*   EndOfDashAttackSetting                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayDash::CalcHighlightingTargetList(const struct FHWAttackTargetingInfo& TargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetListDataHandle, const class UHWAbilityAttackSettings_Dash* DashAttackSettings, const class UHWAbilityAttackSettings* EndOfDashAttackSetting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcHighlightingTargetList");

	Params::HWGameplayDash_CalcHighlightingTargetList Parms{};

	Parms.TargetingInfo = std::move(TargetingInfo);
	Parms.TargetListDataHandle = std::move(TargetListDataHandle);
	Parms.DashAttackSettings = DashAttackSettings;
	Parms.EndOfDashAttackSetting = EndOfDashAttackSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetListDataHandle = std::move(Parms.TargetListDataHandle);
}


// Function Hemingway.HWGameplayDash.CalcInitialDashVelocity
// (Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayDash::CalcInitialDashVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "CalcInitialDashVelocity");

	Params::HWGameplayDash_CalcInitialDashVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetCharacterStartingRotation
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UHWGameplayDash::GetCharacterStartingRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetCharacterStartingRotation");

	Params::HWGameplayDash_GetCharacterStartingRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashBehaviorOnInterrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWEndDashBehavior                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWEndDashBehavior UHWGameplayDash::GetDashBehaviorOnInterrupted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashBehaviorOnInterrupted");

	Params::HWGameplayDash_GetDashBehaviorOnInterrupted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayDash::GetDashDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashDistance");

	Params::HWGameplayDash_GetDashDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayDash::GetDashDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashDuration");

	Params::HWGameplayDash_GetDashDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayDash::GetDashId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashId");

	Params::HWGameplayDash_GetDashId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* UHWGameplayDash::GetDashingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashingCharacter");

	Params::HWGameplayDash_GetDashingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.GetDashTurnSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayDash::GetDashTurnSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "GetDashTurnSpeed");

	Params::HWGameplayDash_GetDashTurnSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsActive");

	Params::HWGameplayDash_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsAffectedByGravity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsAffectedByGravity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsAffectedByGravity");

	Params::HWGameplayDash_IsAffectedByGravity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsSameDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayDash*                  ComparisonDash                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsSameDash(class UHWGameplayDash* ComparisonDash) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsSameDash");

	Params::HWGameplayDash_IsSameDash Parms{};

	Parms.ComparisonDash = ComparisonDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsSteerable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsSteerable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsSteerable");

	Params::HWGameplayDash_IsSteerable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsValidDashHit
// (Final, Native, Public, Const)
// Parameters:
// const class AActor*                     HitActor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class AActor*                     DashingActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsValidDashHit(const class AActor* HitActor, const struct FHitResult& Hit, const class AActor* DashingActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsValidDashHit");

	Params::HWGameplayDash_IsValidDashHit Parms{};

	Parms.HitActor = HitActor;
	Parms.Hit = std::move(Hit);
	Parms.DashingActor = DashingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.IsVerticalMovementAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::IsVerticalMovementAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "IsVerticalMovementAllowed");

	Params::HWGameplayDash_IsVerticalMovementAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.PredictsCollisions
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::PredictsCollisions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "PredictsCollisions");

	Params::HWGameplayDash_PredictsCollisions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.ShouldCollectDashHits
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::ShouldCollectDashHits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "ShouldCollectDashHits");

	Params::HWGameplayDash_ShouldCollectDashHits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.ShouldCollisionEndDash
// (Final, Native, Public, Const)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                DashHit                                                (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           SourceActorOverride                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::ShouldCollisionEndDash(const class AActor* Target, const struct FHitResult& DashHit, class AActor* SourceActorOverride) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "ShouldCollisionEndDash");

	Params::HWGameplayDash_ShouldCollisionEndDash Parms{};

	Parms.Target = Target;
	Parms.DashHit = std::move(DashHit);
	Parms.SourceActorOverride = SourceActorOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayDash.ShouldEndDash
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayDash::ShouldEndDash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayDash", "ShouldEndDash");

	Params::HWGameplayDash_ShouldEndDash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_WithMesh.BP_LoadComplete
// (Event, Public, BlueprintEvent)

void AHWGameplayCueNotify_WithMesh::BP_LoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_WithMesh", "BP_LoadComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWGameplayCueNotify_WithMesh.EndWithMesh
// (Final, Native, Public, BlueprintCallable)

void AHWGameplayCueNotify_WithMesh::EndWithMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_WithMesh", "EndWithMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayEffect_ShieldModifier.GetShieldEffectTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect_ShieldModifier::GetShieldEffectTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_ShieldModifier", "GetShieldEffectTag");

	Params::HWGameplayEffect_ShieldModifier_GetShieldEffectTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffectComponent_RemoveOnDamaged.OnTargetDamaged
// (Final, Native, Private, Const)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWGameplayEffectComponent_RemoveOnDamaged::OnTargetDamaged(const struct FDamageEventData& DamageEventData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffectComponent_RemoveOnDamaged", "OnTargetDamaged");

	Params::HWGameplayEffectComponent_RemoveOnDamaged_OnTargetDamaged Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.DeathstreakUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldStat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::DeathstreakUpdated(class AHWPlayerState* PlayerState, int32 OldStat, int32 NewStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "DeathstreakUpdated");

	Params::HWGameState_Arena_DeathstreakUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldStat = OldStat;
	Parms.NewStat = NewStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.HandlePhaseChanged
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              NewPhase                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::HandlePhaseChanged(const struct FGameplayTag& NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "HandlePhaseChanged");

	Params::HWGameState_Arena_HandlePhaseChanged Parms{};

	Parms.NewPhase = std::move(NewPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.KillstreakUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldStat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::KillstreakUpdated(class AHWPlayerState* PlayerState, int32 OldStat, int32 NewStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "KillstreakUpdated");

	Params::HWGameState_Arena_KillstreakUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldStat = OldStat;
	Parms.NewStat = NewStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.MulticastKillstreakBonusAwarded
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// const class AHWPlayerState*             PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::MulticastKillstreakBonusAwarded(const class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "MulticastKillstreakBonusAwarded");

	Params::HWGameState_Arena_MulticastKillstreakBonusAwarded Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.MulticastKillstreakBountyAwarded
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// const class AHWPlayerState*             KillerPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWPlayerState*             KilledPlayer                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::MulticastKillstreakBountyAwarded(const class AHWPlayerState* KillerPlayer, const class AHWPlayerState* KilledPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "MulticastKillstreakBountyAwarded");

	Params::HWGameState_Arena_MulticastKillstreakBountyAwarded Parms{};

	Parms.KillerPlayer = KillerPlayer;
	Parms.KilledPlayer = KilledPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.MulticastPlayEndSequence
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::MulticastPlayEndSequence(const struct FGenericTeamId& Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "MulticastPlayEndSequence");

	Params::HWGameState_Arena_MulticastPlayEndSequence Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.MulticastPlayFireworksSequence
// (Net, Native, Event, NetMulticast, Protected)

void AHWGameState_Arena::MulticastPlayFireworksSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "MulticastPlayFireworksSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.MulticastPlaySeigeMinionSpawnedSequence
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Border                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::MulticastPlaySeigeMinionSpawnedSequence(const struct FGenericTeamId& Team, bool Border)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "MulticastPlaySeigeMinionSpawnedSequence");

	Params::HWGameState_Arena_MulticastPlaySeigeMinionSpawnedSequence Parms{};

	Parms.Team = std::move(Team);
	Parms.Border = Border;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_ChaosGodKills
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_ChaosGodKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_ChaosGodKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_ChaosTickets
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_ChaosTickets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_ChaosTickets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_KillsToSpawnSiegeMinion
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_KillsToSpawnSiegeMinion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_KillsToSpawnSiegeMinion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_MaxTickets
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_MaxTickets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_MaxTickets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_OrderGodKills
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_OrderGodKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_OrderGodKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.OnRep_OrderTickets
// (Final, Native, Protected)

void AHWGameState_Arena::OnRep_OrderTickets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "OnRep_OrderTickets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.PlayEndSequence
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::PlayEndSequence(const struct FGenericTeamId& Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "PlayEndSequence");

	Params::HWGameState_Arena_PlayEndSequence Parms{};

	Parms.Team = std::move(Team);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameState_Arena.PlayerDied
// (Final, Native, Protected)
// Parameters:
// class AHWTeamState*                     Team                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   TeamMember                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void AHWGameState_Arena::PlayerDied(class AHWTeamState* Team, class AHWPlayerState* TeamMember, const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "PlayerDied");

	Params::HWGameState_Arena_PlayerDied Parms{};

	Parms.Team = Team;
	Parms.TeamMember = TeamMember;
	Parms.DeathEventData = std::move(DeathEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.PlayFireworkVFX
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           fireworkActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::PlayFireworkVFX(class AActor* fireworkActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "PlayFireworkVFX");

	Params::HWGameState_Arena_PlayFireworkVFX Parms{};

	Parms.fireworkActor = fireworkActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameState_Arena.StartCatchupXPSpoolTimer
// (Final, Native, Protected)

void AHWGameState_Arena::StartCatchupXPSpoolTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "StartCatchupXPSpoolTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.UpdateCatchupXPSpooling
// (Final, Native, Protected)

void AHWGameState_Arena::UpdateCatchupXPSpooling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "UpdateCatchupXPSpooling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.UpdateTeamTickets
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TicketsToDeduct                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameState_Arena::UpdateTeamTickets(const struct FGenericTeamId& Team, int32 TicketsToDeduct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "UpdateTeamTickets");

	Params::HWGameState_Arena_UpdateTeamTickets Parms{};

	Parms.Team = std::move(Team);
	Parms.TicketsToDeduct = TicketsToDeduct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameState_Arena.GetChaosGodKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetChaosGodKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetChaosGodKills");

	Params::HWGameState_Arena_GetChaosGodKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_Arena.GetChaosTickets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetChaosTickets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetChaosTickets");

	Params::HWGameState_Arena_GetChaosTickets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_Arena.GetKillsToSpawnSiegeMinion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetKillsToSpawnSiegeMinion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetKillsToSpawnSiegeMinion");

	Params::HWGameState_Arena_GetKillsToSpawnSiegeMinion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_Arena.GetMaxTickets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetMaxTickets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetMaxTickets");

	Params::HWGameState_Arena_GetMaxTickets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_Arena.GetOrderGodKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetOrderGodKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetOrderGodKills");

	Params::HWGameState_Arena_GetOrderGodKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameState_Arena.GetOrderTickets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWGameState_Arena::GetOrderTickets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameState_Arena", "GetOrderTickets");

	Params::HWGameState_Arena_GetOrderTickets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinEvoEvalComponent.HandleOnNewSkinTagAsset
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkinEvoEvalComponent::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent", "HandleOnNewSkinTagAsset");

	Params::HWSkinEvoEvalComponent_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinEvoEvalComponent.HandleOnSkinTagAssetRemoved
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkinEvoEvalComponent::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent", "HandleOnSkinTagAssetRemoved");

	Params::HWSkinEvoEvalComponent_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinEvoEvalComponent.HandleSkinItemUpdated
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class IHWInterface_LoadoutManagement>LoadoutOwner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWSkinItem*                NewSkinItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkinEvoEvalComponent::HandleSkinItemUpdated(TScriptInterface<class IHWInterface_LoadoutManagement> LoadoutOwner, const class UHWSkinItem* NewSkinItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent", "HandleSkinItemUpdated");

	Params::HWSkinEvoEvalComponent_HandleSkinItemUpdated Parms{};

	Parms.LoadoutOwner = LoadoutOwner;
	Parms.NewSkinItem = NewSkinItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinEvoEvalComponent.SetSkinTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NewSkinTagValue                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinEvoEvalComponent::SetSkinTag(const struct FGameplayTag& NewSkinTagValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent", "SetSkinTag");

	Params::HWSkinEvoEvalComponent_SetSkinTag Parms{};

	Parms.NewSkinTagValue = std::move(NewSkinTagValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVisibilityComponent.OnLocalPlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   HWPlayerState                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent::OnLocalPlayerStateChanged(class AHWPlayerState* HWPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "OnLocalPlayerStateChanged");

	Params::HWVisibilityComponent_OnLocalPlayerStateChanged Parms{};

	Parms.HWPlayerState = HWPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent.OnLocalTeamChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent::OnLocalTeamChanged(class AController* Controller, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "OnLocalTeamChanged");

	Params::HWVisibilityComponent_OnLocalTeamChanged Parms{};

	Parms.Controller = Controller;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent.OnRep_EffectsGrantingVisionToIndividualsList
// (Final, Native, Protected)

void UHWVisibilityComponent::OnRep_EffectsGrantingVisionToIndividualsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "OnRep_EffectsGrantingVisionToIndividualsList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent.OnUpdateMinimapVisibilityMask
// (Native, Event, Public, BlueprintEvent)

void UHWVisibilityComponent::OnUpdateMinimapVisibilityMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "OnUpdateMinimapVisibilityMask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent.UpdateVisibility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UHWVisibilityComponent::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "UpdateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent.IsMeshStealthedForTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWVisibilityComponent::IsMeshStealthedForTarget(const class AActor* TargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "IsMeshStealthedForTarget");

	Params::HWVisibilityComponent_IsMeshStealthedForTarget Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVisibilityComponent.IsMinimapVisibleToTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWVisibilityComponent::IsMinimapVisibleToTeam(const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent", "IsMinimapVisibleToTeam");

	Params::HWVisibilityComponent_IsMinimapVisibleToTeam Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWControlModule_DeathSpectator.GenerateSpectateViewTargetList
// (Final, Native, Protected)

void UHWControlModule_DeathSpectator::GenerateSpectateViewTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "GenerateSpectateViewTargetList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.GoToNextSpectateTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bWasDeath                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::GoToNextSpectateTarget(bool bWasDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "GoToNextSpectateTarget");

	Params::HWControlModule_DeathSpectator_GoToNextSpectateTarget Parms{};

	Parms.bWasDeath = bWasDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.GoToPrevSpectateTarget
// (Final, Native, Public, BlueprintCallable)

void UHWControlModule_DeathSpectator::GoToPrevSpectateTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "GoToPrevSpectateTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.OnRep_CurrentSpectateTargetInfo
// (Final, Native, Protected)
// Parameters:
// const struct FHWSpectateTargetIndexInfo&PreviousSpectateTargetInfo                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::OnRep_CurrentSpectateTargetInfo(const struct FHWSpectateTargetIndexInfo& PreviousSpectateTargetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "OnRep_CurrentSpectateTargetInfo");

	Params::HWControlModule_DeathSpectator_OnRep_CurrentSpectateTargetInfo Parms{};

	Parms.PreviousSpectateTargetInfo = std::move(PreviousSpectateTargetInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.OnSpectateTargetBotsSet
// (Final, Native, Protected)
// Parameters:
// class AHWBotFactory*                    BotFactory                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::OnSpectateTargetBotsSet(class AHWBotFactory* BotFactory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "OnSpectateTargetBotsSet");

	Params::HWControlModule_DeathSpectator_OnSpectateTargetBotsSet Parms{};

	Parms.BotFactory = BotFactory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.OnSpectateTargetCanSpectateStatusChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacter_Base*                Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCanSpectate                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::OnSpectateTargetCanSpectateStatusChanged(class AHWCharacter_Base* Character, const bool bCanSpectate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "OnSpectateTargetCanSpectateStatusChanged");

	Params::HWControlModule_DeathSpectator_OnSpectateTargetCanSpectateStatusChanged Parms{};

	Parms.Character = Character;
	Parms.bCanSpectate = bCanSpectate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.OnSpectatingTargetPawnSet
// (Final, Native, Public)
// Parameters:
// class APlayerState*                     SetPlayerState                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewlySetPawn                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            PreviousPawn                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::OnSpectatingTargetPawnSet(class APlayerState* SetPlayerState, class APawn* NewlySetPawn, class APawn* PreviousPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "OnSpectatingTargetPawnSet");

	Params::HWControlModule_DeathSpectator_OnSpectatingTargetPawnSet Parms{};

	Parms.SetPlayerState = SetPlayerState;
	Parms.NewlySetPawn = NewlySetPawn;
	Parms.PreviousPawn = PreviousPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.OnTeamChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::OnTeamChanged(class AController* Controller, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "OnTeamChanged");

	Params::HWControlModule_DeathSpectator_OnTeamChanged Parms{};

	Parms.Controller = Controller;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.RecalcSpectateViewTarget
// (Final, Native, Protected)

void UHWControlModule_DeathSpectator::RecalcSpectateViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "RecalcSpectateViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.ServerSetSpectatorTarget
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// int32                                   DesiredSpectateIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasDeath                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWControlModule_DeathSpectator::ServerSetSpectatorTarget(int32 DesiredSpectateIndex, bool bWasDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "ServerSetSpectatorTarget");

	Params::HWControlModule_DeathSpectator_ServerSetSpectatorTarget Parms{};

	Parms.DesiredSpectateIndex = DesiredSpectateIndex;
	Parms.bWasDeath = bWasDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWControlModule_DeathSpectator.GetSpectatorViewTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWControlModule_DeathSpectator::GetSpectatorViewTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWControlModule_DeathSpectator", "GetSpectatorViewTarget");

	Params::HWControlModule_DeathSpectator_GetSpectatorViewTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_CC_Effect.CanApplyDiminishingReturns
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_CC_Effect::CanApplyDiminishingReturns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_CC_Effect", "CanApplyDiminishingReturns");

	Params::HWInterface_CC_Effect_CanApplyDiminishingReturns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_CC_Effect.CanBeAffectedByCrowdControlReduction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_CC_Effect::CanBeAffectedByCrowdControlReduction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_CC_Effect", "CanBeAffectedByCrowdControlReduction");

	Params::HWInterface_CC_Effect_CanBeAffectedByCrowdControlReduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_CC_Effect.GetDiminishingReturnStacks
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IHWInterface_CC_Effect::GetDiminishingReturnStacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_CC_Effect", "GetDiminishingReturnStacks");

	Params::HWInterface_CC_Effect_GetDiminishingReturnStacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_CC_Effect.IsHardCC
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_CC_Effect::IsHardCC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_CC_Effect", "IsHardCC");

	Params::HWInterface_CC_Effect_IsHardCC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_CC_Effect.IsSoftCC
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_CC_Effect::IsSoftCC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_CC_Effect", "IsSoftCC");

	Params::HWInterface_CC_Effect_IsSoftCC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.CustomDamageEventDataOverride
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageEventData&                OutDamageEvent                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IHWInterface_Damagable::CustomDamageEventDataOverride(struct FDamageEventData& OutDamageEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "CustomDamageEventDataOverride");

	Params::HWInterface_Damagable_CustomDamageEventDataOverride Parms{};

	Parms.OutDamageEvent = std::move(OutDamageEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutDamageEvent = std::move(Parms.OutDamageEvent);
}


// Function Hemingway.HWInterface_Damagable.Die
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DeathDamageReceivedEvent                               (ConstParm, Parm, NativeAccessSpecifierPublic)

void IHWInterface_Damagable::Die(const struct FDamageEventData& DeathDamageReceivedEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "Die");

	Params::HWInterface_Damagable_Die Parms{};

	Parms.DeathDamageReceivedEvent = std::move(DeathDamageReceivedEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Damagable.OnDamageTaken
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEvent                                            (ConstParm, Parm, NativeAccessSpecifierPublic)

void IHWInterface_Damagable::OnDamageTaken(const struct FDamageEventData& DamageEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "OnDamageTaken");

	Params::HWInterface_Damagable_OnDamageTaken Parms{};

	Parms.DamageEvent = std::move(DamageEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Damagable.OnHealed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FHealEventData&            HealEvent                                              (ConstParm, Parm, NativeAccessSpecifierPublic)

void IHWInterface_Damagable::OnHealed(const struct FHealEventData& HealEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "OnHealed");

	Params::HWInterface_Damagable_OnHealed Parms{};

	Parms.HealEvent = std::move(HealEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Damagable.CanBeAffectedByCrit
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Damagable::CanBeAffectedByCrit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "CanBeAffectedByCrit");

	Params::HWInterface_Damagable_CanBeAffectedByCrit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.CanBeAffectedByLifeSteal
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Damagable::CanBeAffectedByLifeSteal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "CanBeAffectedByLifeSteal");

	Params::HWInterface_Damagable_CanBeAffectedByLifeSteal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.CanBeDamagedBy
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     SourceActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilitySystemComponent*  SourceASC                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Damagable::CanBeDamagedBy(const class AActor* SourceActor, const class UHWAbilitySystemComponent* SourceASC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "CanBeDamagedBy");

	Params::HWInterface_Damagable_CanBeDamagedBy Parms{};

	Parms.SourceActor = SourceActor;
	Parms.SourceASC = SourceASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.GetCritEffectiveness
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IHWInterface_Damagable::GetCritEffectiveness() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "GetCritEffectiveness");

	Params::HWInterface_Damagable_GetCritEffectiveness Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.GetLifeStealEffectiveness
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IHWInterface_Damagable::GetLifeStealEffectiveness() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "GetLifeStealEffectiveness");

	Params::HWInterface_Damagable_GetLifeStealEffectiveness Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Damagable.Interface_IsDead
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Damagable::Interface_IsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Damagable", "Interface_IsDead");

	Params::HWInterface_Damagable_Interface_IsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Bellona_Passive.ActivateResetEquippedInhandTimer
// (Final, Native, Protected)

void UHWAbility_Bellona_Passive::ActivateResetEquippedInhandTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "ActivateResetEquippedInhandTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.CheckAndResetEquippedInhand
// (Final, Native, Protected)

void UHWAbility_Bellona_Passive::CheckAndResetEquippedInhand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "CheckAndResetEquippedInhand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.InitializeInhandWeaponSlotMap
// (Final, Native, Public)

void UHWAbility_Bellona_Passive::InitializeInhandWeaponSlotMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "InitializeInhandWeaponSlotMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaAbilityFire
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&FiredAbilityHandle                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FiredAbilityTags                                       (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaAbilityFire(const struct FGameplayAbilitySpecHandle& FiredAbilityHandle, const struct FGameplayTagContainer& FiredAbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaAbilityFire");

	Params::HWAbility_Bellona_Passive_OnBellonaAbilityFire Parms{};

	Parms.FiredAbilityHandle = std::move(FiredAbilityHandle);
	Parms.FiredAbilityTags = std::move(FiredAbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaApplyDamageHit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaApplyDamageHit(const struct FHitResult& HitResult, const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaApplyDamageHit");

	Params::HWAbility_Bellona_Passive_OnBellonaApplyDamageHit Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaDamageTaken
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaDamageTaken(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaDamageTaken");

	Params::HWAbility_Bellona_Passive_OnBellonaDamageTaken Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaDied
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RespawnTimeDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaDied(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, float RespawnTimeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaDied");

	Params::HWAbility_Bellona_Passive_OnBellonaDied Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.RespawnTimeDuration = RespawnTimeDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaInhandActivate
// (Final, Native, Protected)
// Parameters:
// class UGameplayAbility*                 ActivatedAbility                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaInhandActivate(class UGameplayAbility* ActivatedAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaInhandActivate");

	Params::HWAbility_Bellona_Passive_OnBellonaInhandActivate Parms{};

	Parms.ActivatedAbility = ActivatedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaInhandEndFire
// (Final, Native, Protected)
// Parameters:
// const class UGameplayAbility*           EndingAbility                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaInhandEndFire(const class UGameplayAbility* EndingAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaInhandEndFire");

	Params::HWAbility_Bellona_Passive_OnBellonaInhandEndFire Parms{};

	Parms.EndingAbility = EndingAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.OnBellonaInhandRefire
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     BellonaAbilityTags                                     (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::OnBellonaInhandRefire(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& BellonaAbilityTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "OnBellonaInhandRefire");

	Params::HWAbility_Bellona_Passive_OnBellonaInhandRefire Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.BellonaAbilityTags = std::move(BellonaAbilityTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Bellona_Passive.SwapEquippedInhandWeapon
// (Final, Native, Protected)
// Parameters:
// const EHWBellonaInhandWeaponType        WeaponTypeToEquip                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Bellona_Passive::SwapEquippedInhandWeapon(const EHWBellonaInhandWeaponType WeaponTypeToEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Bellona_Passive", "SwapEquippedInhandWeapon");

	Params::HWAbility_Bellona_Passive_SwapEquippedInhandWeapon Parms{};

	Parms.WeaponTypeToEquip = WeaponTypeToEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Interactable.ShouldApplyInteractBlocker
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     OverlappedActor                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Interactable::ShouldApplyInteractBlocker(const class AActor* OverlappedActor, const class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Interactable", "ShouldApplyInteractBlocker");

	Params::HWInterface_Interactable_ShouldApplyInteractBlocker Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.ActivateExplosionVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AHWDeployable_Danzaburou_A03::ActivateExplosionVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "ActivateExplosionVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWDeployable_Danzaburou_A03.AllowBreakIllusion
// (Final, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A03::AllowBreakIllusion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "AllowBreakIllusion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.AttemptBreakIllusion
// (Final, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A03::AttemptBreakIllusion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "AttemptBreakIllusion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.BreakIllusion
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bInShouldDestroy                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Danzaburou_A03::BreakIllusion(const bool bInShouldDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "BreakIllusion");

	Params::HWDeployable_Danzaburou_A03_BreakIllusion Parms{};

	Parms.bInShouldDestroy = bInShouldDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.DestroyLeafDecoys
// (Final, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A03::DestroyLeafDecoys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "DestroyLeafDecoys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.OnDanzaburouDamaged
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void AHWDeployable_Danzaburou_A03::OnDanzaburouDamaged(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "OnDanzaburouDamaged");

	Params::HWDeployable_Danzaburou_A03_OnDanzaburouDamaged Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.OnDanzaburouFired
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&InSpecHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&InFiringInstanceId                                     (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void AHWDeployable_Danzaburou_A03::OnDanzaburouFired(const struct FGameplayAbilitySpecHandle& InSpecHandle, const struct FGameplayTagContainer& InTags, const struct FHWAbilityFiringInstanceId& InFiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "OnDanzaburouFired");

	Params::HWDeployable_Danzaburou_A03_OnDanzaburouFired Parms{};

	Parms.InSpecHandle = std::move(InSpecHandle);
	Parms.InTags = std::move(InTags);
	Parms.InFiringInstanceId = std::move(InFiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.OnRep_HasExploded
// (Final, Native, Protected)

void AHWDeployable_Danzaburou_A03::OnRep_HasExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "OnRep_HasExploded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.SpawnLeafDecoys
// (Final, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A03::SpawnLeafDecoys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "SpawnLeafDecoys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.TriggerExplosion
// (Final, Native, Protected, BlueprintCallable)

void AHWDeployable_Danzaburou_A03::TriggerExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "TriggerExplosion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.CanBreakIllusion
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Danzaburou_A03::CanBreakIllusion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "CanBreakIllusion");

	Params::HWDeployable_Danzaburou_A03_CanBreakIllusion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.CanTriggerExplosion
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Danzaburou_A03::CanTriggerExplosion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "CanTriggerExplosion");

	Params::HWDeployable_Danzaburou_A03_CanTriggerExplosion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Danzaburou_A03.IsDanzaburouFiringAttacks
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Danzaburou_A03::IsDanzaburouFiringAttacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Danzaburou_A03", "IsDanzaburouFiringAttacks");

	Params::HWDeployable_Danzaburou_A03_IsDanzaburouFiringAttacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_RefireableActor.Refire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IHWInterface_RefireableActor::Refire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_RefireableActor", "Refire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_RefireableActor.CanRefire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_RefireableActor::CanRefire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_RefireableActor", "CanRefire");

	Params::HWInterface_RefireableActor_CanRefire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_TransformOverrideActor.GetCustomTransformOverride
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform IHWInterface_TransformOverrideActor::GetCustomTransformOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_TransformOverrideActor", "GetCustomTransformOverride");

	Params::HWInterface_TransformOverrideActor_GetCustomTransformOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractable_Hecate_PSV.HandleOnNewSkinTagAsset
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "HandleOnNewSkinTagAsset");

	Params::HWInteractable_Hecate_PSV_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.HandleOnSkinTagAssetRemoved
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "HandleOnSkinTagAssetRemoved");

	Params::HWInteractable_Hecate_PSV_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.HandleTagUpdated_AttachedActorDied
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::HandleTagUpdated_AttachedActorDied(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "HandleTagUpdated_AttachedActorDied");

	Params::HWInteractable_Hecate_PSV_HandleTagUpdated_AttachedActorDied Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.OnInteractionCancelled
// (Final, Native, Protected)
// Parameters:
// class UHWInteractableComponent*         InInteractComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InteractInstigator                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::OnInteractionCancelled(class UHWInteractableComponent* InInteractComponent, class AActor* InteractInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "OnInteractionCancelled");

	Params::HWInteractable_Hecate_PSV_OnInteractionCancelled Parms{};

	Parms.InInteractComponent = InInteractComponent;
	Parms.InteractInstigator = InteractInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.OnInteractionCompleted
// (Final, Native, Protected)
// Parameters:
// class UHWInteractableComponent*         InInteractComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InteractInstigator                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::OnInteractionCompleted(class UHWInteractableComponent* InInteractComponent, class AActor* InteractInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "OnInteractionCompleted");

	Params::HWInteractable_Hecate_PSV_OnInteractionCompleted Parms{};

	Parms.InInteractComponent = InInteractComponent;
	Parms.InteractInstigator = InteractInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.OnLifetimeExpired
// (Final, Native, Protected)

void AHWInteractable_Hecate_PSV::OnLifetimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "OnLifetimeExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.OnRep_IsPlayerInteractable
// (Final, Native, Protected)

void AHWInteractable_Hecate_PSV::OnRep_IsPlayerInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "OnRep_IsPlayerInteractable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.OnRep_SkinTagContainerChanged
// (Final, Native, Protected)

void AHWInteractable_Hecate_PSV::OnRep_SkinTagContainerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "OnRep_SkinTagContainerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.SwapSkinTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NewSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OldSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWInteractable_Hecate_PSV::SwapSkinTags(const struct FGameplayTag& NewSkinTag, const struct FGameplayTag& OldSkinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "SwapSkinTags");

	Params::HWInteractable_Hecate_PSV_SwapSkinTags Parms{};

	Parms.NewSkinTag = std::move(NewSkinTag);
	Parms.OldSkinTag = std::move(OldSkinTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInteractable_Hecate_PSV.CanBeActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWInteractable_Hecate_PSV::CanBeActivated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "CanBeActivated");

	Params::HWInteractable_Hecate_PSV_CanBeActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractable_Hecate_PSV.GetCurrentSkin
// (Final, Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWInteractable_Hecate_PSV::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "GetCurrentSkin");

	Params::HWInteractable_Hecate_PSV_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInteractable_Hecate_PSV.GetHecateOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWInteractable_Hecate_PSV::GetHecateOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInteractable_Hecate_PSV", "GetHecateOwner");

	Params::HWInteractable_Hecate_PSV_GetHecateOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_VoiceComponent.TriggerLocalVoiceEvent
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              VoiceEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_VoiceComponent::TriggerLocalVoiceEvent(const struct FGameplayTag& VoiceEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_VoiceComponent", "TriggerLocalVoiceEvent");

	Params::HWInterface_VoiceComponent_TriggerLocalVoiceEvent Parms{};

	Parms.VoiceEvent = std::move(VoiceEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_VoiceComponent.GetVoiceComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWVoiceComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWVoiceComponent* IHWInterface_VoiceComponent::GetVoiceComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_VoiceComponent", "GetVoiceComponent");

	Params::HWInterface_VoiceComponent_GetVoiceComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EquipmentSystem.EqualEqual_FHWInventorySlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWInventorySlot&          A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EquipmentSystem::EqualEqual_FHWInventorySlot(const struct FHWInventorySlot& A, const struct FHWInventorySlot& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EquipmentSystem", "EqualEqual_FHWInventorySlot");

	Params::HWLibrary_EquipmentSystem_EqualEqual_FHWInventorySlot Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EquipmentSystem.GetEquipmentLevelFromEffectContext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&ContextHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_EquipmentSystem::GetEquipmentLevelFromEffectContext(const struct FGameplayEffectContextHandle& ContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EquipmentSystem", "GetEquipmentLevelFromEffectContext");

	Params::HWLibrary_EquipmentSystem_GetEquipmentLevelFromEffectContext Parms{};

	Parms.ContextHandle = std::move(ContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EquipmentSystem.GetInventorySlotFromAbility
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWInventorySlot                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWInventorySlot UHWLibrary_EquipmentSystem::GetInventorySlotFromAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle, class UHWAbilitySystemComponent* OwningAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EquipmentSystem", "GetInventorySlotFromAbility");

	Params::HWLibrary_EquipmentSystem_GetInventorySlotFromAbility Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EquipmentSystem.NotEqual_FHWInventorySlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWInventorySlot&          A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EquipmentSystem::NotEqual_FHWInventorySlot(const struct FHWInventorySlot& A, const struct FHWInventorySlot& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EquipmentSystem", "NotEqual_FHWInventorySlot");

	Params::HWLibrary_EquipmentSystem_NotEqual_FHWInventorySlot Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.BP_OnLandingTargetingCancelled
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::BP_OnLandingTargetingCancelled(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "BP_OnLandingTargetingCancelled");

	Params::HWGameplayAbility_JingWei_A04_BP_OnLandingTargetingCancelled Parms{};

	Parms.TargetingData = std::move(TargetingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.BP_OnLandingTargetingConfirmed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::BP_OnLandingTargetingConfirmed(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "BP_OnLandingTargetingConfirmed");

	Params::HWGameplayAbility_JingWei_A04_BP_OnLandingTargetingConfirmed Parms{};

	Parms.TargetingData = std::move(TargetingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.ForceConfirmLanding
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWGameplayAbility_JingWei_A04::ForceConfirmLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "ForceConfirmLanding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.GetBackwardDeployableTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_JingWei_A04::GetBackwardDeployableTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "GetBackwardDeployableTargetData");

	Params::HWGameplayAbility_JingWei_A04_GetBackwardDeployableTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.GetBackwardProjectileTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_JingWei_A04::GetBackwardProjectileTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "GetBackwardProjectileTargetData");

	Params::HWGameplayAbility_JingWei_A04_GetBackwardProjectileTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.GetTweenBackwardTargetData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_JingWei_A04::GetTweenBackwardTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "GetTweenBackwardTargetData");

	Params::HWGameplayAbility_JingWei_A04_GetTweenBackwardTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.GetTweenForwardTargetData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_JingWei_A04::GetTweenForwardTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "GetTweenForwardTargetData");

	Params::HWGameplayAbility_JingWei_A04_GetTweenForwardTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.OnLandingCastStyleCancelled
// (Final, Native, Protected)
// Parameters:
// const float                             TimeElapsed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::OnLandingCastStyleCancelled(const float TimeElapsed, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "OnLandingCastStyleCancelled");

	Params::HWGameplayAbility_JingWei_A04_OnLandingCastStyleCancelled Parms{};

	Parms.TimeElapsed = TimeElapsed;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.OnLandingCastStyleConfirmed
// (Final, Native, Protected)
// Parameters:
// const float                             TimeElapsed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::OnLandingCastStyleConfirmed(const float TimeElapsed, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "OnLandingCastStyleConfirmed");

	Params::HWGameplayAbility_JingWei_A04_OnLandingCastStyleConfirmed Parms{};

	Parms.TimeElapsed = TimeElapsed;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.OnLandingTargetingCancelled
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::OnLandingTargetingCancelled(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "OnLandingTargetingCancelled");

	Params::HWGameplayAbility_JingWei_A04_OnLandingTargetingCancelled Parms{};

	Parms.TargetingData = std::move(TargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.OnLandingTargetingConfirmed
// (Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_JingWei_A04::OnLandingTargetingConfirmed(const struct FGameplayAbilityTargetDataHandle& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "OnLandingTargetingConfirmed");

	Params::HWGameplayAbility_JingWei_A04_OnLandingTargetingConfirmed Parms{};

	Parms.TargetingData = std::move(TargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.PopDisabledCharacterCollisions
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWGameplayAbility_JingWei_A04::PopDisabledCharacterCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "PopDisabledCharacterCollisions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.PushDisabledCharacterCollisions
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWGameplayAbility_JingWei_A04::PushDisabledCharacterCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "PushDisabledCharacterCollisions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.StartLandingTasks
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWGameplayAbility_JingWei_A04::StartLandingTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "StartLandingTasks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.StopLandingTasks
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWGameplayAbility_JingWei_A04::StopLandingTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "StopLandingTasks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_JingWei_A04.GetForwardTargetData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWGameplayAbility_JingWei_A04::GetForwardTargetData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_JingWei_A04", "GetForwardTargetData");

	Params::HWGameplayAbility_JingWei_A04_GetForwardTargetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.BroadcastGameplayTagEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventGameplayTag                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Stack                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::BroadcastGameplayTagEvent(const struct FGameplayTag& EventGameplayTag, const int32 Stack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "BroadcastGameplayTagEvent");

	Params::HWPassiveMeterComponent_BroadcastGameplayTagEvent Parms{};

	Parms.EventGameplayTag = std::move(EventGameplayTag);
	Parms.Stack = Stack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnActiveFamiliarsUpdated
// (Final, Native, Protected)
// Parameters:
// class UHWFamiliarManagerComponent*      FamiliarManager                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnActiveFamiliarsUpdated(class UHWFamiliarManagerComponent* FamiliarManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnActiveFamiliarsUpdated");

	Params::HWPassiveMeterComponent_OnActiveFamiliarsUpdated Parms{};

	Parms.FamiliarManager = FamiliarManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnFamiliarAdded
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarInfo&     FamiliarInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnFamiliarAdded(const struct FHWActiveFamiliarInfo& FamiliarInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnFamiliarAdded");

	Params::HWPassiveMeterComponent_OnFamiliarAdded Parms{};

	Parms.FamiliarInfo = std::move(FamiliarInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnFamiliarManagerChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWFamiliarManagerComponent*      NewFamiliarManager                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnFamiliarManagerChanged(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class UHWFamiliarManagerComponent* NewFamiliarManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnFamiliarManagerChanged");

	Params::HWPassiveMeterComponent_OnFamiliarManagerChanged Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.NewFamiliarManager = NewFamiliarManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnFamiliarRemoved
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarInfo&     FamiliarInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnFamiliarRemoved(const struct FHWActiveFamiliarInfo& FamiliarInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnFamiliarRemoved");

	Params::HWPassiveMeterComponent_OnFamiliarRemoved Parms{};

	Parms.FamiliarInfo = std::move(FamiliarInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnFamiliarTrackedAttributeChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarInfo&     FamiliarInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAttribute&        GameplayAttribute                                      (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnFamiliarTrackedAttributeChanged(const struct FHWActiveFamiliarInfo& FamiliarInfo, const struct FGameplayAttribute& GameplayAttribute, float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnFamiliarTrackedAttributeChanged");

	Params::HWPassiveMeterComponent_OnFamiliarTrackedAttributeChanged Parms{};

	Parms.FamiliarInfo = std::move(FamiliarInfo);
	Parms.GameplayAttribute = std::move(GameplayAttribute);
	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWPassiveMeterComponent.OnInventoryManagerChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWInventoryManagerComponent*     NewInventoryManager                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnInventoryManagerChanged(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class UHWInventoryManagerComponent* NewInventoryManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnInventoryManagerChanged");

	Params::HWPassiveMeterComponent_OnInventoryManagerChanged Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.NewInventoryManager = NewInventoryManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnRep_FilledPips
// (Final, Native, Protected)
// Parameters:
// int32                                   OldFilledPips                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnRep_FilledPips(int32 OldFilledPips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnRep_FilledPips");

	Params::HWPassiveMeterComponent_OnRep_FilledPips Parms{};

	Parms.OldFilledPips = OldFilledPips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnRep_LargePipData
// (Final, Native, Protected)
// Parameters:
// const struct FHWPassiveMeterLargePipData&OldLargePipData                                        (Parm, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnRep_LargePipData(const struct FHWPassiveMeterLargePipData& OldLargePipData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnRep_LargePipData");

	Params::HWPassiveMeterComponent_OnRep_LargePipData Parms{};

	Parms.OldLargePipData = std::move(OldLargePipData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnRep_MeterFill
// (Final, Native, Protected)
// Parameters:
// float                                   OldMeterFill                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnRep_MeterFill(float OldMeterFill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnRep_MeterFill");

	Params::HWPassiveMeterComponent_OnRep_MeterFill Parms{};

	Parms.OldMeterFill = OldMeterFill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnRep_PassiveGameplayTagEvent
// (Final, Native, Protected)

void UHWPassiveMeterComponent::OnRep_PassiveGameplayTagEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnRep_PassiveGameplayTagEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.OnTrackedAttributeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayAttribute&        GameplayAttribute                                      (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::OnTrackedAttributeChanged(const struct FGameplayAttribute& GameplayAttribute, float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "OnTrackedAttributeChanged");

	Params::HWPassiveMeterComponent_OnTrackedAttributeChanged Parms{};

	Parms.GameplayAttribute = std::move(GameplayAttribute);
	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWPassiveMeterComponent.RemoveDataField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InFieldTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::RemoveDataField(const struct FGameplayTag& InFieldTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "RemoveDataField");

	Params::HWPassiveMeterComponent_RemoveDataField Parms{};

	Parms.InFieldTag = std::move(InFieldTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetDataField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWPassiveMeterDataField&  InDataField                                            (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetDataField(const struct FHWPassiveMeterDataField& InDataField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetDataField");

	Params::HWPassiveMeterComponent_SetDataField Parms{};

	Parms.InDataField = std::move(InDataField);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetDataFieldFloatValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InFieldTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFloatValue                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFloatValue2                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetDataFieldFloatValue(const struct FGameplayTag& InFieldTag, const float InFloatValue, const float InFloatValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetDataFieldFloatValue");

	Params::HWPassiveMeterComponent_SetDataFieldFloatValue Parms{};

	Parms.InFieldTag = std::move(InFieldTag);
	Parms.InFloatValue = InFloatValue;
	Parms.InFloatValue2 = InFloatValue2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetDataFieldIntValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InFieldTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIntValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIntValue2                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetDataFieldIntValue(const struct FGameplayTag& InFieldTag, const int32 InIntValue, const int32 InIntValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetDataFieldIntValue");

	Params::HWPassiveMeterComponent_SetDataFieldIntValue Parms{};

	Parms.InFieldTag = std::move(InFieldTag);
	Parms.InIntValue = InIntValue;
	Parms.InIntValue2 = InIntValue2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetDataFieldObjectValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InFieldTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetDataFieldObjectValue(const struct FGameplayTag& InFieldTag, class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetDataFieldObjectValue");

	Params::HWPassiveMeterComponent_SetDataFieldObjectValue Parms{};

	Parms.InFieldTag = std::move(InFieldTag);
	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetFilledPips
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InFilledPips                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetFilledPips(int32 InFilledPips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetFilledPips");

	Params::HWPassiveMeterComponent_SetFilledPips Parms{};

	Parms.InFilledPips = InFilledPips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.SetLargePipData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHWPassiveMeterLargePipData&     InLargePipData                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetLargePipData(struct FHWPassiveMeterLargePipData& InLargePipData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetLargePipData");

	Params::HWPassiveMeterComponent_SetLargePipData Parms{};

	Parms.InLargePipData = std::move(InLargePipData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InLargePipData = std::move(Parms.InLargePipData);
}


// Function Hemingway.HWPassiveMeterComponent.SetMeterFill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMeterFill                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeterComponent::SetMeterFill(float InMeterFill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "SetMeterFill");

	Params::HWPassiveMeterComponent_SetMeterFill Parms{};

	Parms.InMeterFill = InMeterFill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeterComponent.GetAbilitySystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWPassiveMeterComponent::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetAbilitySystemComponent");

	Params::HWPassiveMeterComponent_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetAllDataFields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FHWPassiveMeterDataField>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FHWPassiveMeterDataField> UHWPassiveMeterComponent::GetAllDataFields() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetAllDataFields");

	Params::HWPassiveMeterComponent_GetAllDataFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetCharacterAbilitySystemActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* UHWPassiveMeterComponent::GetCharacterAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetCharacterAbilitySystemActor");

	Params::HWPassiveMeterComponent_GetCharacterAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetDataFieldByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InFieldTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWPassiveMeterDataField*        OutDataField                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWPassiveMeterComponent::GetDataFieldByTag(const struct FGameplayTag& InFieldTag, struct FHWPassiveMeterDataField* OutDataField) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetDataFieldByTag");

	Params::HWPassiveMeterComponent_GetDataFieldByTag Parms{};

	Parms.InFieldTag = std::move(InFieldTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDataField != nullptr)
		*OutDataField = std::move(Parms.OutDataField);

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetFilledPips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWPassiveMeterComponent::GetFilledPips() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetFilledPips");

	Params::HWPassiveMeterComponent_GetFilledPips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetLargePipData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWPassiveMeterLargePipDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FHWPassiveMeterLargePipData UHWPassiveMeterComponent::GetLargePipData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetLargePipData");

	Params::HWPassiveMeterComponent_GetLargePipData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetMeterFill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWPassiveMeterComponent::GetMeterFill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetMeterFill");

	Params::HWPassiveMeterComponent_GetMeterFill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetOwningInventoryManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* UHWPassiveMeterComponent::GetOwningInventoryManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetOwningInventoryManager");

	Params::HWPassiveMeterComponent_GetOwningInventoryManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetShouldShowMeter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWPassiveMeterComponent::GetShouldShowMeter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetShouldShowMeter");

	Params::HWPassiveMeterComponent_GetShouldShowMeter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeterComponent.GetTotalPips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWPassiveMeterComponent::GetTotalPips() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeterComponent", "GetTotalPips");

	Params::HWPassiveMeterComponent_GetTotalPips Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.CanAirJuggle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::CanAirJuggle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "CanAirJuggle");

	Params::HWGameplayEffect_PhysicsImpulse_CanAirJuggle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetHorizontalVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect_PhysicsImpulse::GetHorizontalVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetHorizontalVelocity");

	Params::HWGameplayEffect_PhysicsImpulse_GetHorizontalVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetImpulseHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect_PhysicsImpulse::GetImpulseHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetImpulseHeight");

	Params::HWGameplayEffect_PhysicsImpulse_GetImpulseHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetImpulseVectorOverrideType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWImpulseVectorOverrideType            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWImpulseVectorOverrideType UHWGameplayEffect_PhysicsImpulse::GetImpulseVectorOverrideType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetImpulseVectorOverrideType");

	Params::HWGameplayEffect_PhysicsImpulse_GetImpulseVectorOverrideType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetResetsHorizontalMomentum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::GetResetsHorizontalMomentum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetResetsHorizontalMomentum");

	Params::HWGameplayEffect_PhysicsImpulse_GetResetsHorizontalMomentum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetResetsVerticalMomentum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::GetResetsVerticalMomentum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetResetsVerticalMomentum");

	Params::HWGameplayEffect_PhysicsImpulse_GetResetsVerticalMomentum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.GetTimeInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect_PhysicsImpulse::GetTimeInAir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "GetTimeInAir");

	Params::HWGameplayEffect_PhysicsImpulse_GetTimeInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.IsFixedHeightImpulse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::IsFixedHeightImpulse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "IsFixedHeightImpulse");

	Params::HWGameplayEffect_PhysicsImpulse_IsFixedHeightImpulse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.ShouldLandAtGroundHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::ShouldLandAtGroundHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "ShouldLandAtGroundHeight");

	Params::HWGameplayEffect_PhysicsImpulse_ShouldLandAtGroundHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_PhysicsImpulse.ShouldUseEffectCauserAsOrigin
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_PhysicsImpulse::ShouldUseEffectCauserAsOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_PhysicsImpulse", "ShouldUseEffectCauserAsOrigin");

	Params::HWGameplayEffect_PhysicsImpulse_ShouldUseEffectCauserAsOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPassiveMeter_NuWa.HandleActiveGameplayEffectTimeChange
// (Final, Native, Public)
// Parameters:
// const struct FActiveGameplayEffectHandle&EffectHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewStartTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewDuration                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPassiveMeter_NuWa::HandleActiveGameplayEffectTimeChange(const struct FActiveGameplayEffectHandle& EffectHandle, float NewStartTime, float NewDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeter_NuWa", "HandleActiveGameplayEffectTimeChange");

	Params::HWPassiveMeter_NuWa_HandleActiveGameplayEffectTimeChange Parms{};

	Parms.EffectHandle = std::move(EffectHandle);
	Parms.NewStartTime = NewStartTime;
	Parms.NewDuration = NewDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeter_NuWa.RegisterEventOnWoodCooldownActivated
// (Final, Native, Public, BlueprintCallable)

void UHWPassiveMeter_NuWa::RegisterEventOnWoodCooldownActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeter_NuWa", "RegisterEventOnWoodCooldownActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeter_NuWa.RemoveEventsOnWoodCooldownEnded
// (Final, Native, Public, BlueprintCallable)

void UHWPassiveMeter_NuWa::RemoveEventsOnWoodCooldownEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeter_NuWa", "RemoveEventsOnWoodCooldownEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPassiveMeter_NuWa.UpdateWoodPassiveMeterData
// (Event, Public, BlueprintEvent)

void UHWPassiveMeter_NuWa::UpdateWoodPassiveMeterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPassiveMeter_NuWa", "UpdateWoodPassiveMeterData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPhaseLogic.EndLogicBP
// (Event, Protected, BlueprintEvent)

void UHWPhaseLogic::EndLogicBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "EndLogicBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPhaseLogic.StartLogicBP
// (Event, Protected, BlueprintEvent)

void UHWPhaseLogic::StartLogicBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "StartLogicBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWPhaseLogic.GetChaosTeamState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWPhaseLogic::GetChaosTeamState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "GetChaosTeamState");

	Params::HWPhaseLogic_GetChaosTeamState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPhaseLogic.GetGameState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWGameState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameState* UHWPhaseLogic::GetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "GetGameState");

	Params::HWPhaseLogic_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPhaseLogic.GetOrderTeamState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWPhaseLogic::GetOrderTeamState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "GetOrderTeamState");

	Params::HWPhaseLogic_GetOrderTeamState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPhaseLogic.GetTeamState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* UHWPhaseLogic::GetTeamState(const struct FGenericTeamId& TeamId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic", "GetTeamState");

	Params::HWPhaseLogic_GetTeamState Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPhaseLogic_AssignRoles.OnPlayerRolesAssigned
// (Final, Native, Protected)

void UHWPhaseLogic_AssignRoles::OnPlayerRolesAssigned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_AssignRoles", "OnPlayerRolesAssigned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPhaseLogic_Backfill.HandleKickDelegateResolved
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_SessionView*                  pSession                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ErrorInfo&             ErrorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWPhaseLogic_Backfill::HandleKickDelegateResolved(bool bSuccess, class URH_SessionView* pSession, const struct FRH_ErrorInfo& ErrorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_Backfill", "HandleKickDelegateResolved");

	Params::HWPhaseLogic_Backfill_HandleKickDelegateResolved Parms{};

	Parms.bSuccess = bSuccess;
	Parms.pSession = pSession;
	Parms.ErrorInfo = std::move(ErrorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPhaseLogic_Backfill.HandleSessionUpdated
// (Final, Native, Private)
// Parameters:
// class URH_SessionView*                  SessionView                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPhaseLogic_Backfill::HandleSessionUpdated(class URH_SessionView* SessionView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_Backfill", "HandleSessionUpdated");

	Params::HWPhaseLogic_Backfill_HandleSessionUpdated Parms{};

	Parms.SessionView = SessionView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_FireAttack.FireAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityAttackInstance&  Attack                                                 (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&AttackAimOverride_0                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UHWAbilityTask_FireAttack*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_FireAttack* UHWAbilityTask_FireAttack::FireAttack(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FHWAbilityAttackInstance& Attack, const struct FGameplayAbilityTargetDataHandle& AttackAimOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_FireAttack", "FireAttack");

	Params::HWAbilityTask_FireAttack_FireAttack Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Attack = std::move(Attack);
	Parms.AttackAimOverride_0 = std::move(AttackAimOverride_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_FireAttack.FireAttackById
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&AttackAimOverride_0                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UHWAbilityTask_FireAttack*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_FireAttack* UHWAbilityTask_FireAttack::FireAttackById(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& ID, const struct FGameplayAbilityTargetDataHandle& AttackAimOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_FireAttack", "FireAttackById");

	Params::HWAbilityTask_FireAttack_FireAttackById Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ID = std::move(ID);
	Parms.AttackAimOverride_0 = std::move(AttackAimOverride_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_FireAttack.GetAttackAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWAbilityTask_FireAttack::GetAttackAim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_FireAttack", "GetAttackAim");

	Params::HWAbilityTask_FireAttack_GetAttackAim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_FireAttack.GetAttackAimOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWAbilityTask_FireAttack::GetAttackAimOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_FireAttack", "GetAttackAimOverride");

	Params::HWAbilityTask_FireAttack_GetAttackAimOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_FireAttack.GetAttackId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWAbilityTask_FireAttack::GetAttackId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_FireAttack", "GetAttackId");

	Params::HWAbilityTask_FireAttack_GetAttackId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_FireAttack.GetAttackInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWAbilityAttackInstance         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWAbilityAttackInstance UHWAbilityTask_FireAttack::GetAttackInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_FireAttack", "GetAttackInstance");

	Params::HWAbilityTask_FireAttack_GetAttackInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Attack_CollisionProxy.HandleNewAvatarActor
// (Final, Native, Protected)
// Parameters:
// class AActor*                           NewAvatarActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_CollisionProxy::HandleNewAvatarActor(class AActor* NewAvatarActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_CollisionProxy", "HandleNewAvatarActor");

	Params::HWAbilityTask_Attack_CollisionProxy_HandleNewAvatarActor Parms{};

	Parms.NewAvatarActor = NewAvatarActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_CollisionProxy.OnAbilityLevelChanged
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_CollisionProxy::OnAbilityLevelChanged(const struct FGameplayAbilitySpecHandle& AbilityHandle, const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_CollisionProxy", "OnAbilityLevelChanged");

	Params::HWAbilityTask_Attack_CollisionProxy_OnAbilityLevelChanged Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPhaseLogic_WaitForConnections.CheckForAllPlayersConnected
// (Final, Native, Protected)

void UHWPhaseLogic_WaitForConnections::CheckForAllPlayersConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_WaitForConnections", "CheckForAllPlayersConnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPhaseLogic_WaitForConnections.OnPlayerConnected
// (Final, Native, Private)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPhaseLogic_WaitForConnections::OnPlayerConnected(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_WaitForConnections", "OnPlayerConnected");

	Params::HWPhaseLogic_WaitForConnections_OnPlayerConnected Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPhaseLogic_WaitForConnections.OnSessionUpdated
// (Final, Native, Protected)
// Parameters:
// class URH_SessionView*                  SessionView                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPhaseLogic_WaitForConnections::OnSessionUpdated(class URH_SessionView* SessionView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPhaseLogic_WaitForConnections", "OnSessionUpdated");

	Params::HWPhaseLogic_WaitForConnections_OnSessionUpdated Parms{};

	Parms.SessionView = SessionView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingManager.AddPing
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              PingTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PingLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PingOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWPingSource                           PingSource                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSendChatNotification                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPingManager::AddPing(const struct FGameplayTag& PingTag, const struct FVector& PingLocation, class AActor* PingOwner, EHWPingSource PingSource, bool bSendChatNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingManager", "AddPing");

	Params::HWPingManager_AddPing Parms{};

	Parms.PingTag = std::move(PingTag);
	Parms.PingLocation = std::move(PingLocation);
	Parms.PingOwner = PingOwner;
	Parms.PingSource = PingSource;
	Parms.bSendChatNotification = bSendChatNotification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingManager.HandlePingActorRecycled
// (Final, Native, Private)
// Parameters:
// class AHWPingWorldActor*                InPingActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPingManager::HandlePingActorRecycled(class AHWPingWorldActor* InPingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingManager", "HandlePingActorRecycled");

	Params::HWPingManager_HandlePingActorRecycled Parms{};

	Parms.InPingActor = InPingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingManager.MulticastSendPing
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// const struct FGameplayTag&              PingTag                                                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PingLocation                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PingOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWPingSource                           PingSource                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPingManager::MulticastSendPing(const struct FGameplayTag& PingTag, const struct FVector& PingLocation, class AActor* PingOwner, EHWPingSource PingSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingManager", "MulticastSendPing");

	Params::HWPingManager_MulticastSendPing Parms{};

	Parms.PingTag = std::move(PingTag);
	Parms.PingLocation = std::move(PingLocation);
	Parms.PingOwner = PingOwner;
	Parms.PingSource = PingSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingManager.OnFloodProtectionCooldownTimer
// (Final, Native, Protected)

void AHWPingManager::OnFloodProtectionCooldownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingManager", "OnFloodProtectionCooldownTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlaneOfExistenceVolume.GetPlaneIdentifierTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWPlaneOfExistenceVolume::GetPlaneIdentifierTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlaneOfExistenceVolume", "GetPlaneIdentifierTag");

	Params::HWPlaneOfExistenceVolume_GetPlaneIdentifierTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetCTAPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UHWInventoryItem>Item                                                   (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UHWInventoryItem::GetCTAPath(const class UObject* WorldContext, const TSoftObjectPtr<class UHWInventoryItem> Item, const struct FRH_ItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "GetCTAPath");

	Params::HWInventoryItem_GetCTAPath Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Item = Item;
	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetItemDisabledReason
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWItemDisabledReason                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWItemDisabledReason UHWInventoryItem::GetItemDisabledReason(const struct FRH_ItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "GetItemDisabledReason");

	Params::HWInventoryItem_GetItemDisabledReason Parms{};

	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetItemIdOwnershipCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryItem::GetItemIdOwnershipCount(const class URH_PlayerInfo* PlayerInfo, const struct FRH_ItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "GetItemIdOwnershipCount");

	Params::HWInventoryItem_GetItemIdOwnershipCount Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.IsAlwaysOwnedItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::IsAlwaysOwnedItem(const struct FRH_ItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "IsAlwaysOwnedItem");

	Params::HWInventoryItem_IsAlwaysOwnedItem Parms{};

	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.IsItemEnabled
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCheckTempDisabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::IsItemEnabled(const struct FRH_ItemId& InItemId, bool bCheckTempDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "IsItemEnabled");

	Params::HWInventoryItem_IsItemEnabled Parms{};

	Parms.InItemId = std::move(InItemId);
	Parms.bCheckTempDisabled = bCheckTempDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.ShouldShowCTA
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSoftObjectPtr<class UHWInventoryItem>Item                                                   (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::ShouldShowCTA(const TSoftObjectPtr<class UHWInventoryItem> Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryItem", "ShouldShowCTA");

	Params::HWInventoryItem_ShouldShowCTA Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetItemDisplayNameCAPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWInventoryItem::GetItemDisplayNameCAPS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "GetItemDisplayNameCAPS");

	Params::HWInventoryItem_GetItemDisplayNameCAPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetOwnershipCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterContextItem                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryItem::GetOwnershipCount(const class URH_PlayerInfo* PlayerInfo, const class UHWCharacterItem* CharacterContextItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "GetOwnershipCount");

	Params::HWInventoryItem_GetOwnershipCount Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.CharacterContextItem = CharacterContextItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetPendingPurchaseRequest
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStorePurchaseRequest*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHStorePurchaseRequest* UHWInventoryItem::GetPendingPurchaseRequest(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "GetPendingPurchaseRequest");

	Params::HWInventoryItem_GetPendingPurchaseRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.GetStoreItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStoreItem*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URHStoreItem* UHWInventoryItem::GetStoreItem(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "GetStoreItem");

	Params::HWInventoryItem_GetStoreItem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.HasPendingPurchaseRequest
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::HasPendingPurchaseRequest(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "HasPendingPurchaseRequest");

	Params::HWInventoryItem_HasPendingPurchaseRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.IsOwnedCached
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterContextItem                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::IsOwnedCached(const class URH_PlayerInfo* PlayerInfo, const class UHWCharacterItem* CharacterContextItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "IsOwnedCached");

	Params::HWInventoryItem_IsOwnedCached Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.CharacterContextItem = CharacterContextItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryItem.IsPurchasable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryItem::IsPurchasable(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryItem", "IsPurchasable");

	Params::HWInventoryItem_IsPurchasable Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelItem.GetSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWApparelItem::GetSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelItem", "GetSlot");

	Params::HWApparelItem_GetSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ActivateDestroyedVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWProjectile::ActivateDestroyedVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ActivateDestroyedVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.ApplyGameplayEffect
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FActiveGameplayEffectHandle>*OutAppliedEffects                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      GameplayEffect                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// int32                                   StackCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelOverride                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::ApplyGameplayEffect(TArray<struct FActiveGameplayEffectHandle>* OutAppliedEffects, TSubclassOf<class UGameplayEffect> GameplayEffect, const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayEffectContextHandle& EffectContext, int32 StackCount, int32 LevelOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ApplyGameplayEffect");

	Params::HWProjectile_ApplyGameplayEffect Parms{};

	Parms.GameplayEffect = GameplayEffect;
	Parms.TargetData = std::move(TargetData);
	Parms.EffectContext = std::move(EffectContext);
	Parms.StackCount = StackCount;
	Parms.LevelOverride = LevelOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppliedEffects != nullptr)
		*OutAppliedEffects = std::move(Parms.OutAppliedEffects);
}


// Function Hemingway.HWProjectile.ApplyGameplayEffectSpec
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (Parm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWProjectile::ApplyGameplayEffectSpec(const struct FGameplayEffectSpecHandle& EffectSpecHandle, const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ApplyGameplayEffectSpec");

	Params::HWProjectile_ApplyGameplayEffectSpec Parms{};

	Parms.EffectSpecHandle = std::move(EffectSpecHandle);
	Parms.TargetData = std::move(TargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.ApplyGameplayEffectsWithGroupTag
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EffectGroupTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// int32                                   StackCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelOverride                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FActiveGameplayEffectHandle> AHWProjectile::ApplyGameplayEffectsWithGroupTag(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& EffectGroupTag, const struct FGameplayEffectContextHandle& EffectContext, int32 StackCount, int32 LevelOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ApplyGameplayEffectsWithGroupTag");

	Params::HWProjectile_ApplyGameplayEffectsWithGroupTag Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.EffectGroupTag = std::move(EffectGroupTag);
	Parms.EffectContext = std::move(EffectContext);
	Parms.StackCount = StackCount;
	Parms.LevelOverride = LevelOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.BeginDestroyProjectile
// (Native, Public, BlueprintCallable)
// Parameters:
// const EHWDestroyProjectileReason        DestroyReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                DestroyHit                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bDestroyImmediately                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::BeginDestroyProjectile(const EHWDestroyProjectileReason DestroyReason, const struct FHitResult& DestroyHit, const bool bDestroyImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "BeginDestroyProjectile");

	Params::HWProjectile_BeginDestroyProjectile Parms{};

	Parms.DestroyReason = DestroyReason;
	Parms.DestroyHit = std::move(DestroyHit);
	Parms.bDestroyImmediately = bDestroyImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.BP_OnInitializeProjectile
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UHWAbilityTask_SpawnProjectile*SpawnTask                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::BP_OnInitializeProjectile(const class UHWAbilityTask_SpawnProjectile* SpawnTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "BP_OnInitializeProjectile");

	Params::HWProjectile_BP_OnInitializeProjectile Parms{};

	Parms.SpawnTask = SpawnTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWProjectile.BP_OnProjectileDestroyed
// (Event, Protected, BlueprintEvent)
// Parameters:
// const EHWDestroyProjectileReason        DestroyReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                DestroyHit                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::BP_OnProjectileDestroyed(const EHWDestroyProjectileReason DestroyReason, const struct FHitResult& DestroyHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "BP_OnProjectileDestroyed");

	Params::HWProjectile_BP_OnProjectileDestroyed Parms{};

	Parms.DestroyReason = DestroyReason;
	Parms.DestroyHit = std::move(DestroyHit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWProjectile.BP_OnProjectileGameplayEffectsInitialized
// (Event, Protected, BlueprintEvent)

void AHWProjectile::BP_OnProjectileGameplayEffectsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "BP_OnProjectileGameplayEffectsInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWProjectile.BP_SpawnDeployable
// (Final, BlueprintAuthorityOnly, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                SpawnTransform                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              DeployableConfigTag                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             DeployableLvl                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitTrigger                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AHWDeployable*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWDeployable* AHWProjectile::BP_SpawnDeployable(const struct FTransform& SpawnTransform, const struct FGameplayTag& DeployableConfigTag, const int32 DeployableLvl, const struct FHitResult& HitTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "BP_SpawnDeployable");

	Params::HWProjectile_BP_SpawnDeployable Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.DeployableConfigTag = std::move(DeployableConfigTag);
	Parms.DeployableLvl = DeployableLvl;
	Parms.HitTrigger = std::move(HitTrigger);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetTargetCollisionSettingsCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWProjectile::GetTargetCollisionSettingsCollisionRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetTargetCollisionSettingsCollisionRadius");

	Params::HWProjectile_GetTargetCollisionSettingsCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.HandleOnPawnControllerChanged
// (Final, Native, Private)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::HandleOnPawnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "HandleOnPawnControllerChanged");

	Params::HWProjectile_HandleOnPawnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.InitializeProjectile
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const int32                             InstanceId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayAbility*               InAbilityOwner                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Projectile*InProjectileAttackSettings                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityTask_SpawnProjectile*SpawnTask                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::InitializeProjectile(const int32 InstanceId, class UHWGameplayAbility* InAbilityOwner, const class UHWAbilityAttackSettings_Projectile* InProjectileAttackSettings, const class UHWAbilityTask_SpawnProjectile* SpawnTask, const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "InitializeProjectile");

	Params::HWProjectile_InitializeProjectile Parms{};

	Parms.InstanceId = InstanceId;
	Parms.InAbilityOwner = InAbilityOwner;
	Parms.InProjectileAttackSettings = InProjectileAttackSettings;
	Parms.SpawnTask = SpawnTask;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.MaxRangeReached
// (Native, Public)
// Parameters:
// class UHWGameplayMovementComponent*     MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::MaxRangeReached(class UHWGameplayMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "MaxRangeReached");

	Params::HWProjectile_MaxRangeReached Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnDeployableBeginSpawning
// (BlueprintAuthorityOnly, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWProjectileDeployableConfig&DeployableConfig                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitTrigger                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::OnDeployableBeginSpawning(class AHWDeployable* SpawnedDeployable, const struct FHWProjectileDeployableConfig& DeployableConfig, const struct FHitResult& HitTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnDeployableBeginSpawning");

	Params::HWProjectile_OnDeployableBeginSpawning Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;
	Parms.DeployableConfig = std::move(DeployableConfig);
	Parms.HitTrigger = std::move(HitTrigger);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnDeployableSpawned
// (BlueprintAuthorityOnly, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWProjectileDeployableConfig&DeployableConfig                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FHitResult&                HitTrigger                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::OnDeployableSpawned(class AHWDeployable* SpawnedDeployable, const struct FHWProjectileDeployableConfig& DeployableConfig, const struct FHitResult& HitTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnDeployableSpawned");

	Params::HWProjectile_OnDeployableSpawned Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;
	Parms.DeployableConfig = std::move(DeployableConfig);
	Parms.HitTrigger = std::move(HitTrigger);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetAcquired
// (Native, Event, Protected, BlueprintEvent)

void AHWProjectile::OnHomingTargetAcquired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetAcquired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::OnHomingTargetDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetDestroyed");

	Params::HWProjectile_OnHomingTargetDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetDied
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RespawnTimerDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::OnHomingTargetDied(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, float RespawnTimerDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetDied");

	Params::HWProjectile_OnHomingTargetDied Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.RespawnTimerDuration = RespawnTimerDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetLost
// (Native, Event, Protected, BlueprintEvent)

void AHWProjectile::OnHomingTargetLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetLost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetPlaneOfExistenceChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::OnHomingTargetPlaneOfExistenceChanged(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetPlaneOfExistenceChanged");

	Params::HWProjectile_OnHomingTargetPlaneOfExistenceChanged Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnHomingTargetUntargetableStateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::OnHomingTargetUntargetableStateChanged(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnHomingTargetUntargetableStateChanged");

	Params::HWProjectile_OnHomingTargetUntargetableStateChanged Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnProjectileExplosionHitTarget
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWProjectile::OnProjectileExplosionHitTarget(const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnProjectileExplosionHitTarget");

	Params::HWProjectile_OnProjectileExplosionHitTarget Parms{};

	Parms.TargetData = std::move(TargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnProjectileHitTarget
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWProjectile::OnProjectileHitTarget(const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnProjectileHitTarget");

	Params::HWProjectile_OnProjectileHitTarget Parms{};

	Parms.TargetData = std::move(TargetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnProjectileTargetOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::OnProjectileTargetOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnProjectileTargetOverlap");

	Params::HWProjectile_OnProjectileTargetOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnProjectileWorldHit
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::OnProjectileWorldHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnProjectileWorldHit");

	Params::HWProjectile_OnProjectileWorldHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.OnSpawnExplosionFx
// (BlueprintCosmetic, Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   ExplosionLocation                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWDestroyProjectileReason        ExplodeReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                ExplosionHitInfo                                       (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::OnSpawnExplosionFx(const struct FVector& ExplosionLocation, const EHWDestroyProjectileReason ExplodeReason, const struct FHitResult& ExplosionHitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "OnSpawnExplosionFx");

	Params::HWProjectile_OnSpawnExplosionFx Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);
	Parms.ExplodeReason = ExplodeReason;
	Parms.ExplosionHitInfo = std::move(ExplosionHitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.PerformExplosionAttack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHitResult&                DestroyHit                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::PerformExplosionAttack(const struct FHitResult& DestroyHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "PerformExplosionAttack");

	Params::HWProjectile_PerformExplosionAttack Parms{};

	Parms.DestroyHit = std::move(DestroyHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.ProcessProjectileTargetOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::ProcessProjectileTargetOverlap(class AActor* HitActor, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ProcessProjectileTargetOverlap");

	Params::HWProjectile_ProcessProjectileTargetOverlap Parms{};

	Parms.HitActor = HitActor;
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SetHomingTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::SetHomingTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SetHomingTarget");

	Params::HWProjectile_SetHomingTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SetProjectileLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::SetProjectileLevel(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SetProjectileLevel");

	Params::HWProjectile_SetProjectileLevel Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SetRange
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::SetRange(const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SetRange");

	Params::HWProjectile_SetRange Parms{};

	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SetSpeed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWProjectile::SetSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SetSpeed");

	Params::HWProjectile_SetSpeed Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SpawnMuzzleFlashVFX
// (BlueprintCosmetic, Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AHWProjectile::SpawnMuzzleFlashVFX(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SpawnMuzzleFlashVFX");

	Params::HWProjectile_SpawnMuzzleFlashVFX Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.SpawnProjectileDestroyVFX
// (BlueprintCosmetic, Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AHWProjectile::SpawnProjectileDestroyVFX(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "SpawnProjectileDestroyVFX");

	Params::HWProjectile_SpawnProjectileDestroyVFX Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectile.CalcHighlightingTargetList
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWAttackTargetingInfo&    TargetingInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Projectile*AttackSettings                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetListDataHandle                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWProjectile::CalcHighlightingTargetList(const struct FHWAttackTargetingInfo& TargetingInfo, const class UHWAbilityAttackSettings_Projectile* AttackSettings, struct FGameplayAbilityTargetDataHandle& TargetListDataHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "CalcHighlightingTargetList");

	Params::HWProjectile_CalcHighlightingTargetList Parms{};

	Parms.TargetingInfo = std::move(TargetingInfo);
	Parms.AttackSettings = AttackSettings;
	Parms.TargetListDataHandle = std::move(TargetListDataHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetListDataHandle = std::move(Parms.TargetListDataHandle);
}


// Function Hemingway.HWProjectile.GetAllDeployableConfigForSpawnTrigger
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EHWProjectileSpawnDeployableTriggerSpawnTrigger                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHWProjectileDeployableConfig>*OutDeployableConfigs                                   (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWProjectile::GetAllDeployableConfigForSpawnTrigger(const EHWProjectileSpawnDeployableTrigger SpawnTrigger, TArray<struct FHWProjectileDeployableConfig>* OutDeployableConfigs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetAllDeployableConfigForSpawnTrigger");

	Params::HWProjectile_GetAllDeployableConfigForSpawnTrigger Parms{};

	Parms.SpawnTrigger = SpawnTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDeployableConfigs != nullptr)
		*OutDeployableConfigs = std::move(Parms.OutDeployableConfigs);
}


// Function Hemingway.HWProjectile.GetApparelComponent
// (Final, Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWProjectile::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetApparelComponent");

	Params::HWProjectile_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetCurrentSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWProjectile::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetCurrentSkin");

	Params::HWProjectile_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetEffectSpecForEffect
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UGameplayEffect>      GameplayEffect                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpecHandle        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectSpecHandle AHWProjectile::GetEffectSpecForEffect(TSubclassOf<class UGameplayEffect> GameplayEffect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetEffectSpecForEffect");

	Params::HWProjectile_GetEffectSpecForEffect Parms{};

	Parms.GameplayEffect = GameplayEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetFiringInstanceId
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWAbilityFiringInstanceId       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWAbilityFiringInstanceId AHWProjectile::GetFiringInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetFiringInstanceId");

	Params::HWProjectile_GetFiringInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetHomingTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AHWProjectile::GetHomingTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetHomingTarget");

	Params::HWProjectile_GetHomingTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetOriginalEquipmentItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWEquipmentItem>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWEquipmentItem> AHWProjectile::GetOriginalEquipmentItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetOriginalEquipmentItem");

	Params::HWProjectile_GetOriginalEquipmentItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetProjectileInstanceId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWProjectile::GetProjectileInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetProjectileInstanceId");

	Params::HWProjectile_GetProjectileInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetProjectileLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWProjectile::GetProjectileLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetProjectileLevel");

	Params::HWProjectile_GetProjectileLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetProjectileMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWProjectileMovementComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWProjectileMovementComponent* AHWProjectile::GetProjectileMovementComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetProjectileMovementComponent");

	Params::HWProjectile_GetProjectileMovementComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetProjectileRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWProjectile::GetProjectileRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetProjectileRange");

	Params::HWProjectile_GetProjectileRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.GetSpawnOrigin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform AHWProjectile::GetSpawnOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "GetSpawnOrigin");

	Params::HWProjectile_GetSpawnOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.HasAoeExplosion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::HasAoeExplosion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "HasAoeExplosion");

	Params::HWProjectile_HasAoeExplosion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.HasGameNetworkAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::HasGameNetworkAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "HasGameNetworkAuthority");

	Params::HWProjectile_HasGameNetworkAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.HasValidHomingTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::HasValidHomingTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "HasValidHomingTarget");

	Params::HWProjectile_HasValidHomingTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.IsEnemyActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::IsEnemyActor(const class AActor* OtherActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "IsEnemyActor");

	Params::HWProjectile_IsEnemyActor Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.IsHitInRange
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FTransform&                SpawnTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Range                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::IsHitInRange(const struct FHitResult& Hit, const struct FTransform& SpawnTransform, const float& Range) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "IsHitInRange");

	Params::HWProjectile_IsHitInRange Parms{};

	Parms.Hit = std::move(Hit);
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.IsHomingProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::IsHomingProjectile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "IsHomingProjectile");

	Params::HWProjectile_IsHomingProjectile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.IsProjectileBeingDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::IsProjectileBeingDestroyed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "IsProjectileBeingDestroyed");

	Params::HWProjectile_IsProjectileBeingDestroyed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.MakeOutgoingSpecUsingEffectSpecMap
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&Context                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   LevelOverride                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectSpecHandle        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectSpecHandle AHWProjectile::MakeOutgoingSpecUsingEffectSpecMap(TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FGameplayEffectContextHandle& Context, int32 LevelOverride) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "MakeOutgoingSpecUsingEffectSpecMap");

	Params::HWProjectile_MakeOutgoingSpecUsingEffectSpecMap Parms{};

	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.Context = std::move(Context);
	Parms.LevelOverride = LevelOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.MakeProjectileEffectContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle AHWProjectile::MakeProjectileEffectContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "MakeProjectileEffectContext");

	Params::HWProjectile_MakeProjectileEffectContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.MakeProjectileEffectContextWithHitResult
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle AHWProjectile::MakeProjectileEffectContextWithHitResult(const struct FHitResult& HitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "MakeProjectileEffectContextWithHitResult");

	Params::HWProjectile_MakeProjectileEffectContextWithHitResult Parms{};

	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ShouldApplyHitEffectsToActor
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&InAcceptableProjectileHitFilterHandle                  (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&InAllyAcceptableProjectileHitFilterHandle              (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::ShouldApplyHitEffectsToActor(class AActor* TargetActor, const struct FGameplayTargetDataFilterHandle& InAcceptableProjectileHitFilterHandle, const struct FGameplayTargetDataFilterHandle& InAllyAcceptableProjectileHitFilterHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ShouldApplyHitEffectsToActor");

	Params::HWProjectile_ShouldApplyHitEffectsToActor Parms{};

	Parms.TargetActor = TargetActor;
	Parms.InAcceptableProjectileHitFilterHandle = std::move(InAcceptableProjectileHitFilterHandle);
	Parms.InAllyAcceptableProjectileHitFilterHandle = std::move(InAllyAcceptableProjectileHitFilterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ShouldDestroyOnTargetHit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&InAllyAcceptableProjectileHitFilter                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTargetDataFilterHandle&InDestroyOnTargetHitFilter                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::ShouldDestroyOnTargetHit(const class AActor* OtherActor, const struct FGameplayTargetDataFilterHandle& InAllyAcceptableProjectileHitFilter, const struct FGameplayTargetDataFilterHandle& InDestroyOnTargetHitFilter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ShouldDestroyOnTargetHit");

	Params::HWProjectile_ShouldDestroyOnTargetHit Parms{};

	Parms.OtherActor = OtherActor;
	Parms.InAllyAcceptableProjectileHitFilter = std::move(InAllyAcceptableProjectileHitFilter);
	Parms.InDestroyOnTargetHitFilter = std::move(InDestroyOnTargetHitFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ShouldDestroyOnWorldHit
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::ShouldDestroyOnWorldHit(const class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FHitResult& Hit, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ShouldDestroyOnWorldHit");

	Params::HWProjectile_ShouldDestroyOnWorldHit Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.Hit = std::move(Hit);
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ShouldExplodeOnTrigger
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const EHWDestroyProjectileReason        ExplodeTrigger                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilityLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::ShouldExplodeOnTrigger(const EHWDestroyProjectileReason ExplodeTrigger, const int32 AbilityLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ShouldExplodeOnTrigger");

	Params::HWProjectile_ShouldExplodeOnTrigger Parms{};

	Parms.ExplodeTrigger = ExplodeTrigger;
	Parms.AbilityLevel = AbilityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile.ShouldUseTargetLocationForExplosionLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWProjectile::ShouldUseTargetLocationForExplosionLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile", "ShouldUseTargetLocationForExplosionLocation");

	Params::HWProjectile_ShouldUseTargetLocationForExplosionLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMapItem.GetAllTexturesForGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>>*OutTextures                                            (Parm, OutParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWMapItem::GetAllTexturesForGameplayTag(const struct FGameplayTag& GameplayTag, TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>>* OutTextures) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMapItem", "GetAllTexturesForGameplayTag");

	Params::HWMapItem_GetAllTexturesForGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTextures != nullptr)
		*OutTextures = std::move(Parms.OutTextures);
}


// Function Hemingway.HWMapItem.GetTextureForExactGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UHWMapItem::GetTextureForExactGameplayTag(const struct FGameplayTag& GameplayTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMapItem", "GetTextureForExactGameplayTag");

	Params::HWMapItem_GetTextureForExactGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectile_Returning.BeginProjectileReturn
// (Final, Native, Public, BlueprintCallable)

void AHWProjectile_Returning::BeginProjectileReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectile_Returning", "BeginProjectileReturn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayEffect_Damage.GetBaseDamageStackMuliplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             StackCount                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect_Damage::GetBaseDamageStackMuliplier(const int32 StackCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_Damage", "GetBaseDamageStackMuliplier");

	Params::HWGameplayEffect_Damage_GetBaseDamageStackMuliplier Parms{};

	Parms.StackCount = StackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_Damage.GetDamageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect_Damage::GetDamageType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_Damage", "GetDamageType");

	Params::HWGameplayEffect_Damage_GetDamageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_Damage.GetFloatingTextTagOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect_Damage::GetFloatingTextTagOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_Damage", "GetFloatingTextTagOverride");

	Params::HWGameplayEffect_Damage_GetFloatingTextTagOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_Damage.GetScalingDamageStackMuliplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             StackCount                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayEffect_Damage::GetScalingDamageStackMuliplier(const int32 StackCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_Damage", "GetScalingDamageStackMuliplier");

	Params::HWGameplayEffect_Damage_GetScalingDamageStackMuliplier Parms{};

	Parms.StackCount = StackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_Damage.GetSuppressDamageNumbers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_Damage::GetSuppressDamageNumbers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_Damage", "GetSuppressDamageNumbers");

	Params::HWGameplayEffect_Damage_GetSuppressDamageNumbers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuest.WantsToTrackMatchForPlayer
// (Final, Native, Public, Const)
// Parameters:
// const class AHWPlayerState*             Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQuest::WantsToTrackMatchForPlayer(const class AHWPlayerState* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest", "WantsToTrackMatchForPlayer");

	Params::HWQuest_WantsToTrackMatchForPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWActiveQuest.AddTransientProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   CountToIncreaseProgress                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWActiveQuest::AddTransientProgress(int32 CountToIncreaseProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "AddTransientProgress");

	Params::HWActiveQuest_AddTransientProgress Parms{};

	Parms.CountToIncreaseProgress = CountToIncreaseProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWActiveQuest.AwardQuestProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   CountToIncreaseProgress                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWActiveQuest::AwardQuestProgress(int32 CountToIncreaseProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "AwardQuestProgress");

	Params::HWActiveQuest_AwardQuestProgress Parms{};

	Parms.CountToIncreaseProgress = CountToIncreaseProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWActiveQuest.GetCurrentQuestProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWActiveQuest::GetCurrentQuestProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "GetCurrentQuestProgress");

	Params::HWActiveQuest_GetCurrentQuestProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWActiveQuest.GetRemainingCoopProgressAvailable
// (Final, Native, Protected)
// Parameters:
// int32                                   CountToIncreaseProgress                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWActiveQuest::GetRemainingCoopProgressAvailable(int32 CountToIncreaseProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "GetRemainingCoopProgressAvailable");

	Params::HWActiveQuest_GetRemainingCoopProgressAvailable Parms{};

	Parms.CountToIncreaseProgress = CountToIncreaseProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWActiveQuest.TrackQuestForPlayer
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWActiveQuest::TrackQuestForPlayer(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "TrackQuestForPlayer");

	Params::HWActiveQuest_TrackQuestForPlayer Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWActiveQuest.GetCurrentWorldTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWActiveQuest::GetCurrentWorldTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActiveQuest", "GetCurrentWorldTime");

	Params::HWActiveQuest_GetCurrentWorldTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuest_AbilityTagListener.HandleAbilityEvent
// (Final, Native, Private)
// Parameters:
// int32                                   ProgressToAward                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_AbilityTagListener::HandleAbilityEvent(int32 ProgressToAward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_AbilityTagListener", "HandleAbilityEvent");

	Params::HWQuest_AbilityTagListener_HandleAbilityEvent Parms{};

	Parms.ProgressToAward = ProgressToAward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_AbilityTagListener.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_AbilityTagListener::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_AbilityTagListener", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_AbilityTagListener_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemGlobals.SetAbilityTargetingDebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bOn                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemGlobals::SetAbilityTargetingDebug(const bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemGlobals", "SetAbilityTargetingDebug");

	Params::HWAbilitySystemGlobals_SetAbilityTargetingDebug Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemGlobals.IsAbilityTargetingDebugEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemGlobals::IsAbilityTargetingDebugEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemGlobals", "IsAbilityTargetingDebugEnabled");

	Params::HWAbilitySystemGlobals_IsAbilityTargetingDebugEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotGoal.TriggerOnGoalReached
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           BotInstigator                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotGoal::TriggerOnGoalReached(class AActor* BotInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotGoal", "TriggerOnGoalReached");

	Params::HWBotGoal_TriggerOnGoalReached Parms{};

	Parms.BotInstigator = BotInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_DamageByType.OnDealtDamage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWQuest_DamageByType::OnDealtDamage(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_DamageByType", "OnDealtDamage");

	Params::HWQuest_DamageByType_OnDealtDamage Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_DamageByType.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_DamageByType::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_DamageByType", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_DamageByType_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_DistanceTravelled.AwardAccumulatedQuestProgress
// (Final, Native, Public)

void UHWQuest_DistanceTravelled::AwardAccumulatedQuestProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_DistanceTravelled", "AwardAccumulatedQuestProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_DistanceTravelled.OnMovementUpdated
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OldLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OldVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_DistanceTravelled::OnMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_DistanceTravelled", "OnMovementUpdated");

	Params::HWQuest_DistanceTravelled_OnMovementUpdated Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OldLocation = std::move(OldLocation);
	Parms.OldVelocity = std::move(OldVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_DistanceTravelled.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_DistanceTravelled::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_DistanceTravelled", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_DistanceTravelled_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_HealingByType.OnHealingDone
// (Final, Native, Private)
// Parameters:
// const struct FHealEventData&            HealEventData                                          (Parm, NativeAccessSpecifierPublic)

void UHWQuest_HealingByType::OnHealingDone(const struct FHealEventData& HealEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_HealingByType", "OnHealingDone");

	Params::HWQuest_HealingByType_OnHealingDone Parms{};

	Parms.HealEventData = std::move(HealEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_HealingByType.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_HealingByType::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_HealingByType", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_HealingByType_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.ActivateLocalGameplayCue
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::ActivateLocalGameplayCue(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "ActivateLocalGameplayCue");

	Params::HWLibrary_AbilitySystem_ActivateLocalGameplayCue Parms{};

	Parms.Target = Target;
	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.AddHitToMultiHitTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult&                      Hit                                                    (Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetDataHandleToModify                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::AddHitToMultiHitTargetData(struct FHitResult& Hit, struct FGameplayAbilityTargetDataHandle& TargetDataHandleToModify, int32 TargetDataIndexToModify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "AddHitToMultiHitTargetData");

	Params::HWLibrary_AbilitySystem_AddHitToMultiHitTargetData Parms{};

	Parms.Hit = std::move(Hit);
	Parms.TargetDataHandleToModify = std::move(TargetDataHandleToModify);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Hit = std::move(Parms.Hit);
	TargetDataHandleToModify = std::move(Parms.TargetDataHandleToModify);
}


// Function Hemingway.HWLibrary_AbilitySystem.AddMultiHitResultsToTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAbilityTargetDataHandle&TargetDataHandleToModify                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandleToAdd                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToAdd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::AddMultiHitResultsToTargetData(struct FGameplayAbilityTargetDataHandle& TargetDataHandleToModify, const struct FGameplayAbilityTargetDataHandle& TargetDataHandleToAdd, int32 TargetDataIndexToModify, int32 TargetDataIndexToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "AddMultiHitResultsToTargetData");

	Params::HWLibrary_AbilitySystem_AddMultiHitResultsToTargetData Parms{};

	Parms.TargetDataHandleToModify = std::move(TargetDataHandleToModify);
	Parms.TargetDataHandleToAdd = std::move(TargetDataHandleToAdd);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;
	Parms.TargetDataIndexToAdd = TargetDataIndexToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetDataHandleToModify = std::move(Parms.TargetDataHandleToModify);
}


// Function Hemingway.HWLibrary_AbilitySystem.AddSingleHitTargetDataToMultiHitTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAbilityTargetDataHandle&TargetDataHandleToModify                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandleToAdd                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToAdd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::AddSingleHitTargetDataToMultiHitTargetData(struct FGameplayAbilityTargetDataHandle& TargetDataHandleToModify, const struct FGameplayAbilityTargetDataHandle& TargetDataHandleToAdd, int32 TargetDataIndexToModify, int32 TargetDataIndexToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "AddSingleHitTargetDataToMultiHitTargetData");

	Params::HWLibrary_AbilitySystem_AddSingleHitTargetDataToMultiHitTargetData Parms{};

	Parms.TargetDataHandleToModify = std::move(TargetDataHandleToModify);
	Parms.TargetDataHandleToAdd = std::move(TargetDataHandleToAdd);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;
	Parms.TargetDataIndexToAdd = TargetDataIndexToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetDataHandleToModify = std::move(Parms.TargetDataHandleToModify);
}


// Function Hemingway.HWLibrary_AbilitySystem.BP_GetHWAbilitySystem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWLibrary_AbilitySystem::BP_GetHWAbilitySystem(const class AActor* Actor, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "BP_GetHWAbilitySystem");

	Params::HWLibrary_AbilitySystem_BP_GetHWAbilitySystem Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.BP_MulticastSendGameplayEventToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::BP_MulticastSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "BP_MulticastSendGameplayEventToActor");

	Params::HWLibrary_AbilitySystem_BP_MulticastSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.BP_OwningClientSendGameplayEventToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::BP_OwningClientSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "BP_OwningClientSendGameplayEventToActor");

	Params::HWLibrary_AbilitySystem_BP_OwningClientSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.BP_ServerSendGameplayEventToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EventReciever                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::BP_ServerSendGameplayEventToActor(class AActor* EventReciever, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "BP_ServerSendGameplayEventToActor");

	Params::HWLibrary_AbilitySystem_BP_ServerSendGameplayEventToActor Parms{};

	Parms.EventReciever = EventReciever;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.CalculateCooldownMultiplier
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWGameplayAbility*         InstigatingAbility                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            CooldownRate                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCooldownMultiplier                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::CalculateCooldownMultiplier(const class UHWGameplayAbility* InstigatingAbility, const float& CooldownRate, float* OutCooldownMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CalculateCooldownMultiplier");

	Params::HWLibrary_AbilitySystem_CalculateCooldownMultiplier Parms{};

	Parms.InstigatingAbility = InstigatingAbility;
	Parms.CooldownRate = CooldownRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCooldownMultiplier != nullptr)
		*OutCooldownMultiplier = Parms.OutCooldownMultiplier;
}


// Function Hemingway.HWLibrary_AbilitySystem.CalculateCooldownMultiplierForOffhands
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            CooldownRate                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCooldownMultiplier                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::CalculateCooldownMultiplierForOffhands(const float& CooldownRate, float* OutCooldownMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CalculateCooldownMultiplierForOffhands");

	Params::HWLibrary_AbilitySystem_CalculateCooldownMultiplierForOffhands Parms{};

	Parms.CooldownRate = CooldownRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCooldownMultiplier != nullptr)
		*OutCooldownMultiplier = Parms.OutCooldownMultiplier;
}


// Function Hemingway.HWLibrary_AbilitySystem.CalculateFinalCooldownDuration
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            BaseCooldownDuration                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            CooldownMultiplier                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            CooldownFlatDelta                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_AbilitySystem::CalculateFinalCooldownDuration(const float& BaseCooldownDuration, const float& CooldownMultiplier, const float& CooldownFlatDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CalculateFinalCooldownDuration");

	Params::HWLibrary_AbilitySystem_CalculateFinalCooldownDuration Parms{};

	Parms.BaseCooldownDuration = BaseCooldownDuration;
	Parms.CooldownMultiplier = CooldownMultiplier;
	Parms.CooldownFlatDelta = CooldownFlatDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CanEffectApplyAttributeModifiers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      Effect                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContext                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::CanEffectApplyAttributeModifiers(class UAbilitySystemComponent* TargetASC, TSubclassOf<class UGameplayEffect> Effect, const float Level, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CanEffectApplyAttributeModifiers");

	Params::HWLibrary_AbilitySystem_CanEffectApplyAttributeModifiers Parms{};

	Parms.TargetASC = TargetASC;
	Parms.Effect = Effect;
	Parms.Level = Level;
	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CheckAbilityForId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UClass*                     BaseAbilityClass                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::CheckAbilityForId(const class UClass* BaseAbilityClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CheckAbilityForId");

	Params::HWLibrary_AbilitySystem_CheckAbilityForId Parms{};

	Parms.BaseAbilityClass = BaseAbilityClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.CloneEffectsToASC
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     EffectTypesToClone                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UAbilitySystemComponent*    FromASC                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          ToASC                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::CloneEffectsToASC(const struct FGameplayTagContainer& EffectTypesToClone, const class UAbilitySystemComponent* FromASC, class UAbilitySystemComponent* ToASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CloneEffectsToASC");

	Params::HWLibrary_AbilitySystem_CloneEffectsToASC Parms{};

	Parms.EffectTypesToClone = std::move(EffectTypesToClone);
	Parms.FromASC = FromASC;
	Parms.ToASC = ToASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateAimTargetDataFromLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector&                   AimLocation                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateAimTargetDataFromLocation(const struct FVector& AimLocation, class AActor* SourceActor, class UGameplayAbility* AbilityInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateAimTargetDataFromLocation");

	Params::HWLibrary_AbilitySystem_CreateAimTargetDataFromLocation Parms{};

	Parms.AimLocation = std::move(AimLocation);
	Parms.SourceActor = SourceActor;
	Parms.AbilityInstance = AbilityInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateAimTargetDataFromLocationInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWTargetData_LocationInfo&LocationInfo                                           (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateAimTargetDataFromLocationInfo(const struct FHWTargetData_LocationInfo& LocationInfo, class AActor* SourceActor, class UGameplayAbility* AbilityInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateAimTargetDataFromLocationInfo");

	Params::HWLibrary_AbilitySystem_CreateAimTargetDataFromLocationInfo Parms{};

	Parms.LocationInfo = std::move(LocationInfo);
	Parms.SourceActor = SourceActor;
	Parms.AbilityInstance = AbilityInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateAimTargetDataFromSpline
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class USplineComponent*           SplinePath                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateAimTargetDataFromSpline(const class USplineComponent* SplinePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateAimTargetDataFromSpline");

	Params::HWLibrary_AbilitySystem_CreateAimTargetDataFromSpline Parms{};

	Parms.SplinePath = SplinePath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateAimTargetDataFromStartAndEndLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTransform&                AimOrigin                                              (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   AimEndLocation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bRotateOrignToEnd                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bOffsetAimByLastValidHeight                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateAimTargetDataFromStartAndEndLocation(const struct FTransform& AimOrigin, const struct FVector& AimEndLocation, class AActor* SourceActor, class UGameplayAbility* AbilityInstance, const bool bRotateOrignToEnd, const bool bOffsetAimByLastValidHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateAimTargetDataFromStartAndEndLocation");

	Params::HWLibrary_AbilitySystem_CreateAimTargetDataFromStartAndEndLocation Parms{};

	Parms.AimOrigin = std::move(AimOrigin);
	Parms.AimEndLocation = std::move(AimEndLocation);
	Parms.SourceActor = SourceActor;
	Parms.AbilityInstance = AbilityInstance;
	Parms.bRotateOrignToEnd = bRotateOrignToEnd;
	Parms.bOffsetAimByLastValidHeight = bOffsetAimByLastValidHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateAimTargetDataFromTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTransform&                AimLocation                                            (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateAimTargetDataFromTransform(const struct FTransform& AimLocation, class AActor* SourceActor, class UGameplayAbility* AbilityInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateAimTargetDataFromTransform");

	Params::HWLibrary_AbilitySystem_CreateAimTargetDataFromTransform Parms{};

	Parms.AimLocation = std::move(AimLocation);
	Parms.SourceActor = SourceActor;
	Parms.AbilityInstance = AbilityInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.CreateSingleHitTargetDataFromActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetDataHitNormal                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWLibrary_AbilitySystem::CreateSingleHitTargetDataFromActor(class AActor* Target, const struct FVector& TargetDataHitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "CreateSingleHitTargetDataFromActor");

	Params::HWLibrary_AbilitySystem_CreateSingleHitTargetDataFromActor Parms{};

	Parms.Target = Target;
	Parms.TargetDataHitNormal = std::move(TargetDataHitNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.DeactivateLocalGameplayCue
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::DeactivateLocalGameplayCue(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "DeactivateLocalGameplayCue");

	Params::HWLibrary_AbilitySystem_DeactivateLocalGameplayCue Parms{};

	Parms.Target = Target;
	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.DoesTargetDataHaveValidTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::DoesTargetDataHaveValidTarget(const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "DoesTargetDataHaveValidTarget");

	Params::HWLibrary_AbilitySystem_DoesTargetDataHaveValidTarget Parms{};

	Parms.TargetDataHandle = std::move(TargetDataHandle);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.ExecuteLocalGameplayCue
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::ExecuteLocalGameplayCue(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "ExecuteLocalGameplayCue");

	Params::HWLibrary_AbilitySystem_ExecuteLocalGameplayCue Parms{};

	Parms.Target = Target;
	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetEffectContextFromActiveEffect
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UHWLibrary_AbilitySystem::GetEffectContextFromActiveEffect(const struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetEffectContextFromActiveEffect");

	Params::HWLibrary_AbilitySystem_GetEffectContextFromActiveEffect Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetFiringInstanceIdFromEffectContext
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// struct FHWAbilityFiringInstanceId       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWAbilityFiringInstanceId UHWLibrary_AbilitySystem::GetFiringInstanceIdFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetFiringInstanceIdFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetFiringInstanceIdFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetGameplayEffectClassFromEffectSpec
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEffect> UHWLibrary_AbilitySystem::GetGameplayEffectClassFromEffectSpec(const struct FGameplayEffectSpecHandle& EffectSpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetGameplayEffectClassFromEffectSpec");

	Params::HWLibrary_AbilitySystem_GetGameplayEffectClassFromEffectSpec Parms{};

	Parms.EffectSpecHandle = std::move(EffectSpecHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetHitActorFromEffectContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWLibrary_AbilitySystem::GetHitActorFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetHitActorFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetHitActorFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetInstigatingAbilityCDOAbilityTagsFromEffectContext
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWLibrary_AbilitySystem::GetInstigatingAbilityCDOAbilityTagsFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetInstigatingAbilityCDOAbilityTagsFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetInstigatingAbilityCDOAbilityTagsFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetInstigatingAbilityCDOFromEffectContext
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// const class UGameplayAbility*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UGameplayAbility* UHWLibrary_AbilitySystem::GetInstigatingAbilityCDOFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetInstigatingAbilityCDOFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetInstigatingAbilityCDOFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetInstigatingAbilityInstanceFromEffectContext
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// const class UGameplayAbility*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UGameplayAbility* UHWLibrary_AbilitySystem::GetInstigatingAbilityInstanceFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetInstigatingAbilityInstanceFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetInstigatingAbilityInstanceFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetInstigatorAbilitySystemComponentFromEffectContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWLibrary_AbilitySystem::GetInstigatorAbilitySystemComponentFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetInstigatorAbilitySystemComponentFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetInstigatorAbilitySystemComponentFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetLevelConfigForAbility
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityLevelConfig*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityLevelConfig* UHWLibrary_AbilitySystem::GetLevelConfigForAbility(class UHWAbilitySystemComponent* AbilitySystem, const struct FGameplayAbilitySpecHandle& AbilityHandle, const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetLevelConfigForAbility");

	Params::HWLibrary_AbilitySystem_GetLevelConfigForAbility Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetLevelFromActiveEffect
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_AbilitySystem::GetLevelFromActiveEffect(const struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetLevelFromActiveEffect");

	Params::HWLibrary_AbilitySystem_GetLevelFromActiveEffect Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetLevelFromEffectSpecRef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWLibrary_AbilitySystem::GetLevelFromEffectSpecRef(const struct FGameplayEffectSpec& EffectSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetLevelFromEffectSpecRef");

	Params::HWLibrary_AbilitySystem_GetLevelFromEffectSpecRef Parms{};

	Parms.EffectSpec = std::move(EffectSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetMultiHitResultsFromTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FHitResult> UHWLibrary_AbilitySystem::GetMultiHitResultsFromTargetData(const struct FGameplayAbilityTargetDataHandle& TargetData, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetMultiHitResultsFromTargetData");

	Params::HWLibrary_AbilitySystem_GetMultiHitResultsFromTargetData Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetOriginalInstigatorAbilitySystemComponentFromEffectContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWLibrary_AbilitySystem::GetOriginalInstigatorAbilitySystemComponentFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetOriginalInstigatorAbilitySystemComponentFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetOriginalInstigatorAbilitySystemComponentFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetOwningAbilitySystemFromActiveEffect
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FActiveGameplayEffectHandle&     ActiveEffectHandle                                     (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* UHWLibrary_AbilitySystem::GetOwningAbilitySystemFromActiveEffect(struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetOwningAbilitySystemFromActiveEffect");

	Params::HWLibrary_AbilitySystem_GetOwningAbilitySystemFromActiveEffect Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ActiveEffectHandle = std::move(Parms.ActiveEffectHandle);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetPrimaryAbilityInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UHWLibrary_AbilitySystem::GetPrimaryAbilityInstance(class UHWAbilitySystemComponent* AbilitySystem, const struct FGameplayAbilitySpecHandle& AbilityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetPrimaryAbilityInstance");

	Params::HWLibrary_AbilitySystem_GetPrimaryAbilityInstance Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetPrimaryAbilityInstanceBasedOnEquipmentItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentItem*                 EquipmentItem                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UHWLibrary_AbilitySystem::GetPrimaryAbilityInstanceBasedOnEquipmentItem(class UHWAbilitySystemComponent* AbilitySystem, class UHWEquipmentItem* EquipmentItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetPrimaryAbilityInstanceBasedOnEquipmentItem");

	Params::HWLibrary_AbilitySystem_GetPrimaryAbilityInstanceBasedOnEquipmentItem Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.EquipmentItem = EquipmentItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetPrimaryAbilityInstanceBasedOnInventorySlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          InventorySlot                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UHWLibrary_AbilitySystem::GetPrimaryAbilityInstanceBasedOnInventorySlot(class UHWAbilitySystemComponent* AbilitySystem, const struct FHWInventorySlot& InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetPrimaryAbilityInstanceBasedOnInventorySlot");

	Params::HWLibrary_AbilitySystem_GetPrimaryAbilityInstanceBasedOnInventorySlot Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.InventorySlot = std::move(InventorySlot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetTargetVectorFromEffectContext
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWLibrary_AbilitySystem::GetTargetVectorFromEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GetTargetVectorFromEffectContext");

	Params::HWLibrary_AbilitySystem_GetTargetVectorFromEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GrantAbilitySetToASC
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWAbilitySet*              AbilitySetToGrant                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        ASC                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWAbilitySet_GrantedHandles*    OutGrantedHandles                                      (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::GrantAbilitySetToASC(const class UHWAbilitySet* AbilitySetToGrant, class UHWAbilitySystemComponent* ASC, struct FHWAbilitySet_GrantedHandles* OutGrantedHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "GrantAbilitySetToASC");

	Params::HWLibrary_AbilitySystem_GrantAbilitySetToASC Parms{};

	Parms.AbilitySetToGrant = AbilitySetToGrant;
	Parms.ASC = ASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGrantedHandles != nullptr)
		*OutGrantedHandles = std::move(Parms.OutGrantedHandles);
}


// Function Hemingway.HWLibrary_AbilitySystem.IsActiveEffectValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::IsActiveEffectValid(const struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "IsActiveEffectValid");

	Params::HWLibrary_AbilitySystem_IsActiveEffectValid Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.IsShouldIgnoreCooldownsCheatActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::IsShouldIgnoreCooldownsCheatActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "IsShouldIgnoreCooldownsCheatActive");

	Params::HWLibrary_AbilitySystem_IsShouldIgnoreCooldownsCheatActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.IsShouldIgnoreCostsCheatActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::IsShouldIgnoreCostsCheatActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "IsShouldIgnoreCostsCheatActive");

	Params::HWLibrary_AbilitySystem_IsShouldIgnoreCostsCheatActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.IsTaskActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UGameplayTask*              Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::IsTaskActive(const class UGameplayTask* Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "IsTaskActive");

	Params::HWLibrary_AbilitySystem_IsTaskActive Parms{};

	Parms.Task = Task;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.ModifyActiveEffectStackCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStackCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::ModifyActiveEffectStackCount(const struct FActiveGameplayEffectHandle& ActiveEffectHandle, int32 NewStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "ModifyActiveEffectStackCount");

	Params::HWLibrary_AbilitySystem_ModifyActiveEffectStackCount Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);
	Parms.NewStackCount = NewStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.ModifyGoldAttribute
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*          AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayModOp                          ModifierType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Amount                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GoldModReason                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::ModifyGoldAttribute(class UAbilitySystemComponent* AbilitySystem, EGameplayModOp ModifierType, const float Amount, const struct FGameplayTag& GoldModReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "ModifyGoldAttribute");

	Params::HWLibrary_AbilitySystem_ModifyGoldAttribute Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.ModifierType = ModifierType;
	Parms.Amount = Amount;
	Parms.GoldModReason = std::move(GoldModReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.RemoveActiveGameplayEffectFromEffectOwner
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::RemoveActiveGameplayEffectFromEffectOwner(const struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "RemoveActiveGameplayEffectFromEffectOwner");

	Params::HWLibrary_AbilitySystem_RemoveActiveGameplayEffectFromEffectOwner Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.RemoveHitResultFromMultiHitTargetDataAt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RemoveAtIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&InTargetData                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::RemoveHitResultFromMultiHitTargetDataAt(int32 RemoveAtIndex, struct FGameplayAbilityTargetDataHandle& InTargetData, int32 TargetDataIndexToModify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "RemoveHitResultFromMultiHitTargetDataAt");

	Params::HWLibrary_AbilitySystem_RemoveHitResultFromMultiHitTargetDataAt Parms{};

	Parms.RemoveAtIndex = RemoveAtIndex;
	Parms.InTargetData = std::move(InTargetData);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InTargetData = std::move(Parms.InTargetData);
}


// Function Hemingway.HWLibrary_AbilitySystem.RemoveMultiHitResultsFromTargetDataByTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          InstigatingCharacter                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     GameplayTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&InTargetData                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnemyTargets                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFriendlyTargets                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelfTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCheckAllTags                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::RemoveMultiHitResultsFromTargetDataByTag(const class AHWCharacter_Base* InstigatingCharacter, const struct FGameplayTagContainer& GameplayTags, struct FGameplayAbilityTargetDataHandle& InTargetData, int32 TargetDataIndexToModify, bool bEnemyTargets, bool bFriendlyTargets, bool bSelfTarget, bool bCheckAllTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "RemoveMultiHitResultsFromTargetDataByTag");

	Params::HWLibrary_AbilitySystem_RemoveMultiHitResultsFromTargetDataByTag Parms{};

	Parms.InstigatingCharacter = InstigatingCharacter;
	Parms.GameplayTags = std::move(GameplayTags);
	Parms.InTargetData = std::move(InTargetData);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;
	Parms.bEnemyTargets = bEnemyTargets;
	Parms.bFriendlyTargets = bFriendlyTargets;
	Parms.bSelfTarget = bSelfTarget;
	Parms.bCheckAllTags = bCheckAllTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InTargetData = std::move(Parms.InTargetData);
}


// Function Hemingway.HWLibrary_AbilitySystem.SetEffectCauserOnEffectContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// class AActor*                           NewEffectCauser                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::SetEffectCauserOnEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle, class AActor* NewEffectCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "SetEffectCauserOnEffectContext");

	Params::HWLibrary_AbilitySystem_SetEffectCauserOnEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);
	Parms.NewEffectCauser = NewEffectCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.SetTargetVectorOnEffectContext
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContextHandle                                    (Parm, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetVector                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::SetTargetVectorOnEffectContext(const struct FGameplayEffectContextHandle& EffectContextHandle, const struct FVector& TargetVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "SetTargetVectorOnEffectContext");

	Params::HWLibrary_AbilitySystem_SetTargetVectorOnEffectContext Parms{};

	Parms.EffectContextHandle = std::move(EffectContextHandle);
	Parms.TargetVector = std::move(TargetVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_AbilitySystem.UpdateTargetDataLocationInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAbilityTargetDataHandle&TargetDataHandleToModify                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   TargetDataIndexToModify                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetingLocationInfo&SourceLoc                                              (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetingLocationInfo&TargetLoc                                              (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bIsValid                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_AbilitySystem::UpdateTargetDataLocationInfo(struct FGameplayAbilityTargetDataHandle& TargetDataHandleToModify, int32 TargetDataIndexToModify, const struct FGameplayAbilityTargetingLocationInfo& SourceLoc, const struct FGameplayAbilityTargetingLocationInfo& TargetLoc, const bool bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "UpdateTargetDataLocationInfo");

	Params::HWLibrary_AbilitySystem_UpdateTargetDataLocationInfo Parms{};

	Parms.TargetDataHandleToModify = std::move(TargetDataHandleToModify);
	Parms.TargetDataIndexToModify = TargetDataIndexToModify;
	Parms.SourceLoc = std::move(SourceLoc);
	Parms.TargetLoc = std::move(TargetLoc);
	Parms.bIsValid = bIsValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetDataHandleToModify = std::move(Parms.TargetDataHandleToModify);
}


// Function Hemingway.HWLibrary_AbilitySystem.WasActiveEffectSuccessfullyApplied
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveEffectHandle                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_AbilitySystem::WasActiveEffectSuccessfullyApplied(const struct FActiveGameplayEffectHandle& ActiveEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_AbilitySystem", "WasActiveEffectSuccessfullyApplied");

	Params::HWLibrary_AbilitySystem_WasActiveEffectSuccessfullyApplied Parms{};

	Parms.ActiveEffectHandle = std::move(ActiveEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_AbilitySystem.GetEffectTagsFromEffectSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWLibrary_AbilitySystem::GetEffectTagsFromEffectSpec(const struct FGameplayEffectSpecHandle& EffectSpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLibrary_AbilitySystem", "GetEffectTagsFromEffectSpec");

	Params::HWLibrary_AbilitySystem_GetEffectTagsFromEffectSpec Parms{};

	Parms.EffectSpecHandle = std::move(EffectSpecHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAladdinArenaManager.OnAladdinNewApparelApplicationFinished
// (Final, Native, Public)

void AHWAladdinArenaManager::OnAladdinNewApparelApplicationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnAladdinNewApparelApplicationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAladdinArenaManager.OnDeployableDestroyed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    DeployableDestroyed                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::OnDeployableDestroyed(class AHWDeployable* DeployableDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnDeployableDestroyed");

	Params::HWAladdinArenaManager_OnDeployableDestroyed Parms{};

	Parms.DeployableDestroyed = DeployableDestroyed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAladdinArenaManager.OnDeployableSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWDeployable*                    DeployableSpawned                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::OnDeployableSpawned(class AHWDeployable* DeployableSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnDeployableSpawned");

	Params::HWAladdinArenaManager_OnDeployableSpawned Parms{};

	Parms.DeployableSpawned = DeployableSpawned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAladdinArenaManager.OnFamiliarDestroyed
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarInfo&     FamiliarDestroyed                                      (Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::OnFamiliarDestroyed(const struct FHWActiveFamiliarInfo& FamiliarDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnFamiliarDestroyed");

	Params::HWAladdinArenaManager_OnFamiliarDestroyed Parms{};

	Parms.FamiliarDestroyed = std::move(FamiliarDestroyed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAladdinArenaManager.OnFamiliarSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FHWActiveFamiliarInfo&     FamiliarSpawned                                        (Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::OnFamiliarSpawned(const struct FHWActiveFamiliarInfo& FamiliarSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnFamiliarSpawned");

	Params::HWAladdinArenaManager_OnFamiliarSpawned Parms{};

	Parms.FamiliarSpawned = std::move(FamiliarSpawned);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAladdinArenaManager.OnRep_AladdinSkinOwner
// (Final, Native, Public)
// Parameters:
// TWeakObjectPtr<class AHWCharacter_Base> PreviousSkinOwner                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::OnRep_AladdinSkinOwner(TWeakObjectPtr<class AHWCharacter_Base> PreviousSkinOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "OnRep_AladdinSkinOwner");

	Params::HWAladdinArenaManager_OnRep_AladdinSkinOwner Parms{};

	Parms.PreviousSkinOwner = PreviousSkinOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAladdinArenaManager.RegisterAladdinSkinOwner
// (Final, Native, Public)
// Parameters:
// class AHWCharacter_Base*                Aladdin                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWAladdinArenaManager::RegisterAladdinSkinOwner(class AHWCharacter_Base* Aladdin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAladdinArenaManager", "RegisterAladdinSkinOwner");

	Params::HWAladdinArenaManager_RegisterAladdinSkinOwner Parms{};

	Parms.Aladdin = Aladdin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TagApplicationByType.OnGameplayEffectApplied
// (Final, Native, Private)
// Parameters:
// const struct FGameplayEffectSpec&       ActiveEffect                                           (Parm, NativeAccessSpecifierPublic)

void UHWQuest_TagApplicationByType::OnGameplayEffectApplied(const struct FGameplayEffectSpec& ActiveEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TagApplicationByType", "OnGameplayEffectApplied");

	Params::HWQuest_TagApplicationByType_OnGameplayEffectApplied Parms{};

	Parms.ActiveEffect = std::move(ActiveEffect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TagApplicationByType.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TagApplicationByType::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TagApplicationByType", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_TagApplicationByType_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagApplied.OnTagAddedOrRemoved
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagApplied::OnTagAddedOrRemoved(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagApplied", "OnTagAddedOrRemoved");

	Params::HWQuest_TimeWithTagApplied_OnTagAddedOrRemoved Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagCount = TagCount;
	Parms.AbilitySystem = AbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagApplied.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagApplied::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagApplied", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_TimeWithTagApplied_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagAppliedToTargets.OnGameplayEffectApplied
// (Final, Native, Private)
// Parameters:
// const struct FGameplayEffectSpec&       ActiveEffect                                           (Parm, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagAppliedToTargets::OnGameplayEffectApplied(const struct FGameplayEffectSpec& ActiveEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagAppliedToTargets", "OnGameplayEffectApplied");

	Params::HWQuest_TimeWithTagAppliedToTargets_OnGameplayEffectApplied Parms{};

	Parms.ActiveEffect = std::move(ActiveEffect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagAppliedToTargets.OnGameplayEffectAppliedCallback
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       SpecApplied                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagAppliedToTargets::OnGameplayEffectAppliedCallback(class UAbilitySystemComponent* Target, const struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagAppliedToTargets", "OnGameplayEffectAppliedCallback");

	Params::HWQuest_TimeWithTagAppliedToTargets_OnGameplayEffectAppliedCallback Parms{};

	Parms.Target = Target;
	Parms.SpecApplied = std::move(SpecApplied);
	Parms.ActiveHandle = std::move(ActiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagAppliedToTargets.OnTargetTagAddedOrRemoved
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagAppliedToTargets::OnTargetTagAddedOrRemoved(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagAppliedToTargets", "OnTargetTagAddedOrRemoved");

	Params::HWQuest_TimeWithTagAppliedToTargets_OnTargetTagAddedOrRemoved Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagCount = TagCount;
	Parms.AbilitySystem = AbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeWithTagAppliedToTargets.TrackQuestForPlayer_Implementation
// (Final, Native, Private)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeWithTagAppliedToTargets::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeWithTagAppliedToTargets", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_TimeWithTagAppliedToTargets_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRankedSubsystem.GetEliteSoloQueueLossThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWRankedSubsystem::GetEliteSoloQueueLossThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "GetEliteSoloQueueLossThreshold");

	Params::HWRankedSubsystem_GetEliteSoloQueueLossThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRankedSubsystem.GetEliteSoloQueueThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWRankedSubsystem::GetEliteSoloQueueThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "GetEliteSoloQueueThreshold");

	Params::HWRankedSubsystem_GetEliteSoloQueueThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRankedSubsystem.GetRankedConfigByGamemode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AHWGameMode>          GameModeClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UHWRankedConfig>   ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWRankedConfig> UHWRankedSubsystem::GetRankedConfigByGamemode(TSubclassOf<class AHWGameMode> GameModeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "GetRankedConfigByGamemode");

	Params::HWRankedSubsystem_GetRankedConfigByGamemode Parms{};

	Parms.GameModeClass = GameModeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRankedSubsystem.GrantEliteQueueItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            SkillRating                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWRankedSubsystem::GrantEliteQueueItem(class URH_PlayerInfo* Player, const int32& SkillRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "GrantEliteQueueItem");

	Params::HWRankedSubsystem_GrantEliteQueueItem Parms{};

	Parms.Player = Player;
	Parms.SkillRating = SkillRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRankedSubsystem.OnRankedConfigLoaded
// (Final, Native, Protected)

void UHWRankedSubsystem::OnRankedConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "OnRankedConfigLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRankedSubsystem.OnSkillRatingRankingsLoaded
// (Final, Native, Protected)

void UHWRankedSubsystem::OnSkillRatingRankingsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRankedSubsystem", "OnSkillRatingRankingsLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.BP_OnCalcReticlePlacementPosition
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   PlacementLoc                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Origin                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndPoint                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle::BP_OnCalcReticlePlacementPosition(const struct FVector& PlacementLoc, const struct FVector& Origin, const struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "BP_OnCalcReticlePlacementPosition");

	Params::HWReticle_BP_OnCalcReticlePlacementPosition Parms{};

	Parms.PlacementLoc = std::move(PlacementLoc);
	Parms.Origin = std::move(Origin);
	Parms.EndPoint = std::move(EndPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWReticle.BP_OnRenderBehaviorDetermined
// (Event, Public, BlueprintEvent)
// Parameters:
// EReticleRenderBehavior                  RenderBehavior                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle::BP_OnRenderBehaviorDetermined(EReticleRenderBehavior RenderBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "BP_OnRenderBehaviorDetermined");

	Params::HWReticle_BP_OnRenderBehaviorDetermined Parms{};

	Parms.RenderBehavior = RenderBehavior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWReticle.BP_OnReticleUpdate
// (Event, Public, BlueprintEvent)

void AHWReticle::BP_OnReticleUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "BP_OnReticleUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWReticle.HandlePrefireTransition
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsEnteringPrefire                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle::HandlePrefireTransition(bool bIsEnteringPrefire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "HandlePrefireTransition");

	Params::HWReticle_HandlePrefireTransition Parms{};

	Parms.bIsEnteringPrefire = bIsEnteringPrefire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWReticle.OnTargetingConfirmed
// (Native, Event, Public, BlueprintEvent)

void AHWReticle::OnTargetingConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "OnTargetingConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.OnTargetingEnded
// (Native, Event, Public, BlueprintEvent)

void AHWReticle::OnTargetingEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "OnTargetingEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.OnTargetingStarted
// (Native, Event, Public, BlueprintEvent)

void AHWReticle::OnTargetingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "OnTargetingStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.UpdateReticleRendering
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EReticleRenderBehavior                  RenderBehavior                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraComponent*                NiagaraComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle::UpdateReticleRendering(EReticleRenderBehavior RenderBehavior, class UNiagaraComponent* NiagaraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "UpdateReticleRendering");

	Params::HWReticle_UpdateReticleRendering Parms{};

	Parms.RenderBehavior = RenderBehavior;
	Parms.NiagaraComponent = NiagaraComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.UpdateReticleRotation
// (Native, Event, Protected, BlueprintEvent)

void AHWReticle::UpdateReticleRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "UpdateReticleRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle.CalcCustomPlacementPosition
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const class AHWTargeter*                Targeter                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutFoundValidPlacement                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWReticle::CalcCustomPlacementPosition(const class AHWTargeter* Targeter, bool* OutFoundValidPlacement) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "CalcCustomPlacementPosition");

	Params::HWReticle_CalcCustomPlacementPosition Parms{};

	Parms.Targeter = Targeter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFoundValidPlacement != nullptr)
		*OutFoundValidPlacement = Parms.OutFoundValidPlacement;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.GetApparelComponent
// (Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWReticle::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "GetApparelComponent");

	Params::HWReticle_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.GetCurrentSkin
// (Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWReticle::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "GetCurrentSkin");

	Params::HWReticle_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.GetRadialPlayerSelectorTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AHWReticle::GetRadialPlayerSelectorTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "GetRadialPlayerSelectorTarget");

	Params::HWReticle_GetRadialPlayerSelectorTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.IsSkinningReady
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWReticle::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "IsSkinningReady");

	Params::HWReticle_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.ShouldShowReticle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWReticle::ShouldShowReticle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "ShouldShowReticle");

	Params::HWReticle_ShouldShowReticle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle.ShouldShowReticleInPhase
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const EAbilityFlowPhase                 AbilityPhase                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWReticle::ShouldShowReticleInPhase(const EAbilityFlowPhase AbilityPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle", "ShouldShowReticleInPhase");

	Params::HWReticle_ShouldShowReticleInPhase Parms{};

	Parms.AbilityPhase = AbilityPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Attack_Deployable.OnDeployableBeginSpawning
// (Native, Protected)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_Deployable::OnDeployableBeginSpawning(class AHWDeployable* SpawnedDeployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_Deployable", "OnDeployableBeginSpawning");

	Params::HWAbilityTask_Attack_Deployable_OnDeployableBeginSpawning Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_Deployable.OnDeployableSpawned
// (Native, Protected)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_Deployable::OnDeployableSpawned(class AHWDeployable* SpawnedDeployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_Deployable", "OnDeployableSpawned");

	Params::HWAbilityTask_Attack_Deployable_OnDeployableSpawned Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle_Mulan_A03_WallIndicator.CalcPredictedWorldHit
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHitResult AHWReticle_Mulan_A03_WallIndicator::CalcPredictedWorldHit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle_Mulan_A03_WallIndicator", "CalcPredictedWorldHit");

	Params::HWReticle_Mulan_A03_WallIndicator_CalcPredictedWorldHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle_Mulan_A03_WallIndicator.IsEvolved
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWReticle_Mulan_A03_WallIndicator::IsEvolved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle_Mulan_A03_WallIndicator", "IsEvolved");

	Params::HWReticle_Mulan_A03_WallIndicator_IsEvolved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle_Ricochet.UpdateRicochetReticle
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                ReticleFx                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&AimDataHandle                                          (Parm, NativeAccessSpecifierPublic)
// int32                                   RicochetIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsFinalRicochet                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle_Ricochet::UpdateRicochetReticle(class UNiagaraComponent* ReticleFx, const struct FGameplayAbilityTargetDataHandle& AimDataHandle, int32 RicochetIndex, const bool bIsFinalRicochet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle_Ricochet", "UpdateRicochetReticle");

	Params::HWReticle_Ricochet_UpdateRicochetReticle Parms{};

	Parms.ReticleFx = ReticleFx;
	Parms.AimDataHandle = std::move(AimDataHandle);
	Parms.RicochetIndex = RicochetIndex;
	Parms.bIsFinalRicochet = bIsFinalRicochet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWReticle_VGS.UpdateReticleDisplay
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              DisplayTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle_VGS::UpdateReticleDisplay(const struct FGameplayTag& DisplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle_VGS", "UpdateReticleDisplay");

	Params::HWReticle_VGS_UpdateReticleDisplay Parms{};

	Parms.DisplayTag = std::move(DisplayTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWGameplayEffect_AllowPassThrough.GetPassThroughCharacterTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UHWGameplayEffect_AllowPassThrough::GetPassThroughCharacterTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_AllowPassThrough", "GetPassThroughCharacterTags");

	Params::HWGameplayEffect_AllowPassThrough_GetPassThroughCharacterTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.DoesPlayerHaveRolePreferences
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWRoleSubsystem::DoesPlayerHaveRolePreferences(class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "DoesPlayerHaveRolePreferences");

	Params::HWRoleSubsystem_DoesPlayerHaveRolePreferences Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.FetchLocalPlayerRolePreferences
// (Final, Native, Public, HasOutParams)
// Parameters:
// class URH_PlayerInfo*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMulticastInlineDelegate<void(const struct FHWRolePreferenceData& RolePreferences, bool bSuccess)>&RolesFetchedDelegate                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::FetchLocalPlayerRolePreferences(class URH_PlayerInfo* Player, const TMulticastInlineDelegate<void(const struct FHWRolePreferenceData& RolePreferences, bool bSuccess)>& RolesFetchedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "FetchLocalPlayerRolePreferences");

	Params::HWRoleSubsystem_FetchLocalPlayerRolePreferences Parms{};

	Parms.Player = Player;
	Parms.RolesFetchedDelegate = RolesFetchedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.GetAllCachedRolePreferences
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWRolePreferenceData            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWRolePreferenceData UHWRoleSubsystem::GetAllCachedRolePreferences(const struct FHWPersistentPlayerId& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "GetAllCachedRolePreferences");

	Params::HWRoleSubsystem_GetAllCachedRolePreferences Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.GetCachedRolePreference
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterRole                          RoleTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWRoleSubsystem::GetCachedRolePreference(const struct FHWPersistentPlayerId& PlayerId, ECharacterRole RoleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "GetCachedRolePreference");

	Params::HWRoleSubsystem_GetCachedRolePreference Parms{};

	Parms.PlayerId = std::move(PlayerId);
	Parms.RoleTag = RoleTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.GetCachedRolePriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWRoleSubsystem::GetCachedRolePriority(class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "GetCachedRolePriority");

	Params::HWRoleSubsystem_GetCachedRolePriority Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.OnLocalPlayerSettingsLoaded
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_PlayerSettingsDataWrapper&Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::OnLocalPlayerSettingsLoaded(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response, class URH_PlayerInfo* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "OnLocalPlayerSettingsLoaded");

	Params::HWRoleSubsystem_OnLocalPlayerSettingsLoaded Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Response = std::move(Response);
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.OnPlayerRolePreferencesSaved
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_PlayerSettingsDataWrapper&Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRH_ErrorInfo&             ErrorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::OnPlayerRolePreferencesSaved(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response, const struct FRH_ErrorInfo& ErrorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "OnPlayerRolePreferencesSaved");

	Params::HWRoleSubsystem_OnPlayerRolePreferencesSaved Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Response = std::move(Response);
	Parms.ErrorInfo = std::move(ErrorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.OnPlayerSettingsLoaded
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_PlayerSettingsDataWrapper&Response                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::OnPlayerSettingsLoaded(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response, class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "OnPlayerSettingsLoaded");

	Params::HWRoleSubsystem_OnPlayerSettingsLoaded Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Response = std::move(Response);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.OnRankConfigLoaded
// (Final, Native, Public)

void UHWRoleSubsystem::OnRankConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "OnRankConfigLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.UpdateCachedPlayedRole
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterRole                          RoleTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::UpdateCachedPlayedRole(const struct FHWPersistentPlayerId& PlayerId, ECharacterRole RoleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "UpdateCachedPlayedRole");

	Params::HWRoleSubsystem_UpdateCachedPlayedRole Parms{};

	Parms.PlayerId = std::move(PlayerId);
	Parms.RoleTag = RoleTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.UpdateRolePreferences
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWRolePreferenceData&     NewRolePreferences                                     (Parm, NativeAccessSpecifierPublic)

void UHWRoleSubsystem::UpdateRolePreferences(class URH_PlayerInfo* Player, const struct FHWRolePreferenceData& NewRolePreferences)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "UpdateRolePreferences");

	Params::HWRoleSubsystem_UpdateRolePreferences Parms{};

	Parms.Player = Player;
	Parms.NewRolePreferences = std::move(NewRolePreferences);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRoleSubsystem.GetAllCachedPlayedRoles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<struct FHWPersistentPlayerId, ECharacterRole>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct FHWPersistentPlayerId, ECharacterRole> UHWRoleSubsystem::GetAllCachedPlayedRoles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "GetAllCachedPlayedRoles");

	Params::HWRoleSubsystem_GetAllCachedPlayedRoles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRoleSubsystem.GetRoleConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWRoleConfig*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWRoleConfig* UHWRoleSubsystem::GetRoleConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRoleSubsystem", "GetRoleConfig");

	Params::HWRoleSubsystem_GetRoleConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWReticle_Dash.BP_OnCalcDashReticlePlacementPosition
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   PlacementLoc                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   MaxDashEndLoc                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ActualEndDashLoc                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HitActorLocation                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWReticle_Dash::BP_OnCalcDashReticlePlacementPosition(const struct FVector& PlacementLoc, const struct FVector& MaxDashEndLoc, const struct FVector& ActualEndDashLoc, const struct FVector& HitActorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWReticle_Dash", "BP_OnCalcDashReticlePlacementPosition");

	Params::HWReticle_Dash_BP_OnCalcDashReticlePlacementPosition Parms{};

	Parms.PlacementLoc = std::move(PlacementLoc);
	Parms.MaxDashEndLoc = std::move(MaxDashEndLoc);
	Parms.ActualEndDashLoc = std::move(ActualEndDashLoc);
	Parms.HitActorLocation = std::move(HitActorLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWSettingsVersionManager.GetCurrentKeybindsSettingsVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSettingsVersionManager::GetCurrentKeybindsSettingsVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsVersionManager", "GetCurrentKeybindsSettingsVersion");

	Params::HWSettingsVersionManager_GetCurrentKeybindsSettingsVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSettingsVersionManager.GetCurrentPlayerSettingsVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSettingsVersionManager::GetCurrentPlayerSettingsVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsVersionManager", "GetCurrentPlayerSettingsVersion");

	Params::HWSettingsVersionManager_GetCurrentPlayerSettingsVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSimpleTeamActor.OnRep_TeamID
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGenericTeamId&            OldTeamId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSimpleTeamActor::OnRep_TeamID(const struct FGenericTeamId& OldTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSimpleTeamActor", "OnRep_TeamID");

	Params::HWSimpleTeamActor_OnRep_TeamID Parms{};

	Parms.OldTeamId = std::move(OldTeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshActor.ActivateDeathVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWSkeletalMeshActor::ActivateDeathVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "ActivateDeathVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshActor.OnRep_IsDead
// (Final, Native, Protected)

void AHWSkeletalMeshActor::OnRep_IsDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "OnRep_IsDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshActor.SetSkinnedData
// (Native, Public)

void AHWSkeletalMeshActor::SetSkinnedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "SetSkinnedData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshActor.StartDestroy
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSkipTimeAfterDeath                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkeletalMeshActor::StartDestroy(bool bSkipTimeAfterDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "StartDestroy");

	Params::HWSkeletalMeshActor_StartDestroy Parms{};

	Parms.bSkipTimeAfterDeath = bSkipTimeAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshActor.GetApparelComponent
// (Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWSkeletalMeshActor::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "GetApparelComponent");

	Params::HWSkeletalMeshActor_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshActor.GetCurrentSkin
// (Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWSkeletalMeshActor::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "GetCurrentSkin");

	Params::HWSkeletalMeshActor_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshActor.IsSkinningReady
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWSkeletalMeshActor::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor", "IsSkinningReady");

	Params::HWSkeletalMeshActor_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinNameBranch.BranchOnSkinName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InputString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSkinNameBranch::BranchOnSkinName(const class FString& InputString, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWSkinNameBranch", "BranchOnSkinName");

	Params::HWSkinNameBranch_BranchOnSkinName Parms{};

	Parms.InputString = std::move(InputString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Attack_Projectile.FireHomingProjectileAttackById
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HomingTarget_0                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&AimData                                                (Parm, NativeAccessSpecifierPublic)
// class UHWAbilityTask_Attack_Projectile* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_Attack_Projectile* UHWAbilityTask_Attack_Projectile::FireHomingProjectileAttackById(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& ID, class AActor* HomingTarget_0, const struct FGameplayAbilityTargetDataHandle& AimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_Attack_Projectile", "FireHomingProjectileAttackById");

	Params::HWAbilityTask_Attack_Projectile_FireHomingProjectileAttackById Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ID = std::move(ID);
	Parms.HomingTarget_0 = HomingTarget_0;
	Parms.AimData = std::move(AimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinSelectReplicatedActor.HandleOnPendingPurchaseReceived
// (Final, Native, Private)

void AHWSkinSelectReplicatedActor::HandleOnPendingPurchaseReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinSelectReplicatedActor", "HandleOnPendingPurchaseReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinSelectReplicatedActor.OnPlayerInventoryUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<int32>&                    UpdatedInventoryIds                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinSelectReplicatedActor::OnPlayerInventoryUpdated(const TArray<int32>& UpdatedInventoryIds, class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinSelectReplicatedActor", "OnPlayerInventoryUpdated");

	Params::HWSkinSelectReplicatedActor_OnPlayerInventoryUpdated Parms{};

	Parms.UpdatedInventoryIds = std::move(UpdatedInventoryIds);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinSelectReplicatedActor.OnRep_CharacterItem
// (Final, Native, Protected)

void AHWSkinSelectReplicatedActor::OnRep_CharacterItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinSelectReplicatedActor", "OnRep_CharacterItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinSelectReplicatedActor.ServerRequestFullInventoryUpdate
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AHWSkinSelectReplicatedActor::ServerRequestFullInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinSelectReplicatedActor", "ServerRequestFullInventoryUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.AdjustAimLocationToGround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Origin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWGroundTargetValidationType     ValidationBehavior                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutAdjustedLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InSourceActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ManualCollisionRadius                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWTargeter::AdjustAimLocationToGround(const class UObject* WorldContextObject, const struct FVector& Origin, const EHWGroundTargetValidationType ValidationBehavior, struct FVector* OutAdjustedLocation, const class AActor* InSourceActor, const float ManualCollisionRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "AdjustAimLocationToGround");

	Params::HWTargeter_AdjustAimLocationToGround Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.ValidationBehavior = ValidationBehavior;
	Parms.InSourceActor = InSourceActor;
	Parms.ManualCollisionRadius = ManualCollisionRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAdjustedLocation != nullptr)
		*OutAdjustedLocation = std::move(Parms.OutAdjustedLocation);

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CalcBoxTargeting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoxTargetingData&               BoxTargetingData                                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)

void AHWTargeter::CalcBoxTargeting(const class UObject* WorldContext, struct FBoxTargetingData& BoxTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcBoxTargeting");

	Params::HWTargeter_CalcBoxTargeting Parms{};

	Parms.WorldContext = WorldContext;
	Parms.BoxTargetingData = std::move(BoxTargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	BoxTargetingData = std::move(Parms.BoxTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcBoxTargetingByObjectType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoxTargetingData&               BoxTargetingData                                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)
// const ECollisionChannel                 ObjectTypeChannel                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::CalcBoxTargetingByObjectType(const class UObject* WorldContext, struct FBoxTargetingData& BoxTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle, const ECollisionChannel ObjectTypeChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcBoxTargetingByObjectType");

	Params::HWTargeter_CalcBoxTargetingByObjectType Parms{};

	Parms.WorldContext = WorldContext;
	Parms.BoxTargetingData = std::move(BoxTargetingData);
	Parms.ObjectTypeChannel = ObjectTypeChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	BoxTargetingData = std::move(Parms.BoxTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcCircularWedgeTargeting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCircularWedgeTargetingData&     WedgeTargetingData                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)

void AHWTargeter::CalcCircularWedgeTargeting(const class UObject* WorldContext, struct FCircularWedgeTargetingData& WedgeTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcCircularWedgeTargeting");

	Params::HWTargeter_CalcCircularWedgeTargeting Parms{};

	Parms.WorldContext = WorldContext;
	Parms.WedgeTargetingData = std::move(WedgeTargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	WedgeTargetingData = std::move(Parms.WedgeTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcCircularWedgeTargetingByObjectType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCircularWedgeTargetingData&     WedgeTargetingData                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)
// const ECollisionChannel                 ObjectTypeChannel                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::CalcCircularWedgeTargetingByObjectType(const class UObject* WorldContext, struct FCircularWedgeTargetingData& WedgeTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle, const ECollisionChannel ObjectTypeChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcCircularWedgeTargetingByObjectType");

	Params::HWTargeter_CalcCircularWedgeTargetingByObjectType Parms{};

	Parms.WorldContext = WorldContext;
	Parms.WedgeTargetingData = std::move(WedgeTargetingData);
	Parms.ObjectTypeChannel = ObjectTypeChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	WedgeTargetingData = std::move(Parms.WedgeTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcLineAttackTargeting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLineAttackTargetingData&        LineAttackTargetingData                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)

void AHWTargeter::CalcLineAttackTargeting(const class UObject* WorldContext, struct FLineAttackTargetingData& LineAttackTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcLineAttackTargeting");

	Params::HWTargeter_CalcLineAttackTargeting Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LineAttackTargetingData = std::move(LineAttackTargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	LineAttackTargetingData = std::move(Parms.LineAttackTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcRadialHitLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   AimOrigin                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetExtent                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWTargeter::CalcRadialHitLocation(const struct FVector& AimOrigin, const struct FVector& TargetLocation, const struct FVector& TargetExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcRadialHitLocation");

	Params::HWTargeter_CalcRadialHitLocation Parms{};

	Parms.AimOrigin = std::move(AimOrigin);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.TargetExtent = std::move(TargetExtent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CalcSphereTargeting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSphereTargetingData&            SphereTargetingData                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)

void AHWTargeter::CalcSphereTargeting(const class UObject* WorldContextObject, struct FSphereTargetingData& SphereTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcSphereTargeting");

	Params::HWTargeter_CalcSphereTargeting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SphereTargetingData = std::move(SphereTargetingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SphereTargetingData = std::move(Parms.SphereTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.CalcSphereTargetingByObjectType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSphereTargetingData&            SphereTargetingData                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle*OutTargetListDataHandle                                (Parm, OutParm, NativeAccessSpecifierPublic)
// const ECollisionChannel                 ObjectTypeChannel                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::CalcSphereTargetingByObjectType(const class UObject* WorldContextObject, struct FSphereTargetingData& SphereTargetingData, struct FGameplayAbilityTargetDataHandle* OutTargetListDataHandle, const ECollisionChannel ObjectTypeChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "CalcSphereTargetingByObjectType");

	Params::HWTargeter_CalcSphereTargetingByObjectType Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SphereTargetingData = std::move(SphereTargetingData);
	Parms.ObjectTypeChannel = ObjectTypeChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SphereTargetingData = std::move(Parms.SphereTargetingData);

	if (OutTargetListDataHandle != nullptr)
		*OutTargetListDataHandle = std::move(Parms.OutTargetListDataHandle);
}


// Function Hemingway.HWTargeter.DrawDebugCircularWedge
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   vOrigin                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   vRotation                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             fRadius                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             fAngle                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             fHeight                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentLines                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lifetime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::DrawDebugCircularWedge(const class UObject* WorldContextObject, const struct FVector& vOrigin, const struct FVector& vRotation, const float fRadius, const float fAngle, const float fHeight, const struct FColor& Color, bool bPersistentLines, float Lifetime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "DrawDebugCircularWedge");

	Params::HWTargeter_DrawDebugCircularWedge Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.vOrigin = std::move(vOrigin);
	Parms.vRotation = std::move(vRotation);
	Parms.fRadius = fRadius;
	Parms.fAngle = fAngle;
	Parms.fHeight = fHeight;
	Parms.Color = std::move(Color);
	Parms.bPersistentLines = bPersistentLines;
	Parms.Lifetime = Lifetime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.GetTargetDataHandleForType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWGameplayAbility*         AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETargetDataTypeSlot               Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (Parm, NativeAccessSpecifierPublic)
// bool                                    bBreakTargetListIntoIndividualTargetDatas              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle AHWTargeter::GetTargetDataHandleForType(const class UHWGameplayAbility* AbilityInstance, const struct FGameplayTag& AttackID, const ETargetDataTypeSlot Type, const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, bool bBreakTargetListIntoIndividualTargetDatas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "GetTargetDataHandleForType");

	Params::HWTargeter_GetTargetDataHandleForType Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.AttackID = std::move(AttackID);
	Parms.Type = Type;
	Parms.TargetDataHandle = std::move(TargetDataHandle);
	Parms.bBreakTargetListIntoIndividualTargetDatas = bBreakTargetListIntoIndividualTargetDatas;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.GetTargetDataIndexForType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWGameplayAbility*         AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETargetDataTypeSlot               Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTargeter::GetTargetDataIndexForType(const class UHWGameplayAbility* AbilityInstance, const struct FGameplayTag& AttackID, const ETargetDataTypeSlot Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "GetTargetDataIndexForType");

	Params::HWTargeter_GetTargetDataIndexForType Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.AttackID = std::move(AttackID);
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.IsInWedge
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetPosition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             TargetCollisionRadius                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   WedgeOrigin                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   AimDirection                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Angle                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MinimumRadius                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWTargeter::IsInWedge(const struct FVector& TargetPosition, const float TargetCollisionRadius, const struct FVector& WedgeOrigin, const struct FVector& AimDirection, const float Angle, const float Radius, const float MinimumRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWTargeter", "IsInWedge");

	Params::HWTargeter_IsInWedge Parms{};

	Parms.TargetPosition = std::move(TargetPosition);
	Parms.TargetCollisionRadius = TargetCollisionRadius;
	Parms.WedgeOrigin = std::move(WedgeOrigin);
	Parms.AimDirection = std::move(AimDirection);
	Parms.Angle = Angle;
	Parms.Radius = Radius;
	Parms.MinimumRadius = MinimumRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CalcGroundTargetAim
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAbilityTargetDataHandle&TargetingAimHandle                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings_GroundTarget*AimSettings                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPredicting                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShowDebugAim                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle AHWTargeter::CalcGroundTargetAim(struct FGameplayAbilityTargetDataHandle& TargetingAimHandle, const class UHWAbilityAimSettings_GroundTarget* AimSettings, const bool bPredicting, const bool bShowDebugAim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "CalcGroundTargetAim");

	Params::HWTargeter_CalcGroundTargetAim Parms{};

	Parms.TargetingAimHandle = std::move(TargetingAimHandle);
	Parms.AimSettings = AimSettings;
	Parms.bPredicting = bPredicting;
	Parms.bShowDebugAim = bShowDebugAim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetingAimHandle = std::move(Parms.TargetingAimHandle);

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CalcLockOnAim
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWAimTargetingInfo&       AimTargetingInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetingAimHandle                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings_LockOn*AimSettings                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShowDebugAim                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle AHWTargeter::CalcLockOnAim(const struct FHWAimTargetingInfo& AimTargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetingAimHandle, const class UHWAbilityAimSettings_LockOn* AimSettings, const bool bShowDebugAim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "CalcLockOnAim");

	Params::HWTargeter_CalcLockOnAim Parms{};

	Parms.AimTargetingInfo = std::move(AimTargetingInfo);
	Parms.TargetingAimHandle = std::move(TargetingAimHandle);
	Parms.AimSettings = AimSettings;
	Parms.bShowDebugAim = bShowDebugAim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetingAimHandle = std::move(Parms.TargetingAimHandle);

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CalcSelfAim
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWAimTargetingInfo&       AimTargetingInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetingAimHandle                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings_Self* AimSettings                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle AHWTargeter::CalcSelfAim(const struct FHWAimTargetingInfo& AimTargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetingAimHandle, const class UHWAbilityAimSettings_Self* AimSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "CalcSelfAim");

	Params::HWTargeter_CalcSelfAim Parms{};

	Parms.AimTargetingInfo = std::move(AimTargetingInfo);
	Parms.TargetingAimHandle = std::move(TargetingAimHandle);
	Parms.AimSettings = AimSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TargetingAimHandle = std::move(Parms.TargetingAimHandle);

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CreateReticle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AHWReticle>           InReticleClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddToReticleList                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWReticle*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWReticle* AHWTargeter::CreateReticle(TSubclassOf<class AHWReticle> InReticleClass, bool bAddToReticleList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "CreateReticle");

	Params::HWTargeter_CreateReticle Parms{};

	Parms.InReticleClass = InReticleClass;
	Parms.bAddToReticleList = bAddToReticleList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.DisableTargetingForAttacks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Attacks                                                (ConstParm, Parm, NativeAccessSpecifierPublic)

void AHWTargeter::DisableTargetingForAttacks(const struct FGameplayTagContainer& Attacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "DisableTargetingForAttacks");

	Params::HWTargeter_DisableTargetingForAttacks Parms{};

	Parms.Attacks = std::move(Attacks);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.EnableTargetingForAttacks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Attacks                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    bResetCurrentTargetingAttacks                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableServerTargeting                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::EnableTargetingForAttacks(const struct FGameplayTagContainer& Attacks, bool bResetCurrentTargetingAttacks, bool bEnableServerTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "EnableTargetingForAttacks");

	Params::HWTargeter_EnableTargetingForAttacks Parms{};

	Parms.Attacks = std::move(Attacks);
	Parms.bResetCurrentTargetingAttacks = bResetCurrentTargetingAttacks;
	Parms.bEnableServerTargeting = bEnableServerTargeting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.SetActorTickEnabledOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::SetActorTickEnabledOnServer(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "SetActorTickEnabledOnServer");

	Params::HWTargeter_SetActorTickEnabledOnServer Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.SetTargetingExpiring
// (Final, Native, Public)
// Parameters:
// bool                                    bExpiring                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTargeter::SetTargetingExpiring(bool bExpiring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "SetTargetingExpiring");

	Params::HWTargeter_SetTargetingExpiring Parms{};

	Parms.bExpiring = bExpiring;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTargeter.WasLastAimTargetGood
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWTargeter::WasLastAimTargetGood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "WasLastAimTargetGood");

	Params::HWTargeter_WasLastAimTargetGood Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.CreateTargetingDataSnapshot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle AHWTargeter::CreateTargetingDataSnapshot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "CreateTargetingDataSnapshot");

	Params::HWTargeter_CreateTargetingDataSnapshot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.GetCurrentLevelConfig
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWAbilityLevelConfig*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityLevelConfig* AHWTargeter::GetCurrentLevelConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "GetCurrentLevelConfig");

	Params::HWTargeter_GetCurrentLevelConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.GetCurrentlyTargetingAttacks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWTargeter::GetCurrentlyTargetingAttacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "GetCurrentlyTargetingAttacks");

	Params::HWTargeter_GetCurrentlyTargetingAttacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.GetReticleByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AHWReticle>           InReticleClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWReticle*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWReticle* AHWTargeter::GetReticleByClass(TSubclassOf<class AHWReticle> InReticleClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "GetReticleByClass");

	Params::HWTargeter_GetReticleByClass Parms{};

	Parms.InReticleClass = InReticleClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.GetReticleById
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWReticle*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWReticle* AHWTargeter::GetReticleById(const struct FGameplayTag& AttackID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "GetReticleById");

	Params::HWTargeter_GetReticleById Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTargeter.IsAttackCurrrentlyTargeting
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWTargeter::IsAttackCurrrentlyTargeting(const struct FGameplayTag& AttackID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTargeter", "IsAttackCurrrentlyTargeting");

	Params::HWTargeter_IsAttackCurrrentlyTargeting Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.AttemptLoadCharacterItemLevel
// (Final, Native, Public)

void AHWCharacterAbilitySystemActor::AttemptLoadCharacterItemLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "AttemptLoadCharacterItemLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.HandleGetGodMasteryLevel
// (Final, Native, Protected)
// Parameters:
// const class UHWCharacterItem*           Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             InPlayerInfo                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LevelProgressPercent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::HandleGetGodMasteryLevel(const class UHWCharacterItem* Character, const class URH_PlayerInfo* InPlayerInfo, int32 Level, float LevelProgressPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "HandleGetGodMasteryLevel");

	Params::HWCharacterAbilitySystemActor_HandleGetGodMasteryLevel Parms{};

	Parms.Character = Character;
	Parms.InPlayerInfo = InPlayerInfo;
	Parms.Level = Level;
	Parms.LevelProgressPercent = LevelProgressPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IgnoresAbilityForTrackingFailedFire
// (Final, Native, Protected)
// Parameters:
// const class UGameplayAbility*           Ability                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IgnoresAbilityForTrackingFailedFire(const class UGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IgnoresAbilityForTrackingFailedFire");

	Params::HWCharacterAbilitySystemActor_IgnoresAbilityForTrackingFailedFire Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnAbilityActivated
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnAbilityActivated(class UGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnAbilityActivated");

	Params::HWCharacterAbilitySystemActor_OnAbilityActivated Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnAbilityFailedActivation
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class UGameplayAbility*           Ability                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FailedTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnAbilityFailedActivation(const class UGameplayAbility* Ability, const struct FGameplayTagContainer& FailedTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnAbilityFailedActivation");

	Params::HWCharacterAbilitySystemActor_OnAbilityFailedActivation Parms{};

	Parms.Ability = Ability;
	Parms.FailedTags = std::move(FailedTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnDeployableSpawned
// (Final, Native, Private)
// Parameters:
// class AHWDeployable*                    SpawnedDeployable                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnDeployableSpawned(class AHWDeployable* SpawnedDeployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnDeployableSpawned");

	Params::HWCharacterAbilitySystemActor_OnDeployableSpawned Parms{};

	Parms.SpawnedDeployable = SpawnedDeployable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnInventoryEquipmentPurchased
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnInventoryEquipmentPurchased(class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnInventoryEquipmentPurchased");

	Params::HWCharacterAbilitySystemActor_OnInventoryEquipmentPurchased Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnReceiveOwningPlayerGodLoadout
// (Final, Native, Protected)
// Parameters:
// const class UHWCharacterItem*           InCharacterItem                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWGodLoadout&             InGodLoadout                                           (ConstParm, Parm, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnReceiveOwningPlayerGodLoadout(const class UHWCharacterItem* InCharacterItem, const struct FHWGodLoadout& InGodLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnReceiveOwningPlayerGodLoadout");

	Params::HWCharacterAbilitySystemActor_OnReceiveOwningPlayerGodLoadout Parms{};

	Parms.InCharacterItem = InCharacterItem;
	Parms.InGodLoadout = std::move(InGodLoadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnReceiveOwningPlayerLoadout
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHWPlayerLoadout&          InPlayerLoadout                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnReceiveOwningPlayerLoadout(const struct FHWPlayerLoadout& InPlayerLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnReceiveOwningPlayerLoadout");

	Params::HWCharacterAbilitySystemActor_OnReceiveOwningPlayerLoadout Parms{};

	Parms.InPlayerLoadout = std::move(InPlayerLoadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_AutoBuyComponent
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_AutoBuyComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_AutoBuyComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_AutoSkillComponent
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_AutoSkillComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_AutoSkillComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_AwaitingRespawn
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_AwaitingRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_AwaitingRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_CharacterOwner
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_CharacterOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_CharacterOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_CurrentCharacterInfo
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_CurrentCharacterInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_CurrentCharacterInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_CurrentPlayerState
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_CurrentPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_CurrentPlayerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_ExpectedRespawnTimeStamp
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_ExpectedRespawnTimeStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_ExpectedRespawnTimeStamp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_FamiliarManagerComponent
// (Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_FamiliarManagerComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_FamiliarManagerComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_GrantedDynamicItems
// (Final, Native, Protected)
// Parameters:
// const TArray<struct FHWDynamicItemInfo>&OldGrantedDynamicItems                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnRep_GrantedDynamicItems(const TArray<struct FHWDynamicItemInfo>& OldGrantedDynamicItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_GrantedDynamicItems");

	Params::HWCharacterAbilitySystemActor_OnRep_GrantedDynamicItems Parms{};

	Parms.OldGrantedDynamicItems = std::move(OldGrantedDynamicItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_InventoryManager
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_InventoryManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_InventoryManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_RHPlayerUuid
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_RHPlayerUuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_RHPlayerUuid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_TeamState
// (Final, Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_TeamState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_TeamState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnRep_VisibilityComponent
// (Native, Protected)

void AHWCharacterAbilitySystemActor::OnRep_VisibilityComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnRep_VisibilityComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnTeamMemberAdded
// (Native, Public)
// Parameters:
// class AHWPlayerState*                   TeamMember                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnTeamMemberAdded(class AHWPlayerState* TeamMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnTeamMemberAdded");

	Params::HWCharacterAbilitySystemActor_OnTeamMemberAdded Parms{};

	Parms.TeamMember = TeamMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.OnTeamMemberRemoved
// (Native, Public)
// Parameters:
// class AHWPlayerState*                   TeamMember                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::OnTeamMemberRemoved(class AHWPlayerState* TeamMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "OnTeamMemberRemoved");

	Params::HWCharacterAbilitySystemActor_OnTeamMemberRemoved Parms{};

	Parms.TeamMember = TeamMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.SetLevel
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bForceSetXp                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::SetLevel(const int32 Level, const bool bForceSetXp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "SetLevel");

	Params::HWCharacterAbilitySystemActor_SetLevel Parms{};

	Parms.Level = Level;
	Parms.bForceSetXp = bForceSetXp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.TriggerPotentialFireBugReport
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class UGameplayAbility*           Ability                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FailedTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWCharacterAbilitySystemActor::TriggerPotentialFireBugReport(const class UGameplayAbility* Ability, const struct FGameplayTagContainer& FailedTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "TriggerPotentialFireBugReport");

	Params::HWCharacterAbilitySystemActor_TriggerPotentialFireBugReport Parms{};

	Parms.Ability = Ability;
	Parms.FailedTags = std::move(FailedTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* AHWCharacterAbilitySystemActor::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetAbilitySystemComponent");

	Params::HWCharacterAbilitySystemActor_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetAutoBuyComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAutoBuyComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAutoBuyComponent* AHWCharacterAbilitySystemActor::GetAutoBuyComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetAutoBuyComponent");

	Params::HWCharacterAbilitySystemActor_GetAutoBuyComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetAutoSkillComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAutoSkillComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAutoSkillComponent* AHWCharacterAbilitySystemActor::GetAutoSkillComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetAutoSkillComponent");

	Params::HWCharacterAbilitySystemActor_GetAutoSkillComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCharacterMasteryLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacterAbilitySystemActor::GetCharacterMasteryLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCharacterMasteryLevel");

	Params::HWCharacterAbilitySystemActor_GetCharacterMasteryLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWCharacterAbilitySystemActor::GetCharacterOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCharacterOwner");

	Params::HWCharacterAbilitySystemActor_GetCharacterOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCritProbability
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWCritProbability*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWCritProbability* AHWCharacterAbilitySystemActor::GetCritProbability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCritProbability");

	Params::HWCharacterAbilitySystemActor_GetCritProbability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCurrentCharacterInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCharacterInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterInfo* AHWCharacterAbilitySystemActor::GetCurrentCharacterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCurrentCharacterInfo");

	Params::HWCharacterAbilitySystemActor_GetCurrentCharacterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCurrentCharacterItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* AHWCharacterAbilitySystemActor::GetCurrentCharacterItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCurrentCharacterItem");

	Params::HWCharacterAbilitySystemActor_GetCurrentCharacterItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCurrentPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* AHWCharacterAbilitySystemActor::GetCurrentPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCurrentPlayerState");

	Params::HWCharacterAbilitySystemActor_GetCurrentPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetCurrentSkinItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWCharacterAbilitySystemActor::GetCurrentSkinItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetCurrentSkinItem");

	Params::HWCharacterAbilitySystemActor_GetCurrentSkinItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetExpectedRespawnTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacterAbilitySystemActor::GetExpectedRespawnTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetExpectedRespawnTimeRemaining");

	Params::HWCharacterAbilitySystemActor_GetExpectedRespawnTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetExpectedRespawnTimestamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWCharacterAbilitySystemActor::GetExpectedRespawnTimestamp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetExpectedRespawnTimestamp");

	Params::HWCharacterAbilitySystemActor_GetExpectedRespawnTimestamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetFamiliarComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWFamiliarComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWFamiliarComponent* AHWCharacterAbilitySystemActor::GetFamiliarComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetFamiliarComponent");

	Params::HWCharacterAbilitySystemActor_GetFamiliarComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetFamiliarManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWFamiliarManagerComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWFamiliarManagerComponent* AHWCharacterAbilitySystemActor::GetFamiliarManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetFamiliarManager");

	Params::HWCharacterAbilitySystemActor_GetFamiliarManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetHWAbilitySystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* AHWCharacterAbilitySystemActor::GetHWAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetHWAbilitySystemComponent");

	Params::HWCharacterAbilitySystemActor_GetHWAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetInventoryManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWInventoryManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInventoryManagerComponent* AHWCharacterAbilitySystemActor::GetInventoryManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetInventoryManager");

	Params::HWCharacterAbilitySystemActor_GetInventoryManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetLevelByXp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             XP                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacterAbilitySystemActor::GetLevelByXp(const int32 XP) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetLevelByXp");

	Params::HWCharacterAbilitySystemActor_GetLevelByXp Parms{};

	Parms.XP = XP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetLoadoutComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWLoadoutComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWLoadoutComponent* AHWCharacterAbilitySystemActor::GetLoadoutComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetLoadoutComponent");

	Params::HWCharacterAbilitySystemActor_GetLoadoutComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacterAbilitySystemActor::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetMaxLevel");

	Params::HWCharacterAbilitySystemActor_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetOwningController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* AHWCharacterAbilitySystemActor::GetOwningController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetOwningController");

	Params::HWCharacterAbilitySystemActor_GetOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetPassiveMeterComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWPassiveMeterComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWPassiveMeterComponent* AHWCharacterAbilitySystemActor::GetPassiveMeterComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetPassiveMeterComponent");

	Params::HWCharacterAbilitySystemActor_GetPassiveMeterComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetRespawnTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform AHWCharacterAbilitySystemActor::GetRespawnTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetRespawnTransform");

	Params::HWCharacterAbilitySystemActor_GetRespawnTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.GetXpRequirementByLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacterAbilitySystemActor::GetXpRequirementByLevel(const int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "GetXpRequirementByLevel");

	Params::HWCharacterAbilitySystemActor_GetXpRequirementByLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsAIControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsAIControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsAIControlled");

	Params::HWCharacterAbilitySystemActor_IsAIControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsAwaitingRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsAwaitingRespawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsAwaitingRespawn");

	Params::HWCharacterAbilitySystemActor_IsAwaitingRespawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsDebugIgnoreCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsDebugIgnoreCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsDebugIgnoreCooldown");

	Params::HWCharacterAbilitySystemActor_IsDebugIgnoreCooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsDebugIgnoreCosts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsDebugIgnoreCosts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsDebugIgnoreCosts");

	Params::HWCharacterAbilitySystemActor_IsDebugIgnoreCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsFamiliar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsFamiliar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsFamiliar");

	Params::HWCharacterAbilitySystemActor_IsFamiliar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsInputCategoryAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWAllowedInputCategory                 Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsInputCategoryAllowed(EHWAllowedInputCategory Category) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsInputCategoryAllowed");

	Params::HWCharacterAbilitySystemActor_IsInputCategoryAllowed Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsLocallyControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsLocallyControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsLocallyControlled");

	Params::HWCharacterAbilitySystemActor_IsLocallyControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsPlayableCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsPlayableCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsPlayableCharacter");

	Params::HWCharacterAbilitySystemActor_IsPlayableCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterAbilitySystemActor.IsPlayerControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacterAbilitySystemActor::IsPlayerControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterAbilitySystemActor", "IsPlayerControlled");

	Params::HWCharacterAbilitySystemActor_IsPlayerControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTimeSeriesDataSource.AddDataPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SeriesId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWTimeSeriesDataSource::AddDataPoint(class FName SeriesId, float Time, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTimeSeriesDataSource", "AddDataPoint");

	Params::HWTimeSeriesDataSource_AddDataPoint Parms{};

	Parms.SeriesId = SeriesId;
	Parms.Time = Time;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTimeSeriesDataSource.AddTimeSeries
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SeriesId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      SeriesName                                             (Parm, NativeAccessSpecifierPublic)

void UHWTimeSeriesDataSource::AddTimeSeries(class FName SeriesId, const class FText& SeriesName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTimeSeriesDataSource", "AddTimeSeries");

	Params::HWTimeSeriesDataSource_AddTimeSeries Parms{};

	Parms.SeriesId = SeriesId;
	Parms.SeriesName = std::move(SeriesName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTimeSeriesDataSource.ClearData
// (Final, Native, Public, BlueprintCallable)

void UHWTimeSeriesDataSource::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTimeSeriesDataSource", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldWaypointComponent.DebugDrawField
// (Final, Native, Public, BlueprintCallable)

void UHWVectorFieldWaypointComponent::DebugDrawField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldWaypointComponent", "DebugDrawField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldWaypointComponent.Generate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   tileCountX                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   tileCountY                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   endPointDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVectorFieldWaypointComponent::Generate(int32 tileCountX, int32 tileCountY, float endPointDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldWaypointComponent", "Generate");

	Params::HWVectorFieldWaypointComponent_Generate Parms{};

	Parms.tileCountX = tileCountX;
	Parms.tileCountY = tileCountY;
	Parms.endPointDistance = endPointDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldWaypointComponent.GetAvgVectorValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWVectorFieldWaypointComponent::GetAvgVectorValue(const struct FVector& Location, float Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldWaypointComponent", "GetAvgVectorValue");

	Params::HWVectorFieldWaypointComponent_GetAvgVectorValue Parms{};

	Parms.Location = std::move(Location);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVectorFieldWaypointComponent.GetVectorValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWVectorFieldWaypointComponent::GetVectorValue(const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldWaypointComponent", "GetVectorValue");

	Params::HWVectorFieldWaypointComponent_GetVectorValue Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitForAtributeChanged_Enhanced.WaitForAttributeChange_Enhanced
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWWaitForAttributeChangedConfig&Config                                                 (Parm, NativeAccessSpecifierPublic)
// class AActor*                           OptionalExternalOwner                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitForAtributeChanged_Enhanced*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitForAtributeChanged_Enhanced* UHWAbilityTask_WaitForAtributeChanged_Enhanced::WaitForAttributeChange_Enhanced(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FHWWaitForAttributeChangedConfig& Config, class AActor* OptionalExternalOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitForAtributeChanged_Enhanced", "WaitForAttributeChange_Enhanced");

	Params::HWAbilityTask_WaitForAtributeChanged_Enhanced_WaitForAttributeChange_Enhanced Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Config = std::move(Config);
	Parms.OptionalExternalOwner = OptionalExternalOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_ListenForContinousFireState.OnAbilityInputPressed
// (Final, Native, Protected)
// Parameters:
// const float                             TimeWaited                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_ListenForContinousFireState::OnAbilityInputPressed(const float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_ListenForContinousFireState", "OnAbilityInputPressed");

	Params::HWAbilityTask_ListenForContinousFireState_OnAbilityInputPressed Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_ListenForContinousFireState.OnAbilityInputReleased
// (Final, Native, Protected)
// Parameters:
// const float                             TimeHeld                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_ListenForContinousFireState::OnAbilityInputReleased(const float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_ListenForContinousFireState", "OnAbilityInputReleased");

	Params::HWAbilityTask_ListenForContinousFireState_OnAbilityInputReleased Parms{};

	Parms.TimeHeld = TimeHeld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_ListenForContinousFireState.OnLockoutStarted
// (Final, Native, Protected)

void UHWAbilityTask_ListenForContinousFireState::OnLockoutStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_ListenForContinousFireState", "OnLockoutStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_ListenForContinousFireState.OnReceivedClientInput
// (Final, Native, Protected)

void UHWAbilityTask_ListenForContinousFireState::OnReceivedClientInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_ListenForContinousFireState", "OnReceivedClientInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitQuickCastInput.WaitForQuickCastInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitQuickCastInput*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitQuickCastInput* UHWAbilityTask_WaitQuickCastInput::WaitForQuickCastInput(class UGameplayAbility* OwningAbility, class FName TaskInstanceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitQuickCastInput", "WaitForQuickCastInput");

	Params::HWAbilityTask_WaitQuickCastInput_WaitForQuickCastInput Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitQuickCastInput.OnAbilityCancelledPressed
// (Final, Native, Protected)

void UHWAbilityTask_WaitQuickCastInput::OnAbilityCancelledPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitQuickCastInput", "OnAbilityCancelledPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitQuickCastInput.OnAbilityConfirmedPressed
// (Final, Native, Protected)

void UHWAbilityTask_WaitQuickCastInput::OnAbilityConfirmedPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitQuickCastInput", "OnAbilityConfirmedPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitQuickCastInput.OnAbilityInputReleased
// (Final, Native, Protected)
// Parameters:
// const float                             TimeHeld                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitQuickCastInput::OnAbilityInputReleased(const float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitQuickCastInput", "OnAbilityInputReleased");

	Params::HWAbilityTask_WaitQuickCastInput_OnAbilityInputReleased Parms{};

	Parms.TimeHeld = TimeHeld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLobby_AnimInstBase.ABPSkinningFinished
// (Event, Public, BlueprintEvent)

void UHWLobby_AnimInstBase::ABPSkinningFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLobby_AnimInstBase", "ABPSkinningFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWVectorFieldFollowerComponent.ActivateFollowing
// (Final, Native, Public, BlueprintCallable)

void UHWVectorFieldFollowerComponent::ActivateFollowing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "ActivateFollowing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.AddEffectorActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWVectorFieldFollowCalc*         inCalculation                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVectorFieldFollowerComponent::AddEffectorActor(class AActor* InActor, class UHWVectorFieldFollowCalc* inCalculation, float InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "AddEffectorActor");

	Params::HWVectorFieldFollowerComponent_AddEffectorActor Parms{};

	Parms.InActor = InActor;
	Parms.inCalculation = inCalculation;
	Parms.InWeight = InWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.AddEffectorActorAsObstacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVectorFieldFollowerComponent::AddEffectorActorAsObstacle(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "AddEffectorActorAsObstacle");

	Params::HWVectorFieldFollowerComponent_AddEffectorActorAsObstacle Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.AddEffectorLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWVectorFieldFollowCalc*         inCalculation                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVectorFieldFollowerComponent::AddEffectorLocation(const struct FVector& InLocation, class UHWVectorFieldFollowCalc* inCalculation, float InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "AddEffectorLocation");

	Params::HWVectorFieldFollowerComponent_AddEffectorLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.inCalculation = inCalculation;
	Parms.InWeight = InWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.ClearEffectors
// (Final, Native, Public, BlueprintCallable)

void UHWVectorFieldFollowerComponent::ClearEffectors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "ClearEffectors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.ClearWaypoint
// (Final, Native, Public, BlueprintCallable)

void UHWVectorFieldFollowerComponent::ClearWaypoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "ClearWaypoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.DeactivateFollowing
// (Final, Native, Public, BlueprintCallable)

void UHWVectorFieldFollowerComponent::DeactivateFollowing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "DeactivateFollowing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.GenerateDebugSnapShot
// (Final, Native, Protected, BlueprintCallable)

void UHWVectorFieldFollowerComponent::GenerateDebugSnapShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "GenerateDebugSnapShot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVectorFieldFollowerComponent.SetWaypoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           inWaypointActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVectorFieldFollowerComponent::SetWaypoint(class AActor* inWaypointActor, float InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVectorFieldFollowerComponent", "SetWaypoint");

	Params::HWVectorFieldFollowerComponent_SetWaypoint Parms{};

	Parms.inWaypointActor = inWaypointActor;
	Parms.InWeight = InWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitAbilityFire.WaitForAbilityFire
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              WithTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              WithoutTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitAbilityFire*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitAbilityFire* UHWAbilityTask_WaitAbilityFire::WaitForAbilityFire(class UGameplayAbility* OwningAbility, const struct FGameplayTag& WithTag, const struct FGameplayTag& WithoutTag, bool TriggerOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitAbilityFire", "WaitForAbilityFire");

	Params::HWAbilityTask_WaitAbilityFire_WaitForAbilityFire Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WithTag = std::move(WithTag);
	Parms.WithoutTag = std::move(WithoutTag);
	Parms.TriggerOnce = TriggerOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAbilityFire.WaitForAbilityFire_Query
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         Query                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitAbilityFire*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitAbilityFire* UHWAbilityTask_WaitAbilityFire::WaitForAbilityFire_Query(class UGameplayAbility* OwningAbility, const struct FGameplayTagQuery& Query, bool TriggerOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitAbilityFire", "WaitForAbilityFire_Query");

	Params::HWAbilityTask_WaitAbilityFire_WaitForAbilityFire_Query Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Query = std::move(Query);
	Parms.TriggerOnce = TriggerOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAbilityFire.OnAbilityFire
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AbilityTags                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitAbilityFire::OnAbilityFire(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& AbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitAbilityFire", "OnAbilityFire");

	Params::HWAbilityTask_WaitAbilityFire_OnAbilityFire Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityTags = std::move(AbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVoiceComponent.AttemptPlayVoiceEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWVoiceOverQueue&         Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWVoiceComponent::AttemptPlayVoiceEvent(const struct FHWVoiceOverQueue& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "AttemptPlayVoiceEvent");

	Params::HWVoiceComponent_AttemptPlayVoiceEvent Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVoiceComponent.OnQueuedEventAudioFinished
// (Final, Native, Public)
// Parameters:
// class UAudioComponent*                  FinishedComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVoiceComponent::OnQueuedEventAudioFinished(class UAudioComponent* FinishedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "OnQueuedEventAudioFinished");

	Params::HWVoiceComponent_OnQueuedEventAudioFinished Parms{};

	Parms.FinishedComponent = FinishedComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVoiceComponent.SetActiveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWVoiceOverQueue&         NewActiveEvent                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWVoiceComponent::SetActiveEvent(const struct FHWVoiceOverQueue& NewActiveEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "SetActiveEvent");

	Params::HWVoiceComponent_SetActiveEvent Parms{};

	Parms.NewActiveEvent = std::move(NewActiveEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVoiceComponent.TriggerLocalEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventType                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     SkinnableActorOverride                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVoiceComponent::TriggerLocalEvent(const struct FGameplayTag& EventType, const class AActor* SkinnableActorOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "TriggerLocalEvent");

	Params::HWVoiceComponent_TriggerLocalEvent Parms{};

	Parms.EventType = std::move(EventType);
	Parms.SkinnableActorOverride = SkinnableActorOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVoiceComponent.CanPlayVoice
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            ChanceToPlay                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWVoiceComponent::CanPlayVoice(const struct FGameplayTag& EventTag, const float& ChanceToPlay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "CanPlayVoice");

	Params::HWVoiceComponent_CanPlayVoice Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.ChanceToPlay = ChanceToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVoiceComponent.GetActiveEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWVoiceOverQueue                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWVoiceOverQueue UHWVoiceComponent::GetActiveEvent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVoiceComponent", "GetActiveEvent");

	Params::HWVoiceComponent_GetActiveEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetDistanceAlongRoute
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      TargetPathWaypoint                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   QueryLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWWaypoint::GetDistanceAlongRoute(class AHWWaypoint* TargetPathWaypoint, const struct FVector& QueryLocation, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetDistanceAlongRoute");

	Params::HWWaypoint_GetDistanceAlongRoute Parms{};

	Parms.TargetPathWaypoint = TargetPathWaypoint;
	Parms.QueryLocation = std::move(QueryLocation);
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetLocationAlongRoute
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      SamplePathWaypoint                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWWaypoint::GetLocationAlongRoute(class AHWWaypoint* SamplePathWaypoint, float Distance, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetLocationAlongRoute");

	Params::HWWaypoint_GetLocationAlongRoute Parms{};

	Parms.SamplePathWaypoint = SamplePathWaypoint;
	Parms.Distance = Distance;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetTotalRouteDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      TargetPathWaypoint                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWWaypoint::GetTotalRouteDistance(class AHWWaypoint* TargetPathWaypoint, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetTotalRouteDistance");

	Params::HWWaypoint_GetTotalRouteDistance Parms{};

	Parms.TargetPathWaypoint = TargetPathWaypoint;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetWaypointPathArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AHWWaypoint*>*             OutResult                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      PathWaypoint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReversed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypoint::GetWaypointPathArray(TArray<class AHWWaypoint*>* OutResult, class AHWWaypoint* PathWaypoint, bool bReversed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetWaypointPathArray");

	Params::HWWaypoint_GetWaypointPathArray Parms{};

	Parms.PathWaypoint = PathWaypoint;
	Parms.bReversed = bReversed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetWaypointPathDirectionEndpoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      PathWaypoint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypoint::GetWaypointPathDirectionEndpoint(class AHWWaypoint* PathWaypoint, EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetWaypointPathDirectionEndpoint");

	Params::HWWaypoint_GetWaypointPathDirectionEndpoint Parms{};

	Parms.PathWaypoint = PathWaypoint;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetWaypointPathEndpoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      PathWaypoint                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReversed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypoint::GetWaypointPathEndpoint(class AHWWaypoint* PathWaypoint, bool bReversed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "GetWaypointPathEndpoint");

	Params::HWWaypoint_GetWaypointPathEndpoint Parms{};

	Parms.PathWaypoint = PathWaypoint;
	Parms.bReversed = bReversed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.IsPathWaypoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHWWaypoint*                      Waypoint                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypoint::IsPathWaypoint(class AHWWaypoint* Waypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "IsPathWaypoint");

	Params::HWWaypoint_IsPathWaypoint Parms{};

	Parms.Waypoint = Waypoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.ReversePathDirection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWaypointPathDirectionType AHWWaypoint::ReversePathDirection(EWaypointPathDirectionType Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWWaypoint", "ReversePathDirection");

	Params::HWWaypoint_ReversePathDirection Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypoint.GetAllLinkedWaypoints
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWWaypoint*>*             Waypoints                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWWaypoint::GetAllLinkedWaypoints(TArray<class AHWWaypoint*>* Waypoints) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypoint", "GetAllLinkedWaypoints");

	Params::HWWaypoint_GetAllLinkedWaypoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Waypoints != nullptr)
		*Waypoints = std::move(Parms.Waypoints);
}


// Function Hemingway.HWWaypointSet.CollectWaypoints
// (Final, Native, Protected)

void AHWWaypointSet::CollectWaypoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "CollectWaypoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWWaypointSet.GetClosestWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             WayPointsToAvoid                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypointSet::GetClosestWaypoint(const struct FVector& Location, TArray<class AHWWaypoint*>& WayPointsToAvoid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetClosestWaypoint");

	Params::HWWaypointSet_GetClosestWaypoint Parms{};

	Parms.Location = std::move(Location);
	Parms.WayPointsToAvoid = std::move(WayPointsToAvoid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	WayPointsToAvoid = std::move(Parms.WayPointsToAvoid);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetClosestWaypointInLane
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             WayPointsToAvoid                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypointSet::GetClosestWaypointInLane(class FName LaneId, const struct FVector& Location, TArray<class AHWWaypoint*>& WayPointsToAvoid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetClosestWaypointInLane");

	Params::HWWaypointSet_GetClosestWaypointInLane Parms{};

	Parms.LaneId = LaneId;
	Parms.Location = std::move(Location);
	Parms.WayPointsToAvoid = std::move(WayPointsToAvoid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	WayPointsToAvoid = std::move(Parms.WayPointsToAvoid);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetEndpointLanePathFromClosestPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PathId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             OutResults                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypointSet::GetEndpointLanePathFromClosestPoint(class FName PathId, const struct FVector& Location, EWaypointPathDirectionType Direction, TArray<class AHWWaypoint*>& OutResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetEndpointLanePathFromClosestPoint");

	Params::HWWaypointSet_GetEndpointLanePathFromClosestPoint Parms{};

	Parms.PathId = PathId;
	Parms.Location = std::move(Location);
	Parms.Direction = Direction;
	Parms.OutResults = std::move(OutResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutResults = std::move(Parms.OutResults);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetNearGoalWaypointInLane
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWaypointPathDirectionType              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             WayPointsToAvoid                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypointSet::GetNearGoalWaypointInLane(class FName LaneId, const struct FVector& Location, EWaypointPathDirectionType Direction, TArray<class AHWWaypoint*>& WayPointsToAvoid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetNearGoalWaypointInLane");

	Params::HWWaypointSet_GetNearGoalWaypointInLane Parms{};

	Parms.LaneId = LaneId;
	Parms.Location = std::move(Location);
	Parms.Direction = Direction;
	Parms.WayPointsToAvoid = std::move(WayPointsToAvoid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	WayPointsToAvoid = std::move(Parms.WayPointsToAvoid);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetPresetWaypointPath
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PathId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             OutResults                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypointSet::GetPresetWaypointPath(class FName PathId, TArray<class AHWWaypoint*>& OutResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetPresetWaypointPath");

	Params::HWWaypointSet_GetPresetWaypointPath Parms{};

	Parms.PathId = PathId;
	Parms.OutResults = std::move(OutResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutResults = std::move(Parms.OutResults);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetTeamTargetPathInLane
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PathId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             OutResults                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypointSet::GetTeamTargetPathInLane(const struct FGenericTeamId& TeamId, const struct FVector& Location, class FName PathId, TArray<class AHWWaypoint*>& OutResults) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetTeamTargetPathInLane");

	Params::HWWaypointSet_GetTeamTargetPathInLane Parms{};

	Parms.TeamId = std::move(TeamId);
	Parms.Location = std::move(Location);
	Parms.PathId = PathId;
	Parms.OutResults = std::move(OutResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutResults = std::move(Parms.OutResults);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.GetTeamTargetWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClosest                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWWaypointSet::GetTeamTargetWaypoint(const struct FGenericTeamId& TeamId, const struct FVector& Location, bool bClosest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "GetTeamTargetWaypoint");

	Params::HWWaypointSet_GetTeamTargetWaypoint Parms{};

	Parms.TeamId = std::move(TeamId);
	Parms.Location = std::move(Location);
	Parms.bClosest = bClosest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.PickPathFromPresets
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWWaypoint*>&             OutResults                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             WayPointsToAvoid                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypointSet::PickPathFromPresets(TArray<class AHWWaypoint*>& OutResults, const struct FVector& StartLocation, const struct FVector& EndLocation, TArray<class AHWWaypoint*>& WayPointsToAvoid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "PickPathFromPresets");

	Params::HWWaypointSet_PickPathFromPresets Parms{};

	Parms.OutResults = std::move(OutResults);
	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.WayPointsToAvoid = std::move(WayPointsToAvoid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutResults = std::move(Parms.OutResults);
	WayPointsToAvoid = std::move(Parms.WayPointsToAvoid);

	return Parms.ReturnValue;
}


// Function Hemingway.HWWaypointSet.PickPathFromWaypoints
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWWaypoint*>&             OutResults                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AHWWaypoint*>&             WayPointsToAvoid                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWWaypointSet::PickPathFromWaypoints(TArray<class AHWWaypoint*>& OutResults, const struct FVector& StartLocation, const struct FVector& EndLocation, TArray<class AHWWaypoint*>& WayPointsToAvoid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWWaypointSet", "PickPathFromWaypoints");

	Params::HWWaypointSet_PickPathFromWaypoints Parms{};

	Parms.OutResults = std::move(OutResults);
	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.WayPointsToAvoid = std::move(WayPointsToAvoid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutResults = std::move(Parms.OutResults);
	WayPointsToAvoid = std::move(Parms.WayPointsToAvoid);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Attack_Dash.OnDashEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayDash*                  Dash                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bWasInterrupted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_Dash::OnDashEnded(class UHWGameplayDash* Dash, const bool bWasInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_Dash", "OnDashEnded");

	Params::HWAbilityTask_Attack_Dash_OnDashEnded Parms{};

	Parms.Dash = Dash;
	Parms.bWasInterrupted = bWasInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_Dash.OnDashStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayDash*                  Dash                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_Dash::OnDashStarted(class UHWGameplayDash* Dash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_Dash", "OnDashStarted");

	Params::HWAbilityTask_Attack_Dash_OnDashStarted Parms{};

	Parms.Dash = Dash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Refireable.EndRefireWindow
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Refireable::EndRefireWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "EndRefireWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Refireable.OnRep_RefireWindowInfo
// (Final, Native, Protected)
// Parameters:
// const struct FHWRefireWindowInfo&       OldRefireWindowInfo                                    (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Refireable::OnRep_RefireWindowInfo(const struct FHWRefireWindowInfo& OldRefireWindowInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "OnRep_RefireWindowInfo");

	Params::HWEquipmentComponent_Refireable_OnRep_RefireWindowInfo Parms{};

	Parms.OldRefireWindowInfo = std::move(OldRefireWindowInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Refireable.RenewRefireWindow
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Refireable::RenewRefireWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "RenewRefireWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Refireable.StartRefireWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             RefireWindowTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityRefireInfo&      RefireInfo                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bIsRestartingWindow                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Refireable::StartRefireWindow(const float RefireWindowTime, const struct FHWAbilityRefireInfo& RefireInfo, const bool bIsRestartingWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "StartRefireWindow");

	Params::HWEquipmentComponent_Refireable_StartRefireWindow Parms{};

	Parms.RefireWindowTime = RefireWindowTime;
	Parms.RefireInfo = std::move(RefireInfo);
	Parms.bIsRestartingWindow = bIsRestartingWindow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Refireable.TriggerRefire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHWGameplayAbility*               AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Refireable::TriggerRefire(class UHWGameplayAbility* AbilityInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "TriggerRefire");

	Params::HWEquipmentComponent_Refireable_TriggerRefire Parms{};

	Parms.AbilityInstance = AbilityInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.GetElapsedRefireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Refireable::GetElapsedRefireTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "GetElapsedRefireTime");

	Params::HWEquipmentComponent_Refireable_GetElapsedRefireTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.GetLastRefireTimeStamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Refireable::GetLastRefireTimeStamp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "GetLastRefireTimeStamp");

	Params::HWEquipmentComponent_Refireable_GetLastRefireTimeStamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.GetRefireAbilityHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayAbilitySpecHandle UHWEquipmentComponent_Refireable::GetRefireAbilityHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "GetRefireAbilityHandle");

	Params::HWEquipmentComponent_Refireable_GetRefireAbilityHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.GetRefireBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERefireAbilityBehavior                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERefireAbilityBehavior UHWEquipmentComponent_Refireable::GetRefireBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "GetRefireBehavior");

	Params::HWEquipmentComponent_Refireable_GetRefireBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.GetRefireDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Refireable::GetRefireDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "GetRefireDuration");

	Params::HWEquipmentComponent_Refireable_GetRefireDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.IsRefireWindowActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Refireable::IsRefireWindowActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "IsRefireWindowActive");

	Params::HWEquipmentComponent_Refireable_IsRefireWindowActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Refireable.ShouldRefireOnTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWRefireTrigger                        RefireTrigger                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Refireable::ShouldRefireOnTrigger(EHWRefireTrigger RefireTrigger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Refireable", "ShouldRefireOnTrigger");

	Params::HWEquipmentComponent_Refireable_ShouldRefireOnTrigger Parms{};

	Parms.RefireTrigger = RefireTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_GroundTarget.GetManualCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_GroundTarget::GetManualCollisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_GroundTarget", "GetManualCollisionRadius");

	Params::HWAbilityAimSettings_GroundTarget_GetManualCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_GroundTarget.GetMaxRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_GroundTarget::GetMaxRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_GroundTarget", "GetMaxRange");

	Params::HWAbilityAimSettings_GroundTarget_GetMaxRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSettings_GroundTarget.GetMinRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAimSettings_GroundTarget::GetMinRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSettings_GroundTarget", "GetMinRange");

	Params::HWAbilityAimSettings_GroundTarget_GetMinRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.ActivateSpawning
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const bool                              bKillExistingBots                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideTimer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetLevelingActive                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::ActivateSpawning(const bool bKillExistingBots, bool bOverrideTimer, bool bSetLevelingActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "ActivateSpawning");

	Params::HWBotFactory_ActivateSpawning Parms{};

	Parms.bKillExistingBots = bKillExistingBots;
	Parms.bOverrideTimer = bOverrideTimer;
	Parms.bSetLevelingActive = bSetLevelingActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.AdvanceSpawnWaveNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Increment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::AdvanceSpawnWaveNumber(int32 Increment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "AdvanceSpawnWaveNumber");

	Params::HWBotFactory_AdvanceSpawnWaveNumber Parms{};

	Parms.Increment = Increment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.DeactivateSpawning
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const bool                              bKillExistingBots                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::DeactivateSpawning(const bool bKillExistingBots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "DeactivateSpawning");

	Params::HWBotFactory_DeactivateSpawning Parms{};

	Parms.bKillExistingBots = bKillExistingBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.DespawnGodBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowRespawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::DespawnGodBot(bool bAllowRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "DespawnGodBot");

	Params::HWBotFactory_DespawnGodBot Parms{};

	Parms.bAllowRespawn = bAllowRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.DetermineNextSpawnPoint
// (Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class AActor> AHWBotFactory::DetermineNextSpawnPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "DetermineNextSpawnPoint");

	Params::HWBotFactory_DetermineNextSpawnPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.DynamicallySelectGodBotCharacter
// (Final, Native, Public, BlueprintCallable)

void AHWBotFactory::DynamicallySelectGodBotCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "DynamicallySelectGodBotCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.GetLocalTeamMinimapState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFactoryMinimapState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFactoryMinimapState AHWBotFactory::GetLocalTeamMinimapState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetLocalTeamMinimapState");

	Params::HWBotFactory_GetLocalTeamMinimapState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.InitializeSpawnedBotAI
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                characterSpawned                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAIBotConfig&            botConfig                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWBotFactory::InitializeSpawnedBotAI(class AHWCharacter_Base* characterSpawned, const struct FHWAIBotConfig& botConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "InitializeSpawnedBotAI");

	Params::HWBotFactory_InitializeSpawnedBotAI Parms{};

	Parms.characterSpawned = characterSpawned;
	Parms.botConfig = std::move(botConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.KillAllBots
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AHWBotFactory::KillAllBots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "KillAllBots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.LevelUpBotFactory
// (Final, Native, Protected)

void AHWBotFactory::LevelUpBotFactory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "LevelUpBotFactory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnBotFinishedDestroy
// (Final, Native, Public)
// Parameters:
// class AHWCharacter_Base*                DestroyedBot                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnBotFinishedDestroy(class AHWCharacter_Base* DestroyedBot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnBotFinishedDestroy");

	Params::HWBotFactory_OnBotFinishedDestroy Parms{};

	Parms.DestroyedBot = DestroyedBot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnFactoryEmptied
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Causer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnFactoryEmptied(class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnFactoryEmptied");

	Params::HWBotFactory_OnFactoryEmptied Parms{};

	Parms.Causer = Causer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnGamePhaseStarted
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnGamePhaseStarted(const struct FGameplayTag& PhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnGamePhaseStarted");

	Params::HWBotFactory_OnGamePhaseStarted Parms{};

	Parms.PhaseTag = std::move(PhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnRep_BotsSpawned
// (Final, Native, Protected)

void AHWBotFactory::OnRep_BotsSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnRep_BotsSpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnRep_ChosenGodBotItem
// (Final, Native, Protected)

void AHWBotFactory::OnRep_ChosenGodBotItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnRep_ChosenGodBotItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnRep_CurrentWaveSpawnTimeInfo
// (Final, Native, Protected)

void AHWBotFactory::OnRep_CurrentWaveSpawnTimeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnRep_CurrentWaveSpawnTimeInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnRep_NumBotsActive
// (Final, Native, Protected)

void AHWBotFactory::OnRep_NumBotsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnRep_NumBotsActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnSpawnBotDied
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                characterKilled                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnSpawnBotDied(class AHWCharacter_Base* characterKilled, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnSpawnBotDied");

	Params::HWBotFactory_OnSpawnBotDied Parms{};

	Parms.characterKilled = characterKilled;
	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnSpawnedBot
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                characterSpawned                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnSpawnedBot(class AHWCharacter_Base* characterSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnSpawnedBot");

	Params::HWBotFactory_OnSpawnedBot Parms{};

	Parms.characterSpawned = characterSpawned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.OnVisibilityCompMinimapStateChanged
// (Final, Native, Private)
// Parameters:
// class UHWBotFactory_VisibilityComponent*Comp                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::OnVisibilityCompMinimapStateChanged(class UHWBotFactory_VisibilityComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "OnVisibilityCompMinimapStateChanged");

	Params::HWBotFactory_OnVisibilityCompMinimapStateChanged Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.ResolveBotOutOfCombatLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                Bot                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::ResolveBotOutOfCombatLogic(class AHWCharacter_Base* Bot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "ResolveBotOutOfCombatLogic");

	Params::HWBotFactory_ResolveBotOutOfCombatLogic Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.RespawnGodBot
// (Final, Native, Public, BlueprintCallable)

void AHWBotFactory::RespawnGodBot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "RespawnGodBot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SetAllowGodBotRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SetAllowGodBotRespawn(bool bAllow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SetAllowGodBotRespawn");

	Params::HWBotFactory_SetAllowGodBotRespawn Parms{};

	Parms.bAllow = bAllow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SetCurrentSpawnTable
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              SpawnTableTag                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSwapAfterCurrentWaveEnds                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SetCurrentSpawnTable(const struct FGameplayTag& SpawnTableTag, const bool bSwapAfterCurrentWaveEnds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SetCurrentSpawnTable");

	Params::HWBotFactory_SetCurrentSpawnTable Parms{};

	Parms.SpawnTableTag = std::move(SpawnTableTag);
	Parms.bSwapAfterCurrentWaveEnds = bSwapAfterCurrentWaveEnds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SetGodBotStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           BotStart                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SetGodBotStart(class AActor* BotStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SetGodBotStart");

	Params::HWBotFactory_SetGodBotStart Parms{};

	Parms.BotStart = BotStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SetLevelingActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SetLevelingActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SetLevelingActive");

	Params::HWBotFactory_SetLevelingActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SetSpawnWaveindex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   newWaveIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SetSpawnWaveindex(int32 newWaveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SetSpawnWaveindex");

	Params::HWBotFactory_SetSpawnWaveindex Parms{};

	Parms.newWaveIndex = newWaveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SpawnBot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFactoryBotEntry&          BotEntryToSpawn                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FFactorySpawnEntry&        BotSpawnEntry                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsRespawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWBotFactory::SpawnBot(const struct FFactoryBotEntry& BotEntryToSpawn, const struct FFactorySpawnEntry& BotSpawnEntry, bool bIsRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SpawnBot");

	Params::HWBotFactory_SpawnBot Parms{};

	Parms.BotEntryToSpawn = std::move(BotEntryToSpawn);
	Parms.BotSpawnEntry = std::move(BotSpawnEntry);
	Parms.bIsRespawn = bIsRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.SpawnGodBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsRespawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SpawnGodBot(bool bIsRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SpawnGodBot");

	Params::HWBotFactory_SpawnGodBot Parms{};

	Parms.bIsRespawn = bIsRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.SpawnGodBotSpecific
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWCharacterItem*           Item                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::SpawnGodBotSpecific(const class UHWCharacterItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "SpawnGodBotSpecific");

	Params::HWBotFactory_SpawnGodBotSpecific Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.ToggleOneWaveMode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::ToggleOneWaveMode(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "ToggleOneWaveMode");

	Params::HWBotFactory_ToggleOneWaveMode Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.TriggerFactoryRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EFactoryRewardTrigger             ETriggerType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWBotFactory::TriggerFactoryRewards(const EFactoryRewardTrigger ETriggerType, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "TriggerFactoryRewards");

	Params::HWBotFactory_TriggerFactoryRewards Parms{};

	Parms.ETriggerType = ETriggerType;
	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.UpdateDynamicDifficulty
// (Final, Native, Public, BlueprintCallable)

void AHWBotFactory::UpdateDynamicDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "UpdateDynamicDifficulty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWBotFactory.AreAnyBotsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWBotFactory::AreAnyBotsAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "AreAnyBotsAlive");

	Params::HWBotFactory_AreAnyBotsAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetAssetTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWBotFactory::GetAssetTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetAssetTags");

	Params::HWBotFactory_GetAssetTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetCurrentSpawnPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class AActor>            ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class AActor> AHWBotFactory::GetCurrentSpawnPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetCurrentSpawnPoint");

	Params::HWBotFactory_GetCurrentSpawnPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetCurrentSpawnWaveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWBotFactory::GetCurrentSpawnWaveIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetCurrentSpawnWaveIndex");

	Params::HWBotFactory_GetCurrentSpawnWaveIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetIdentifyingWaypoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWWaypoint*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWWaypoint* AHWBotFactory::GetIdentifyingWaypoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetIdentifyingWaypoint");

	Params::HWBotFactory_GetIdentifyingWaypoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetLeashOrDetectionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWBotFactory::GetLeashOrDetectionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetLeashOrDetectionRadius");

	Params::HWBotFactory_GetLeashOrDetectionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetLocalTeamCanSeeRespawnTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWBotFactory::GetLocalTeamCanSeeRespawnTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetLocalTeamCanSeeRespawnTimer");

	Params::HWBotFactory_GetLocalTeamCanSeeRespawnTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetNumBotsPastPastDistanceInLane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             LaneDistancePercentage                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWBotFactory::GetNumBotsPastPastDistanceInLane(const float LaneDistancePercentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetNumBotsPastPastDistanceInLane");

	Params::HWBotFactory_GetNumBotsPastPastDistanceInLane Parms{};

	Parms.LaneDistancePercentage = LaneDistancePercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetNumOfSpawnWaves
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWBotFactory::GetNumOfSpawnWaves() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetNumOfSpawnWaves");

	Params::HWBotFactory_GetNumOfSpawnWaves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetPathDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWaypointPathDirectionType              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWaypointPathDirectionType AHWBotFactory::GetPathDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetPathDirection");

	Params::HWBotFactory_GetPathDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetRemainingWaveRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWBotFactory::GetRemainingWaveRespawnTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetRemainingWaveRespawnTime");

	Params::HWBotFactory_GetRemainingWaveRespawnTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetSpawningTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWBotFactory::GetSpawningTeamNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetSpawningTeamNum");

	Params::HWBotFactory_GetSpawningTeamNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.GetWaveRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWBotFactory::GetWaveRespawnTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "GetWaveRespawnTime");

	Params::HWBotFactory_GetWaveRespawnTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.HasActiveBots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWBotFactory::HasActiveBots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "HasActiveBots");

	Params::HWBotFactory_HasActiveBots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.IsActivelySpawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWBotFactory::IsActivelySpawning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "IsActivelySpawning");

	Params::HWBotFactory_IsActivelySpawning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotFactory.IsAGodBotFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWBotFactory::IsAGodBotFactory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotFactory", "IsAGodBotFactory");

	Params::HWBotFactory_IsAGodBotFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentItem.GetAnnounceAcquisitionTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UHWEquipmentItem::GetAnnounceAcquisitionTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItem", "GetAnnounceAcquisitionTag");

	Params::HWEquipmentItem_GetAnnounceAcquisitionTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentItem.GetBaseCurrencyValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentItem::GetBaseCurrencyValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItem", "GetBaseCurrencyValue");

	Params::HWEquipmentItem_GetBaseCurrencyValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentItem.ShouldCommitTransaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EItemTransactionRule              ItemTransactionRule                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentItem::ShouldCommitTransaction(const EItemTransactionRule ItemTransactionRule) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItem", "ShouldCommitTransaction");

	Params::HWEquipmentItem_ShouldCommitTransaction Parms{};

	Parms.ItemTransactionRule = ItemTransactionRule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSetting_Custom.BP_CalcAim
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWAimTargetingInfo&       AimTargetingInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle&TargetingAimHandle                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilityAimSetting_Custom::BP_CalcAim(const struct FHWAimTargetingInfo& AimTargetingInfo, struct FGameplayAbilityTargetDataHandle& TargetingAimHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSetting_Custom", "BP_CalcAim");

	Params::HWAbilityAimSetting_Custom_BP_CalcAim Parms{};

	Parms.AimTargetingInfo = std::move(AimTargetingInfo);
	Parms.TargetingAimHandle = std::move(TargetingAimHandle);

	UObject::ProcessEvent(Func, &Parms);

	TargetingAimHandle = std::move(Parms.TargetingAimHandle);
}


// Function Hemingway.HWAbilityAimSetting_Custom.BP_GetAimDirectionOffset
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FRotator&                  OriginalOffset                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UHWAbilityAimSetting_Custom::BP_GetAimDirectionOffset(const struct FRotator& OriginalOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSetting_Custom", "BP_GetAimDirectionOffset");

	Params::HWAbilityAimSetting_Custom_BP_GetAimDirectionOffset Parms{};

	Parms.OriginalOffset = std::move(OriginalOffset);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSetting_Custom.BP_GetPositionOffset
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FVector&                   OriginalOffset                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWAbilityAimSetting_Custom::BP_GetPositionOffset(const struct FVector& OriginalOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSetting_Custom", "BP_GetPositionOffset");

	Params::HWAbilityAimSetting_Custom_BP_GetPositionOffset Parms{};

	Parms.OriginalOffset = std::move(OriginalOffset);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAimSetting_Custom.GetCustomAimSetting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AimSettingId                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings*      ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityAimSettings* UHWAbilityAimSetting_Custom::GetCustomAimSetting(const struct FGameplayTag& AimSettingId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAimSetting_Custom", "GetCustomAimSetting");

	Params::HWAbilityAimSetting_Custom_GetCustomAimSetting Parms{};

	Parms.AimSettingId = std::move(AimSettingId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_SpawnDeployable.SpawnDeployableTask
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AHWDeployable>        DeployableClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                SpawnTransform                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAdjustToGround                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_SpawnDeployable*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_SpawnDeployable* UHWAbilityTask_SpawnDeployable::SpawnDeployableTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class AHWDeployable> DeployableClass, const struct FTransform& SpawnTransform, bool bAdjustToGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_SpawnDeployable", "SpawnDeployableTask");

	Params::HWAbilityTask_SpawnDeployable_SpawnDeployableTask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.DeployableClass = DeployableClass;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.bAdjustToGround = bAdjustToGround;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_SpawnDeployable.SpawnDeployableTaskUsingAimData
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AHWDeployable>        DeployableClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetAimData                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    bAdjustToGround                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseAimOriginForSpawn                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SpawnLocationOffset                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSimulateImmediateTickOnPhaseTimers                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_SpawnDeployable*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_SpawnDeployable* UHWAbilityTask_SpawnDeployable::SpawnDeployableTaskUsingAimData(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class AHWDeployable> DeployableClass, const struct FGameplayAbilityTargetDataHandle& TargetAimData, bool bAdjustToGround, const bool bUseAimOriginForSpawn, const struct FVector& SpawnLocationOffset, const bool bSimulateImmediateTickOnPhaseTimers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_SpawnDeployable", "SpawnDeployableTaskUsingAimData");

	Params::HWAbilityTask_SpawnDeployable_SpawnDeployableTaskUsingAimData Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.DeployableClass = DeployableClass;
	Parms.TargetAimData = std::move(TargetAimData);
	Parms.bAdjustToGround = bAdjustToGround;
	Parms.bUseAimOriginForSpawn = bUseAimOriginForSpawn;
	Parms.SpawnLocationOffset = std::move(SpawnLocationOffset);
	Parms.bSimulateImmediateTickOnPhaseTimers = bSimulateImmediateTickOnPhaseTimers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentItem_AbilityTooltipData.GetNamedValueOptions
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UHWEquipmentItem_AbilityTooltipData::GetNamedValueOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItem_AbilityTooltipData", "GetNamedValueOptions");

	Params::HWEquipmentItem_AbilityTooltipData_GetNamedValueOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_InstantShape.GetPriorityFilters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTargetDataFilterHandle>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayTargetDataFilterHandle> UHWAbilityAttackSettings_InstantShape::GetPriorityFilters(class AActor* Avatar) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_InstantShape", "GetPriorityFilters");

	Params::HWAbilityAttackSettings_InstantShape_GetPriorityFilters Parms{};

	Parms.Avatar = Avatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Projectile.GetAllyAcceptableTargetFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWAbilityAttackSettings_Projectile::GetAllyAcceptableTargetFilter(class AActor* Avatar, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Projectile", "GetAllyAcceptableTargetFilter");

	Params::HWAbilityAttackSettings_Projectile_GetAllyAcceptableTargetFilter Parms{};

	Parms.Avatar = Avatar;
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Projectile.GetDestroyProjectileOnAllyTargetFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWAbilityAttackSettings_Projectile::GetDestroyProjectileOnAllyTargetFilter(class AActor* Avatar, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Projectile", "GetDestroyProjectileOnAllyTargetFilter");

	Params::HWAbilityAttackSettings_Projectile_GetDestroyProjectileOnAllyTargetFilter Parms{};

	Parms.Avatar = Avatar;
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Projectile.GetDestroyProjectileOnTargetFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Avatar                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTargetDataFilterHandle  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTargetDataFilterHandle UHWAbilityAttackSettings_Projectile::GetDestroyProjectileOnTargetFilter(class AActor* Avatar, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Projectile", "GetDestroyProjectileOnTargetFilter");

	Params::HWAbilityAttackSettings_Projectile_GetDestroyProjectileOnTargetFilter Parms{};

	Parms.Avatar = Avatar;
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.EqualEqual_FHWEventCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWEventCharacter&         A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::EqualEqual_FHWEventCharacter(const struct FHWEventCharacter& A, const struct FHWEventCharacter& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "EqualEqual_FHWEventCharacter");

	Params::HWLibrary_EventSystem_EqualEqual_FHWEventCharacter Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.GetCharacterItemFromEventCharacterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FPrimaryAssetId& PrimaryAssetId, const class UHWCharacterItem* CharacterItem)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::GetCharacterItemFromEventCharacterData(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter, const TDelegate<void(const struct FPrimaryAssetId& PrimaryAssetId, const class UHWCharacterItem* CharacterItem)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "GetCharacterItemFromEventCharacterData");

	Params::HWLibrary_EventSystem_GetCharacterItemFromEventCharacterData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_EventSystem.GetDisplayNameFromEventCharacterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class FText& DisplayName, const class UHWCharacterItem* CharacterItem)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::GetDisplayNameFromEventCharacterData(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter, const TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class FText& DisplayName, const class UHWCharacterItem* CharacterItem)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "GetDisplayNameFromEventCharacterData");

	Params::HWLibrary_EventSystem_GetDisplayNameFromEventCharacterData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_EventSystem.GetLocalAttitudeTowardsEventCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETeamAttitude                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamAttitude UHWLibrary_EventSystem::GetLocalAttitudeTowardsEventCharacter(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "GetLocalAttitudeTowardsEventCharacter");

	Params::HWLibrary_EventSystem_GetLocalAttitudeTowardsEventCharacter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.GetNameColorFromEventCharacterData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class UHWCollectionItem* NameColorItem)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::GetNameColorFromEventCharacterData(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter, const TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class UHWCollectionItem* NameColorItem)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "GetNameColorFromEventCharacterData");

	Params::HWLibrary_EventSystem_GetNameColorFromEventCharacterData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_EventSystem.IsEventCharacterAnNPC
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::IsEventCharacterAnNPC(const struct FHWEventCharacter& EventCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "IsEventCharacterAnNPC");

	Params::HWLibrary_EventSystem_IsEventCharacterAnNPC Parms{};

	Parms.EventCharacter = std::move(EventCharacter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.IsEventCharacterLocalPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::IsEventCharacterLocalPlayer(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "IsEventCharacterLocalPlayer");

	Params::HWLibrary_EventSystem_IsEventCharacterLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.LocalPlayerMatchesEventCharacterOrIsSpectator
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::LocalPlayerMatchesEventCharacterOrIsSpectator(const class UObject* WorldContextObject, const struct FHWEventCharacter& EventCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "LocalPlayerMatchesEventCharacterOrIsSpectator");

	Params::HWLibrary_EventSystem_LocalPlayerMatchesEventCharacterOrIsSpectator Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventCharacter = std::move(EventCharacter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.NotEqual_FHWEventCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FHWEventCharacter&         A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FHWEventCharacter&         B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::NotEqual_FHWEventCharacter(const struct FHWEventCharacter& A, const struct FHWEventCharacter& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "NotEqual_FHWEventCharacter");

	Params::HWLibrary_EventSystem_NotEqual_FHWEventCharacter Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.PlaySoftSoundOnAccoladeAudioComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMetaSoundSource>  SoundToPlay                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::PlaySoftSoundOnAccoladeAudioComponent(const class UObject* WorldContextObject, TSoftObjectPtr<class UMetaSoundSource> SoundToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "PlaySoftSoundOnAccoladeAudioComponent");

	Params::HWLibrary_EventSystem_PlaySoftSoundOnAccoladeAudioComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoundToPlay = SoundToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_EventSystem.PlaySoundOnAccoladeAudioComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaSoundSource*                 SoundToPlay                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::PlaySoundOnAccoladeAudioComponent(const class UObject* WorldContextObject, class UMetaSoundSource* SoundToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "PlaySoundOnAccoladeAudioComponent");

	Params::HWLibrary_EventSystem_PlaySoundOnAccoladeAudioComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoundToPlay = SoundToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_EventSystem.ShouldUseGodNameInsteadOfPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_EventSystem::ShouldUseGodNameInsteadOfPlayerName(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "ShouldUseGodNameInsteadOfPlayerName");

	Params::HWLibrary_EventSystem_ShouldUseGodNameInsteadOfPlayerName Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_EventSystem.StopAccoladeAudioComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_EventSystem::StopAccoladeAudioComponent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_EventSystem", "StopAccoladeAudioComponent");

	Params::HWLibrary_EventSystem_StopAccoladeAudioComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.HWWaitForTargetingData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayTargetingConfirmation          ConfirmationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AHWTargeter>          InTargeterClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AttacksToTarget                                        (Parm, NativeAccessSpecifierPublic)
// const bool                              bCancelOnConfirmFailure                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableServerTargeting                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitTargetData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitTargetData* UHWAbilityTask_WaitTargetData::HWWaitForTargetingData(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, EGameplayTargetingConfirmation ConfirmationType, TSubclassOf<class AHWTargeter> InTargeterClass, const struct FGameplayTagContainer& AttacksToTarget, const bool bCancelOnConfirmFailure, const bool bEnableServerTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitTargetData", "HWWaitForTargetingData");

	Params::HWAbilityTask_WaitTargetData_HWWaitForTargetingData Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ConfirmationType = ConfirmationType;
	Parms.InTargeterClass = InTargeterClass;
	Parms.AttacksToTarget = std::move(AttacksToTarget);
	Parms.bCancelOnConfirmFailure = bCancelOnConfirmFailure;
	Parms.bEnableServerTargeting = bEnableServerTargeting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.HWWaitForTargetingDataUsingActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayTargetingConfirmation          ConfirmationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTargeter*                      InTargeter                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AttacksToTarget                                        (Parm, NativeAccessSpecifierPublic)
// const bool                              bCancelOnConfirmFailure                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bDestroyTargetActorOnTaskDestroy_0                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableServerTargeting                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitTargetData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitTargetData* UHWAbilityTask_WaitTargetData::HWWaitForTargetingDataUsingActor(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, EGameplayTargetingConfirmation ConfirmationType, class AHWTargeter* InTargeter, const struct FGameplayTagContainer& AttacksToTarget, const bool bCancelOnConfirmFailure, const bool bDestroyTargetActorOnTaskDestroy_0, const bool bEnableServerTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitTargetData", "HWWaitForTargetingDataUsingActor");

	Params::HWAbilityTask_WaitTargetData_HWWaitForTargetingDataUsingActor Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ConfirmationType = ConfirmationType;
	Parms.InTargeter = InTargeter;
	Parms.AttacksToTarget = std::move(AttacksToTarget);
	Parms.bCancelOnConfirmFailure = bCancelOnConfirmFailure;
	Parms.bDestroyTargetActorOnTaskDestroy_0 = bDestroyTargetActorOnTaskDestroy_0;
	Parms.bEnableServerTargeting = bEnableServerTargeting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.HWWaitForTargetingDataUsingCastStyle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTargeter*                      InTargeter                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AttacksToTarget                                        (Parm, NativeAccessSpecifierPublic)
// const EAbilityCastStyle                 DesiredCastStyle                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCancelOnConfirmFailure                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bDestroyTargetActorOnTaskDestroy_0                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableServerTargeting                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPreventAbilityInputFromConfirming_0                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCleanUpTargeterOnTargetingCancelled_0                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitTargetData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitTargetData* UHWAbilityTask_WaitTargetData::HWWaitForTargetingDataUsingCastStyle(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AHWTargeter* InTargeter, const struct FGameplayTagContainer& AttacksToTarget, const EAbilityCastStyle DesiredCastStyle, const bool bCancelOnConfirmFailure, const bool bDestroyTargetActorOnTaskDestroy_0, const bool bEnableServerTargeting, const bool bPreventAbilityInputFromConfirming_0, const bool bCleanUpTargeterOnTargetingCancelled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitTargetData", "HWWaitForTargetingDataUsingCastStyle");

	Params::HWAbilityTask_WaitTargetData_HWWaitForTargetingDataUsingCastStyle Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.InTargeter = InTargeter;
	Parms.AttacksToTarget = std::move(AttacksToTarget);
	Parms.DesiredCastStyle = DesiredCastStyle;
	Parms.bCancelOnConfirmFailure = bCancelOnConfirmFailure;
	Parms.bDestroyTargetActorOnTaskDestroy_0 = bDestroyTargetActorOnTaskDestroy_0;
	Parms.bEnableServerTargeting = bEnableServerTargeting;
	Parms.bPreventAbilityInputFromConfirming_0 = bPreventAbilityInputFromConfirming_0;
	Parms.bCleanUpTargeterOnTargetingCancelled_0 = bCleanUpTargeterOnTargetingCancelled_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.ForceCancel
// (Final, Native, Public, BlueprintCallable)

void UHWAbilityTask_WaitTargetData::ForceCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitTargetData", "ForceCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.ForceConfirm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    EndTask_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitTargetData::ForceConfirm(bool EndTask_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitTargetData", "ForceConfirm");

	Params::HWAbilityTask_WaitTargetData_ForceConfirm Parms{};

	Parms.EndTask_0 = EndTask_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.OnCastStyleInputCancelled
// (Final, Native, Protected)
// Parameters:
// const float                             InputHeldTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitTargetData::OnCastStyleInputCancelled(const float InputHeldTime, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitTargetData", "OnCastStyleInputCancelled");

	Params::HWAbilityTask_WaitTargetData_OnCastStyleInputCancelled Parms{};

	Parms.InputHeldTime = InputHeldTime;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitTargetData.OnCastStyleInputConfirmed
// (Final, Native, Protected)
// Parameters:
// const float                             InputHeldTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInputReleased                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitTargetData::OnCastStyleInputConfirmed(const float InputHeldTime, const bool bInputReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitTargetData", "OnCastStyleInputConfirmed");

	Params::HWAbilityTask_WaitTargetData_OnCastStyleInputConfirmed Parms{};

	Parms.InputHeldTime = InputHeldTime;
	Parms.bInputReleased = bInputReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityAttackSettings_Sphere.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAttackSettings_Sphere::GetRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Sphere", "GetRadius");

	Params::HWAbilityAttackSettings_Sphere_GetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Wedge.GetAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAttackSettings_Wedge::GetAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Wedge", "GetAngle");

	Params::HWAbilityAttackSettings_Wedge_GetAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Wedge.GetHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAttackSettings_Wedge::GetHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Wedge", "GetHeight");

	Params::HWAbilityAttackSettings_Wedge_GetHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Wedge.GetMinRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAttackSettings_Wedge::GetMinRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Wedge", "GetMinRadius");

	Params::HWAbilityAttackSettings_Wedge_GetMinRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Wedge.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityAttackSettings_Wedge::GetRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Wedge", "GetRadius");

	Params::HWAbilityAttackSettings_Wedge_GetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityAttackSettings_Wedge.GetWedgeTargetingData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           AvatarActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsPredicting                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCircularWedgeTargetingData      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCircularWedgeTargetingData UHWAbilityAttackSettings_Wedge::GetWedgeTargetingData(class AActor* AvatarActor, const bool bIsPredicting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityAttackSettings_Wedge", "GetWedgeTargetingData");

	Params::HWAbilityAttackSettings_Wedge_GetWedgeTargetingData Parms{};

	Parms.AvatarActor = AvatarActor;
	Parms.bIsPredicting = bIsPredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.CanHitCurrentAITargetOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityLevelConfig::CanHitCurrentAITargetOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "CanHitCurrentAITargetOnly");

	Params::HWAbilityLevelConfig_CanHitCurrentAITargetOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAbilityPhaseDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EAbilityFlowPhase                 Phase                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAbilityPhaseDuration(const EAbilityFlowPhase Phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAbilityPhaseDuration");

	Params::HWAbilityLevelConfig_GetAbilityPhaseDuration Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIBaseWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIBaseWeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIBaseWeight");

	Params::HWAbilityLevelConfig_GetAIBaseWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIDesiredRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIDesiredRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIDesiredRange");

	Params::HWAbilityLevelConfig_GetAIDesiredRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIEffectRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIEffectRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIEffectRadius");

	Params::HWAbilityLevelConfig_GetAIEffectRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIMinimumRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIMinimumRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIMinimumRange");

	Params::HWAbilityLevelConfig_GetAIMinimumRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIModifierWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIModifierWeight(const struct FGameplayTag& Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIModifierWeight");

	Params::HWAbilityLevelConfig_GetAIModifierWeight Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAimSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings*      ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityAimSettings* UHWAbilityLevelConfig::GetAimSetting(const int32 ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAimSetting");

	Params::HWAbilityLevelConfig_GetAimSetting Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAimSettingForAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAimSettings*      ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityAimSettings* UHWAbilityLevelConfig::GetAimSettingForAttack(const struct FGameplayTag& AttackID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAimSettingForAttack");

	Params::HWAbilityLevelConfig_GetAimSettingForAttack Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIPredictionSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIPredictionSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIPredictionSpeed");

	Params::HWAbilityLevelConfig_GetAIPredictionSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAIUsageCooldownDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetAIUsageCooldownDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAIUsageCooldownDuration");

	Params::HWAbilityLevelConfig_GetAIUsageCooldownDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAttackSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings*   ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityAttackSettings* UHWAbilityLevelConfig::GetAttackSetting(const int32 ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAttackSetting");

	Params::HWAbilityLevelConfig_GetAttackSetting Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetAttackSettingForAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AttackID                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings*   ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWAbilityAttackSettings* UHWAbilityLevelConfig::GetAttackSettingForAttack(const struct FGameplayTag& AttackID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetAttackSettingForAttack");

	Params::HWAbilityLevelConfig_GetAttackSettingForAttack Parms{};

	Parms.AttackID = std::move(AttackID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetCooldownDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetCooldownDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetCooldownDuration");

	Params::HWAbilityLevelConfig_GetCooldownDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetEffectsForGroups
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     EffectGroupTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              CurrentAttackId                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UGameplayEffect>>*OutEffects                                             (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWAbilityLevelConfig::GetEffectsForGroups(const struct FGameplayTagContainer& EffectGroupTags, const struct FGameplayTag& CurrentAttackId, TArray<TSubclassOf<class UGameplayEffect>>* OutEffects) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetEffectsForGroups");

	Params::HWAbilityLevelConfig_GetEffectsForGroups Parms{};

	Parms.EffectGroupTags = std::move(EffectGroupTags);
	Parms.CurrentAttackId = std::move(CurrentAttackId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEffects != nullptr)
		*OutEffects = std::move(Parms.OutEffects);
}


// Function Hemingway.HWAbilityLevelConfig.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAbilityLevelConfig::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetLevel");

	Params::HWAbilityLevelConfig_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.GetTotalAbilityPhaseDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbilityLevelConfig::GetTotalAbilityPhaseDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "GetTotalAbilityPhaseDuration");

	Params::HWAbilityLevelConfig_GetTotalAbilityPhaseDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.HasAITag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityLevelConfig::HasAITag(const struct FGameplayTag& Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "HasAITag");

	Params::HWAbilityLevelConfig_HasAITag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityLevelConfig.ShouldAIPredictSourceLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityLevelConfig::ShouldAIPredictSourceLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityLevelConfig", "ShouldAIPredictSourceLocation");

	Params::HWAbilityLevelConfig_ShouldAIPredictSourceLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Deployable.GetAvatarDeployableFromActorInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWDeployable*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWDeployable* UHWAbility_Deployable::GetAvatarDeployableFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable", "GetAvatarDeployableFromActorInfo");

	Params::HWAbility_Deployable_GetAvatarDeployableFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Deployable_BounceChain.ApplyGameplayEffectToHitTarget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           HitTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Deployable_BounceChain::ApplyGameplayEffectToHitTarget(class AActor* HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable_BounceChain", "ApplyGameplayEffectToHitTarget");

	Params::HWAbility_Deployable_BounceChain_ApplyGameplayEffectToHitTarget Parms{};

	Parms.HitTarget = HitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Deployable_BounceChain.MoveDeployableToHitTarget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           HitTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Deployable_BounceChain::MoveDeployableToHitTarget(class AActor* HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable_BounceChain", "MoveDeployableToHitTarget");

	Params::HWAbility_Deployable_BounceChain_MoveDeployableToHitTarget Parms{};

	Parms.HitTarget = HitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Deployable_BounceChain.TrackHitTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           HitTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Deployable_BounceChain::TrackHitTarget(class AActor* HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable_BounceChain", "TrackHitTarget");

	Params::HWAbility_Deployable_BounceChain_TrackHitTarget Parms{};

	Parms.HitTarget = HitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Deployable_BounceChain.MakeGameplayEffectSpecs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           HitTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayEffectSpecHandle>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayEffectSpecHandle> UHWAbility_Deployable_BounceChain::MakeGameplayEffectSpecs(class AActor* HitTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable_BounceChain", "MakeGameplayEffectSpecs");

	Params::HWAbility_Deployable_BounceChain_MakeGameplayEffectSpecs Parms{};

	Parms.HitTarget = HitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Deployable_BounceChain.SelectNextHitTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class AActor*>&            HitTargets                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWAbility_Deployable_BounceChain::SelectNextHitTarget(const TArray<class AActor*>& HitTargets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Deployable_BounceChain", "SelectNextHitTarget");

	Params::HWAbility_Deployable_BounceChain_SelectNextHitTarget Parms{};

	Parms.HitTargets = std::move(HitTargets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetAssociatedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UHWCharacterItem>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UHWCharacterItem> UHWCollectionItem::GetAssociatedCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetAssociatedCharacter");

	Params::HWCollectionItem_GetAssociatedCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetAssociatedCharacterFull
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UHWCharacterItem>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UHWCharacterItem> UHWCollectionItem::GetAssociatedCharacterFull(const class UObject* WorldContextObject, const struct FRH_ItemId& InItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetAssociatedCharacterFull");

	Params::HWCollectionItem_GetAssociatedCharacterFull Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCollectionItemStatus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterContextItem                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWInventoryItem*           OtherContextItem                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWCollectionItemStatus                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWCollectionItemStatus UHWCollectionItem::GetCollectionItemStatus(const class URH_PlayerInfo* PlayerInfo, const class UHWCharacterItem* CharacterContextItem, const class UHWInventoryItem* OtherContextItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCollectionItemStatus");

	Params::HWCollectionItem_GetCollectionItemStatus Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.CharacterContextItem = CharacterContextItem;
	Parms.OtherContextItem = OtherContextItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCollectionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCollectionItemType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWCollectionItemType UHWCollectionItem::GetCollectionType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCollectionType");

	Params::HWCollectionItem_GetCollectionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCosmeticMaterials
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       AssetKey                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWCosmeticMaterialSet           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWCosmeticMaterialSet UHWCollectionItem::GetCosmeticMaterials(const class FName AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCosmeticMaterials");

	Params::HWCollectionItem_GetCosmeticMaterials Parms{};

	Parms.AssetKey = AssetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCosmeticNiagaraSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       AssetKey                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UNiagaraSystem>    ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UNiagaraSystem> UHWCollectionItem::GetCosmeticNiagaraSystem(const class FName AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCosmeticNiagaraSystem");

	Params::HWCollectionItem_GetCosmeticNiagaraSystem Parms{};

	Parms.AssetKey = AssetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCosmeticSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       AssetKey                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USkeletalMesh>     ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USkeletalMesh> UHWCollectionItem::GetCosmeticSkeletalMesh(const class FName AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCosmeticSkeletalMesh");

	Params::HWCollectionItem_GetCosmeticSkeletalMesh Parms{};

	Parms.AssetKey = AssetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCosmeticSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       AssetKey                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundBase> UHWCollectionItem::GetCosmeticSound(const class FName AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCosmeticSound");

	Params::HWCollectionItem_GetCosmeticSound Parms{};

	Parms.AssetKey = AssetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.GetCosmeticStaticMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       AssetKey                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UStaticMesh>       ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UStaticMesh> UHWCollectionItem::GetCosmeticStaticMesh(const class FName AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "GetCosmeticStaticMesh");

	Params::HWCollectionItem_GetCosmeticStaticMesh Parms{};

	Parms.AssetKey = AssetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.IsComingSoon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCollectionItem::IsComingSoon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "IsComingSoon");

	Params::HWCollectionItem_IsComingSoon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.IsEquipped
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           EquippedToCharacter                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bConsiderVariantSkin                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCollectionItem::IsEquipped(const class UObject* WorldContextObject, const class UHWCharacterItem* EquippedToCharacter, bool bConsiderVariantSkin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "IsEquipped");

	Params::HWCollectionItem_IsEquipped Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EquippedToCharacter = EquippedToCharacter;
	Parms.bConsiderVariantSkin = bConsiderVariantSkin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCollectionItem.IsUnobtainable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCollectionItem::IsUnobtainable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCollectionItem", "IsUnobtainable");

	Params::HWCollectionItem_IsUnobtainable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetAbilityPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetAbilityPotential() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetAbilityPotential");

	Params::HWCharacterItem_GetAbilityPotential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetAbilityStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetAbilityStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetAbilityStart");

	Params::HWCharacterItem_GetAbilityStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetAllTexturesForGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>>*OutTextures                                            (Parm, OutParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWCharacterItem::GetAllTexturesForGameplayTag(const struct FGameplayTag& GameplayTag, TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>>* OutTextures) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetAllTexturesForGameplayTag");

	Params::HWCharacterItem_GetAllTexturesForGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTextures != nullptr)
		*OutTextures = std::move(Parms.OutTextures);
}


// Function Hemingway.HWCharacterItem.GetCharacterDescriptorTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer*           OutTags                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWCharacterItem::GetCharacterDescriptorTags(struct FGameplayTagContainer* OutTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCharacterDescriptorTags");

	Params::HWCharacterItem_GetCharacterDescriptorTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTags != nullptr)
		*OutTags = std::move(Parms.OutTags);
}


// Function Hemingway.HWCharacterItem.GetCharacterHealerTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetCharacterHealerTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCharacterHealerTier");

	Params::HWCharacterItem_GetCharacterHealerTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCharacterStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              StatTag                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWCharacterItem::GetCharacterStat(const struct FGameplayTag& StatTag, const int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCharacterStat");

	Params::HWCharacterItem_GetCharacterStat Parms{};

	Parms.StatTag = std::move(StatTag);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCharacterTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWCharacterItem::GetCharacterTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCharacterTitle");

	Params::HWCharacterItem_GetCharacterTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCharacterTitleCaps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWCharacterItem::GetCharacterTitleCaps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCharacterTitleCaps");

	Params::HWCharacterItem_GetCharacterTitleCaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCollectionInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWCharacterCollectionInfo*      OutCollectionInfo                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::GetCollectionInfo(const struct FGameplayTag& Tag, struct FHWCharacterCollectionInfo* OutCollectionInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCollectionInfo");

	Params::HWCharacterItem_GetCollectionInfo Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCollectionInfo != nullptr)
		*OutCollectionInfo = std::move(Parms.OutCollectionInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCollectionItemByItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                InItemId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UHWCollectionItem>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UHWCollectionItem> UHWCharacterItem::GetCollectionItemByItemId(const struct FRH_ItemId& InItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCollectionItemByItemId");

	Params::HWCharacterItem_GetCollectionItemByItemId Parms{};

	Parms.InItemId = std::move(InItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCompatibleTalents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<TSoftObjectPtr<class UHWEquipmentItem>>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TArray<TSoftObjectPtr<class UHWEquipmentItem>> UHWCharacterItem::GetCompatibleTalents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCompatibleTalents");

	Params::HWCharacterItem_GetCompatibleTalents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetCustomLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UWorld>            ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UWorld> UHWCharacterItem::GetCustomLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetCustomLevel");

	Params::HWCharacterItem_GetCustomLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetDefensePotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetDefensePotential() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetDefensePotential");

	Params::HWCharacterItem_GetDefensePotential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetDefenseStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetDefenseStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetDefenseStart");

	Params::HWCharacterItem_GetDefenseStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetGodQuestEntryByCollectionItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCollectionItem*          CollectionItem                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGodQuestEntry*                  OutQuestEntry                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::GetGodQuestEntryByCollectionItem(const class UHWCollectionItem* CollectionItem, struct FGodQuestEntry* OutQuestEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetGodQuestEntryByCollectionItem");

	Params::HWCharacterItem_GetGodQuestEntryByCollectionItem Parms{};

	Parms.CollectionItem = CollectionItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutQuestEntry != nullptr)
		*OutQuestEntry = std::move(Parms.OutQuestEntry);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetGodQuestEntryByCollectionItemPtr
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UHWCollectionItem>CollectionItem                                         (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGodQuestEntry*                  OutQuestEntry                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::GetGodQuestEntryByCollectionItemPtr(const TSoftObjectPtr<class UHWCollectionItem> CollectionItem, struct FGodQuestEntry* OutQuestEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetGodQuestEntryByCollectionItemPtr");

	Params::HWCharacterItem_GetGodQuestEntryByCollectionItemPtr Parms{};

	Parms.CollectionItem = CollectionItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutQuestEntry != nullptr)
		*OutQuestEntry = std::move(Parms.OutQuestEntry);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetGodQuestEntryByQuestItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UHWQuest>    QuestItem                                              (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGodQuestEntry*                  OutQuestEntry                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::GetGodQuestEntryByQuestItem(const TSoftObjectPtr<class UHWQuest> QuestItem, struct FGodQuestEntry* OutQuestEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetGodQuestEntryByQuestItem");

	Params::HWCharacterItem_GetGodQuestEntryByQuestItem Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutQuestEntry != nullptr)
		*OutQuestEntry = std::move(Parms.OutQuestEntry);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetGodQuestEntryByQuestItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                InQuestItemId                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGodQuestEntry*                  OutQuestEntry                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::GetGodQuestEntryByQuestItemId(const struct FRH_ItemId& InQuestItemId, struct FGodQuestEntry* OutQuestEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetGodQuestEntryByQuestItemId");

	Params::HWCharacterItem_GetGodQuestEntryByQuestItemId Parms{};

	Parms.InQuestItemId = std::move(InQuestItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutQuestEntry != nullptr)
		*OutQuestEntry = std::move(Parms.OutQuestEntry);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetIntelligenceScaling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetIntelligenceScaling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetIntelligenceScaling");

	Params::HWCharacterItem_GetIntelligenceScaling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetOffensePotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetOffensePotential() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetOffensePotential");

	Params::HWCharacterItem_GetOffensePotential Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetOffenseStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetOffenseStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetOffenseStart");

	Params::HWCharacterItem_GetOffenseStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetOwnershipIdByCollectionItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCollectionItem*          CollectionItem                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FRH_ItemId UHWCharacterItem::GetOwnershipIdByCollectionItem(const class UHWCollectionItem* CollectionItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetOwnershipIdByCollectionItem");

	Params::HWCharacterItem_GetOwnershipIdByCollectionItem Parms{};

	Parms.CollectionItem = CollectionItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetRoleInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCharacterRoleInfo>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCharacterRoleInfo> UHWCharacterItem::GetRoleInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetRoleInfo");

	Params::HWCharacterItem_GetRoleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetSkinItemsForCharacterItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UHWSkinItem>>*OutSkinItems                                           (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWCharacterItem::GetSkinItemsForCharacterItem(TArray<TSoftObjectPtr<class UHWSkinItem>>* OutSkinItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetSkinItemsForCharacterItem");

	Params::HWCharacterItem_GetSkinItemsForCharacterItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkinItems != nullptr)
		*OutSkinItems = std::move(Parms.OutSkinItems);
}


// Function Hemingway.HWCharacterItem.GetStrengthScaling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterItem::GetStrengthScaling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetStrengthScaling");

	Params::HWCharacterItem_GetStrengthScaling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetTextureForExactGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              GameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UHWCharacterItem::GetTextureForExactGameplayTag(const struct FGameplayTag& GameplayTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetTextureForExactGameplayTag");

	Params::HWCharacterItem_GetTextureForExactGameplayTag Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.GetVoicePackItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWVoicePackItem>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWVoicePackItem> UHWCharacterItem::GetVoicePackItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "GetVoicePackItem");

	Params::HWCharacterItem_GetVoicePackItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.IsFavoriteGod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::IsFavoriteGod(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "IsFavoriteGod");

	Params::HWCharacterItem_IsFavoriteGod Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.IsInRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::IsInRotation(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "IsInRotation");

	Params::HWCharacterItem_IsInRotation Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterItem.SetIsFavoriteGod
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFavorite                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterItem::SetIsFavoriteGod(const class UObject* WorldContextObject, bool bIsFavorite) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "SetIsFavoriteGod");

	Params::HWCharacterItem_SetIsFavoriteGod Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsFavorite = bIsFavorite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterItem.UpdateAssociatedSkinItems
// (Final, Native, Public, BlueprintCallable, Const)

void UHWCharacterItem::UpdateAssociatedSkinItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "UpdateAssociatedSkinItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterItem.ValidatePantheon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterItem::ValidatePantheon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterItem", "ValidatePantheon");

	Params::HWCharacterItem_ValidatePantheon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Interact.OnAvatarDamaged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamgageEventData                                       (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWAbility_Interact::OnAvatarDamaged(const struct FDamageEventData& DamgageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Interact", "OnAvatarDamaged");

	Params::HWAbility_Interact_OnAvatarDamaged Parms{};

	Parms.DamgageEventData = std::move(DamgageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Interact.OnInteractionEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bWasCancelled                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Interact::OnInteractionEnded(const bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Interact", "OnInteractionEnded");

	Params::HWAbility_Interact_OnInteractionEnded Parms{};

	Parms.bWasCancelled = bWasCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Interact.FindClosestInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     Avatar                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWInteractableComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWInteractableComponent* UHWAbility_Interact::FindClosestInteractable(const class AActor* Avatar) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Interact", "FindClosestInteractable");

	Params::HWAbility_Interact_FindClosestInteractable Parms{};

	Parms.Avatar = Avatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_ListenOtherAbilityFire.OnListenedAbilityFired
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FiredAbilityTags                                       (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbility_ListenOtherAbilityFire::OnListenedAbilityFired(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& FiredAbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_ListenOtherAbilityFire", "OnListenedAbilityFired");

	Params::HWAbility_ListenOtherAbilityFire_OnListenedAbilityFired Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.FiredAbilityTags = std::move(FiredAbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_PassiveItem.BP_OnGameplayEffectAppliedToOwner
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     EffectAssetTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::BP_OnGameplayEffectAppliedToOwner(const class AActor* Target, const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTagContainer& EffectAssetTags, const struct FGameplayEffectSpecHandle& EffectSpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "BP_OnGameplayEffectAppliedToOwner");

	Params::HWAbility_PassiveItem_BP_OnGameplayEffectAppliedToOwner Parms{};

	Parms.Target = Target;
	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.EffectAssetTags = std::move(EffectAssetTags);
	Parms.EffectSpecHandle = std::move(EffectSpecHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_PassiveItem.BP_OnGameplayEffectAppliedToTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     EffectAssetTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpecHandle& EffectSpecHandle                                       (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::BP_OnGameplayEffectAppliedToTarget(const class AActor* Target, const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTagContainer& EffectAssetTags, const struct FGameplayEffectSpecHandle& EffectSpecHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "BP_OnGameplayEffectAppliedToTarget");

	Params::HWAbility_PassiveItem_BP_OnGameplayEffectAppliedToTarget Parms{};

	Parms.Target = Target;
	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.EffectAssetTags = std::move(EffectAssetTags);
	Parms.EffectSpecHandle = std::move(EffectSpecHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_PassiveItem.OnAbilityEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const class UGameplayAbility*           EndedAbility                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::OnAbilityEnded(const class UGameplayAbility* EndedAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "OnAbilityEnded");

	Params::HWAbility_PassiveItem_OnAbilityEnded Parms{};

	Parms.EndedAbility = EndedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_PassiveItem.OnAbilityFired
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilitySpecHandle&FiredAbilityHandle                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     FiredAbilityTags                                       (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::OnAbilityFired(const struct FGameplayAbilitySpecHandle& FiredAbilityHandle, const struct FGameplayTagContainer& FiredAbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "OnAbilityFired");

	Params::HWAbility_PassiveItem_OnAbilityFired Parms{};

	Parms.FiredAbilityHandle = std::move(FiredAbilityHandle);
	Parms.FiredAbilityTags = std::move(FiredAbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_PassiveItem.OnGameplayEffectAppliedToOwner
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpecHandle& SpecHandle                                             (Parm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::OnGameplayEffectAppliedToOwner(class AActor* Owner, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "OnGameplayEffectAppliedToOwner");

	Params::HWAbility_PassiveItem_OnGameplayEffectAppliedToOwner Parms{};

	Parms.Owner = Owner;
	Parms.SpecHandle = std::move(SpecHandle);
	Parms.ActiveHandle = std::move(ActiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_PassiveItem.OnGameplayEffectAppliedToTarget
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpecHandle& SpecHandle                                             (Parm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::OnGameplayEffectAppliedToTarget(class AActor* Target, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "OnGameplayEffectAppliedToTarget");

	Params::HWAbility_PassiveItem_OnGameplayEffectAppliedToTarget Parms{};

	Parms.Target = Target;
	Parms.SpecHandle = std::move(SpecHandle);
	Parms.ActiveHandle = std::move(ActiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_PassiveItem.OnOwnerDealtDamage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_PassiveItem::OnOwnerDealtDamage(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_PassiveItem", "OnOwnerDealtDamage");

	Params::HWAbility_PassiveItem_OnOwnerDealtDamage Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.DisableAutoBuy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWAutoBuyComponent::DisableAutoBuy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "DisableAutoBuy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.EnableAutoBuy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWAutoBuyComponent::EnableAutoBuy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "EnableAutoBuy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.EnableManualBuild
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWAutoBuyComponent::EnableManualBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "EnableManualBuild");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.OnRep_AutoBuyState
// (Final, Native, Protected)

void UHWAutoBuyComponent::OnRep_AutoBuyState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "OnRep_AutoBuyState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.OnShopVendorChanged
// (Final, Native, Protected)
// Parameters:
// class UHWInventoryManagerComponent*     InventoryManagerComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWShopVendorVolume*        NewShop                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAutoBuyComponent::OnShopVendorChanged(class UHWInventoryManagerComponent* InventoryManagerComponent, const class AHWShopVendorVolume* NewShop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "OnShopVendorChanged");

	Params::HWAutoBuyComponent_OnShopVendorChanged Parms{};

	Parms.InventoryManagerComponent = InventoryManagerComponent;
	Parms.NewShop = NewShop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.Server_DisableAutoBuy
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void UHWAutoBuyComponent::Server_DisableAutoBuy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "Server_DisableAutoBuy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoBuyComponent.GetAutoBuyState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWAutoBuyState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWAutoBuyState UHWAutoBuyComponent::GetAutoBuyState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "GetAutoBuyState");

	Params::HWAutoBuyComponent_GetAutoBuyState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoBuyComponent.IsAllowedToUseAutoBuy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAutoBuyComponent::IsAllowedToUseAutoBuy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoBuyComponent", "IsAllowedToUseAutoBuy");

	Params::HWAutoBuyComponent_IsAllowedToUseAutoBuy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Push.OnActorBump
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWAbility_Push::OnActorBump(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Push", "OnActorBump");

	Params::HWAbility_Push_OnActorBump Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Push.OnActorHandleSuccessfulBump
// (Native, Protected)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Push::OnActorHandleSuccessfulBump(class AActor* SelfActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Push", "OnActorHandleSuccessfulBump");

	Params::HWAbility_Push_OnActorHandleSuccessfulBump Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Push.OnActorInitialBump
// (Native, Protected)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Push::OnActorInitialBump(class AActor* SelfActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Push", "OnActorInitialBump");

	Params::HWAbility_Push_OnActorInitialBump Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Push.OnActorOverlap
// (Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Push::OnActorOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Push", "OnActorOverlap");

	Params::HWAbility_Push_OnActorOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Push.OnPushEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Push::OnPushEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Push", "OnPushEnded");

	Params::HWAbility_Push_OnPushEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Reflect.OnDamageBlocked
// (Final, Native, Protected)
// Parameters:
// const struct FBlockDamageEventData&     BlockDamageEventData                                   (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Reflect::OnDamageBlocked(const struct FBlockDamageEventData& BlockDamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Reflect", "OnDamageBlocked");

	Params::HWAbility_Reflect_OnDamageBlocked Parms{};

	Parms.BlockDamageEventData = std::move(BlockDamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Reflect.OnDamageTaken
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Reflect::OnDamageTaken(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Reflect", "OnDamageTaken");

	Params::HWAbility_Reflect_OnDamageTaken Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Trail.BP_OnTrailActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWDeployable_Trail*              Trail                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Trail::BP_OnTrailActivated(class AHWDeployable_Trail* Trail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "BP_OnTrailActivated");

	Params::HWAbility_Trail_BP_OnTrailActivated Parms{};

	Parms.Trail = Trail;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Trail.BP_OnTrailDeactivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHWDeployable_Trail*              Trail                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Trail::BP_OnTrailDeactivated(class AHWDeployable_Trail* Trail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "BP_OnTrailDeactivated");

	Params::HWAbility_Trail_BP_OnTrailDeactivated Parms{};

	Parms.Trail = Trail;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Trail.OnTrailBeginOverlap
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AHWDeployable_Trail*              Trail                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&OverlappedTarget                                       (Parm, NativeAccessSpecifierPublic)
// const struct FHWSplineOverlapInfo&      TrailOverlapInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWAbility_Trail::OnTrailBeginOverlap(class AHWDeployable_Trail* Trail, const struct FGameplayAbilityTargetDataHandle& OverlappedTarget, const struct FHWSplineOverlapInfo& TrailOverlapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "OnTrailBeginOverlap");

	Params::HWAbility_Trail_OnTrailBeginOverlap Parms{};

	Parms.Trail = Trail;
	Parms.OverlappedTarget = std::move(OverlappedTarget);
	Parms.TrailOverlapInfo = std::move(TrailOverlapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Trail.OnTrailEndOverlap
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AHWDeployable_Trail*              Trail                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&OverlappedTarget                                       (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Trail::OnTrailEndOverlap(class AHWDeployable_Trail* Trail, const struct FGameplayAbilityTargetDataHandle& OverlappedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "OnTrailEndOverlap");

	Params::HWAbility_Trail_OnTrailEndOverlap Parms{};

	Parms.Trail = Trail;
	Parms.OverlappedTarget = std::move(OverlappedTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Trail.OnTrailHitPulse
// (Native, Event, Protected, BlueprintEvent)

void UHWAbility_Trail::OnTrailHitPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "OnTrailHitPulse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Trail.OnTrailStateChanged
// (Final, Native, Protected)
// Parameters:
// class AHWDeployable_Trail*              Trail                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsTrailActive                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Trail::OnTrailStateChanged(class AHWDeployable_Trail* Trail, const bool bIsTrailActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Trail", "OnTrailStateChanged");

	Params::HWAbility_Trail_OnTrailStateChanged Parms{};

	Parms.Trail = Trail;
	Parms.bIsTrailActive = bIsTrailActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_Trail.GetTrail
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWDeployable_Trail*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWDeployable_Trail* UHWAbilityTask_Attack_Trail::GetTrail() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_Trail", "GetTrail");

	Params::HWAbilityTask_Attack_Trail_GetTrail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_AnimInstGod.OnGodASCUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        UpdatedASC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstGod::OnGodASCUpdated(class UHWAbilitySystemComponent* UpdatedASC, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstGod", "OnGodASCUpdated");

	Params::HWCharacter_AnimInstGod_OnGodASCUpdated Parms{};

	Parms.UpdatedASC = UpdatedASC;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstGod.OnStatusGodTagsUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedStatusTag                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStackCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacter_AnimInstGod::OnStatusGodTagsUpdated(const struct FGameplayTag& UpdatedStatusTag, int32 NewStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstGod", "OnStatusGodTagsUpdated");

	Params::HWCharacter_AnimInstGod_OnStatusGodTagsUpdated Parms{};

	Parms.UpdatedStatusTag = std::move(UpdatedStatusTag);
	Parms.NewStackCount = NewStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstGod.TransCombatToNonCombat
// (Native, Event, Public, BlueprintEvent)

void UHWCharacter_AnimInstGod::TransCombatToNonCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstGod", "TransCombatToNonCombat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_AnimInstGod.TransNonCombatToCombat
// (Native, Event, Public, BlueprintEvent)

void UHWCharacter_AnimInstGod::TransNonCombatToCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_AnimInstGod", "TransNonCombatToCombat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayGrab.PerformGameplayGrabOnTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayGrab>      Grab                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                GrabSource_0                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                GrabTarget                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DurationOverride_0                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayGrab*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayGrab* UHWAbilityTask_GameplayGrab::PerformGameplayGrabOnTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayGrab> Grab, class AHWCharacter_Base* GrabSource_0, class AHWCharacter_Base* GrabTarget, const float DurationOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayGrab", "PerformGameplayGrabOnTarget");

	Params::HWAbilityTask_GameplayGrab_PerformGameplayGrabOnTarget Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Grab = Grab;
	Parms.GrabSource_0 = GrabSource_0;
	Parms.GrabTarget = GrabTarget;
	Parms.DurationOverride_0 = DurationOverride_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayGrab.PerformGameplayGrabOnTargets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayGrab>      Grab                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                GrabSource_0                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AHWCharacter_Base*>& GrabTargets_0                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const float                             DurationOverride_0                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayGrab*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayGrab* UHWAbilityTask_GameplayGrab::PerformGameplayGrabOnTargets(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayGrab> Grab, class AHWCharacter_Base* GrabSource_0, const TArray<class AHWCharacter_Base*>& GrabTargets_0, const float DurationOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayGrab", "PerformGameplayGrabOnTargets");

	Params::HWAbilityTask_GameplayGrab_PerformGameplayGrabOnTargets Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Grab = Grab;
	Parms.GrabSource_0 = GrabSource_0;
	Parms.GrabTargets_0 = std::move(GrabTargets_0);
	Parms.DurationOverride_0 = DurationOverride_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayGrab.HandleTagUpdated_CCImmunity
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayGrab::HandleTagUpdated_CCImmunity(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayGrab", "HandleTagUpdated_CCImmunity");

	Params::HWAbilityTask_GameplayGrab_HandleTagUpdated_CCImmunity Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayGrab.OnGrabEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayGrab*                  Grab                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndGrabReason                  EndGrabReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayGrab::OnGrabEnded(class UHWGameplayGrab* Grab, const EHWEndGrabReason EndGrabReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayGrab", "OnGrabEnded");

	Params::HWAbilityTask_GameplayGrab_OnGrabEnded Parms{};

	Parms.Grab = Grab;
	Parms.EndGrabReason = EndGrabReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayGrab.OnGrabStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayGrab*                  Grab                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayGrab::OnGrabStarted(class UHWGameplayGrab* Grab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayGrab", "OnGrabStarted");

	Params::HWAbilityTask_GameplayGrab_OnGrabStarted Parms{};

	Parms.Grab = Grab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_PhasedMontage.PlayPhasedMontage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay_0                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RootMotionTranslationScale                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    StartWithRootMotionDisabled                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ContinueMontageOnAbilityEnd                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ContinueMontageOnAbilityCancel                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_PhasedMontage*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_PhasedMontage* UHWAbilityTask_PhasedMontage::PlayPhasedMontage(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay_0, float Rate, class FName StartSection, float RootMotionTranslationScale, bool StartWithRootMotionDisabled, bool ContinueMontageOnAbilityEnd, bool ContinueMontageOnAbilityCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_PhasedMontage", "PlayPhasedMontage");

	Params::HWAbilityTask_PhasedMontage_PlayPhasedMontage Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MontageToPlay_0 = MontageToPlay_0;
	Parms.Rate = Rate;
	Parms.StartSection = StartSection;
	Parms.RootMotionTranslationScale = RootMotionTranslationScale;
	Parms.StartWithRootMotionDisabled = StartWithRootMotionDisabled;
	Parms.ContinueMontageOnAbilityEnd = ContinueMontageOnAbilityEnd;
	Parms.ContinueMontageOnAbilityCancel = ContinueMontageOnAbilityCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_PhasedMontage.GetAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimInstance*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimInstance* UHWAbilityTask_PhasedMontage::GetAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_PhasedMontage", "GetAnimInstance");

	Params::HWAbilityTask_PhasedMontage_GetAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_PhasedMontage.GetMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UHWAbilityTask_PhasedMontage::GetMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_PhasedMontage", "GetMontage");

	Params::HWAbilityTask_PhasedMontage_GetMontage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_PhasedMontage.IsMontagePlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_PhasedMontage::IsMontagePlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_PhasedMontage", "IsMontagePlaying");

	Params::HWAbilityTask_PhasedMontage_IsMontagePlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_PhasedMontage.IsMontageStopped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_PhasedMontage::IsMontageStopped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_PhasedMontage", "IsMontageStopped");

	Params::HWAbilityTask_PhasedMontage_IsMontageStopped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAccoladeComponent.AddPlayerAccoladeEvent
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              AccoladeTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           AccoladeContext                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAccoladeComponent::AddPlayerAccoladeEvent(const struct FGameplayTag& AccoladeTag, const struct FHWEventContext& AccoladeContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAccoladeComponent", "AddPlayerAccoladeEvent");

	Params::HWAccoladeComponent_AddPlayerAccoladeEvent Parms{};

	Parms.AccoladeTag = std::move(AccoladeTag);
	Parms.AccoladeContext = std::move(AccoladeContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAccoladeComponent.AddTeamAccoladeEvent
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              AccoladeTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           AccoladeContext                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAccoladeComponent::AddTeamAccoladeEvent(const struct FGameplayTag& AccoladeTag, const struct FHWEventContext& AccoladeContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAccoladeComponent", "AddTeamAccoladeEvent");

	Params::HWAccoladeComponent_AddTeamAccoladeEvent Parms{};

	Parms.AccoladeTag = std::move(AccoladeTag);
	Parms.AccoladeContext = std::move(AccoladeContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAccoladeComponent.MulticastSendPlayerAccoladeToClient
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const struct FGameplayTag&              AccoladeTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           AccoladeContext                                        (Parm, NativeAccessSpecifierPublic)

void UHWAccoladeComponent::MulticastSendPlayerAccoladeToClient(const struct FGameplayTag& AccoladeTag, const struct FHWEventContext& AccoladeContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAccoladeComponent", "MulticastSendPlayerAccoladeToClient");

	Params::HWAccoladeComponent_MulticastSendPlayerAccoladeToClient Parms{};

	Parms.AccoladeTag = std::move(AccoladeTag);
	Parms.AccoladeContext = std::move(AccoladeContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAccoladeComponent.MulticastSendTeamAccoladeToClient
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const struct FGameplayTag&              AccoladeTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWEventContext&           AccoladeContext                                        (Parm, NativeAccessSpecifierPublic)

void UHWAccoladeComponent::MulticastSendTeamAccoladeToClient(const struct FGameplayTag& AccoladeTag, const struct FHWEventContext& AccoladeContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAccoladeComponent", "MulticastSendTeamAccoladeToClient");

	Params::HWAccoladeComponent_MulticastSendTeamAccoladeToClient Parms{};

	Parms.AccoladeTag = std::move(AccoladeTag);
	Parms.AccoladeContext = std::move(AccoladeContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_SpawnSpecialFXActor.SpawnSpecialFXActorTask
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AHWActor_SpecialFX>   SpecialFXActorClass_0                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                InSpawnTransform                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ActorLifetime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AttachToOwner                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_SpawnSpecialFXActor*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_SpawnSpecialFXActor* UHWAbilityTask_SpawnSpecialFXActor::SpawnSpecialFXActorTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class AHWActor_SpecialFX> SpecialFXActorClass_0, const struct FTransform& InSpawnTransform, float ActorLifetime, bool AttachToOwner, class FName SocketName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_SpawnSpecialFXActor", "SpawnSpecialFXActorTask");

	Params::HWAbilityTask_SpawnSpecialFXActor_SpawnSpecialFXActorTask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.SpecialFXActorClass_0 = SpecialFXActorClass_0;
	Parms.InSpawnTransform = std::move(InSpawnTransform);
	Parms.ActorLifetime = ActorLifetime;
	Parms.AttachToOwner = AttachToOwner;
	Parms.SocketName_0 = SocketName_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_SpawnSpecialFXActor.SpawnSpecialFXActorTaskUsingAimData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AHWActor_SpecialFX>   SpecialFXActorClass_0                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetAimData                                          (Parm, NativeAccessSpecifierPublic)
// float                                   ActorLifetime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttachToOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_SpawnSpecialFXActor*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_SpawnSpecialFXActor* UHWAbilityTask_SpawnSpecialFXActor::SpawnSpecialFXActorTaskUsingAimData(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class AHWActor_SpecialFX> SpecialFXActorClass_0, const struct FGameplayAbilityTargetDataHandle& TargetAimData, float ActorLifetime, bool bAttachToOwner, class FName SocketName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_SpawnSpecialFXActor", "SpawnSpecialFXActorTaskUsingAimData");

	Params::HWAbilityTask_SpawnSpecialFXActor_SpawnSpecialFXActorTaskUsingAimData Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.SpecialFXActorClass_0 = SpecialFXActorClass_0;
	Parms.TargetAimData = std::move(TargetAimData);
	Parms.ActorLifetime = ActorLifetime;
	Parms.bAttachToOwner = bAttachToOwner;
	Parms.SocketName_0 = SocketName_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterInfo.GetEmoteItemForTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EmoteTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCharacterInfo::GetEmoteItemForTag(const struct FGameplayTag& EmoteTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterInfo", "GetEmoteItemForTag");

	Params::HWCharacterInfo_GetEmoteItemForTag Parms{};

	Parms.EmoteTag = std::move(EmoteTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Tether.OnBeamTetherVisualsActivated
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWGameplayCueNotify_Tether::OnBeamTetherVisualsActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "OnBeamTetherVisualsActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.OnBeamTetherVisualsDeactivated
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWGameplayCueNotify_Tether::OnBeamTetherVisualsDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "OnBeamTetherVisualsDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.OnSplineTetherVisualsActivated
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWGameplayCueNotify_Tether::OnSplineTetherVisualsActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "OnSplineTetherVisualsActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.OnSplineTetherVisualsDeactivated
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWGameplayCueNotify_Tether::OnSplineTetherVisualsDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "OnSplineTetherVisualsDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.UpdateBeamTetherEndPoint
// (BlueprintCosmetic, Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   EndPoint                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Tether::UpdateBeamTetherEndPoint(const struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "UpdateBeamTetherEndPoint");

	Params::HWGameplayCueNotify_Tether_UpdateBeamTetherEndPoint Parms{};

	Parms.EndPoint = std::move(EndPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.UpdateSplineTetherPoints
// (BlueprintCosmetic, Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartPoint                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndPoint                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Tether::UpdateSplineTetherPoints(const struct FVector& StartPoint, const struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "UpdateSplineTetherPoints");

	Params::HWGameplayCueNotify_Tether_UpdateSplineTetherPoints Parms{};

	Parms.StartPoint = std::move(StartPoint);
	Parms.EndPoint = std::move(EndPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.UpdateTetherLocations
// (Native, Protected, BlueprintCallable)

void AHWGameplayCueNotify_Tether::UpdateTetherLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "UpdateTetherLocations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Tether.GetTetherEndPoint
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWGameplayCueNotify_Tether::GetTetherEndPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "GetTetherEndPoint");

	Params::HWGameplayCueNotify_Tether_GetTetherEndPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Tether.GetTetherStartPoint
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWGameplayCueNotify_Tether::GetTetherStartPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "GetTetherStartPoint");

	Params::HWGameplayCueNotify_Tether_GetTetherStartPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Tether.IsActorValidForTether
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameplayCueNotify_Tether::IsActorValidForTether(const class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "IsActorValidForTether");

	Params::HWGameplayCueNotify_Tether_IsActorValidForTether Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Tether.ShouldTetherBeHidden
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameplayCueNotify_Tether::ShouldTetherBeHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Tether", "ShouldTetherBeHidden");

	Params::HWGameplayCueNotify_Tether_ShouldTetherBeHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityCancelInputPressed
// (Final, Native, Public, BlueprintCallable)

void UHWAbilitySystemComponent::AbilityCancelInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityCancelInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityCancelInputReleased
// (Final, Native, Public, BlueprintCallable)

void UHWAbilitySystemComponent::AbilityCancelInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityCancelInputReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityConfirmInputPressed
// (Final, Native, Public, BlueprintCallable)

void UHWAbilitySystemComponent::AbilityConfirmInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityConfirmInputPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityConfirmInputReleased
// (Final, Native, Public, BlueprintCallable)

void UHWAbilitySystemComponent::AbilityConfirmInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityConfirmInputReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityInputTagPressed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AbilityInputTagPressed(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityInputTagPressed");

	Params::HWAbilitySystemComponent_AbilityInputTagPressed Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AbilityInputTagReleased
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AbilityInputTagReleased(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AbilityInputTagReleased");

	Params::HWAbilitySystemComponent_AbilityInputTagReleased Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AddActiveEffectDynamicIgnoreTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AddActiveEffectDynamicIgnoreTag(const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AddActiveEffectDynamicIgnoreTag");

	Params::HWAbilitySystemComponent_AddActiveEffectDynamicIgnoreTag Parms{};

	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AddActiveEffectDynamicRequireTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AddActiveEffectDynamicRequireTag(const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AddActiveEffectDynamicRequireTag");

	Params::HWAbilitySystemComponent_AddActiveEffectDynamicRequireTag Parms{};

	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AddDynamicGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldReplicate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AddDynamicGameplayTag(const struct FGameplayTag& Tag, bool bShouldReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AddDynamicGameplayTag");

	Params::HWAbilitySystemComponent_AddDynamicGameplayTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.bShouldReplicate = bShouldReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AddDynamicGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShouldReplicate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AddDynamicGameplayTags(const struct FGameplayTagContainer& Tags, bool bShouldReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AddDynamicGameplayTags");

	Params::HWAbilitySystemComponent_AddDynamicGameplayTags Parms{};

	Parms.Tags = std::move(Tags);
	Parms.bShouldReplicate = bShouldReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AddForcedFiringInfo
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWForcedCharacterFiringInfo&ForcedFiringInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AddForcedFiringInfo(const struct FHWForcedCharacterFiringInfo& ForcedFiringInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AddForcedFiringInfo");

	Params::HWAbilitySystemComponent_AddForcedFiringInfo Parms{};

	Parms.ForcedFiringInfo = std::move(ForcedFiringInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.AdjustSubscribedAttributeFromCombatEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHWAdjustAttributeEventType             EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWAttributeModifierEnum                AttributeToAdjust                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PreMultiplyAdditiveDelta                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             CoefficientMultiplier                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PostMultiplyAdditiveDelta                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::AdjustSubscribedAttributeFromCombatEvent(EHWAdjustAttributeEventType EventType, EHWAttributeModifierEnum AttributeToAdjust, const float PreMultiplyAdditiveDelta, const float CoefficientMultiplier, const float PostMultiplyAdditiveDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "AdjustSubscribedAttributeFromCombatEvent");

	Params::HWAbilitySystemComponent_AdjustSubscribedAttributeFromCombatEvent Parms{};

	Parms.EventType = EventType;
	Parms.AttributeToAdjust = AttributeToAdjust;
	Parms.PreMultiplyAdditiveDelta = PreMultiplyAdditiveDelta;
	Parms.CoefficientMultiplier = CoefficientMultiplier;
	Parms.PostMultiplyAdditiveDelta = PostMultiplyAdditiveDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.BP_GetActiveEffectsTimeRemainingAndDuration
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectQuery&      Query                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<float>*                          TimesRemaining                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>*                          Durations                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::BP_GetActiveEffectsTimeRemainingAndDuration(const struct FGameplayEffectQuery& Query, TArray<float>* TimesRemaining, TArray<float>* Durations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "BP_GetActiveEffectsTimeRemainingAndDuration");

	Params::HWAbilitySystemComponent_BP_GetActiveEffectsTimeRemainingAndDuration Parms{};

	Parms.Query = std::move(Query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TimesRemaining != nullptr)
		*TimesRemaining = std::move(Parms.TimesRemaining);

	if (Durations != nullptr)
		*Durations = std::move(Parms.Durations);
}


// Function Hemingway.HWAbilitySystemComponent.CalculateForcedFiring
// (Final, Native, Public)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::CalculateForcedFiring(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CalculateForcedFiring");

	Params::HWAbilitySystemComponent_CalculateForcedFiring Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.CancelAbilitiesBasedOnTriggerTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              TriggerTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::CancelAbilitiesBasedOnTriggerTag(const struct FGameplayTag& TriggerTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CancelAbilitiesBasedOnTriggerTag");

	Params::HWAbilitySystemComponent_CancelAbilitiesBasedOnTriggerTag Parms{};

	Parms.TriggerTag = std::move(TriggerTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.CancelAbilitiesBasedOnTriggerTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     TriggerTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::CancelAbilitiesBasedOnTriggerTags(const struct FGameplayTagContainer& TriggerTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CancelAbilitiesBasedOnTriggerTags");

	Params::HWAbilitySystemComponent_CancelAbilitiesBasedOnTriggerTags Parms{};

	Parms.TriggerTags = std::move(TriggerTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.CancelAbilitiesWithTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     WithTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     WithoutTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AbilityToIngnore                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::CancelAbilitiesWithTags(const struct FGameplayTagContainer& WithTags, const struct FGameplayTagContainer& WithoutTags, class UGameplayAbility* AbilityToIngnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CancelAbilitiesWithTags");

	Params::HWAbilitySystemComponent_CancelAbilitiesWithTags Parms{};

	Parms.WithTags = std::move(WithTags);
	Parms.WithoutTags = std::move(WithoutTags);
	Parms.AbilityToIngnore = AbilityToIngnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.CancelTargetingAbilities
// (Final, Native, Public, BlueprintCallable)

void UHWAbilitySystemComponent::CancelTargetingAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CancelTargetingAbilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientAbilityLevelChanged
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientAbilityLevelChanged(const struct FGameplayAbilitySpecHandle& AbilityHandle, const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientAbilityLevelChanged");

	Params::HWAbilitySystemComponent_ClientAbilityLevelChanged Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientCancelAllAbilities
// (Net, NetReliable, Native, Event, Public, NetClient)

void UHWAbilitySystemComponent::ClientCancelAllAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientCancelAllAbilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientExecuteGameplayCuesAtLocation
// (Net, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize&       InLocation                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Magnitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientExecuteGameplayCuesAtLocation(const struct FGameplayTagContainer& InTags, const struct FVector_NetQuantize& InLocation, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientExecuteGameplayCuesAtLocation");

	Params::HWAbilitySystemComponent_ClientExecuteGameplayCuesAtLocation Parms{};

	Parms.InTags = std::move(InTags);
	Parms.InLocation = std::move(InLocation);
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientMarkAbilityBuffering
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityToBuffer                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityActivationInfo&ActivationInfo                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientMarkAbilityBuffering(const struct FGameplayAbilitySpecHandle& AbilityToBuffer, const struct FGameplayAbilityActivationInfo& ActivationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientMarkAbilityBuffering");

	Params::HWAbilitySystemComponent_ClientMarkAbilityBuffering Parms{};

	Parms.AbilityToBuffer = std::move(AbilityToBuffer);
	Parms.ActivationInfo = std::move(ActivationInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientSendGameplayEventToAvatar
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        Payload                                                (Parm, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientSendGameplayEventToAvatar(const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientSendGameplayEventToAvatar");

	Params::HWAbilitySystemComponent_ClientSendGameplayEventToAvatar Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientSetReplicatedEventWithPayload
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EAbilityGenericReplicatedEvent          EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPredictionKey&            AbilityOriginalPredictionKey                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize100&    VectorPayload                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataPayload                                      (Parm, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientSetReplicatedEventWithPayload(EAbilityGenericReplicatedEvent EventType, const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FPredictionKey& AbilityOriginalPredictionKey, const struct FVector_NetQuantize100& VectorPayload, const struct FGameplayAbilityTargetDataHandle& TargetDataPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientSetReplicatedEventWithPayload");

	Params::HWAbilitySystemComponent_ClientSetReplicatedEventWithPayload Parms{};

	Parms.EventType = EventType;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityOriginalPredictionKey = std::move(AbilityOriginalPredictionKey);
	Parms.VectorPayload = std::move(VectorPayload);
	Parms.TargetDataPayload = std::move(TargetDataPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ClientTransitionToAbilityPhase
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityToEnd                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityActivationInfo&ActivationInfo                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EAbilityFlowPhase                       PhaseToEnter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             TimingError                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ClientTransitionToAbilityPhase(const struct FGameplayAbilitySpecHandle& AbilityToEnd, const struct FGameplayAbilityActivationInfo& ActivationInfo, EAbilityFlowPhase PhaseToEnter, const float TimingError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ClientTransitionToAbilityPhase");

	Params::HWAbilitySystemComponent_ClientTransitionToAbilityPhase Parms{};

	Parms.AbilityToEnd = std::move(AbilityToEnd);
	Parms.ActivationInfo = std::move(ActivationInfo);
	Parms.PhaseToEnter = PhaseToEnter;
	Parms.TimingError = TimingError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.GetAbilityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAbilitySystemComponent::GetAbilityLevel(const struct FGameplayAbilitySpecHandle& AbilityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetAbilityLevel");

	Params::HWAbilitySystemComponent_GetAbilityLevel Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.HandleActiveGameplayEffectStackChange
// (Final, Native, Public)
// Parameters:
// const struct FActiveGameplayEffectHandle&EffectHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewStackCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PreviousStackCount                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::HandleActiveGameplayEffectStackChange(const struct FActiveGameplayEffectHandle& EffectHandle, int32 NewStackCount, int32 PreviousStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "HandleActiveGameplayEffectStackChange");

	Params::HWAbilitySystemComponent_HandleActiveGameplayEffectStackChange Parms{};

	Parms.EffectHandle = std::move(EffectHandle);
	Parms.NewStackCount = NewStackCount;
	Parms.PreviousStackCount = PreviousStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.HandleAnyGameplayEffectRemoved
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FActiveGameplayEffect&     ActiveGameplayEffect                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::HandleAnyGameplayEffectRemoved(const struct FActiveGameplayEffect& ActiveGameplayEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "HandleAnyGameplayEffectRemoved");

	Params::HWAbilitySystemComponent_HandleAnyGameplayEffectRemoved Parms{};

	Parms.ActiveGameplayEffect = std::move(ActiveGameplayEffect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.HandleTagUpdated_ForceUseDefaultTargetingAbility
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::HandleTagUpdated_ForceUseDefaultTargetingAbility(const struct FGameplayTag& CallbackTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "HandleTagUpdated_ForceUseDefaultTargetingAbility");

	Params::HWAbilitySystemComponent_HandleTagUpdated_ForceUseDefaultTargetingAbility Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.MulticastAbilityUnlocked
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// const struct FHWInventorySlot&          AbilitySlot                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::MulticastAbilityUnlocked(const struct FHWInventorySlot& AbilitySlot, bool IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "MulticastAbilityUnlocked");

	Params::HWAbilitySystemComponent_MulticastAbilityUnlocked Parms{};

	Parms.AbilitySlot = std::move(AbilitySlot);
	Parms.IsUnlocked = IsUnlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.MulticastExecuteGameplayCuesAtLocation
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FVector_NetQuantize&       InLocation                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Magnitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::MulticastExecuteGameplayCuesAtLocation(const struct FGameplayTagContainer& InTags, const struct FVector_NetQuantize& InLocation, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "MulticastExecuteGameplayCuesAtLocation");

	Params::HWAbilitySystemComponent_MulticastExecuteGameplayCuesAtLocation Parms{};

	Parms.InTags = std::move(InTags);
	Parms.InLocation = std::move(InLocation);
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.NotifyAbilityQuestEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              QuestTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ProgressToAward                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::NotifyAbilityQuestEvent(const struct FGameplayTag& QuestTag, int32 ProgressToAward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "NotifyAbilityQuestEvent");

	Params::HWAbilitySystemComponent_NotifyAbilityQuestEvent Parms{};

	Parms.QuestTag = std::move(QuestTag);
	Parms.ProgressToAward = ProgressToAward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.OnRep_DefaultTargetingAbilityHandle
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayAbilitySpecHandle&PrevDefaultTargetingAbilityHandle                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::OnRep_DefaultTargetingAbilityHandle(const struct FGameplayAbilitySpecHandle& PrevDefaultTargetingAbilityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "OnRep_DefaultTargetingAbilityHandle");

	Params::HWAbilitySystemComponent_OnRep_DefaultTargetingAbilityHandle Parms{};

	Parms.PrevDefaultTargetingAbilityHandle = std::move(PrevDefaultTargetingAbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.QueueTargetingAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bForceSet                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::QueueTargetingAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle, const bool bForceSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "QueueTargetingAbility");

	Params::HWAbilitySystemComponent_QueueTargetingAbility Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.bForceSet = bForceSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RefreshActiveGameplayEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&EffectHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RefreshActiveGameplayEffect(const struct FActiveGameplayEffectHandle& EffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RefreshActiveGameplayEffect");

	Params::HWAbilitySystemComponent_RefreshActiveGameplayEffect Parms{};

	Parms.EffectHandle = std::move(EffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RegisterAbilityQuestListener
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              QuestTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMulticastInlineDelegate<void(int32 ProgressToAward)>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NativeAccessSpecifierPublic)

TMulticastInlineDelegate<void(int32 ProgressToAward)> UHWAbilitySystemComponent::RegisterAbilityQuestListener(const struct FGameplayTag& QuestTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RegisterAbilityQuestListener");

	Params::HWAbilitySystemComponent_RegisterAbilityQuestListener Parms{};

	Parms.QuestTag = std::move(QuestTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.RegisterOnQuestEffectAppliedDelegate
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              EffectTag                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMulticastInlineDelegate<void(const struct FGameplayEffectSpec& ActiveGameplayEffect)>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NativeAccessSpecifierPublic)

TMulticastInlineDelegate<void(const struct FGameplayEffectSpec& ActiveGameplayEffect)> UHWAbilitySystemComponent::RegisterOnQuestEffectAppliedDelegate(const struct FGameplayTag& EffectTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RegisterOnQuestEffectAppliedDelegate");

	Params::HWAbilitySystemComponent_RegisterOnQuestEffectAppliedDelegate Parms{};

	Parms.EffectTag = std::move(EffectTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.RegisterTagListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayTagEventType                   EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RegisterTagListener(const struct FGameplayTag& Tag, EGameplayTagEventType EventType, TDelegate<void(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RegisterTagListener");

	Params::HWAbilitySystemComponent_RegisterTagListener Parms{};

	Parms.Tag = std::move(Tag);
	Parms.EventType = EventType;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RemoveActiveEffectDynamicIgnoreTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RemoveActiveEffectDynamicIgnoreTag(const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RemoveActiveEffectDynamicIgnoreTag");

	Params::HWAbilitySystemComponent_RemoveActiveEffectDynamicIgnoreTag Parms{};

	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RemoveActiveEffectDynamicRequireTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ActiveHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RemoveActiveEffectDynamicRequireTag(const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RemoveActiveEffectDynamicRequireTag");

	Params::HWAbilitySystemComponent_RemoveActiveEffectDynamicRequireTag Parms{};

	Parms.ActiveHandle = std::move(ActiveHandle);
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RemoveDynamicGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldReplicate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RemoveDynamicGameplayTag(const struct FGameplayTag& Tag, bool bShouldReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RemoveDynamicGameplayTag");

	Params::HWAbilitySystemComponent_RemoveDynamicGameplayTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.bShouldReplicate = bShouldReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RemoveDynamicGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShouldReplicate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RemoveDynamicGameplayTags(const struct FGameplayTagContainer& Tags, bool bShouldReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RemoveDynamicGameplayTags");

	Params::HWAbilitySystemComponent_RemoveDynamicGameplayTags Parms{};

	Parms.Tags = std::move(Tags);
	Parms.bShouldReplicate = bShouldReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.RemoveForcedFiringInfo
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ForcedMovementEffectHandle                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::RemoveForcedFiringInfo(const struct FActiveGameplayEffectHandle& ForcedMovementEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "RemoveForcedFiringInfo");

	Params::HWAbilitySystemComponent_RemoveForcedFiringInfo Parms{};

	Parms.ForcedMovementEffectHandle = std::move(ForcedMovementEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ServerCancelTargetingAbility
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityToCancel                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ServerCancelTargetingAbility(const struct FGameplayAbilitySpecHandle& AbilityToCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ServerCancelTargetingAbility");

	Params::HWAbilitySystemComponent_ServerCancelTargetingAbility Parms{};

	Parms.AbilityToCancel = std::move(AbilityToCancel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.ServerSetAbilityLevel
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::ServerSetAbilityLevel(const struct FGameplayAbilitySpecHandle& AbilityHandle, const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "ServerSetAbilityLevel");

	Params::HWAbilitySystemComponent_ServerSetAbilityLevel Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.SetAbilityLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilitySystemComponent::SetAbilityLevel(const struct FGameplayAbilitySpecHandle& AbilityHandle, const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "SetAbilityLevel");

	Params::HWAbilitySystemComponent_SetAbilityLevel Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilitySystemComponent.SetActiveEffectDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&Handle                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewDuration                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemComponent::SetActiveEffectDuration(const struct FActiveGameplayEffectHandle& Handle, float NewDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "SetActiveEffectDuration");

	Params::HWAbilitySystemComponent_SetActiveEffectDuration Parms{};

	Parms.Handle = std::move(Handle);
	Parms.NewDuration = NewDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.CanActivateAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutFailureTags                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemComponent::CanActivateAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle, struct FGameplayTagContainer* OutFailureTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "CanActivateAbility");

	Params::HWAbilitySystemComponent_CanActivateAbility Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFailureTags != nullptr)
		*OutFailureTags = std::move(Parms.OutFailureTags);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetAbilitySpecHandlesWithInputTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayAbilitySpecHandle>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayAbilitySpecHandle> UHWAbilitySystemComponent::GetAbilitySpecHandlesWithInputTag(const struct FGameplayTag& InputTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetAbilitySpecHandlesWithInputTag");

	Params::HWAbilitySystemComponent_GetAbilitySpecHandlesWithInputTag Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetAbilitySystemActorOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* UHWAbilitySystemComponent::GetAbilitySystemActorOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetAbilitySystemActorOwner");

	Params::HWAbilitySystemComponent_GetAbilitySystemActorOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetAbilityWithInputTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayAbility*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayAbility* UHWAbilitySystemComponent::GetAbilityWithInputTag(const struct FGameplayTag& InputTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetAbilityWithInputTag");

	Params::HWAbilitySystemComponent_GetAbilityWithInputTag Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetCastStyleForAbilityWithInputTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle UHWAbilitySystemComponent::GetCastStyleForAbilityWithInputTag(const struct FGameplayTag& InputTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetCastStyleForAbilityWithInputTag");

	Params::HWAbilitySystemComponent_GetCastStyleForAbilityWithInputTag Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetCurrentFiringInstanceIdForAbility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWAbilityFiringInstanceId       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWAbilityFiringInstanceId UHWAbilitySystemComponent::GetCurrentFiringInstanceIdForAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetCurrentFiringInstanceIdForAbility");

	Params::HWAbilitySystemComponent_GetCurrentFiringInstanceIdForAbility Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.GetEquipmentInstanceFromAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWAbilitySystemComponent::GetEquipmentInstanceFromAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "GetEquipmentInstanceFromAbility");

	Params::HWAbilitySystemComponent_GetEquipmentInstanceFromAbility Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.HasForcedFiringEffects
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemComponent::HasForcedFiringEffects() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "HasForcedFiringEffects");

	Params::HWAbilitySystemComponent_HasForcedFiringEffects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.IsAbilityCancelInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bCheckWasPressedThisTick                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemComponent::IsAbilityCancelInputPressed(const bool bCheckWasPressedThisTick) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "IsAbilityCancelInputPressed");

	Params::HWAbilitySystemComponent_IsAbilityCancelInputPressed Parms{};

	Parms.bCheckWasPressedThisTick = bCheckWasPressedThisTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilitySystemComponent.IsAbilityConfirmInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bCheckWasPressedThisTick                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilitySystemComponent::IsAbilityConfirmInputPressed(const bool bCheckWasPressedThisTick) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilitySystemComponent", "IsAbilityConfirmInputPressed");

	Params::HWAbilitySystemComponent_IsAbilityConfirmInputPressed Parms{};

	Parms.bCheckWasPressedThisTick = bCheckWasPressedThisTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_Attack_CloneCharacterSwap.HandleFamiliarMovementModeChanged
// (Final, Native, Protected)
// Parameters:
// class ACharacter*                       FamiliarCharacter                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMovementMode                     PrevMovementMode                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             PreviousCustomMode                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_CloneCharacterSwap::HandleFamiliarMovementModeChanged(class ACharacter* FamiliarCharacter, const EMovementMode PrevMovementMode, const uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_CloneCharacterSwap", "HandleFamiliarMovementModeChanged");

	Params::HWAbilityTask_Attack_CloneCharacterSwap_HandleFamiliarMovementModeChanged Parms{};

	Parms.FamiliarCharacter = FamiliarCharacter;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_CloneCharacterSwap.OnFamiliarDied
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHWActiveFamiliarHandle&   FamiliarHandle                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWActiveFamiliarInfo&     FamiliarInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDamageEventData&          DamageReceivedEvent                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_CloneCharacterSwap::OnFamiliarDied(const struct FHWActiveFamiliarHandle& FamiliarHandle, const struct FHWActiveFamiliarInfo& FamiliarInfo, const struct FDamageEventData& DamageReceivedEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_CloneCharacterSwap", "OnFamiliarDied");

	Params::HWAbilityTask_Attack_CloneCharacterSwap_OnFamiliarDied Parms{};

	Parms.FamiliarHandle = std::move(FamiliarHandle);
	Parms.FamiliarInfo = std::move(FamiliarInfo);
	Parms.DamageReceivedEvent = std::move(DamageReceivedEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_CloneCharacterSwap.OnGameplayEffectAppliedToFamiliar
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          SourceASC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&AppliedEffectHandle                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_Attack_CloneCharacterSwap::OnGameplayEffectAppliedToFamiliar(class UAbilitySystemComponent* SourceASC, const struct FGameplayEffectSpec& EffectSpec, const struct FActiveGameplayEffectHandle& AppliedEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_CloneCharacterSwap", "OnGameplayEffectAppliedToFamiliar");

	Params::HWAbilityTask_Attack_CloneCharacterSwap_OnGameplayEffectAppliedToFamiliar Parms{};

	Parms.SourceASC = SourceASC;
	Parms.EffectSpec = std::move(EffectSpec);
	Parms.AppliedEffectHandle = std::move(AppliedEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Attack_SpawnFamiliar.GetSpawnedFamiliars
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FHWActiveFamiliarHandle>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<struct FHWActiveFamiliarHandle> UHWAbilityTask_Attack_SpawnFamiliar::GetSpawnedFamiliars() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_Attack_SpawnFamiliar", "GetSpawnedFamiliars");

	Params::HWAbilityTask_Attack_SpawnFamiliar_GetSpawnedFamiliars Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_AbilityPhaseTransition.SetAbilityPhaseTransitionTimer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityFlowPhase                       PhaseTransition_0                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_AbilityPhaseTransition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_AbilityPhaseTransition* UHWAbilityTask_AbilityPhaseTransition::SetAbilityPhaseTransitionTimer(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, EAbilityFlowPhase PhaseTransition_0, float TransitionTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_AbilityPhaseTransition", "SetAbilityPhaseTransitionTimer");

	Params::HWAbilityTask_AbilityPhaseTransition_SetAbilityPhaseTransitionTimer Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.PhaseTransition_0 = PhaseTransition_0;
	Parms.TransitionTime_0 = TransitionTime_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.EnterGameplayFlight
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayFlight>    Flight                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Target_0                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AscentDurationOverride_0                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayFlight*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayFlight* UHWAbilityTask_GameplayFlight::EnterGameplayFlight(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayFlight> Flight, class AHWCharacter_Base* Target_0, const float AscentDurationOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayFlight", "EnterGameplayFlight");

	Params::HWAbilityTask_GameplayFlight_EnterGameplayFlight Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Flight = Flight;
	Parms.Target_0 = Target_0;
	Parms.AscentDurationOverride_0 = AscentDurationOverride_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.ActivateFlightAscentTween
// (Final, Native, Public, BlueprintCallable)

void UHWAbilityTask_GameplayFlight::ActivateFlightAscentTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "ActivateFlightAscentTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.ActivateFlightDescentTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&AimData                                                (Parm, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::ActivateFlightDescentTween(const struct FGameplayAbilityTargetDataHandle& AimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "ActivateFlightDescentTween");

	Params::HWAbilityTask_GameplayFlight_ActivateFlightDescentTween Parms{};

	Parms.AimData = std::move(AimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnFlightEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayFlight*                Flight                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndFlightReason                EndFlightReason                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnFlightEnded(class UHWGameplayFlight* Flight, const EHWEndFlightReason EndFlightReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnFlightEnded");

	Params::HWAbilityTask_GameplayFlight_OnFlightEnded Parms{};

	Parms.Flight = Flight;
	Parms.EndFlightReason = EndFlightReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnFlightStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayFlight*                Flight                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnFlightStarted(class UHWGameplayFlight* Flight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnFlightStarted");

	Params::HWAbilityTask_GameplayFlight_OnFlightStarted Parms{};

	Parms.Flight = Flight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnTweenAscentEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnTweenAscentEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnTweenAscentEnded");

	Params::HWAbilityTask_GameplayFlight_OnTweenAscentEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnTweenAscentStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnTweenAscentStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnTweenAscentStarted");

	Params::HWAbilityTask_GameplayFlight_OnTweenAscentStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnTweenDescentEnded
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnTweenDescentEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnTweenDescentEnded");

	Params::HWAbilityTask_GameplayFlight_OnTweenDescentEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayFlight.OnTweenDescentStarted
// (Final, Native, Protected)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                TweenTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayFlight::OnTweenDescentStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayFlight", "OnTweenDescentStarted");

	Params::HWAbilityTask_GameplayFlight_OnTweenDescentStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.TweenTarget = TweenTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayTween.PerformGameplayTweenOnTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayTween>     Tween                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (Parm, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DurationOverride_0                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayTween*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayTween* UHWAbilityTask_GameplayTween::PerformGameplayTweenOnTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayTween> Tween, const struct FGameplayAbilityTargetDataHandle& TargetData, class AHWCharacter_Base* Target, const float DurationOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayTween", "PerformGameplayTweenOnTarget");

	Params::HWAbilityTask_GameplayTween_PerformGameplayTweenOnTarget Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Tween = Tween;
	Parms.TargetData = std::move(TargetData);
	Parms.Target = Target;
	Parms.DurationOverride_0 = DurationOverride_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayTween.PerformGameplayTweenOnTargets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UHWGameplayTween>     Tween                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (Parm, NativeAccessSpecifierPublic)
// const TArray<class AHWCharacter_Base*>& Targets_0                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const float                             DurationOverride_0                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseSameTweenLocForAllTargets                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayTween*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_GameplayTween* UHWAbilityTask_GameplayTween::PerformGameplayTweenOnTargets(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, TSubclassOf<class UHWGameplayTween> Tween, const struct FGameplayAbilityTargetDataHandle& TargetData, const TArray<class AHWCharacter_Base*>& Targets_0, const float DurationOverride_0, const bool bUseSameTweenLocForAllTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_GameplayTween", "PerformGameplayTweenOnTargets");

	Params::HWAbilityTask_GameplayTween_PerformGameplayTweenOnTargets Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Tween = Tween;
	Parms.TargetData = std::move(TargetData);
	Parms.Targets_0 = std::move(Targets_0);
	Parms.DurationOverride_0 = DurationOverride_0;
	Parms.bUseSameTweenLocForAllTargets = bUseSameTweenLocForAllTargets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_GameplayTween.HandleTagUpdated_CCImmunity
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayTween::HandleTagUpdated_CCImmunity(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayTween", "HandleTagUpdated_CCImmunity");

	Params::HWAbilityTask_GameplayTween_HandleTagUpdated_CCImmunity Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayTween.OnTweenEnded
// (Final, Native, Public)
// Parameters:
// class UHWGameplayTween*                 Tween                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayTween::OnTweenEnded(class UHWGameplayTween* Tween, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayTween", "OnTweenEnded");

	Params::HWAbilityTask_GameplayTween_OnTweenEnded Parms{};

	Parms.Tween = Tween;
	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_GameplayTween.OnTweenStarted
// (Final, Native, Public)
// Parameters:
// class UHWGameplayTween*                 Tween                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_GameplayTween::OnTweenStarted(class UHWGameplayTween* Tween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_GameplayTween", "OnTweenStarted");

	Params::HWAbilityTask_GameplayTween_OnTweenStarted Parms{};

	Parms.Tween = Tween;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_MovementSpeedOverTime.ApplyMovementSpeedOverTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      MovementSpeedOverTimeCurve_0                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProcessAsSlow_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClientPredictive_0                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStrafeBackpedalImmunity_0                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_MovementSpeedOverTime*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_MovementSpeedOverTime* UHWAbilityTask_MovementSpeedOverTime::ApplyMovementSpeedOverTime(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UCurveFloat* MovementSpeedOverTimeCurve_0, float Duration_0, bool bProcessAsSlow_0, bool bClientPredictive_0, bool bStrafeBackpedalImmunity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_MovementSpeedOverTime", "ApplyMovementSpeedOverTime");

	Params::HWAbilityTask_MovementSpeedOverTime_ApplyMovementSpeedOverTime Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MovementSpeedOverTimeCurve_0 = MovementSpeedOverTimeCurve_0;
	Parms.Duration_0 = Duration_0;
	Parms.bProcessAsSlow_0 = bProcessAsSlow_0;
	Parms.bClientPredictive_0 = bClientPredictive_0;
	Parms.bStrafeBackpedalImmunity_0 = bStrafeBackpedalImmunity_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_SpawnProjectile.SpawnProjectileTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWAbilityAttackSettings_Projectile*ProjectileAttackSettings_0                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetAimData                                          (Parm, NativeAccessSpecifierPublic)
// class AActor*                           HomingTarget_0                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_SpawnProjectile*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_SpawnProjectile* UHWAbilityTask_SpawnProjectile::SpawnProjectileTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const class UHWAbilityAttackSettings_Projectile* ProjectileAttackSettings_0, const struct FGameplayAbilityTargetDataHandle& TargetAimData, class AActor* HomingTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_SpawnProjectile", "SpawnProjectileTask");

	Params::HWAbilityTask_SpawnProjectile_SpawnProjectileTask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ProjectileAttackSettings_0 = ProjectileAttackSettings_0;
	Parms.TargetAimData = std::move(TargetAimData);
	Parms.HomingTarget_0 = HomingTarget_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_SpawnProjectile.IsInhandProjectile
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbilityTask_SpawnProjectile::IsInhandProjectile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_SpawnProjectile", "IsInhandProjectile");

	Params::HWAbilityTask_SpawnProjectile_IsInhandProjectile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAbilityEnd.WaitForAbilityEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              WithTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              WithoutTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitAbilityEnd*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitAbilityEnd* UHWAbilityTask_WaitAbilityEnd::WaitForAbilityEnd(class UGameplayAbility* OwningAbility, const struct FGameplayTag& WithTag, const struct FGameplayTag& WithoutTag, bool TriggerOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitAbilityEnd", "WaitForAbilityEnd");

	Params::HWAbilityTask_WaitAbilityEnd_WaitForAbilityEnd Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.WithTag = std::move(WithTag);
	Parms.WithoutTag = std::move(WithoutTag);
	Parms.TriggerOnce = TriggerOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAbilityEnd.WaitForAbilityEnd_Query
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         Query                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    TriggerOnce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitAbilityEnd*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitAbilityEnd* UHWAbilityTask_WaitAbilityEnd::WaitForAbilityEnd_Query(class UGameplayAbility* OwningAbility, const struct FGameplayTagQuery& Query, bool TriggerOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitAbilityEnd", "WaitForAbilityEnd_Query");

	Params::HWAbilityTask_WaitAbilityEnd_WaitForAbilityEnd_Query Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Query = std::move(Query);
	Parms.TriggerOnce = TriggerOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitAbilityEnd.OnAbilityEnd
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FAbilityEndedData&         AbilityEndData                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitAbilityEnd::OnAbilityEnd(const struct FAbilityEndedData& AbilityEndData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitAbilityEnd", "OnAbilityEnd");

	Params::HWAbilityTask_WaitAbilityEnd_OnAbilityEnd Parms{};

	Parms.AbilityEndData = std::move(AbilityEndData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitForRefire.WaitForRefire
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             RefireWindowTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWAbilityRefireInfo&      RefireInfo_0                                           (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UHWAbilityTask_WaitForRefire*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_WaitForRefire* UHWAbilityTask_WaitForRefire::WaitForRefire(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const float RefireWindowTime, const struct FHWAbilityRefireInfo& RefireInfo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_WaitForRefire", "WaitForRefire");

	Params::HWAbilityTask_WaitForRefire_WaitForRefire Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.RefireWindowTime = RefireWindowTime;
	Parms.RefireInfo_0 = std::move(RefireInfo_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitForRefire.GetRefireComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UHWEquipmentComponent_Refireable* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentComponent_Refireable* UHWAbilityTask_WaitForRefire::GetRefireComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitForRefire", "GetRefireComponent");

	Params::HWAbilityTask_WaitForRefire_GetRefireComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbilityTask_WaitForRefire.OnAbilityInputPressed
// (Final, Native, Protected)
// Parameters:
// float                                   TimeWaited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbilityTask_WaitForRefire::OnAbilityInputPressed(float TimeWaited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitForRefire", "OnAbilityInputPressed");

	Params::HWAbilityTask_WaitForRefire_OnAbilityInputPressed Parms{};

	Parms.TimeWaited = TimeWaited;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitForRefire.OnLocalRefireConfirmCallback
// (Final, Native, Protected)

void UHWAbilityTask_WaitForRefire::OnLocalRefireConfirmCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitForRefire", "OnLocalRefireConfirmCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_WaitForRefire.TriggerRefire
// (Final, Native, Protected)

void UHWAbilityTask_WaitForRefire::TriggerRefire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbilityTask_WaitForRefire", "TriggerRefire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.HandleOnPendingPurchaseReceived
// (Final, Native, Private)

void AHWDraftReplicatedActor::HandleOnPendingPurchaseReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "HandleOnPendingPurchaseReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.OnRep_BenchChoices
// (Final, Native, Protected)

void AHWDraftReplicatedActor::OnRep_BenchChoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "OnRep_BenchChoices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.RequestReroll
// (Final, Native, Public, BlueprintCallable)

void AHWDraftReplicatedActor::RequestReroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "RequestReroll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.RequestSelectTaskWithRandomChoice
// (Final, Native, Public, BlueprintCallable)

void AHWDraftReplicatedActor::RequestSelectTaskWithRandomChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "RequestSelectTaskWithRandomChoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.ServerCheatRequestRandomCharacterWithHealerTier
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWDraftHealerRequirement               HealerRequirement                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDraftReplicatedActor::ServerCheatRequestRandomCharacterWithHealerTier(const struct FDraftTaskId& TaskId, EHWDraftHealerRequirement HealerRequirement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "ServerCheatRequestRandomCharacterWithHealerTier");

	Params::HWDraftReplicatedActor_ServerCheatRequestRandomCharacterWithHealerTier Parms{};

	Parms.TaskId = std::move(TaskId);
	Parms.HealerRequirement = HealerRequirement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.ServerRequestFullInventoryUpdate
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void AHWDraftReplicatedActor::ServerRequestFullInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "ServerRequestFullInventoryUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.ServerRequestReroll
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDraftReplicatedActor::ServerRequestReroll(const struct FDraftTaskId& TaskId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "ServerRequestReroll");

	Params::HWDraftReplicatedActor_ServerRequestReroll Parms{};

	Parms.TaskId = std::move(TaskId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.ServerRequestSelectWithRandomChoice
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDraftReplicatedActor::ServerRequestSelectWithRandomChoice(const struct FDraftTaskId& TaskId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "ServerRequestSelectWithRandomChoice");

	Params::HWDraftReplicatedActor_ServerRequestSelectWithRandomChoice Parms{};

	Parms.TaskId = std::move(TaskId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDraftReplicatedActor.GetDraftType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWDraftType                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWDraftType AHWDraftReplicatedActor::GetDraftType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "GetDraftType");

	Params::HWDraftReplicatedActor_GetDraftType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDraftReplicatedActor.HasRerolled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDraftReplicatedActor::HasRerolled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDraftReplicatedActor", "HasRerolled");

	Params::HWDraftReplicatedActor_HasRerolled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCameraModifier_RotationOverTime.InitializeRotationOverTime
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  InDesiredEndRotation                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDuration                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCameraModifier_RotationOverTime::InitializeRotationOverTime(const struct FRotator& InDesiredEndRotation, const float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCameraModifier_RotationOverTime", "InitializeRotationOverTime");

	Params::HWCameraModifier_RotationOverTime_InitializeRotationOverTime Parms{};

	Parms.InDesiredEndRotation = std::move(InDesiredEndRotation);
	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoSkillComponent.DisableAutoSkill
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWAutoSkillComponent::DisableAutoSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "DisableAutoSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoSkillComponent.EnableAutoSkill
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWAutoSkillComponent::EnableAutoSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "EnableAutoSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoSkillComponent.OnInventoryManagerChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharASA                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWInventoryManagerComponent*     InventoryManagerComp                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAutoSkillComponent::OnInventoryManagerChanged(class AHWCharacterAbilitySystemActor* CharASA, class UHWInventoryManagerComponent* InventoryManagerComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "OnInventoryManagerChanged");

	Params::HWAutoSkillComponent_OnInventoryManagerChanged Parms{};

	Parms.CharASA = CharASA;
	Parms.InventoryManagerComp = InventoryManagerComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoSkillComponent.ServerSetAutoSkillState
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAutoSkillComponent::ServerSetAutoSkillState(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "ServerSetAutoSkillState");

	Params::HWAutoSkillComponent_ServerSetAutoSkillState Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAutoSkillComponent.CanUseAutoSkill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAutoSkillComponent::CanUseAutoSkill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "CanUseAutoSkill");

	Params::HWAutoSkillComponent_CanUseAutoSkill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAutoSkillComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAutoSkillComponent::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAutoSkillComponent", "IsEnabled");

	Params::HWAutoSkillComponent_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.AddForceMovementInfo
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWForcedCharacterMovementInfo&ForcedMoveInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::AddForceMovementInfo(const struct FHWForcedCharacterMovementInfo& ForcedMoveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "AddForceMovementInfo");

	Params::HWCharacterMovementComponent_AddForceMovementInfo Parms{};

	Parms.ForcedMoveInfo = std::move(ForcedMoveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.AttemptStartDash
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWGameplayDash>      Dash                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 InstigatingAbility                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetDataHandle                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const float                             DurationOverride                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  DashRotation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UHWGameplayDash*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayDash* UHWCharacterMovementComponent::AttemptStartDash(TSubclassOf<class UHWGameplayDash> Dash, class AActor* Instigator, class UGameplayAbility* InstigatingAbility, const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, const float DurationOverride, const struct FRotator& DashRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "AttemptStartDash");

	Params::HWCharacterMovementComponent_AttemptStartDash Parms{};

	Parms.Dash = Dash;
	Parms.Instigator = Instigator;
	Parms.InstigatingAbility = InstigatingAbility;
	Parms.TargetDataHandle = std::move(TargetDataHandle);
	Parms.DurationOverride = DurationOverride;
	Parms.DashRotation = std::move(DashRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.ClientEndDashCollidedTrigger
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FHWDashEndInfo&            EndInfo                                                (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FPredictionKey&            PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::ClientEndDashCollidedTrigger(const struct FHWDashEndInfo& EndInfo, const struct FPredictionKey& PredictionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "ClientEndDashCollidedTrigger");

	Params::HWCharacterMovementComponent_ClientEndDashCollidedTrigger Parms{};

	Parms.EndInfo = std::move(EndInfo);
	Parms.PredictionKey = std::move(PredictionKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.EndAllCurrentAndPendingCustomMovement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWEndCustomMovementRules& EndCustomMovementRules                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::EndAllCurrentAndPendingCustomMovement(const struct FHWEndCustomMovementRules& EndCustomMovementRules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "EndAllCurrentAndPendingCustomMovement");

	Params::HWCharacterMovementComponent_EndAllCurrentAndPendingCustomMovement Parms{};

	Parms.EndCustomMovementRules = std::move(EndCustomMovementRules);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.EndFlight
// (Final, Native, Public, BlueprintCallable)

void UHWCharacterMovementComponent::EndFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "EndFlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.EndGrab
// (Final, Native, Public, BlueprintCallable)

void UHWCharacterMovementComponent::EndGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "EndGrab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.EndTween
// (Final, Native, Public, BlueprintCallable)

void UHWCharacterMovementComponent::EndTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "EndTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.ForceClientPendingDashUpdate
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UHWGameplayDash*                  ServerCurrentPendingDash                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::ForceClientPendingDashUpdate(class UHWGameplayDash* ServerCurrentPendingDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "ForceClientPendingDashUpdate");

	Params::HWCharacterMovementComponent_ForceClientPendingDashUpdate Parms{};

	Parms.ServerCurrentPendingDash = ServerCurrentPendingDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnAttributeSystemAssigned
// (Final, Native, Protected)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OldAbilitySystem                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::OnAttributeSystemAssigned(class UHWAbilitySystemComponent* AbilitySystem, class UHWAbilitySystemComponent* OldAbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnAttributeSystemAssigned");

	Params::HWCharacterMovementComponent_OnAttributeSystemAssigned Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.OldAbilitySystem = OldAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnInhandTagAddedOrRemoved
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TagCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::OnInhandTagAddedOrRemoved(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnInhandTagAddedOrRemoved");

	Params::HWCharacterMovementComponent_OnInhandTagAddedOrRemoved Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagCount = TagCount;
	Parms.AbilitySystem = AbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_ClientEndDashExpiredTrigger
// (Native, Protected)

void UHWCharacterMovementComponent::OnRep_ClientEndDashExpiredTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_ClientEndDashExpiredTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_PendingDash
// (Native, Protected)

void UHWCharacterMovementComponent::OnRep_PendingDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_PendingDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_PendingFlight
// (Native, Protected)

void UHWCharacterMovementComponent::OnRep_PendingFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_PendingFlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_PendingGrab
// (Native, Protected)

void UHWCharacterMovementComponent::OnRep_PendingGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_PendingGrab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_PendingLevitation
// (Final, Native, Public)

void UHWCharacterMovementComponent::OnRep_PendingLevitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_PendingLevitation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.OnRep_PendingTween
// (Native, Protected)

void UHWCharacterMovementComponent::OnRep_PendingTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "OnRep_PendingTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.RemoveForceMovementInfo
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FActiveGameplayEffectHandle&ForcedMovementEffectHandle                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::RemoveForceMovementInfo(const struct FActiveGameplayEffectHandle& ForcedMovementEffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "RemoveForceMovementInfo");

	Params::HWCharacterMovementComponent_RemoveForceMovementInfo Parms{};

	Parms.ForcedMovementEffectHandle = std::move(ForcedMovementEffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.ServerEndDashCollided
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FHWDashEndInfo&            DashEndInfo                                            (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWCharacterMovementComponent::ServerEndDashCollided(const struct FHWDashEndInfo& DashEndInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "ServerEndDashCollided");

	Params::HWCharacterMovementComponent_ServerEndDashCollided Parms{};

	Parms.DashEndInfo = std::move(DashEndInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacterMovementComponent.StartFlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWGameplayFlight>    Flight                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 InstigatingAbility                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             AscentDurationOverride                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayFlight*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayFlight* UHWCharacterMovementComponent::StartFlight(TSubclassOf<class UHWGameplayFlight> Flight, class AActor* Instigator, class UGameplayAbility* InstigatingAbility, const float AscentDurationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "StartFlight");

	Params::HWCharacterMovementComponent_StartFlight Parms{};

	Parms.Flight = Flight;
	Parms.Instigator = Instigator;
	Parms.InstigatingAbility = InstigatingAbility;
	Parms.AscentDurationOverride = AscentDurationOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.StartGrab
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWGameplayGrab>      Grab                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGrabInfo*                     GrabInfo                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayGrab*      GrabTask                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayGrab*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayGrab* UHWCharacterMovementComponent::StartGrab(TSubclassOf<class UHWGameplayGrab> Grab, struct FHWGrabInfo* GrabInfo, class UHWAbilityTask_GameplayGrab* GrabTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "StartGrab");

	Params::HWCharacterMovementComponent_StartGrab Parms{};

	Parms.Grab = Grab;
	Parms.GrabTask = GrabTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GrabInfo != nullptr)
		*GrabInfo = std::move(Parms.GrabInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.StartNonAbilityTween
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWGameplayTween>     Tween                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DurationOverride                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         TargetDest                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FollowTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldMaintainCharacterCollision                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayTween*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayTween* UHWCharacterMovementComponent::StartNonAbilityTween(TSubclassOf<class UHWGameplayTween> Tween, const struct FGameplayAbilityTargetDataHandle& TargetData, class AActor* Instigator, const float DurationOverride, struct FVector* TargetDest, class AActor* FollowTarget, bool bShouldMaintainCharacterCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "StartNonAbilityTween");

	Params::HWCharacterMovementComponent_StartNonAbilityTween Parms{};

	Parms.Tween = Tween;
	Parms.TargetData = std::move(TargetData);
	Parms.Instigator = Instigator;
	Parms.DurationOverride = DurationOverride;
	Parms.FollowTarget = FollowTarget;
	Parms.bShouldMaintainCharacterCollision = bShouldMaintainCharacterCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TargetDest != nullptr)
		*TargetDest = std::move(Parms.TargetDest);

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.StartTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UHWGameplayTween>     Tween                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 InstigatingAbility                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DurationOverride                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayTween*     TaskSource                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWGameplayTween*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayTween* UHWCharacterMovementComponent::StartTween(TSubclassOf<class UHWGameplayTween> Tween, const struct FGameplayAbilityTargetDataHandle& TargetData, class AActor* Instigator, class UGameplayAbility* InstigatingAbility, const float DurationOverride, class UHWAbilityTask_GameplayTween* TaskSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "StartTween");

	Params::HWCharacterMovementComponent_StartTween Parms{};

	Parms.Tween = Tween;
	Parms.TargetData = std::move(TargetData);
	Parms.Instigator = Instigator;
	Parms.InstigatingAbility = InstigatingAbility;
	Parms.DurationOverride = DurationOverride;
	Parms.TaskSource = TaskSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetActorDashStoppedOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UHWCharacterMovementComponent::GetActorDashStoppedOn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetActorDashStoppedOn");

	Params::HWCharacterMovementComponent_GetActorDashStoppedOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentCustomMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCustomMovementMode                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWCustomMovementMode UHWCharacterMovementComponent::GetCurrentCustomMovementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentCustomMovementMode");

	Params::HWCharacterMovementComponent_GetCurrentCustomMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayDash*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayDash* UHWCharacterMovementComponent::GetCurrentDash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentDash");

	Params::HWCharacterMovementComponent_GetCurrentDash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentFlight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayFlight*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayFlight* UHWCharacterMovementComponent::GetCurrentFlight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentFlight");

	Params::HWCharacterMovementComponent_GetCurrentFlight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentGrab
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayGrab*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayGrab* UHWCharacterMovementComponent::GetCurrentGrab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentGrab");

	Params::HWCharacterMovementComponent_GetCurrentGrab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentLevitationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWLevitationState                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWLevitationState UHWCharacterMovementComponent::GetCurrentLevitationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentLevitationState");

	Params::HWCharacterMovementComponent_GetCurrentLevitationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetCurrentTween
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWGameplayTween*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWGameplayTween* UHWCharacterMovementComponent::GetCurrentTween() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetCurrentTween");

	Params::HWCharacterMovementComponent_GetCurrentTween Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetLastValidGroundLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              PlaneOfExistence                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWCharacterMovementComponent::GetLastValidGroundLocation(const struct FGameplayTag& PlaneOfExistence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetLastValidGroundLocation");

	Params::HWCharacterMovementComponent_GetLastValidGroundLocation Parms{};

	Parms.PlaneOfExistence = std::move(PlaneOfExistence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetMaxSpeedWithoutGroundModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWCharacterMovementComponent::GetMaxSpeedWithoutGroundModifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetMaxSpeedWithoutGroundModifier");

	Params::HWCharacterMovementComponent_GetMaxSpeedWithoutGroundModifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetPendingGrab
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWGameplayGrab*            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWGameplayGrab* UHWCharacterMovementComponent::GetPendingGrab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetPendingGrab");

	Params::HWCharacterMovementComponent_GetPendingGrab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.GetPendingTween
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWGameplayTween*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWGameplayTween* UHWCharacterMovementComponent::GetPendingTween() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "GetPendingTween");

	Params::HWCharacterMovementComponent_GetPendingTween Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacterMovementComponent.HasValidGroundLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCharacterMovementComponent::HasValidGroundLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacterMovementComponent", "HasValidGroundLocation");

	Params::HWCharacterMovementComponent_HasValidGroundLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWChatManagerMessageFormatter.FormatText
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const class FText&                      InUnformattedText                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UObject*                    ContextObject                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHWChatManagerMessageFormatter::FormatText(const class FText& InUnformattedText, const class UObject* ContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWChatManagerMessageFormatter", "FormatText");

	Params::HWChatManagerMessageFormatter_FormatText Parms{};

	Parms.InUnformattedText = std::move(InUnformattedText);
	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.ApplyApparelAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UHWApparelItem*                   ApparelAsset                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWAppliedApparelKey*            OutKey                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWApparelComponent::ApplyApparelAsset(class UHWApparelItem* ApparelAsset, struct FHWAppliedApparelKey* OutKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "ApplyApparelAsset");

	Params::HWApparelComponent_ApplyApparelAsset Parms{};

	Parms.ApparelAsset = ApparelAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutKey != nullptr)
		*OutKey = std::move(Parms.OutKey);

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.OnRep_ApparelAssets
// (Native, Protected)

void UHWApparelComponent::OnRep_ApparelAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "OnRep_ApparelAssets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWApparelComponent.RemoveApparelAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWAppliedApparelKey&      InKey                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWApparelComponent::RemoveApparelAsset(const struct FHWAppliedApparelKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "RemoveApparelAsset");

	Params::HWApparelComponent_RemoveApparelAsset Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.TryToMarkAsNoApparel
// (Final, Native, Public, BlueprintCallable)

void UHWApparelComponent::TryToMarkAsNoApparel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "TryToMarkAsNoApparel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWApparelComponent.GetSkinnedAudio
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedMetaSoundInfo          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedMetaSoundInfo UHWApparelComponent::GetSkinnedAudio(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedAudio");

	Params::HWApparelComponent_GetSkinnedAudio Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedMaterial
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedMaterialInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedMaterialInfo UHWApparelComponent::GetSkinnedMaterial(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedMaterial");

	Params::HWApparelComponent_GetSkinnedMaterial Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWMontageInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWMontageInfo UHWApparelComponent::GetSkinnedMontage(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedMontage");

	Params::HWApparelComponent_GetSkinnedMontage Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedNiagaraSystem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedNiagaraInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedNiagaraInfo UHWApparelComponent::GetSkinnedNiagaraSystem(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedNiagaraSystem");

	Params::HWApparelComponent_GetSkinnedNiagaraSystem Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedOptionalDataAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWDataAssetInfo                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWDataAssetInfo UHWApparelComponent::GetSkinnedOptionalDataAsset(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedOptionalDataAsset");

	Params::HWApparelComponent_GetSkinnedOptionalDataAsset Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedSkeletalMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedSkeletalMeshInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedSkeletalMeshInfo UHWApparelComponent::GetSkinnedSkeletalMesh(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedSkeletalMesh");

	Params::HWApparelComponent_GetSkinnedSkeletalMesh Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.GetSkinnedStaticMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedStaticMeshInfo         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedStaticMeshInfo UHWApparelComponent::GetSkinnedStaticMesh(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "GetSkinnedStaticMesh");

	Params::HWApparelComponent_GetSkinnedStaticMesh Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWApparelComponent.IsApparelApplicationPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWApparelComponent::IsApparelApplicationPending() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWApparelComponent", "IsApparelApplicationPending");

	Params::HWApparelComponent_IsApparelApplicationPending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInWorldTextWidgetComponent.SetInWorldText
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      NewInWorldText                                         (Parm, NativeAccessSpecifierPublic)

void UHWInWorldTextWidgetComponent::SetInWorldText(const class FText& NewInWorldText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInWorldTextWidgetComponent", "SetInWorldText");

	Params::HWInWorldTextWidgetComponent_SetInWorldText Parms{};

	Parms.NewInWorldText = std::move(NewInWorldText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.HandleSkinningTargetChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           NewSkinningTarget                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLoadoutComponent::HandleSkinningTargetChanged(class AActor* NewSkinningTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "HandleSkinningTargetChanged");

	Params::HWLoadoutComponent_HandleSkinningTargetChanged Parms{};

	Parms.NewSkinningTarget = NewSkinningTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.OnRep_CharacterItem
// (Final, Native, Protected)

void UHWLoadoutComponent::OnRep_CharacterItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "OnRep_CharacterItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.OnRep_SkinItem
// (Final, Native, Protected)

void UHWLoadoutComponent::OnRep_SkinItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "OnRep_SkinItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.OnRep_VoicePackItem
// (Final, Native, Protected)

void UHWLoadoutComponent::OnRep_VoicePackItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "OnRep_VoicePackItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.ServerLoadCosmeticItems
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const TArray<struct FHWCosmeticLoadoutInfo>&Cosmetics                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWLoadoutComponent::ServerLoadCosmeticItems(const TArray<struct FHWCosmeticLoadoutInfo>& Cosmetics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "ServerLoadCosmeticItems");

	Params::HWLoadoutComponent_ServerLoadCosmeticItems Parms{};

	Parms.Cosmetics = std::move(Cosmetics);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLoadoutComponent.GetAssetBundleForCosmeticTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<EHWCollectionItemType>&    CosmeticTypes                                          (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutBundles                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWLoadoutComponent::GetAssetBundleForCosmeticTypes(const TArray<EHWCollectionItemType>& CosmeticTypes, TArray<class FName>* OutBundles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "GetAssetBundleForCosmeticTypes");

	Params::HWLoadoutComponent_GetAssetBundleForCosmeticTypes Parms{};

	Parms.CosmeticTypes = std::move(CosmeticTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBundles != nullptr)
		*OutBundles = std::move(Parms.OutBundles);
}


// Function Hemingway.HWLoadoutComponent.GetCosmeticItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCollectionItemType                   CosmeticItemType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCollectionItem*          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCollectionItem* UHWLoadoutComponent::GetCosmeticItem(EHWCollectionItemType CosmeticItemType, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "GetCosmeticItem");

	Params::HWLoadoutComponent_GetCosmeticItem Parms{};

	Parms.CosmeticItemType = CosmeticItemType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLoadoutComponent.GetCurrentCharacterItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWLoadoutComponent::GetCurrentCharacterItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "GetCurrentCharacterItem");

	Params::HWLoadoutComponent_GetCurrentCharacterItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLoadoutComponent.GetCurrentSkinItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* UHWLoadoutComponent::GetCurrentSkinItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "GetCurrentSkinItem");

	Params::HWLoadoutComponent_GetCurrentSkinItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLoadoutComponent.GetCurrentVoicePackItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWVoicePackItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWVoicePackItem* UHWLoadoutComponent::GetCurrentVoicePackItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "GetCurrentVoicePackItem");

	Params::HWLoadoutComponent_GetCurrentVoicePackItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLoadoutComponent.IsLocalOnlyCosmetic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EHWCollectionItemType             CosmeticType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLoadoutComponent::IsLocalOnlyCosmetic(const EHWCollectionItemType CosmeticType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "IsLocalOnlyCosmetic");

	Params::HWLoadoutComponent_IsLocalOnlyCosmetic Parms{};

	Parms.CosmeticType = CosmeticType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLoadoutComponent.LogCosmeticInventory
// (Final, Native, Public, BlueprintCallable, Const)

void UHWLoadoutComponent::LogCosmeticInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLoadoutComponent", "LogCosmeticInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectileMovementComponent.SetHomingTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   DesiredHomingLocation                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldSeekToLocation_0                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWProjectileMovementComponent::SetHomingTargetLocation(const struct FVector& DesiredHomingLocation, const bool bShouldSeekToLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "SetHomingTargetLocation");

	Params::HWProjectileMovementComponent_SetHomingTargetLocation Parms{};

	Parms.DesiredHomingLocation = std::move(DesiredHomingLocation);
	Parms.bShouldSeekToLocation_0 = bShouldSeekToLocation_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectileMovementComponent.SetRotationDirectlyToHomingTarget
// (Final, Native, Public, BlueprintCallable)

void UHWProjectileMovementComponent::SetRotationDirectlyToHomingTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "SetRotationDirectlyToHomingTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectileMovementComponent.SetVelocityDirectlyToHomingTarget
// (Final, Native, Public, BlueprintCallable)

void UHWProjectileMovementComponent::SetVelocityDirectlyToHomingTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "SetVelocityDirectlyToHomingTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWProjectileMovementComponent.GetHomingDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWProjectileMovementComponent::GetHomingDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "GetHomingDirection");

	Params::HWProjectileMovementComponent_GetHomingDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectileMovementComponent.GetHomingTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWProjectileMovementComponent::GetHomingTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "GetHomingTargetLocation");

	Params::HWProjectileMovementComponent_GetHomingTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWProjectileMovementComponent.IsHomingToLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWProjectileMovementComponent::IsHomingToLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWProjectileMovementComponent", "IsHomingToLocation");

	Params::HWProjectileMovementComponent_IsHomingToLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshComponent.AddOverlayMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               NewOverlayMaterial                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              PriorityTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PriorityModifier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWMaterialOverlayHandle         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWMaterialOverlayHandle UHWSkeletalMeshComponent::AddOverlayMaterial(class UMaterialInterface* NewOverlayMaterial, const struct FGameplayTag& PriorityTag, int32 PriorityModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "AddOverlayMaterial");

	Params::HWSkeletalMeshComponent_AddOverlayMaterial Parms{};

	Parms.NewOverlayMaterial = NewOverlayMaterial;
	Parms.PriorityTag = std::move(PriorityTag);
	Parms.PriorityModifier = PriorityModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshComponent.ApplyNewMaterialWithOldMaterialsTextures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               NewMaterialTemplate                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearOverlayMaterials                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SwapDiffuse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SwapNormal                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SwapP1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DiffuseMapParameterName                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NormalMapParameterName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             P1ParameterName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkeletalMeshComponent::ApplyNewMaterialWithOldMaterialsTextures(class UMaterialInterface* NewMaterialTemplate, bool bClearOverlayMaterials, bool SwapDiffuse, bool SwapNormal, bool SwapP1, class FName DiffuseMapParameterName, class FName NormalMapParameterName, class FName P1ParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "ApplyNewMaterialWithOldMaterialsTextures");

	Params::HWSkeletalMeshComponent_ApplyNewMaterialWithOldMaterialsTextures Parms{};

	Parms.NewMaterialTemplate = NewMaterialTemplate;
	Parms.bClearOverlayMaterials = bClearOverlayMaterials;
	Parms.SwapDiffuse = SwapDiffuse;
	Parms.SwapNormal = SwapNormal;
	Parms.SwapP1 = SwapP1;
	Parms.DiffuseMapParameterName = DiffuseMapParameterName;
	Parms.NormalMapParameterName = NormalMapParameterName;
	Parms.P1ParameterName = P1ParameterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshComponent.FreezeSkeleton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFreeze                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkeletalMeshComponent::FreezeSkeleton(bool bFreeze)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "FreezeSkeleton");

	Params::HWSkeletalMeshComponent_FreezeSkeleton Parms{};

	Parms.bFreeze = bFreeze;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshComponent.HandleOnDeath
// (Final, Native, Public)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWSkeletalMeshComponent::HandleOnDeath(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "HandleOnDeath");

	Params::HWSkeletalMeshComponent_HandleOnDeath Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshComponent.ReapplyVXGOnSkinApplied
// (Final, Native, Protected)

void UHWSkeletalMeshComponent::ReapplyVXGOnSkinApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "ReapplyVXGOnSkinApplied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkeletalMeshComponent.RemoveOverlayMaterial
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHWMaterialOverlayHandle&        Handle                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWSkeletalMeshComponent::RemoveOverlayMaterial(struct FHWMaterialOverlayHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "RemoveOverlayMaterial");

	Params::HWSkeletalMeshComponent_RemoveOverlayMaterial Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function Hemingway.HWSkeletalMeshComponent.IsOverlayMaterialActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWMaterialOverlayHandle&  Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkeletalMeshComponent::IsOverlayMaterialActive(const struct FHWMaterialOverlayHandle& Handle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "IsOverlayMaterialActive");

	Params::HWSkeletalMeshComponent_IsOverlayMaterialActive Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshComponent.IsUsingTemporaryMeshOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkeletalMeshComponent::IsUsingTemporaryMeshOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshComponent", "IsUsingTemporaryMeshOverride");

	Params::HWSkeletalMeshComponent_IsUsingTemporaryMeshOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVgsComponent.HandleOnNewSkinTagAsset
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVgsComponent::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVgsComponent", "HandleOnNewSkinTagAsset");

	Params::HWVgsComponent_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVgsComponent.HandleOnSkinTagAssetRemoved
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVgsComponent::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVgsComponent", "HandleOnSkinTagAssetRemoved");

	Params::HWVgsComponent_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVgsComponent.OnRep_SkinTagContainerChanged
// (Final, Native, Protected)

void UHWVgsComponent::OnRep_SkinTagContainerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVgsComponent", "OnRep_SkinTagContainerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVgsComponent.OnRep_VoicePackItem
// (Final, Native, Protected)

void UHWVgsComponent::OnRep_VoicePackItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVgsComponent", "OnRep_VoicePackItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.CacheProximityVisibleState
// (Final, Native, Protected)

void UHWVisibilityComponent_PlayableCharacter::CacheProximityVisibleState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "CacheProximityVisibleState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.HandleAbilitySystemUpdated
// (Final, Native, Public)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::HandleAbilitySystemUpdated(class UHWAbilitySystemComponent* AbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "HandleAbilitySystemUpdated");

	Params::HWVisibilityComponent_PlayableCharacter_HandleAbilitySystemUpdated Parms{};

	Parms.AbilitySystem = AbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.HandleCharacterChanged
// (Final, Native, Public)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                NewCharacterOwner                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::HandleCharacterChanged(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class AHWCharacter_Base* NewCharacterOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "HandleCharacterChanged");

	Params::HWVisibilityComponent_PlayableCharacter_HandleCharacterChanged Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.NewCharacterOwner = NewCharacterOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.HandleCharacterTeamUpdated
// (Final, Native, Public)
// Parameters:
// class AHWCharacterAbilitySystemActor*   OwningAbilitySystemActor                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     InTeamState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::HandleCharacterTeamUpdated(class AHWCharacterAbilitySystemActor* OwningAbilitySystemActor, class AHWTeamState* InTeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "HandleCharacterTeamUpdated");

	Params::HWVisibilityComponent_PlayableCharacter_HandleCharacterTeamUpdated Parms{};

	Parms.OwningAbilitySystemActor = OwningAbilitySystemActor;
	Parms.InTeamState = InTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.HandleTagUpdated_CharacterVisibilityHide
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::HandleTagUpdated_CharacterVisibilityHide(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "HandleTagUpdated_CharacterVisibilityHide");

	Params::HWVisibilityComponent_PlayableCharacter_HandleTagUpdated_CharacterVisibilityHide Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.InvalidateCachedVisibilityState
// (Final, Native, Public)

void UHWVisibilityComponent_PlayableCharacter::InvalidateCachedVisibilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "InvalidateCachedVisibilityState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.OnLocalControllerTeamUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AController*                      LocalController                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGenericTeamId&            TeamId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::OnLocalControllerTeamUpdated(class AController* LocalController, const struct FGenericTeamId& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "OnLocalControllerTeamUpdated");

	Params::HWVisibilityComponent_PlayableCharacter_OnLocalControllerTeamUpdated Parms{};

	Parms.LocalController = LocalController;
	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.OnOwnerTeamChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::OnOwnerTeamChanged(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class AHWTeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "OnOwnerTeamChanged");

	Params::HWVisibilityComponent_PlayableCharacter_OnOwnerTeamChanged Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWVisibilityComponent_PlayableCharacter.OnOwningPlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWVisibilityComponent_PlayableCharacter::OnOwningPlayerStateChanged(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWVisibilityComponent_PlayableCharacter", "OnOwningPlayerStateChanged");

	Params::HWVisibilityComponent_PlayableCharacter_OnOwningPlayerStateChanged Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.AddDisplayInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHWDisplayInfo&                  DisplayInfo                                            (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWDisplayInfoManager::AddDisplayInfo(struct FHWDisplayInfo& DisplayInfo, bool bIsInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "AddDisplayInfo");

	Params::HWDisplayInfoManager_AddDisplayInfo Parms{};

	Parms.DisplayInfo = std::move(DisplayInfo);
	Parms.bIsInstant = bIsInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	DisplayInfo = std::move(Parms.DisplayInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoManager.HideDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::HideDisplayInfo(int32 DisplayInfoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "HideDisplayInfo");

	Params::HWDisplayInfoManager_HideDisplayInfo Parms{};

	Parms.DisplayInfoId = DisplayInfoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.RemoveActorDisplayInfos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::RemoveActorDisplayInfos(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "RemoveActorDisplayInfos");

	Params::HWDisplayInfoManager_RemoveActorDisplayInfos Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.RemoveDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::RemoveDisplayInfo(int32 DisplayInfoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "RemoveDisplayInfo");

	Params::HWDisplayInfoManager_RemoveDisplayInfo Parms{};

	Parms.DisplayInfoId = DisplayInfoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.SetDisplayInfoLifespan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewLifespan                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::SetDisplayInfoLifespan(int32 DisplayInfoId, float NewLifespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "SetDisplayInfoLifespan");

	Params::HWDisplayInfoManager_SetDisplayInfoLifespan Parms{};

	Parms.DisplayInfoId = DisplayInfoId;
	Parms.NewLifespan = NewLifespan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.ShowDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::ShowDisplayInfo(int32 DisplayInfoId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "ShowDisplayInfo");

	Params::HWDisplayInfoManager_ShowDisplayInfo Parms{};

	Parms.DisplayInfoId = DisplayInfoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDisplayInfoManager.GetDisplayInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWDisplayInfo*                  OutDisplayInfo                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float*                                  OutRemainingTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoManager::GetDisplayInfo(int32 DisplayInfoId, struct FHWDisplayInfo* OutDisplayInfo, float* OutRemainingTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "GetDisplayInfo");

	Params::HWDisplayInfoManager_GetDisplayInfo Parms{};

	Parms.DisplayInfoId = DisplayInfoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayInfo != nullptr)
		*OutDisplayInfo = std::move(Parms.OutDisplayInfo);

	if (OutRemainingTime != nullptr)
		*OutRemainingTime = Parms.OutRemainingTime;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDisplayInfoManager.GetDisplayInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FHWDisplayInfo>*          OutDisplayInfos                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWDisplayInfoManager::GetDisplayInfos(TArray<struct FHWDisplayInfo>* OutDisplayInfos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "GetDisplayInfos");

	Params::HWDisplayInfoManager_GetDisplayInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayInfos != nullptr)
		*OutDisplayInfos = std::move(Parms.OutDisplayInfos);
}


// Function Hemingway.HWDisplayInfoManager.IsDisplayInfoIdValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DisplayInfoId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWDisplayInfoManager::IsDisplayInfoIdValid(int32 DisplayInfoId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDisplayInfoManager", "IsDisplayInfoIdValid");

	Params::HWDisplayInfoManager_IsDisplayInfoIdValid Parms{};

	Parms.DisplayInfoId = DisplayInfoId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.AccrueAdditionalCooldownCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             AbilitySwapIndex                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_AbilitySwap::AccrueAdditionalCooldownCost(const int32 AbilitySwapIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "AccrueAdditionalCooldownCost");

	Params::HWEquipmentComponent_AbilitySwap_AccrueAdditionalCooldownCost Parms{};

	Parms.AbilitySwapIndex = AbilitySwapIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.EndAbilitySwapWindow
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_AbilitySwap::EndAbilitySwapWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "EndAbilitySwapWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.OnRep_AbilitySwapWindowInfo
// (Final, Native, Protected)

void UHWEquipmentComponent_AbilitySwap::OnRep_AbilitySwapWindowInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "OnRep_AbilitySwapWindowInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.Server_SwapAbilitySlots
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_AbilitySwap::Server_SwapAbilitySlots(const struct FHWAbilitySwapInfo& SwapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "Server_SwapAbilitySlots");

	Params::HWEquipmentComponent_AbilitySwap_Server_SwapAbilitySlots Parms{};

	Parms.SwapInfo = std::move(SwapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.StartAbilitySwapWindow
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_AbilitySwap::StartAbilitySwapWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "StartAbilitySwapWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.SwapAbilitySlots
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_AbilitySwap::SwapAbilitySlots(const struct FHWAbilitySwapInfo& SwapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "SwapAbilitySlots");

	Params::HWEquipmentComponent_AbilitySwap_SwapAbilitySlots Parms{};

	Parms.SwapInfo = std::move(SwapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.TriggerAbilitySwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHWGameplayAbility*               AbilityInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AbilitySwapIndex                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_AbilitySwap::TriggerAbilitySwap(class UHWGameplayAbility* AbilityInstance, const int32 AbilitySwapIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "TriggerAbilitySwap");

	Params::HWEquipmentComponent_AbilitySwap_TriggerAbilitySwap Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.AbilitySwapIndex = AbilitySwapIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.GetAbilitySwapBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWAbilitySwapBehavior                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWAbilitySwapBehavior UHWEquipmentComponent_AbilitySwap::GetAbilitySwapBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "GetAbilitySwapBehavior");

	Params::HWEquipmentComponent_AbilitySwap_GetAbilitySwapBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.GetAbilitySwapWindowDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_AbilitySwap::GetAbilitySwapWindowDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "GetAbilitySwapWindowDuration");

	Params::HWEquipmentComponent_AbilitySwap_GetAbilitySwapWindowDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.GetElapsedAbilitySwapWindowTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_AbilitySwap::GetElapsedAbilitySwapWindowTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "GetElapsedAbilitySwapWindowTime");

	Params::HWEquipmentComponent_AbilitySwap_GetElapsedAbilitySwapWindowTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_AbilitySwap.IsAbilitySwapWindowActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_AbilitySwap::IsAbilitySwapWindowActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_AbilitySwap", "IsAbilitySwapWindowActive");

	Params::HWEquipmentComponent_AbilitySwap_IsAbilitySwapWindowActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.ConsumeAllAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bSkipCooldown                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::ConsumeAllAmmo(const bool bSkipCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "ConsumeAllAmmo");

	Params::HWEquipmentComponent_Ammo_ConsumeAllAmmo Parms{};

	Parms.bSkipCooldown = bSkipCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.ConsumeAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Amount                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSkipCooldown                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::ConsumeAmmo(const int32 Amount, const bool bSkipCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "ConsumeAmmo");

	Params::HWEquipmentComponent_Ammo_ConsumeAmmo Parms{};

	Parms.Amount = Amount;
	Parms.bSkipCooldown = bSkipCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.DoesAmmoRegenerateOverTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::DoesAmmoRegenerateOverTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "DoesAmmoRegenerateOverTime");

	Params::HWEquipmentComponent_Ammo_DoesAmmoRegenerateOverTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.GrantAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Amount                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::GrantAmmo(const int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "GrantAmmo");

	Params::HWEquipmentComponent_Ammo_GrantAmmo Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.HandleEquipmentLevelChanged
// (Final, Native, Public)
// Parameters:
// class UHWEquipmentInstance*             Equipment                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             PreviousLevel                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::HandleEquipmentLevelChanged(class UHWEquipmentInstance* Equipment, const int32 PreviousLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "HandleEquipmentLevelChanged");

	Params::HWEquipmentComponent_Ammo_HandleEquipmentLevelChanged Parms{};

	Parms.Equipment = Equipment;
	Parms.PreviousLevel = PreviousLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.OnAmmoChanged
// (Final, Native, Public)
// Parameters:
// const int32                             OldAmmoAmount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::OnAmmoChanged(const int32 OldAmmoAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "OnAmmoChanged");

	Params::HWEquipmentComponent_Ammo_OnAmmoChanged Parms{};

	Parms.OldAmmoAmount = OldAmmoAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.OnRefillTagUpdated
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::OnRefillTagUpdated(const struct FGameplayTag& Tag, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "OnRefillTagUpdated");

	Params::HWEquipmentComponent_Ammo_OnRefillTagUpdated Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.OnRep_AmmoRegenPaused
// (Final, Native, Protected)

void UHWEquipmentComponent_Ammo::OnRep_AmmoRegenPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "OnRep_AmmoRegenPaused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.OnRep_RemainingCooldownTimePrePause
// (Final, Native, Protected)

void UHWEquipmentComponent_Ammo::OnRep_RemainingCooldownTimePrePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "OnRep_RemainingCooldownTimePrePause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.PauseRegenAmmoCooldown
// (Final, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Ammo::PauseRegenAmmoCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "PauseRegenAmmoCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.RefillAllAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Ammo::RefillAllAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "RefillAllAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.SetAmmoCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             NewAmmoCount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Ammo::SetAmmoCount(const int32 NewAmmoCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "SetAmmoCount");

	Params::HWEquipmentComponent_Ammo_SetAmmoCount Parms{};

	Parms.NewAmmoCount = NewAmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Ammo.CanSellWholeStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::CanSellWholeStack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "CanSellWholeStack");

	Params::HWEquipmentComponent_Ammo_CanSellWholeStack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.GetAmmoCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponent_Ammo::GetAmmoCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "GetAmmoCount");

	Params::HWEquipmentComponent_Ammo_GetAmmoCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.GetAmmoMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponent_Ammo::GetAmmoMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "GetAmmoMax");

	Params::HWEquipmentComponent_Ammo_GetAmmoMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.GetTimeRemainingWhenPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Ammo::GetTimeRemainingWhenPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "GetTimeRemainingWhenPaused");

	Params::HWEquipmentComponent_Ammo_GetTimeRemainingWhenPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.HasEnoughAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::HasEnoughAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "HasEnoughAmmo");

	Params::HWEquipmentComponent_Ammo_HasEnoughAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.HasMaxAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::HasMaxAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "HasMaxAmmo");

	Params::HWEquipmentComponent_Ammo_HasMaxAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.IsRegenAmmoCooldownPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::IsRegenAmmoCooldownPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "IsRegenAmmoCooldownPaused");

	Params::HWEquipmentComponent_Ammo_IsRegenAmmoCooldownPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Ammo.ShouldManuallyConsumeAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Ammo::ShouldManuallyConsumeAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Ammo", "ShouldManuallyConsumeAmmo");

	Params::HWEquipmentComponent_Ammo_ShouldManuallyConsumeAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_FiringInstanceTracker.PurgeOldTrackers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_FiringInstanceTracker::PurgeOldTrackers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_FiringInstanceTracker", "PurgeOldTrackers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_FiringInstanceTracker.TrackFiringInstance
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWAbilityFiringInstanceId&InstanceId                                             (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const class UAbilitySystemComponent*    TargetASC                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutCount                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_FiringInstanceTracker::TrackFiringInstance(const struct FHWAbilityFiringInstanceId& InstanceId, const class UAbilitySystemComponent* TargetASC, const TSubclassOf<class UGameplayEffect> EffectClass, int32* OutCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_FiringInstanceTracker", "TrackFiringInstance");

	Params::HWEquipmentComponent_FiringInstanceTracker_TrackFiringInstance Parms{};

	Parms.InstanceId = std::move(InstanceId);
	Parms.TargetASC = TargetASC;
	Parms.EffectClass = EffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCount != nullptr)
		*OutCount = Parms.OutCount;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_FiringInstanceTracker.IsFiringInstanceTracked
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWAbilityFiringInstanceId&InstanceId                                             (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const class UAbilitySystemComponent*    TargetASC                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_FiringInstanceTracker::IsFiringInstanceTracked(const struct FHWAbilityFiringInstanceId& InstanceId, const class UAbilitySystemComponent* TargetASC, const TSubclassOf<class UGameplayEffect> EffectClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_FiringInstanceTracker", "IsFiringInstanceTracked");

	Params::HWEquipmentComponent_FiringInstanceTracker_IsFiringInstanceTracked Parms{};

	Parms.InstanceId = std::move(InstanceId);
	Parms.TargetASC = TargetASC;
	Parms.EffectClass = EffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_FiringInstanceTracker.IsTrackedCustom
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FHWFiringInstanceTracker&  InstanceTracker                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_FiringInstanceTracker::IsTrackedCustom(const struct FHWFiringInstanceTracker& InstanceTracker) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_FiringInstanceTracker", "IsTrackedCustom");

	Params::HWEquipmentComponent_FiringInstanceTracker_IsTrackedCustom Parms{};

	Parms.InstanceTracker = std::move(InstanceTracker);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Stacks.AddStacks
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Stacks::AddStacks(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "AddStacks");

	Params::HWEquipmentComponent_Stacks_AddStacks Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Stacks.OnRep_StackCount
// (Final, Native, Protected)

void UHWEquipmentComponent_Stacks::OnRep_StackCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "OnRep_StackCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Stacks.RemoveAllStacks
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Stacks::RemoveAllStacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "RemoveAllStacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Stacks.RemoveStacks
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Stacks::RemoveStacks(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "RemoveStacks");

	Params::HWEquipmentComponent_Stacks_RemoveStacks Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Stacks.SetStacks
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Stacks::SetStacks(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "SetStacks");

	Params::HWEquipmentComponent_Stacks_SetStacks Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Stacks.GetMaxStackCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponent_Stacks::GetMaxStackCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "GetMaxStackCount");

	Params::HWEquipmentComponent_Stacks_GetMaxStackCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Stacks.GetStackCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentComponent_Stacks::GetStackCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "GetStackCount");

	Params::HWEquipmentComponent_Stacks_GetStackCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Stacks.HasMaxStacks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Stacks::HasMaxStacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Stacks", "HasMaxStacks");

	Params::HWEquipmentComponent_Stacks_HasMaxStacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInfo.GetAbilityClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UHWGameplayAbility>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UHWGameplayAbility> UHWEquipmentInfo::GetAbilityClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInfo", "GetAbilityClass");

	Params::HWEquipmentInfo_GetAbilityClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInfo.GetEffectsToGrantInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FHWEquipmentInfo_EffectInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHWEquipmentInfo_EffectInfo> UHWEquipmentInfo::GetEffectsToGrantInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInfo", "GetEffectsToGrantInfo");

	Params::HWEquipmentInfo_GetEffectsToGrantInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInfo.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWEquipmentInfo::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInfo", "GetMaxLevel");

	Params::HWEquipmentInfo_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentInfo.UsesEquipmentComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UHWEquipmentComponent>ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentInfo::UsesEquipmentComponent(TSubclassOf<class UHWEquipmentComponent> ComponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentInfo", "UsesEquipmentComponent");

	Params::HWEquipmentInfo_UsesEquipmentComponent Parms{};

	Parms.ComponentClass = ComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CanEquipmentUseSlotType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EquipmentType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SlotType                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::CanEquipmentUseSlotType(const class UObject* WorldContextObject, const struct FGameplayTag& EquipmentType, const struct FGameplayTag& SlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWInventoryManagerComponent", "CanEquipmentUseSlotType");

	Params::HWInventoryManagerComponent_CanEquipmentUseSlotType Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EquipmentType = std::move(EquipmentType);
	Parms.SlotType = std::move(SlotType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.AddInventoryTransaction
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHWInventoryTransaction&   InTransaction                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::AddInventoryTransaction(const struct FHWInventoryTransaction& InTransaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "AddInventoryTransaction");

	Params::HWInventoryManagerComponent_AddInventoryTransaction Parms{};

	Parms.InTransaction = std::move(InTransaction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.BeginTransactionRecord
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWInventoryManagerComponent::BeginTransactionRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "BeginTransactionRecord");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.CraftEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UHWEquipmentRecipe*         RecipeToCraft                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          DesiredInventorySlot                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EHWCraftingFailureReason>*       OutFailureReasons                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FHWInventoryTransaction*         OutTransaction                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// const bool                              bCraftMissingIngredients                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::CraftEquipment(const class UHWEquipmentRecipe* RecipeToCraft, const struct FHWInventorySlot& DesiredInventorySlot, TArray<EHWCraftingFailureReason>* OutFailureReasons, struct FHWInventoryTransaction* OutTransaction, const bool bCraftMissingIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CraftEquipment");

	Params::HWInventoryManagerComponent_CraftEquipment Parms{};

	Parms.RecipeToCraft = RecipeToCraft;
	Parms.DesiredInventorySlot = std::move(DesiredInventorySlot);
	Parms.bCraftMissingIngredients = bCraftMissingIngredients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFailureReasons != nullptr)
		*OutFailureReasons = std::move(Parms.OutFailureReasons);

	if (OutTransaction != nullptr)
		*OutTransaction = std::move(Parms.OutTransaction);

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CreateAndEquipEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWEquipmentSpec&          EquipmentSpec                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::CreateAndEquipEquipment(const struct FHWEquipmentSpec& EquipmentSpec, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CreateAndEquipEquipment");

	Params::HWInventoryManagerComponent_CreateAndEquipEquipment Parms{};

	Parms.EquipmentSpec = std::move(EquipmentSpec);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CreateAndStoreEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWEquipmentSpec&          EquipmentSpec                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::CreateAndStoreEquipment(const struct FHWEquipmentSpec& EquipmentSpec, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CreateAndStoreEquipment");

	Params::HWInventoryManagerComponent_CreateAndStoreEquipment Parms{};

	Parms.EquipmentSpec = std::move(EquipmentSpec);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.DestroyEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentToDestroy                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::DestroyEquipment(class UHWEquipmentInstance* EquipmentToDestroy, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "DestroyEquipment");

	Params::HWInventoryManagerComponent_DestroyEquipment Parms{};

	Parms.EquipmentToDestroy = EquipmentToDestroy;
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.DestroyEquipmentInSlot
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::DestroyEquipmentInSlot(const struct FHWInventorySlot& Slot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "DestroyEquipmentInSlot");

	Params::HWInventoryManagerComponent_DestroyEquipmentInSlot Parms{};

	Parms.Slot = std::move(Slot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.EndTransactionRecord
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWInventoryManagerComponent::EndTransactionRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "EndTransactionRecord");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.EquipEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          DesiredInventorySlot                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::EquipEquipment(class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& DesiredInventorySlot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "EquipEquipment");

	Params::HWInventoryManagerComponent_EquipEquipment Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.DesiredInventorySlot = std::move(DesiredInventorySlot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.OnDelayedSwapAbilityPhaseChanged
// (Final, Native, Public)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AbilityTags                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// const EAbilityFlowPhase                 PrevPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityFlowPhase                 NextPhase                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::OnDelayedSwapAbilityPhaseChanged(class UHWAbilitySystemComponent* AbilitySystem, const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& AbilityTags, const EAbilityFlowPhase PrevPhase, const EAbilityFlowPhase NextPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnDelayedSwapAbilityPhaseChanged");

	Params::HWInventoryManagerComponent_OnDelayedSwapAbilityPhaseChanged Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityTags = std::move(AbilityTags);
	Parms.PrevPhase = PrevPhase;
	Parms.NextPhase = NextPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.OnEquipmentLevelChanged
// (Final, Native, Public)
// Parameters:
// class UHWEquipmentInstance*             EquipmentChanged                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             PreviousLevel                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::OnEquipmentLevelChanged(class UHWEquipmentInstance* EquipmentChanged, const int32 PreviousLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnEquipmentLevelChanged");

	Params::HWInventoryManagerComponent_OnEquipmentLevelChanged Parms{};

	Parms.EquipmentChanged = EquipmentChanged;
	Parms.PreviousLevel = PreviousLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.OnRep_CurrentShop
// (Final, Native, Protected)

void UHWInventoryManagerComponent::OnRep_CurrentShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnRep_CurrentShop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.OnRep_HasTransactionsAvailable
// (Final, Native, Private)

void UHWInventoryManagerComponent::OnRep_HasTransactionsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnRep_HasTransactionsAvailable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.OnTransactionAbilityCooldown
// (Final, Native, Protected)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWGameplayAbility_Enhanced*AbilityOnCooldown                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::OnTransactionAbilityCooldown(class UHWEquipmentInstance* EquipmentInstance, const class UHWGameplayAbility_Enhanced* AbilityOnCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnTransactionAbilityCooldown");

	Params::HWInventoryManagerComponent_OnTransactionAbilityCooldown Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.AbilityOnCooldown = AbilityOnCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.OnTransactionAbilityFired
// (Final, Native, Protected)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWGameplayAbility_Enhanced*FiredAbility                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::OnTransactionAbilityFired(class UHWEquipmentInstance* EquipmentInstance, const class UHWGameplayAbility_Enhanced* FiredAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "OnTransactionAbilityFired");

	Params::HWInventoryManagerComponent_OnTransactionAbilityFired Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.FiredAbility = FiredAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.RefundAllSkillPoints
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWInventoryManagerComponent::RefundAllSkillPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RefundAllSkillPoints");

	Params::HWInventoryManagerComponent_RefundAllSkillPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.ResetEquipmentTargeters
// (Final, Native, Public)

void UHWInventoryManagerComponent::ResetEquipmentTargeters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "ResetEquipmentTargeters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.RetrieveAndRemoveEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::RetrieveAndRemoveEquipment(const struct FHWInventorySlot& Slot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RetrieveAndRemoveEquipment");

	Params::HWInventoryManagerComponent_RetrieveAndRemoveEquipment Parms{};

	Parms.Slot = std::move(Slot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.Server_PurchaseEquipment
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const class UHWEquipmentRecipe*         EquipmentRecipe                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          DesiredInventorySlot                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPurchaseMissingIngredients                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::Server_PurchaseEquipment(const class UHWEquipmentRecipe* EquipmentRecipe, const struct FHWInventorySlot& DesiredInventorySlot, const bool bPurchaseMissingIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_PurchaseEquipment");

	Params::HWInventoryManagerComponent_Server_PurchaseEquipment Parms{};

	Parms.EquipmentRecipe = EquipmentRecipe;
	Parms.DesiredInventorySlot = std::move(DesiredInventorySlot);
	Parms.bPurchaseMissingIngredients = bPurchaseMissingIngredients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.Server_SellEquipment
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentToSell                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::Server_SellEquipment(class UHWEquipmentInstance* EquipmentToSell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_SellEquipment");

	Params::HWInventoryManagerComponent_Server_SellEquipment Parms{};

	Parms.EquipmentToSell = EquipmentToSell;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.Server_SwapAbilitySlots
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::Server_SwapAbilitySlots(const struct FHWAbilitySwapInfo& SwapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_SwapAbilitySlots");

	Params::HWInventoryManagerComponent_Server_SwapAbilitySlots Parms{};

	Parms.SwapInfo = std::move(SwapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.Server_SwapActiveItemInput
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              DesiredActiveItemInput                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::Server_SwapActiveItemInput(class UHWEquipmentInstance* EquipmentInstance, const struct FGameplayTag& DesiredActiveItemInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_SwapActiveItemInput");

	Params::HWInventoryManagerComponent_Server_SwapActiveItemInput Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.DesiredActiveItemInput = std::move(DesiredActiveItemInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.Server_SwapEquipmentInSlots
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot1                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot2                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::Server_SwapEquipmentInSlots(const struct FHWInventorySlot& Slot1, const struct FHWInventorySlot& Slot2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_SwapEquipmentInSlots");

	Params::HWInventoryManagerComponent_Server_SwapEquipmentInSlots Parms{};

	Parms.Slot1 = std::move(Slot1);
	Parms.Slot2 = std::move(Slot2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.Server_UndoLastInventoryTransaction
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void UHWInventoryManagerComponent::Server_UndoLastInventoryTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "Server_UndoLastInventoryTransaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.ServerSetAutoSort
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::ServerSetAutoSort(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "ServerSetAutoSort");

	Params::HWInventoryManagerComponent_ServerSetAutoSort Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.ServerSetEquipmentLevel
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             Equipment                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             DesiredLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::ServerSetEquipmentLevel(class UHWEquipmentInstance* Equipment, const int32 DesiredLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "ServerSetEquipmentLevel");

	Params::HWInventoryManagerComponent_ServerSetEquipmentLevel Parms{};

	Parms.Equipment = Equipment;
	Parms.DesiredLevel = DesiredLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.SetDeadStatus
// (Final, Native, Public)
// Parameters:
// bool                                    bIsDead                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::SetDeadStatus(bool bIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SetDeadStatus");

	Params::HWInventoryManagerComponent_SetDeadStatus Parms{};

	Parms.bIsDead = bIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.SetOverlappedShop
// (Final, Native, Public)
// Parameters:
// const class AHWShopVendorVolume*        ShopVendor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::SetOverlappedShop(const class AHWShopVendorVolume* ShopVendor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SetOverlappedShop");

	Params::HWInventoryManagerComponent_SetOverlappedShop Parms{};

	Parms.ShopVendor = ShopVendor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.StoreEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          DesiredInventorySlot                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::StoreEquipment(class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& DesiredInventorySlot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "StoreEquipment");

	Params::HWInventoryManagerComponent_StoreEquipment Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.DesiredInventorySlot = std::move(DesiredInventorySlot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.SwapAbilitySlots
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWAbilitySwapInfo&        SwapInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::SwapAbilitySlots(const struct FHWAbilitySwapInfo& SwapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SwapAbilitySlots");

	Params::HWInventoryManagerComponent_SwapAbilitySlots Parms{};

	Parms.SwapInfo = std::move(SwapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.SwapActiveItemInput
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              DesiredActiveItemInput                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::SwapActiveItemInput(class UHWEquipmentInstance* EquipmentInstance, const struct FGameplayTag& DesiredActiveItemInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SwapActiveItemInput");

	Params::HWInventoryManagerComponent_SwapActiveItemInput Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.DesiredActiveItemInput = std::move(DesiredActiveItemInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.SwapEquipmentAssignedInputTags
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot1                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot2                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInventoryManagerComponent::SwapEquipmentAssignedInputTags(const struct FHWInventorySlot& Slot1, const struct FHWInventorySlot& Slot2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SwapEquipmentAssignedInputTags");

	Params::HWInventoryManagerComponent_SwapEquipmentAssignedInputTags Parms{};

	Parms.Slot1 = std::move(Slot1);
	Parms.Slot2 = std::move(Slot2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.SwapEquipmentInSlots
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot1                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot2                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             DelayEquipmentSwapForPhases                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::SwapEquipmentInSlots(const struct FHWInventorySlot& Slot1, const struct FHWInventorySlot& Slot2, const int32 DelayEquipmentSwapForPhases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "SwapEquipmentInSlots");

	Params::HWInventoryManagerComponent_SwapEquipmentInSlots Parms{};

	Parms.Slot1 = std::move(Slot1);
	Parms.Slot2 = std::move(Slot2);
	Parms.DelayEquipmentSwapForPhases = DelayEquipmentSwapForPhases;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.UndoAllInventoryTransactions
// (Final, Native, Public, BlueprintCallable)

void UHWInventoryManagerComponent::UndoAllInventoryTransactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "UndoAllInventoryTransactions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.UndoLastInventoryTransaction
// (Final, Native, Public, BlueprintCallable)

void UHWInventoryManagerComponent::UndoLastInventoryTransaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "UndoLastInventoryTransaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.UnEquipEquipment
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWInventoryChangeReason          InventoryChangeReason                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::UnEquipEquipment(const struct FHWInventorySlot& Slot, const EHWInventoryChangeReason InventoryChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "UnEquipEquipment");

	Params::HWInventoryManagerComponent_UnEquipEquipment Parms{};

	Parms.Slot = std::move(Slot);
	Parms.InventoryChangeReason = InventoryChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CalculateSaleGoldValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWGameMode*                currentGameMode                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bItemCraftedInCurrentTransaction                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWInventoryManagerComponent::CalculateSaleGoldValue(const class UHWEquipmentItem* EquipmentItem, const class AHWGameMode* currentGameMode, bool bItemCraftedInCurrentTransaction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CalculateSaleGoldValue");

	Params::HWInventoryManagerComponent_CalculateSaleGoldValue Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.currentGameMode = currentGameMode;
	Parms.bItemCraftedInCurrentTransaction = bItemCraftedInCurrentTransaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CanCraftEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentRecipe*         RecipeToCraft                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          DesiredInventorySlot                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWCanCraftInfo                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWCanCraftInfo UHWInventoryManagerComponent::CanCraftEquipment(const class UHWEquipmentRecipe* RecipeToCraft, const struct FHWInventorySlot& DesiredInventorySlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CanCraftEquipment");

	Params::HWInventoryManagerComponent_CanCraftEquipment Parms{};

	Parms.RecipeToCraft = RecipeToCraft;
	Parms.DesiredInventorySlot = std::move(DesiredInventorySlot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CanEquipEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItemBeingEquipped                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::CanEquipEquipment(const class UHWEquipmentItem* EquipmentItemBeingEquipped) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CanEquipEquipment");

	Params::HWInventoryManagerComponent_CanEquipEquipment Parms{};

	Parms.EquipmentItemBeingEquipped = EquipmentItemBeingEquipped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.CanStoreEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItemBeingStored                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::CanStoreEquipment(const class UHWEquipmentItem* EquipmentItemBeingStored) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "CanStoreEquipment");

	Params::HWInventoryManagerComponent_CanStoreEquipment Parms{};

	Parms.EquipmentItemBeingStored = EquipmentItemBeingStored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.FindAvailableSlotBaseOnEquipmentType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EquipmentType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWantsEquipPoint                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWInventorySlot                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWInventorySlot UHWInventoryManagerComponent::FindAvailableSlotBaseOnEquipmentType(const struct FGameplayTag& EquipmentType, bool bWantsEquipPoint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "FindAvailableSlotBaseOnEquipmentType");

	Params::HWInventoryManagerComponent_FindAvailableSlotBaseOnEquipmentType Parms{};

	Parms.EquipmentType = std::move(EquipmentType);
	Parms.bWantsEquipPoint = bWantsEquipPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetAbilityCastStyle
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle UHWInventoryManagerComponent::GetAbilityCastStyle(const struct FGameplayTag& InputTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetAbilityCastStyle");

	Params::HWInventoryManagerComponent_GetAbilityCastStyle Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetCurrentShop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWShopVendorVolume*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class AHWShopVendorVolume* UHWInventoryManagerComponent::GetCurrentShop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetCurrentShop");

	Params::HWInventoryManagerComponent_GetCurrentShop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetEquipmentCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryManagerComponent::GetEquipmentCount(const class UHWEquipmentItem* EquipmentItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetEquipmentCount");

	Params::HWInventoryManagerComponent_GetEquipmentCount Parms{};

	Parms.EquipmentItem = EquipmentItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetEquipmentCountBasedOnEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EquipPoint                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryManagerComponent::GetEquipmentCountBasedOnEquipPoint(const struct FGameplayTag& EquipPoint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetEquipmentCountBasedOnEquipPoint");

	Params::HWInventoryManagerComponent_GetEquipmentCountBasedOnEquipPoint Parms{};

	Parms.EquipPoint = std::move(EquipPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetEquipmentCountBasedOnType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EquipmentType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryManagerComponent::GetEquipmentCountBasedOnType(const struct FGameplayTag& EquipmentType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetEquipmentCountBasedOnType");

	Params::HWInventoryManagerComponent_GetEquipmentCountBasedOnType Parms{};

	Parms.EquipmentType = std::move(EquipmentType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetEquipmentSellPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWEquipmentInstance*             EquipmentToSell                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWInventoryManagerComponent::GetEquipmentSellPrice(class UHWEquipmentInstance* EquipmentToSell) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetEquipmentSellPrice");

	Params::HWInventoryManagerComponent_GetEquipmentSellPrice Parms{};

	Parms.EquipmentToSell = EquipmentToSell;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetInputTagForInventorySlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWInventorySlot&          InventorySlot                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWInventoryManagerComponent::GetInputTagForInventorySlot(const struct FHWInventorySlot& InventorySlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetInputTagForInventorySlot");

	Params::HWInventoryManagerComponent_GetInputTagForInventorySlot Parms{};

	Parms.InventorySlot = std::move(InventorySlot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetItemResalePercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWGameMode*                currentGameMode                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bItemCraftedInCurrentTransaction                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWInventoryManagerComponent::GetItemResalePercentage(const class UHWEquipmentItem* EquipmentItem, const class AHWGameMode* currentGameMode, bool bItemCraftedInCurrentTransaction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetItemResalePercentage");

	Params::HWInventoryManagerComponent_GetItemResalePercentage Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.currentGameMode = currentGameMode;
	Parms.bItemCraftedInCurrentTransaction = bItemCraftedInCurrentTransaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetLevelingRecords
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FHWEquipmentLevelingRecord>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FHWEquipmentLevelingRecord> UHWInventoryManagerComponent::GetLevelingRecords() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetLevelingRecords");

	Params::HWInventoryManagerComponent_GetLevelingRecords Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.GetShoppingPreventionTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UHWInventoryManagerComponent::GetShoppingPreventionTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "GetShoppingPreventionTags");

	Params::HWInventoryManagerComponent_GetShoppingPreventionTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.HasTransactionsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::HasTransactionsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "HasTransactionsAvailable");

	Params::HWInventoryManagerComponent_HasTransactionsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.IsAutoSortingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::IsAutoSortingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "IsAutoSortingEnabled");

	Params::HWInventoryManagerComponent_IsAutoSortingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.IsCraftingInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::IsCraftingInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "IsCraftingInProgress");

	Params::HWInventoryManagerComponent_IsCraftingInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.IsInShop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::IsInShop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "IsInShop");

	Params::HWInventoryManagerComponent_IsInShop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.IsInventorySwapInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::IsInventorySwapInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "IsInventorySwapInProgress");

	Params::HWInventoryManagerComponent_IsInventorySwapInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.IsShoppingAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::IsShoppingAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "IsShoppingAllowed");

	Params::HWInventoryManagerComponent_IsShoppingAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.LogCurrentInventory
// (Final, Native, Public, BlueprintCallable, Const)

void UHWInventoryManagerComponent::LogCurrentInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "LogCurrentInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInventoryManagerComponent.RetrieveEquipment
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::RetrieveEquipment(const struct FHWInventorySlot& Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RetrieveEquipment");

	Params::HWInventoryManagerComponent_RetrieveEquipment Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.RetrieveEquipmentByEquipmentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWEquipmentItem*           EquipmentItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UHWEquipmentInstance*>&EquipmentToIgnore                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UHWEquipmentInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEquipmentInstance* UHWInventoryManagerComponent::RetrieveEquipmentByEquipmentItem(const class UHWEquipmentItem* EquipmentItem, const TArray<class UHWEquipmentInstance*>& EquipmentToIgnore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RetrieveEquipmentByEquipmentItem");

	Params::HWInventoryManagerComponent_RetrieveEquipmentByEquipmentItem Parms{};

	Parms.EquipmentItem = EquipmentItem;
	Parms.EquipmentToIgnore = std::move(EquipmentToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.RetrieveEquipmentsByEffectHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FActiveGameplayEffectHandle&EffectHandle                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHWEquipmentInstance*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UHWEquipmentInstance*> UHWInventoryManagerComponent::RetrieveEquipmentsByEffectHandle(const struct FActiveGameplayEffectHandle& EffectHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RetrieveEquipmentsByEffectHandle");

	Params::HWInventoryManagerComponent_RetrieveEquipmentsByEffectHandle Parms{};

	Parms.EffectHandle = std::move(EffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.RetrieveEquipmentsBySlotType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EquipmentType                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UHWEquipmentInstance*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UHWEquipmentInstance*> UHWInventoryManagerComponent::RetrieveEquipmentsBySlotType(const struct FGameplayTag& EquipmentType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "RetrieveEquipmentsBySlotType");

	Params::HWInventoryManagerComponent_RetrieveEquipmentsBySlotType Parms{};

	Parms.EquipmentType = std::move(EquipmentType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInventoryManagerComponent.ShouldBeInTransaction
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInventoryManagerComponent::ShouldBeInTransaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInventoryManagerComponent", "ShouldBeInTransaction");

	Params::HWInventoryManagerComponent_ShouldBeInTransaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWActor_SpecialFX.SetHideWhenOwnerIsHidden
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bShouldHide                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWActor_SpecialFX::SetHideWhenOwnerIsHidden(bool bShouldHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWActor_SpecialFX", "SetHideWhenOwnerIsHidden");

	Params::HWActor_SpecialFX_SetHideWhenOwnerIsHidden Parms{};

	Parms.bShouldHide = bShouldHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Growing.GetCurrentScaleTransform
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWDeployable_Growing::GetCurrentScaleTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Growing", "GetCurrentScaleTransform");

	Params::HWDeployable_Growing_GetCurrentScaleTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_WithVision.OnVisionRangeBeginOverlap
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWDeployable_WithVision::OnVisionRangeBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_WithVision", "OnVisionRangeBeginOverlap");

	Params::HWDeployable_WithVision_OnVisionRangeBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_WithVision.OnVisionRangeEndOverlap
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_WithVision::OnVisionRangeEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_WithVision", "OnVisionRangeEndOverlap");

	Params::HWDeployable_WithVision_OnVisionRangeEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Ward.GetWardSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UHWCollectionItem*          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCollectionItem* AHWDeployable_Ward::GetWardSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "GetWardSkin");

	Params::HWDeployable_Ward_GetWardSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Ward.GetWardSkinnedSound
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             WardSoundSkinningKey                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundBase> AHWDeployable_Ward::GetWardSkinnedSound(class FName WardSoundSkinningKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "GetWardSkinnedSound");

	Params::HWDeployable_Ward_GetWardSkinnedSound Parms{};

	Parms.WardSoundSkinningKey = WardSoundSkinningKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Ward.OnWardAcquiredNewEnemyVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UHWVisibilityComponent*           NewlyVisibleEnemyVisComp                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Ward::OnWardAcquiredNewEnemyVisibility(class UHWVisibilityComponent* NewlyVisibleEnemyVisComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "OnWardAcquiredNewEnemyVisibility");

	Params::HWDeployable_Ward_OnWardAcquiredNewEnemyVisibility Parms{};

	Parms.NewlyVisibleEnemyVisComp = NewlyVisibleEnemyVisComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Ward.SetGrassCollisionActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           GrassCollisionActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Ward::SetGrassCollisionActor(class AActor* GrassCollisionActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "SetGrassCollisionActor");

	Params::HWDeployable_Ward_SetGrassCollisionActor Parms{};

	Parms.GrassCollisionActor = GrassCollisionActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Ward.UpdateWardSkinVisuals
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const class UHWCollectionItem*          WardSkin                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Ward::UpdateWardSkinVisuals(const class UHWCollectionItem* WardSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "UpdateWardSkinVisuals");

	Params::HWDeployable_Ward_UpdateWardSkinVisuals Parms{};

	Parms.WardSkin = WardSkin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Ward.GetGrassCollisionActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AHWDeployable_Ward::GetGrassCollisionActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Ward", "GetGrassCollisionActor");

	Params::HWDeployable_Ward_GetGrassCollisionActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFamiliarComponent.GetFamiliarHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWActiveFamiliarHandle          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWActiveFamiliarHandle UHWFamiliarComponent::GetFamiliarHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarComponent", "GetFamiliarHandle");

	Params::HWFamiliarComponent_GetFamiliarHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFamiliarComponent.GetFamiliarOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* UHWFamiliarComponent::GetFamiliarOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarComponent", "GetFamiliarOwner");

	Params::HWFamiliarComponent_GetFamiliarOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWFamiliarManagerComponent.DestroyFamiliar
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWActiveFamiliarHandle&   FamiliarHandle                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSkipTimeAfterDeath                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWFamiliarManagerComponent::DestroyFamiliar(const struct FHWActiveFamiliarHandle& FamiliarHandle, const bool bSkipTimeAfterDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "DestroyFamiliar");

	Params::HWFamiliarManagerComponent_DestroyFamiliar Parms{};

	Parms.FamiliarHandle = std::move(FamiliarHandle);
	Parms.bSkipTimeAfterDeath = bSkipTimeAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFamiliarManagerComponent.OnFamiliarLifetimeExpired
// (Final, Native, Protected)
// Parameters:
// const struct FHWActiveFamiliarHandle&   FamiliarHandle                                         (Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWFamiliarManagerComponent::OnFamiliarLifetimeExpired(const struct FHWActiveFamiliarHandle& FamiliarHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "OnFamiliarLifetimeExpired");

	Params::HWFamiliarManagerComponent_OnFamiliarLifetimeExpired Parms{};

	Parms.FamiliarHandle = std::move(FamiliarHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFamiliarManagerComponent.OnFamiliarPawnFinishedDestroy
// (Final, Native, Public)
// Parameters:
// class AHWCharacter_Base*                DestroyedFamiliarPawn                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWFamiliarManagerComponent::OnFamiliarPawnFinishedDestroy(class AHWCharacter_Base* DestroyedFamiliarPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "OnFamiliarPawnFinishedDestroy");

	Params::HWFamiliarManagerComponent_OnFamiliarPawnFinishedDestroy Parms{};

	Parms.DestroyedFamiliarPawn = DestroyedFamiliarPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFamiliarManagerComponent.OnOwnerDied
// (Final, Native, Public)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWFamiliarManagerComponent::OnOwnerDied(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "OnOwnerDied");

	Params::HWFamiliarManagerComponent_OnOwnerDied Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFamiliarManagerComponent.OnRep_ActiveFamiliars
// (Final, Native, Protected)

void UHWFamiliarManagerComponent::OnRep_ActiveFamiliars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "OnRep_ActiveFamiliars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWFamiliarManagerComponent.SpawnFamiliar
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UHWFamiliarConfigSettings*  FamiliarConfig                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                SpawnTransform                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWFamiliarSpawnParams*          FamiliarSpawnParams                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWActiveFamiliarHandle          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHWActiveFamiliarHandle UHWFamiliarManagerComponent::SpawnFamiliar(const class UHWFamiliarConfigSettings* FamiliarConfig, const struct FTransform& SpawnTransform, struct FHWFamiliarSpawnParams* FamiliarSpawnParams, const struct FGameplayAbilitySpecHandle& AbilityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "SpawnFamiliar");

	Params::HWFamiliarManagerComponent_SpawnFamiliar Parms{};

	Parms.FamiliarConfig = FamiliarConfig;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.AbilityHandle = std::move(AbilityHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FamiliarSpawnParams != nullptr)
		*FamiliarSpawnParams = std::move(Parms.FamiliarSpawnParams);

	return Parms.ReturnValue;
}


// Function Hemingway.HWFamiliarManagerComponent.BP_GetFamiliarInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWActiveFamiliarHandle&   Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWActiveFamiliarInfo*           FamiliarInfo                                           (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWFamiliarManagerComponent::BP_GetFamiliarInfo(const struct FHWActiveFamiliarHandle& Handle, struct FHWActiveFamiliarInfo* FamiliarInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "BP_GetFamiliarInfo");

	Params::HWFamiliarManagerComponent_BP_GetFamiliarInfo Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FamiliarInfo != nullptr)
		*FamiliarInfo = std::move(Parms.FamiliarInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWFamiliarManagerComponent.GetActiveFamiliars
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FHWActiveFamiliarInfo>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<struct FHWActiveFamiliarInfo> UHWFamiliarManagerComponent::GetActiveFamiliars() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWFamiliarManagerComponent", "GetActiveFamiliars");

	Params::HWFamiliarManagerComponent_GetActiveFamiliars Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Looping.HandleLocalOwnerVisibilityComponentUpdated
// (Final, Native, Protected)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Looping::HandleLocalOwnerVisibilityComponentUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "HandleLocalOwnerVisibilityComponentUpdated");

	Params::HWGameplayCueNotify_Looping_HandleLocalOwnerVisibilityComponentUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Looping.HandleLocalOwnerVisibilityUpdated
// (Final, Native, Protected)
// Parameters:
// class UHWVisibilityComponent*           VisibilityComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameplayCueNotify_Looping::HandleLocalOwnerVisibilityUpdated(class UHWVisibilityComponent* VisibilityComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "HandleLocalOwnerVisibilityUpdated");

	Params::HWGameplayCueNotify_Looping_HandleLocalOwnerVisibilityUpdated Parms{};

	Parms.VisibilityComponent = VisibilityComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Looping.SetSkinnedData
// (Final, Native, Public)

void AHWGameplayCueNotify_Looping::SetSkinnedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "SetSkinnedData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayCueNotify_Looping.GetApparelComponent
// (Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* AHWGameplayCueNotify_Looping::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "GetApparelComponent");

	Params::HWGameplayCueNotify_Looping_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Looping.GetCurrentSkin
// (Native, Public, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* AHWGameplayCueNotify_Looping::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "GetCurrentSkin");

	Params::HWGameplayCueNotify_Looping_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayCueNotify_Looping.IsSkinningReady
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWGameplayCueNotify_Looping::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayCueNotify_Looping", "IsSkinningReady");

	Params::HWGameplayCueNotify_Looping_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.bIsUsingCustomProfile
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::bIsUsingCustomProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "bIsUsingCustomProfile");

	Params::HWGameplayFlight_bIsUsingCustomProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.EndFlight
// (Native, Public, BlueprintCallable)
// Parameters:
// const EHWEndFlightReason                EndFlightReason                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndFlightBehavior              EndFlightBehavior                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayFlight::EndFlight(const EHWEndFlightReason EndFlightReason, const EHWEndFlightBehavior EndFlightBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "EndFlight");

	Params::HWGameplayFlight_EndFlight Parms{};

	Parms.EndFlightReason = EndFlightReason;
	Parms.EndFlightBehavior = EndFlightBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.EndFlightAscent
// (Native, Public)

void UHWGameplayFlight::EndFlightAscent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "EndFlightAscent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.EndMidFlight
// (Native, Public)

void UHWGameplayFlight::EndMidFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "EndMidFlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.OnFlightAscentEnded
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayFlight::OnFlightAscentEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "OnFlightAscentEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.OnFlightAscentStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayFlight::OnFlightAscentStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "OnFlightAscentStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.OnFlightDescentEnded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const EHWEndFlightReason                EndFlightReason                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayFlight::OnFlightDescentEnded(const EHWEndFlightReason EndFlightReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "OnFlightDescentEnded");

	Params::HWGameplayFlight_OnFlightDescentEnded Parms{};

	Parms.EndFlightReason = EndFlightReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.OnFlightDescentStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayFlight::OnFlightDescentStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "OnFlightDescentStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.OnTweenEnded
// (Native, Public)

void UHWGameplayFlight::OnTweenEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "OnTweenEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.StartFlight
// (Native, Public)

void UHWGameplayFlight::StartFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "StartFlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.StartFlightAscent
// (Native, Public)

void UHWGameplayFlight::StartFlightAscent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "StartFlightAscent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.StartFlightDescent
// (Native, Public)

void UHWGameplayFlight::StartFlightDescent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "StartFlightDescent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.StartMidFlight
// (Native, Public)

void UHWGameplayFlight::StartMidFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "StartMidFlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayFlight.GetAscentDestinationHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UHWGameplayFlight::GetAscentDestinationHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetAscentDestinationHeight");

	Params::HWGameplayFlight_GetAscentDestinationHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetAscentHorizontalMaxSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetAscentHorizontalMaxSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetAscentHorizontalMaxSpeed");

	Params::HWGameplayFlight_GetAscentHorizontalMaxSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetAscentSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetAscentSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetAscentSpeed");

	Params::HWGameplayFlight_GetAscentSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetFlightIdTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayFlight::GetFlightIdTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetFlightIdTag");

	Params::HWGameplayFlight_GetFlightIdTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetFlightOrigin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayFlight::GetFlightOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetFlightOrigin");

	Params::HWGameplayFlight_GetFlightOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetFlyingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* UHWGameplayFlight::GetFlyingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetFlyingCharacter");

	Params::HWGameplayFlight_GetFlyingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetHorizontalMaxSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetHorizontalMaxSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetHorizontalMaxSpeed");

	Params::HWGameplayFlight_GetHorizontalMaxSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetMidFlightHorizontalMaxSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetMidFlightHorizontalMaxSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetMidFlightHorizontalMaxSpeed");

	Params::HWGameplayFlight_GetMidFlightHorizontalMaxSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetMoveSpeedValueBasedOnMovementDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWFlightMoveSpeedValues&  MoveSpeedValues                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetMoveSpeedValueBasedOnMovementDirection(const struct FHWFlightMoveSpeedValues& MoveSpeedValues) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetMoveSpeedValueBasedOnMovementDirection");

	Params::HWGameplayFlight_GetMoveSpeedValueBasedOnMovementDirection Parms{};

	Parms.MoveSpeedValues = std::move(MoveSpeedValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.GetTurningDegreesPerSecond
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayFlight::GetTurningDegreesPerSecond() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "GetTurningDegreesPerSecond");

	Params::HWGameplayFlight_GetTurningDegreesPerSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.HasForcedMovement
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::HasForcedMovement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "HasForcedMovement");

	Params::HWGameplayFlight_HasForcedMovement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.IsAscentActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::IsAscentActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "IsAscentActive");

	Params::HWGameplayFlight_IsAscentActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.IsAscentServerComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::IsAscentServerComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "IsAscentServerComplete");

	Params::HWGameplayFlight_IsAscentServerComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.IsDescentActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::IsDescentActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "IsDescentActive");

	Params::HWGameplayFlight_IsDescentActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.IsFlightActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::IsFlightActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "IsFlightActive");

	Params::HWGameplayFlight_IsFlightActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.IsMidFlightActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::IsMidFlightActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "IsMidFlightActive");

	Params::HWGameplayFlight_IsMidFlightActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.ShouldCalcRotation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::ShouldCalcRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "ShouldCalcRotation");

	Params::HWGameplayFlight_ShouldCalcRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.ShouldCalcVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::ShouldCalcVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "ShouldCalcVelocity");

	Params::HWGameplayFlight_ShouldCalcVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.ShouldClampAscentToMaxHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::ShouldClampAscentToMaxHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "ShouldClampAscentToMaxHeight");

	Params::HWGameplayFlight_ShouldClampAscentToMaxHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.ShouldEndAscent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::ShouldEndAscent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "ShouldEndAscent");

	Params::HWGameplayFlight_ShouldEndAscent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.ShouldIgnoreClientCorrections
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::ShouldIgnoreClientCorrections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "ShouldIgnoreClientCorrections");

	Params::HWGameplayFlight_ShouldIgnoreClientCorrections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.UsesCurveBasedAscent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::UsesCurveBasedAscent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "UsesCurveBasedAscent");

	Params::HWGameplayFlight_UsesCurveBasedAscent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.UsesPhysicsBasedAscent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::UsesPhysicsBasedAscent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "UsesPhysicsBasedAscent");

	Params::HWGameplayFlight_UsesPhysicsBasedAscent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayFlight.UsesTweenBasedAscent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayFlight::UsesTweenBasedAscent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayFlight", "UsesTweenBasedAscent");

	Params::HWGameplayFlight_UsesTweenBasedAscent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.bIsUsingCustomProfile
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::bIsUsingCustomProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "bIsUsingCustomProfile");

	Params::HWGameplayGrab_bIsUsingCustomProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.CalcGrabVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayGrab::CalcGrabVelocity(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "CalcGrabVelocity");

	Params::HWGameplayGrab_CalcGrabVelocity Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.EndGrab
// (Native, Public, BlueprintCallable)
// Parameters:
// const EHWEndGrabReason                  InEndGrabReason                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndGrabBehavior                InEndGrabBehavior                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayGrab::EndGrab(const EHWEndGrabReason InEndGrabReason, const EHWEndGrabBehavior InEndGrabBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "EndGrab");

	Params::HWGameplayGrab_EndGrab Parms{};

	Parms.InEndGrabReason = InEndGrabReason;
	Parms.InEndGrabBehavior = InEndGrabBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayGrab.GetInterruptExistingGrabBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EHWEndGrabBehavior                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWEndGrabBehavior UHWGameplayGrab::GetInterruptExistingGrabBehavior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetInterruptExistingGrabBehavior");

	Params::HWGameplayGrab_GetInterruptExistingGrabBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.OnGrabEnded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const EHWEndGrabReason                  EndGrabReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayGrab::OnGrabEnded(const EHWEndGrabReason EndGrabReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "OnGrabEnded");

	Params::HWGameplayGrab_OnGrabEnded Parms{};

	Parms.EndGrabReason = EndGrabReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayGrab.OnGrabStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayGrab::OnGrabStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "OnGrabStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayGrab.StartGrab
// (Native, Public)

void UHWGameplayGrab::StartGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "StartGrab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayGrab.CanBeInterruptedByKnockback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::CanBeInterruptedByKnockback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "CanBeInterruptedByKnockback");

	Params::HWGameplayGrab_CanBeInterruptedByKnockback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.CanBeInterruptedByNewGrab
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::CanBeInterruptedByNewGrab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "CanBeInterruptedByNewGrab");

	Params::HWGameplayGrab_CanBeInterruptedByNewGrab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.CanBeInterruptedByNewTween
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::CanBeInterruptedByNewTween() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "CanBeInterruptedByNewTween");

	Params::HWGameplayGrab_CanBeInterruptedByNewTween Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.CanBePurifiedByGrabTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::CanBePurifiedByGrabTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "CanBePurifiedByGrabTarget");

	Params::HWGameplayGrab_CanBePurifiedByGrabTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetCurrentGrabLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayGrab::GetCurrentGrabLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetCurrentGrabLocation");

	Params::HWGameplayGrab_GetCurrentGrabLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetEndGrabBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWEndGrabBehavior                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWEndGrabBehavior UHWGameplayGrab::GetEndGrabBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetEndGrabBehavior");

	Params::HWGameplayGrab_GetEndGrabBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabCompletionPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayGrab::GetGrabCompletionPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabCompletionPercentage");

	Params::HWGameplayGrab_GetGrabCompletionPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabControlType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGrabControlType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGrabControlType UHWGameplayGrab::GetGrabControlType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabControlType");

	Params::HWGameplayGrab_GetGrabControlType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabIdTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayGrab::GetGrabIdTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabIdTag");

	Params::HWGameplayGrab_GetGrabIdTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWGameplayGrab::GetGrabInstigator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabInstigator");

	Params::HWGameplayGrab_GetGrabInstigator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabInterruptType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGrabInterruptType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGrabInterruptType UHWGameplayGrab::GetGrabInterruptType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabInterruptType");

	Params::HWGameplayGrab_GetGrabInterruptType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabLocationOffset
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayGrab::GetGrabLocationOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabLocationOffset");

	Params::HWGameplayGrab_GetGrabLocationOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabLocationOffsetInLocalSpace
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayGrab::GetGrabLocationOffsetInLocalSpace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabLocationOffsetInLocalSpace");

	Params::HWGameplayGrab_GetGrabLocationOffsetInLocalSpace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabSourceCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWGameplayGrab::GetGrabSourceCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabSourceCharacter");

	Params::HWGameplayGrab_GetGrabSourceCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetGrabTargetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* UHWGameplayGrab::GetGrabTargetCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetGrabTargetCharacter");

	Params::HWGameplayGrab_GetGrabTargetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.GetInstigatingAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UHWGameplayGrab::GetInstigatingAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "GetInstigatingAbility");

	Params::HWGameplayGrab_GetInstigatingAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.HasDismountVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::HasDismountVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "HasDismountVelocity");

	Params::HWGameplayGrab_HasDismountVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.HasValidGrabMovement
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::HasValidGrabMovement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "HasValidGrabMovement");

	Params::HWGameplayGrab_HasValidGrabMovement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.HasVerticalDismountVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::HasVerticalDismountVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "HasVerticalDismountVelocity");

	Params::HWGameplayGrab_HasVerticalDismountVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "IsActive");

	Params::HWGameplayGrab_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.IsPositionTypeUsingCustomAngle
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::IsPositionTypeUsingCustomAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "IsPositionTypeUsingCustomAngle");

	Params::HWGameplayGrab_IsPositionTypeUsingCustomAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.ShouldEndGrab
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::ShouldEndGrab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "ShouldEndGrab");

	Params::HWGameplayGrab_ShouldEndGrab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayGrab.ShouldLockRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayGrab::ShouldLockRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayGrab", "ShouldLockRotation");

	Params::HWGameplayGrab_ShouldLockRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.bIsUsingCustomProfile
// (Final, Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::bIsUsingCustomProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "bIsUsingCustomProfile");

	Params::HWGameplayTween_bIsUsingCustomProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.CanBeInterruptedByKnockback
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::CanBeInterruptedByKnockback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "CanBeInterruptedByKnockback");

	Params::HWGameplayTween_CanBeInterruptedByKnockback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.CanBeInterruptedByNewTween
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::CanBeInterruptedByNewTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "CanBeInterruptedByNewTween");

	Params::HWGameplayTween_CanBeInterruptedByNewTween Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.EndTween
// (Native, Public, BlueprintCallable)
// Parameters:
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenBehavior               EndTweenBehavior                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayTween::EndTween(const EHWEndTweenReason EndTweenReason, const EHWEndTweenBehavior EndTweenBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "EndTween");

	Params::HWGameplayTween_EndTween Parms{};

	Parms.EndTweenReason = EndTweenReason;
	Parms.EndTweenBehavior = EndTweenBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.OnCharacterBump
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWGameplayTween::OnCharacterBump(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "OnCharacterBump");

	Params::HWGameplayTween_OnCharacterBump Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.OnTweenEnded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayTween::OnTweenEnded(const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "OnTweenEnded");

	Params::HWGameplayTween_OnTweenEnded Parms{};

	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.OnTweenStarted
// (Native, Event, Public, BlueprintEvent)

void UHWGameplayTween::OnTweenStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "OnTweenStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.SetLockPawnRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldLockPawnRotation                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayTween::SetLockPawnRotation(bool bShouldLockPawnRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "SetLockPawnRotation");

	Params::HWGameplayTween_SetLockPawnRotation Parms{};

	Parms.bShouldLockPawnRotation = bShouldLockPawnRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.StartTween
// (Native, Public)

void UHWGameplayTween::StartTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "StartTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayTween.CalcCharacterRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UHWGameplayTween::CalcCharacterRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "CalcCharacterRotation");

	Params::HWGameplayTween_CalcCharacterRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.CanBePurifiedByTweenTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::CanBePurifiedByTweenTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "CanBePurifiedByTweenTarget");

	Params::HWGameplayTween_CanBePurifiedByTweenTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.CanTweenToNewPlaneOfExistence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::CanTweenToNewPlaneOfExistence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "CanTweenToNewPlaneOfExistence");

	Params::HWGameplayTween_CanTweenToNewPlaneOfExistence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetCurrentTweenLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayTween::GetCurrentTweenLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetCurrentTweenLocation");

	Params::HWGameplayTween_GetCurrentTweenLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetFinalTweenDestination
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayTween::GetFinalTweenDestination() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetFinalTweenDestination");

	Params::HWGameplayTween_GetFinalTweenDestination Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetSplinePath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class USplineComponent*           ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USplineComponent* UHWGameplayTween::GetSplinePath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetSplinePath");

	Params::HWGameplayTween_GetSplinePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweenBehaviorOnInterrupted
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWEndTweenBehavior                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWEndTweenBehavior UHWGameplayTween::GetTweenBehaviorOnInterrupted(const EHWEndTweenReason EndTweenReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweenBehaviorOnInterrupted");

	Params::HWGameplayTween_GetTweenBehaviorOnInterrupted Parms{};

	Parms.EndTweenReason = EndTweenReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweenCompletionPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayTween::GetTweenCompletionPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweenCompletionPercentage");

	Params::HWGameplayTween_GetTweenCompletionPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweenId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayTween::GetTweenId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweenId");

	Params::HWGameplayTween_GetTweenId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweeningCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* UHWGameplayTween::GetTweeningCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweeningCharacter");

	Params::HWGameplayTween_GetTweeningCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweenOrigin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWGameplayTween::GetTweenOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweenOrigin");

	Params::HWGameplayTween_GetTweenOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetTweenType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETweenType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETweenType UHWGameplayTween::GetTweenType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetTweenType");

	Params::HWGameplayTween_GetTweenType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.GetVerticalArcHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             TweenPercentage                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWGameplayTween::GetVerticalArcHeight(const float TweenPercentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "GetVerticalArcHeight");

	Params::HWGameplayTween_GetVerticalArcHeight Parms{};

	Parms.TweenPercentage = TweenPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "IsActive");

	Params::HWGameplayTween_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.ShouldEndTween
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::ShouldEndTween() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "ShouldEndTween");

	Params::HWGameplayTween_ShouldEndTween Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayTween.ShouldGainMaxInputSpeedOnTweenEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayTween::ShouldGainMaxInputSpeedOnTweenEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayTween", "ShouldGainMaxInputSpeedOnTweenEnd");

	Params::HWGameplayTween_ShouldGainMaxInputSpeedOnTweenEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameUserSettings.GetAudioInputDevicesAsText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>*                    OutAudioInputDevices                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameUserSettings::GetAudioInputDevicesAsText(TArray<class FText>* OutAudioInputDevices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameUserSettings", "GetAudioInputDevicesAsText");

	Params::HWGameUserSettings_GetAudioInputDevicesAsText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAudioInputDevices != nullptr)
		*OutAudioInputDevices = std::move(Parms.OutAudioInputDevices);
}


// Function Hemingway.HWGameUserSettings.GetReflexModeAsInt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutReflexMode                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameUserSettings::GetReflexModeAsInt(int32* OutReflexMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameUserSettings", "GetReflexModeAsInt");

	Params::HWGameUserSettings_GetReflexModeAsInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutReflexMode != nullptr)
		*OutReflexMode = Parms.OutReflexMode;
}


// Function Hemingway.HWGameUserSettings.GetSupportedResolutionsAsText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>*                    OutSupportedResolutions                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWGameUserSettings::GetSupportedResolutionsAsText(TArray<class FText>* OutSupportedResolutions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameUserSettings", "GetSupportedResolutionsAsText");

	Params::HWGameUserSettings_GetSupportedResolutionsAsText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSupportedResolutions != nullptr)
		*OutSupportedResolutions = std::move(Parms.OutSupportedResolutions);
}


// Function Hemingway.HWGameUserSettings.GetCurrentAudioInputDeviceIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameUserSettings::GetCurrentAudioInputDeviceIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameUserSettings", "GetCurrentAudioInputDeviceIndex");

	Params::HWGameUserSettings_GetCurrentAudioInputDeviceIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameUserSettings.GetCurrentResolutionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWGameUserSettings::GetCurrentResolutionIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameUserSettings", "GetCurrentResolutionIndex");

	Params::HWGameUserSettings_GetCurrentResolutionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_ShieldOwner.GetShieldEffectTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWGameplayEffect_ShieldOwner::GetShieldEffectTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_ShieldOwner", "GetShieldEffectTag");

	Params::HWGameplayEffect_ShieldOwner_GetShieldEffectTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_ShieldOwner.GetShieldType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EShieldType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EShieldType UHWGameplayEffect_ShieldOwner::GetShieldType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_ShieldOwner", "GetShieldType");

	Params::HWGameplayEffect_ShieldOwner_GetShieldType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_ShieldOwner.ShouldReplaceOnReapplication
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_ShieldOwner::ShouldReplaceOnReapplication() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_ShieldOwner", "ShouldReplaceOnReapplication");

	Params::HWGameplayEffect_ShieldOwner_ShouldReplaceOnReapplication Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameplayEffect_ShieldOwner.ShouldSetMaxHealthEqualToInitial
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayEffect_ShieldOwner::ShouldSetMaxHealthEqualToInitial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayEffect_ShieldOwner", "ShouldSetMaxHealthEqualToInitial");

	Params::HWGameplayEffect_ShieldOwner_ShouldSetMaxHealthEqualToInitial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.AddShieldHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             ShieldHealthToAdd                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldInstance::AddShieldHealth(const float ShieldHealthToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "AddShieldHealth");

	Params::HWShieldInstance_AddShieldHealth Parms{};

	Parms.ShieldHealthToAdd = ShieldHealthToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.ExtendLifetime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             SecondsToAdd                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldInstance::ExtendLifetime(const float SecondsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "ExtendLifetime");

	Params::HWShieldInstance_ExtendLifetime Parms{};

	Parms.SecondsToAdd = SecondsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.OnRep_CurrentShieldHealth
// (Final, Native, Protected)

void UHWShieldInstance::OnRep_CurrentShieldHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "OnRep_CurrentShieldHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.RemoveShield
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWShieldInstance::RemoveShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "RemoveShield");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.RemoveShieldLifetimeExpired
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayEffectRemovalInfo&RemovalInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWShieldInstance::RemoveShieldLifetimeExpired(const struct FGameplayEffectRemovalInfo& RemovalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "RemoveShieldLifetimeExpired");

	Params::HWShieldInstance_RemoveShieldLifetimeExpired Parms{};

	Parms.RemovalInfo = std::move(RemovalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.SetLifetime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             NewLifetime                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldInstance::SetLifetime(const float NewLifetime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "SetLifetime");

	Params::HWShieldInstance_SetLifetime Parms{};

	Parms.NewLifetime = NewLifetime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.SetShieldHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             NewShieldHealth                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldInstance::SetShieldHealth(const float NewShieldHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "SetShieldHealth");

	Params::HWShieldInstance_SetShieldHealth Parms{};

	Parms.NewShieldHealth = NewShieldHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.ShortenLifetime
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             SecondsToSubtract                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWShieldInstance::ShortenLifetime(const float SecondsToSubtract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "ShortenLifetime");

	Params::HWShieldInstance_ShortenLifetime Parms{};

	Parms.SecondsToSubtract = SecondsToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWShieldInstance.SubtractShieldHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const float                             ShieldHealthToSubtract                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldInstance::SubtractShieldHealth(const float ShieldHealthToSubtract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "SubtractShieldHealth");

	Params::HWShieldInstance_SubtractShieldHealth Parms{};

	Parms.ShieldHealthToSubtract = ShieldHealthToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetActiveShieldEffectHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActiveGameplayEffectHandle      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActiveGameplayEffectHandle UHWShieldInstance::GetActiveShieldEffectHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetActiveShieldEffectHandle");

	Params::HWShieldInstance_GetActiveShieldEffectHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetCurrentLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldInstance::GetCurrentLifetime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetCurrentLifetime");

	Params::HWShieldInstance_GetCurrentLifetime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetCurrentShieldHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldInstance::GetCurrentShieldHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetCurrentShieldHealth");

	Params::HWShieldInstance_GetCurrentShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetMaxLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldInstance::GetMaxLifetime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetMaxLifetime");

	Params::HWShieldInstance_GetMaxLifetime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetMaxShieldHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWShieldInstance::GetMaxShieldHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetMaxShieldHealth");

	Params::HWShieldInstance_GetMaxShieldHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetShieldEffectTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHWShieldInstance::GetShieldEffectTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetShieldEffectTag");

	Params::HWShieldInstance_GetShieldEffectTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetShieldGranterASC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* UHWShieldInstance::GetShieldGranterASC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetShieldGranterASC");

	Params::HWShieldInstance_GetShieldGranterASC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetShieldManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWShieldManagerComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWShieldManagerComponent* UHWShieldInstance::GetShieldManagerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetShieldManagerComponent");

	Params::HWShieldInstance_GetShieldManagerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.GetShieldType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EShieldType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EShieldType UHWShieldInstance::GetShieldType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "GetShieldType");

	Params::HWShieldInstance_GetShieldType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWShieldInstance.HasLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWShieldInstance::HasLifetime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWShieldInstance", "HasLifetime");

	Params::HWShieldInstance_HasLifetime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.ClearDisconnectErrorCode
// (Final, Native, Public, BlueprintCallable)

void UHWGameInstance::ClearDisconnectErrorCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "ClearDisconnectErrorCode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.ClearTravelErrorCode
// (Final, Native, Public, BlueprintCallable)

void UHWGameInstance::ClearTravelErrorCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "ClearTravelErrorCode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.NetworkFailureEvent
// (Final, Native, Protected)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetDriver*                       InNetDriver                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENetworkFailure                         InFailureType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InErrorDescription                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::NetworkFailureEvent(class UWorld* InWorld, class UNetDriver* InNetDriver, ENetworkFailure InFailureType, const class FString& InErrorDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "NetworkFailureEvent");

	Params::HWGameInstance_NetworkFailureEvent Parms{};

	Parms.InWorld = InWorld;
	Parms.InNetDriver = InNetDriver;
	Parms.InFailureType = InFailureType;
	Parms.InErrorDescription = std::move(InErrorDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.OnActiveSessionChanged
// (Final, Native, Protected)
// Parameters:
// class URH_JoinedSession*                OldSesion                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                JoinedSession                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::OnActiveSessionChanged(class URH_JoinedSession* OldSesion, class URH_JoinedSession* JoinedSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "OnActiveSessionChanged");

	Params::HWGameInstance_OnActiveSessionChanged Parms{};

	Parms.OldSesion = OldSesion;
	Parms.JoinedSession = JoinedSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.OnSessionUpdated
// (Final, Native, Protected)
// Parameters:
// class URH_SessionView*                  SessionView                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::OnSessionUpdated(class URH_SessionView* SessionView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "OnSessionUpdated");

	Params::HWGameInstance_OnSessionUpdated Parms{};

	Parms.SessionView = SessionView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetAllMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMuted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::SetAllMuted(const struct FGuid& PlayerUuid, bool bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetAllMuted");

	Params::HWGameInstance_SetAllMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);
	Parms.bIsMuted = bIsMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetDisconnectErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      ErrorCode                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameInstance::SetDisconnectErrorCode(const class FText& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetDisconnectErrorCode");

	Params::HWGameInstance_SetDisconnectErrorCode Parms{};

	Parms.ErrorCode = std::move(ErrorCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetPingsMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMuted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::SetPingsMuted(const struct FGuid& PlayerUuid, bool bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetPingsMuted");

	Params::HWGameInstance_SetPingsMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);
	Parms.bIsMuted = bIsMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetTextMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMuted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::SetTextMuted(const struct FGuid& PlayerUuid, bool bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetTextMuted");

	Params::HWGameInstance_SetTextMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);
	Parms.bIsMuted = bIsMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetTravelErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      ErrorCode                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWGameInstance::SetTravelErrorCode(const class FText& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetTravelErrorCode");

	Params::HWGameInstance_SetTravelErrorCode Parms{};

	Parms.ErrorCode = std::move(ErrorCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.SetVGSMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMuted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::SetVGSMuted(const struct FGuid& PlayerUuid, bool bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "SetVGSMuted");

	Params::HWGameInstance_SetVGSMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);
	Parms.bIsMuted = bIsMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.TravelFailureEvent
// (Final, Native, Protected)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETravelFailure                          InFailureType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InErrorDescription                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameInstance::TravelFailureEvent(class UWorld* InWorld, ETravelFailure InFailureType, const class FString& InErrorDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "TravelFailureEvent");

	Params::HWGameInstance_TravelFailureEvent Parms{};

	Parms.InWorld = InWorld;
	Parms.InFailureType = InFailureType;
	Parms.InErrorDescription = std::move(InErrorDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameInstance.GetDisconnectErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText*                            OutDisconnectError                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::GetDisconnectErrorCode(class FText* OutDisconnectError) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "GetDisconnectErrorCode");

	Params::HWGameInstance_GetDisconnectErrorCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisconnectError != nullptr)
		*OutDisconnectError = std::move(Parms.OutDisconnectError);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.GetNetworkFailureSessionIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class FString>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FString> UHWGameInstance::GetNetworkFailureSessionIds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "GetNetworkFailureSessionIds");

	Params::HWGameInstance_GetNetworkFailureSessionIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.GetPlayerMuteFlags
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRHPlayerMuteFlags               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRHPlayerMuteFlags UHWGameInstance::GetPlayerMuteFlags(const struct FGuid& PlayerUuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "GetPlayerMuteFlags");

	Params::HWGameInstance_GetPlayerMuteFlags Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.GetTagManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWTagManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWTagManager* UHWGameInstance::GetTagManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "GetTagManager");

	Params::HWGameInstance_GetTagManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.GetTravelErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText*                            OutDisconnectError                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::GetTravelErrorCode(class FText* OutDisconnectError) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "GetTravelErrorCode");

	Params::HWGameInstance_GetTravelErrorCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisconnectError != nullptr)
		*OutDisconnectError = std::move(Parms.OutDisconnectError);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.IsAllMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::IsAllMuted(const struct FGuid& PlayerUuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "IsAllMuted");

	Params::HWGameInstance_IsAllMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.IsGm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::IsGm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "IsGm");

	Params::HWGameInstance_IsGm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.IsPingsMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::IsPingsMuted(const struct FGuid& PlayerUuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "IsPingsMuted");

	Params::HWGameInstance_IsPingsMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.IsTextMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::IsTextMuted(const struct FGuid& PlayerUuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "IsTextMuted");

	Params::HWGameInstance_IsTextMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameInstance.IsVGSMuted
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuid&                     PlayerUuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameInstance::IsVGSMuted(const struct FGuid& PlayerUuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameInstance", "IsVGSMuted");

	Params::HWGameInstance_IsVGSMuted Parms{};

	Parms.PlayerUuid = std::move(PlayerUuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRespawnManager.CanRespawnPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWRespawnManager::CanRespawnPlayer(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "CanRespawnPlayer");

	Params::HWRespawnManager_CanRespawnPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRespawnManager.ForceRespawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWRespawnManager::ForceRespawn(class AHWPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "ForceRespawn");

	Params::HWRespawnManager_ForceRespawn Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRespawnManager.PostAddPlayerToRespawnQueue
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWRespawnData&            Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWRespawnManager::PostAddPlayerToRespawnQueue(const struct FHWRespawnData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "PostAddPlayerToRespawnQueue");

	Params::HWRespawnManager_PostAddPlayerToRespawnQueue Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRespawnManager.PostRespawnPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWRespawnManager::PostRespawnPlayer(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "PostRespawnPlayer");

	Params::HWRespawnManager_PostRespawnPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRespawnManager.PreAddPlayerToRespawnQueue
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWRespawnManager::PreAddPlayerToRespawnQueue(class AHWPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "PreAddPlayerToRespawnQueue");

	Params::HWRespawnManager_PreAddPlayerToRespawnQueue Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRespawnManager.TryToAddPlayerToRespawnQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldForce                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWRespawnManager::TryToAddPlayerToRespawnQueue(class AHWPlayerState* PlayerState, bool ShouldForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "TryToAddPlayerToRespawnQueue");

	Params::HWRespawnManager_TryToAddPlayerToRespawnQueue Parms{};

	Parms.PlayerState = PlayerState;
	Parms.ShouldForce = ShouldForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWRespawnManager.CanAddPlayerToRespawnQueue
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWRespawnManager::CanAddPlayerToRespawnQueue(class AHWPlayerState* PlayerState, bool bForce) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "CanAddPlayerToRespawnQueue");

	Params::HWRespawnManager_CanAddPlayerToRespawnQueue Parms{};

	Parms.PlayerState = PlayerState;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRespawnManager.GetGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWGameMode*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWGameMode* AHWRespawnManager::GetGameMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "GetGameMode");

	Params::HWRespawnManager_GetGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWRespawnManager.IsPlayerInRespawnQueue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWPlayerState*             PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutRespawnTimeRemaining                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWRespawnManager::IsPlayerInRespawnQueue(const class AHWPlayerState* PlayerState, float* OutRespawnTimeRemaining) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWRespawnManager", "IsPlayerInRespawnQueue");

	Params::HWRespawnManager_IsPlayerInRespawnQueue Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRespawnTimeRemaining != nullptr)
		*OutRespawnTimeRemaining = Parms.OutRespawnTimeRemaining;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.HandleOnGamePhaseEnded
// (Final, Native, Private)
// Parameters:
// const struct FGameplayTag&              CurrentPhase                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::HandleOnGamePhaseEnded(const struct FGameplayTag& CurrentPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "HandleOnGamePhaseEnded");

	Params::HWTeamState_HandleOnGamePhaseEnded Parms{};

	Parms.CurrentPhase = std::move(CurrentPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.MulticastBroadcastPauseVoteResolved
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// const EHWVoteResult                     Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::MulticastBroadcastPauseVoteResolved(const EHWVoteResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "MulticastBroadcastPauseVoteResolved");

	Params::HWTeamState_MulticastBroadcastPauseVoteResolved Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.MulticastBroadcastPauseVotesUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   NumYesVotes                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumNoVotes                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::MulticastBroadcastPauseVotesUpdated(int32 NumYesVotes, int32 NumNoVotes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "MulticastBroadcastPauseVotesUpdated");

	Params::HWTeamState_MulticastBroadcastPauseVotesUpdated Parms{};

	Parms.NumYesVotes = NumYesVotes;
	Parms.NumNoVotes = NumNoVotes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.MulticastBroadcastSurrenderResolved
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// const EHWVoteResult                     Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::MulticastBroadcastSurrenderResolved(const EHWVoteResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "MulticastBroadcastSurrenderResolved");

	Params::HWTeamState_MulticastBroadcastSurrenderResolved Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.MulticastBroadcastSurrenderVotesUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   NumYesVotes                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumNoVotes                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::MulticastBroadcastSurrenderVotesUpdated(int32 NumYesVotes, int32 NumNoVotes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "MulticastBroadcastSurrenderVotesUpdated");

	Params::HWTeamState_MulticastBroadcastSurrenderVotesUpdated Parms{};

	Parms.NumYesVotes = NumYesVotes;
	Parms.NumNoVotes = NumNoVotes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_NPCFactories
// (Native, Protected)

void AHWTeamState::OnRep_NPCFactories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_NPCFactories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_TeamID
// (Native, Protected)
// Parameters:
// const struct FGenericTeamId&            OldTeamId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::OnRep_TeamID(const struct FGenericTeamId& OldTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_TeamID");

	Params::HWTeamState_OnRep_TeamID Parms{};

	Parms.OldTeamId = std::move(OldTeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_TeamMembers
// (Native, Protected)

void AHWTeamState::OnRep_TeamMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_TeamMembers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_TeamMinimap
// (Final, Native, Public)

void AHWTeamState::OnRep_TeamMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_TeamMinimap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_TeamStatsTracker
// (Final, Native, Protected)

void AHWTeamState::OnRep_TeamStatsTracker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_TeamStatsTracker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnRep_TeamStructures
// (Native, Protected)

void AHWTeamState::OnRep_TeamStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnRep_TeamStructures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnTeamMemberCommittedAssist
// (Final, Native, Protected)
// Parameters:
// const struct FAssistEventData&          AssistEventData                                        (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void AHWTeamState::OnTeamMemberCommittedAssist(const struct FAssistEventData& AssistEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnTeamMemberCommittedAssist");

	Params::HWTeamState_OnTeamMemberCommittedAssist Parms{};

	Parms.AssistEventData = std::move(AssistEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnTeamMemberCommittedKill
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          KillEventData                                          (ConstParm, Parm, NativeAccessSpecifierPublic)

void AHWTeamState::OnTeamMemberCommittedKill(const struct FDamageEventData& KillEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnTeamMemberCommittedKill");

	Params::HWTeamState_OnTeamMemberCommittedKill Parms{};

	Parms.KillEventData = std::move(KillEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.OnTeamMemberDied
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void AHWTeamState::OnTeamMemberDied(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "OnTeamMemberDied");

	Params::HWTeamState_OnTeamMemberDied Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.SetGenericTeamId
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGenericTeamId&            NewTeamId                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamState::SetGenericTeamId(const struct FGenericTeamId& NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "SetGenericTeamId");

	Params::HWTeamState_SetGenericTeamId Parms{};

	Parms.NewTeamId = std::move(NewTeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamState.GetAllCharacters
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWCharacter_Base*>*       outCharacters                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWTeamState::GetAllCharacters(TArray<class AHWCharacter_Base*>* outCharacters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetAllCharacters");

	Params::HWTeamState_GetAllCharacters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outCharacters != nullptr)
		*outCharacters = std::move(Parms.outCharacters);
}


// Function Hemingway.HWTeamState.GetClosestMemberWithinRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWTeamState::GetClosestMemberWithinRange(const struct FVector& SourceLocation, float Radius, const struct FGameplayTagContainer& tagsToIgnore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetClosestMemberWithinRange");

	Params::HWTeamState_GetClosestMemberWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetClosestTeamStructure
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   QueryLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  outDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWTeamState::GetClosestTeamStructure(const struct FVector& QueryLocation, float* outDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetClosestTeamStructure");

	Params::HWTeamState_GetClosestTeamStructure Parms{};

	Parms.QueryLocation = std::move(QueryLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outDistance != nullptr)
		*outDistance = Parms.outDistance;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGenericTeamId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AHWTeamState::GetGenericTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGenericTeamId");

	Params::HWTeamState_GetGenericTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGodMemberAliveCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetGodMemberAliveCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGodMemberAliveCount");

	Params::HWTeamState_GetGodMemberAliveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGodMemberAvgHealthPctWithinRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWTeamState::GetGodMemberAvgHealthPctWithinRange(const struct FVector& SourceLocation, const float Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGodMemberAvgHealthPctWithinRange");

	Params::HWTeamState_GetGodMemberAvgHealthPctWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGodMemberCountThatAreFocusedOnTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          SourceCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AHWCharacter_Base*          TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetGodMemberCountThatAreFocusedOnTarget(const class AHWCharacter_Base* SourceCharacter, const class AHWCharacter_Base* TargetCharacter, bool bIncludeSource) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGodMemberCountThatAreFocusedOnTarget");

	Params::HWTeamState_GetGodMemberCountThatAreFocusedOnTarget Parms{};

	Parms.SourceCharacter = SourceCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.bIncludeSource = bIncludeSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGodMemberCountWithinRange
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetGodMemberCountWithinRange(const struct FVector& SourceLocation, float Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGodMemberCountWithinRange");

	Params::HWTeamState_GetGodMemberCountWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetGodMemberTotalHealthPctWithinRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWTeamState::GetGodMemberTotalHealthPctWithinRange(const struct FVector& SourceLocation, const float Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetGodMemberTotalHealthPctWithinRange");

	Params::HWTeamState_GetGodMemberTotalHealthPctWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetMemberCountWithinRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetMemberCountWithinRange(const struct FVector& SourceLocation, float Radius, const struct FGameplayTagContainer& tagsToIgnore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetMemberCountWithinRange");

	Params::HWTeamState_GetMemberCountWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetMembersWithinRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       outTargets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWTeamState::GetMembersWithinRange(const struct FVector& SourceLocation, const float Radius, const struct FGameplayTagContainer& tagsToIgnore, TArray<class AHWCharacter_Base*>* outTargets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetMembersWithinRange");

	Params::HWTeamState_GetMembersWithinRange Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Radius = Radius;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outTargets != nullptr)
		*outTargets = std::move(Parms.outTargets);
}


// Function Hemingway.HWTeamState.GetMembersWithinRangeAndViewCone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   SourceLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  SourceRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PerceptionConeAngle                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tagsToIgnore                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AHWCharacter_Base*>*       outTargets                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWTeamState::GetMembersWithinRangeAndViewCone(const struct FVector& SourceLocation, const struct FRotator& SourceRotation, const float Radius, const float PerceptionConeAngle, const struct FGameplayTagContainer& tagsToIgnore, TArray<class AHWCharacter_Base*>* outTargets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetMembersWithinRangeAndViewCone");

	Params::HWTeamState_GetMembersWithinRangeAndViewCone Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = std::move(SourceRotation);
	Parms.Radius = Radius;
	Parms.PerceptionConeAngle = PerceptionConeAngle;
	Parms.tagsToIgnore = std::move(tagsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outTargets != nullptr)
		*outTargets = std::move(Parms.outTargets);
}


// Function Hemingway.HWTeamState.GetMinionAggroCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetMinionAggroCount(const class AHWCharacter_Base* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetMinionAggroCount");

	Params::HWTeamState_GetMinionAggroCount Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetNPCFactories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWBotFactory*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AHWBotFactory*> AHWTeamState::GetNPCFactories() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetNPCFactories");

	Params::HWTeamState_GetNPCFactories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetNPCFactoryForLane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             LaneId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWBotFactory*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWBotFactory* AHWTeamState::GetNPCFactoryForLane(class FName LaneId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetNPCFactoryForLane");

	Params::HWTeamState_GetNPCFactoryForLane Parms{};

	Parms.LaneId = LaneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetTeamFountain
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWFountain*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWFountain* AHWTeamState::GetTeamFountain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetTeamFountain");

	Params::HWTeamState_GetTeamFountain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetTeamMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWPlayerState*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AHWPlayerState*> AHWTeamState::GetTeamMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetTeamMembers");

	Params::HWTeamState_GetTeamMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetTeamStatsTracker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWTeamStatsTracker*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamStatsTracker* AHWTeamState::GetTeamStatsTracker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetTeamStatsTracker");

	Params::HWTeamState_GetTeamStatsTracker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetTeamStructureCountByTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamState::GetTeamStructureCountByTag(const struct FGameplayTag& Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetTeamStructureCountByTag");

	Params::HWTeamState_GetTeamStructureCountByTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamState.GetTeamStructures
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AHWBotFactory*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AHWBotFactory*> AHWTeamState::GetTeamStructures() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamState", "GetTeamStructures");

	Params::HWTeamState_GetTeamStructures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWBotArenaGoalOutro.OnOutroTimerExpired
// (Final, Native, Protected)

void UHWBotArenaGoalOutro::OnOutroTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWBotArenaGoalOutro", "OnOutroTimerExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode_Arena.BotGoalReached
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Bot                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode_Arena::BotGoalReached(class AActor* Bot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode_Arena", "BotGoalReached");

	Params::HWGameMode_Arena_BotGoalReached Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode_Arena.Defeat
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FGenericTeamId&            Team                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWGameMode_Arena::Defeat(const struct FGenericTeamId& Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode_Arena", "Defeat");

	Params::HWGameMode_Arena_Defeat Parms{};

	Parms.Team = std::move(Team);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameMode_Arena.GetTugOfWarManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWAITugOfWarManager*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWAITugOfWarManager* AHWGameMode_Arena::GetTugOfWarManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameMode_Arena", "GetTugOfWarManager");

	Params::HWGameMode_Arena_GetTugOfWarManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Aladdin.OnRep_WallRunVisualInfo
// (Event, Public, BlueprintEvent)

void AHWCharacter_Aladdin::OnRep_WallRunVisualInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Aladdin", "OnRep_WallRunVisualInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWCharacter_Aladdin.RegisterSelfWithArenaManager
// (Final, Native, Protected)

void AHWCharacter_Aladdin::RegisterSelfWithArenaManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Aladdin", "RegisterSelfWithArenaManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Aladdin.SetWallRunVisualInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWAladdinWallRunVisualInfo&VisualInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_Aladdin::SetWallRunVisualInfo(const struct FHWAladdinWallRunVisualInfo& VisualInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Aladdin", "SetWallRunVisualInfo");

	Params::HWCharacter_Aladdin_SetWallRunVisualInfo Parms{};

	Parms.VisualInfo = std::move(VisualInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Amaterasu.OnRep_StoredDamage
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Amaterasu::OnRep_StoredDamage(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Amaterasu", "OnRep_StoredDamage");

	Params::HWAttributeSet_Amaterasu_OnRep_StoredDamage Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Apollo.ActivateHitchHikerVisuals
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWApolloA04HitchHikerInfo&HitchHikerInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_Apollo::ActivateHitchHikerVisuals(const struct FHWApolloA04HitchHikerInfo& HitchHikerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "ActivateHitchHikerVisuals");

	Params::HWCharacter_Apollo_ActivateHitchHikerVisuals Parms{};

	Parms.HitchHikerInfo = std::move(HitchHikerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWCharacter_Apollo.AddHitchHiker
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          HitchHiker                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_GameplayGrab*      ChariotGrabTask                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Apollo::AddHitchHiker(const class AHWCharacter_Base* HitchHiker, class UHWAbilityTask_GameplayGrab* ChariotGrabTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "AddHitchHiker");

	Params::HWCharacter_Apollo_AddHitchHiker Parms{};

	Parms.HitchHiker = HitchHiker;
	Parms.ChariotGrabTask = ChariotGrabTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Apollo.DeactivateHitchHikerVisuals
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHWApolloA04HitchHikerInfo&HitchHikerInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWCharacter_Apollo::DeactivateHitchHikerVisuals(const struct FHWApolloA04HitchHikerInfo& HitchHikerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "DeactivateHitchHikerVisuals");

	Params::HWCharacter_Apollo_DeactivateHitchHikerVisuals Parms{};

	Parms.HitchHikerInfo = std::move(HitchHikerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWCharacter_Apollo.OnRep_HitchHikers
// (Final, Native, Protected)
// Parameters:
// const TArray<struct FHWApolloA04HitchHikerInfo>&PrevHitchHikers                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AHWCharacter_Apollo::OnRep_HitchHikers(const TArray<struct FHWApolloA04HitchHikerInfo>& PrevHitchHikers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "OnRep_HitchHikers");

	Params::HWCharacter_Apollo_OnRep_HitchHikers Parms{};

	Parms.PrevHitchHikers = std::move(PrevHitchHikers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Apollo.RemoveHitchHiker
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const class AHWCharacter_Base*          HitchHiker                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWApolloA04HitchHikerInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWApolloA04HitchHikerInfo AHWCharacter_Apollo::RemoveHitchHiker(const class AHWCharacter_Base* HitchHiker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "RemoveHitchHiker");

	Params::HWCharacter_Apollo_RemoveHitchHiker Parms{};

	Parms.HitchHiker = HitchHiker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Apollo.GetMaxHitchHikers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacter_Apollo::GetMaxHitchHikers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "GetMaxHitchHikers");

	Params::HWCharacter_Apollo_GetMaxHitchHikers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Apollo.GetNumOfActiveHitchHikers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWCharacter_Apollo::GetNumOfActiveHitchHikers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "GetNumOfActiveHitchHikers");

	Params::HWCharacter_Apollo_GetNumOfActiveHitchHikers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Apollo.HasAvailableHitchHikerSpot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Apollo::HasAvailableHitchHikerSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Apollo", "HasAvailableHitchHikerSpot");

	Params::HWCharacter_Apollo_HasAvailableHitchHikerSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Awilix_B01.OnAnotherAbilityActivated
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*                 ActivatedAbility                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Awilix_B01::OnAnotherAbilityActivated(class UGameplayAbility* ActivatedAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Awilix_B01", "OnAnotherAbilityActivated");

	Params::HWAbility_Awilix_B01_OnAnotherAbilityActivated Parms{};

	Parms.ActivatedAbility = ActivatedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Awilix_B01.OnAnotherAbilityEnded
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*                 EndedAbility                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Awilix_B01::OnAnotherAbilityEnded(class UGameplayAbility* EndedAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Awilix_B01", "OnAnotherAbilityEnded");

	Params::HWAbility_Awilix_B01_OnAnotherAbilityEnded Parms{};

	Parms.EndedAbility = EndedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Awilix_B01.OnBlockingTagsUpdated
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Awilix_B01::OnBlockingTagsUpdated(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Awilix_B01", "OnBlockingTagsUpdated");

	Params::HWAbility_Awilix_B01_OnBlockingTagsUpdated Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Bacchus.OnRep_Drunkenness
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Bacchus::OnRep_Drunkenness(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Bacchus", "OnRep_Drunkenness");

	Params::HWAttributeSet_Bacchus_OnRep_Drunkenness Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Bari.OnRep_MaxSpirit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Bari::OnRep_MaxSpirit(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Bari", "OnRep_MaxSpirit");

	Params::HWAttributeSet_Bari_OnRep_MaxSpirit Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Bari.OnRep_Spirit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Bari::OnRep_Spirit(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Bari", "OnRep_Spirit");

	Params::HWAttributeSet_Bari_OnRep_Spirit Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Bari.OnRep_SpiritPerTime
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Bari::OnRep_SpiritPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Bari", "OnRep_SpiritPerTime");

	Params::HWAttributeSet_Bari_OnRep_SpiritPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.OnRep_BellState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const EHWBariBellState                  OldBellState                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Bari_A01::OnRep_BellState(const EHWBariBellState OldBellState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "OnRep_BellState");

	Params::HWDeployable_Bari_A01_OnRep_BellState Parms{};

	Parms.OldBellState = OldBellState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.OnRep_IsEnhanced
// (Native, Event, Protected, BlueprintEvent)

void AHWDeployable_Bari_A01::OnRep_IsEnhanced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "OnRep_IsEnhanced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.OnRep_PushInfo
// (Final, Native, Protected)

void AHWDeployable_Bari_A01::OnRep_PushInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "OnRep_PushInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.PushBell
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AHWDeployable_Bari_A01::PushBell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "PushBell");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.RecallToBari
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const struct FHWBariBellRecallInfo&     recallInfo                                             (ConstParm, Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHWDeployable_Bari_A01::RecallToBari(const struct FHWBariBellRecallInfo& recallInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "RecallToBari");

	Params::HWDeployable_Bari_A01_RecallToBari Parms{};

	Parms.recallInfo = std::move(recallInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.SetBellState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const EHWBariBellState                  State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Bari_A01::SetBellState(const EHWBariBellState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "SetBellState");

	Params::HWDeployable_Bari_A01_SetBellState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.SetIsEnhanced
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnableEnhancement                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWDeployable_Bari_A01::SetIsEnhanced(const bool bEnableEnhancement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "SetIsEnhanced");

	Params::HWDeployable_Bari_A01_SetIsEnhanced Parms{};

	Parms.bEnableEnhancement = bEnableEnhancement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWDeployable_Bari_A01.GetEnhancedCollisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWDeployable_Bari_A01::GetEnhancedCollisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "GetEnhancedCollisionRadius");

	Params::HWDeployable_Bari_A01_GetEnhancedCollisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Bari_A01.GetRecallLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   RecallOrigin                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWDeployable_Bari_A01::GetRecallLocation(const struct FVector& RecallOrigin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "GetRecallLocation");

	Params::HWDeployable_Bari_A01_GetRecallLocation Parms{};

	Parms.RecallOrigin = std::move(RecallOrigin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Bari_A01.GetRecallVelocity
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHWDeployable_Bari_A01::GetRecallVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "GetRecallVelocity");

	Params::HWDeployable_Bari_A01_GetRecallVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWDeployable_Bari_A01.IsEnhanced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWDeployable_Bari_A01::IsEnhanced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWDeployable_Bari_A01", "IsEnhanced");

	Params::HWDeployable_Bari_A01_IsEnhanced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAttributeSet_Danzaburou.OnRep_CloneSpawnChance
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Danzaburou::OnRep_CloneSpawnChance(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Danzaburou", "OnRep_CloneSpawnChance");

	Params::HWAttributeSet_Danzaburou_OnRep_CloneSpawnChance Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.ActivateLeafFormVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Danzaburou::ActivateLeafFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "ActivateLeafFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.ActivateRocketFormVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Danzaburou::ActivateRocketFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "ActivateRocketFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.DeactivateLeafFormVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Danzaburou::DeactivateLeafFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "DeactivateLeafFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.DeactivateRocketFormVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AHWCharacter_Danzaburou::DeactivateRocketFormVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "DeactivateRocketFormVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.OnRep_IsInLeafForm
// (Final, Native, Protected)

void AHWCharacter_Danzaburou::OnRep_IsInLeafForm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "OnRep_IsInLeafForm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.OnRep_IsInRocketForm
// (Final, Native, Protected)

void AHWCharacter_Danzaburou::OnRep_IsInRocketForm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "OnRep_IsInRocketForm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.SetLeafFormEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Danzaburou::SetLeafFormEnabled(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "SetLeafFormEnabled");

	Params::HWCharacter_Danzaburou_SetLeafFormEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.SetRocketFormEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_Danzaburou::SetRocketFormEnabled(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "SetRocketFormEnabled");

	Params::HWCharacter_Danzaburou_SetRocketFormEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCharacter_Danzaburou.IsInLeafForm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Danzaburou::IsInLeafForm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "IsInLeafForm");

	Params::HWCharacter_Danzaburou_IsInLeafForm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_Danzaburou.IsInRocketForm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWCharacter_Danzaburou::IsInRocketForm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_Danzaburou", "IsInRocketForm");

	Params::HWCharacter_Danzaburou_IsInRocketForm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshActor_Danzaburou_Decoy.OnLeafActivated
// (Event, Public, BlueprintEvent)

void AHWSkeletalMeshActor_Danzaburou_Decoy::OnLeafActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor_Danzaburou_Decoy", "OnLeafActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWSkeletalMeshActor_Danzaburou_Decoy.ShouldUpdateVelocity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWSkeletalMeshActor_Danzaburou_Decoy::ShouldUpdateVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor_Danzaburou_Decoy", "ShouldUpdateVelocity");

	Params::HWSkeletalMeshActor_Danzaburou_Decoy_ShouldUpdateVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkeletalMeshActor_Danzaburou_Decoy.UpdateVelocity
// (Final, Native, Protected, BlueprintCallable)

void AHWSkeletalMeshActor_Danzaburou_Decoy::UpdateVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkeletalMeshActor_Danzaburou_Decoy", "UpdateVelocity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hades_A03.CreateAimDataAtCharacterLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWAbility_Hades_A03::CreateAimDataAtCharacterLocation(class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hades_A03", "CreateAimDataAtCharacterLocation");

	Params::HWAbility_Hades_A03_CreateAimDataAtCharacterLocation Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Hades_A03.GetBlightedEnemiesAtDetonate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&DetonateTargetData                                     (Parm, NativeAccessSpecifierPublic)
// const float                             DetonateRadius                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayAbilityTargetDataHandle UHWAbility_Hades_A03::GetBlightedEnemiesAtDetonate(const struct FGameplayAbilityTargetDataHandle& DetonateTargetData, const float DetonateRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hades_A03", "GetBlightedEnemiesAtDetonate");

	Params::HWAbility_Hades_A03_GetBlightedEnemiesAtDetonate Parms{};

	Parms.DetonateTargetData = std::move(DetonateTargetData);
	Parms.DetonateRadius = DetonateRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Hades_A03.GetCascadedBlightedEnemies
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>*                  OutBlightedEnemies                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const float                             HadesDetonateRadius                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             EnemyDetonateRadius                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hades_A03::GetCascadedBlightedEnemies(TArray<class AActor*>* OutBlightedEnemies, const float HadesDetonateRadius, const float EnemyDetonateRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hades_A03", "GetCascadedBlightedEnemies");

	Params::HWAbility_Hades_A03_GetCascadedBlightedEnemies Parms{};

	Parms.HadesDetonateRadius = HadesDetonateRadius;
	Parms.EnemyDetonateRadius = EnemyDetonateRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlightedEnemies != nullptr)
		*OutBlightedEnemies = std::move(Parms.OutBlightedEnemies);
}


// Function Hemingway.HWAbility_Hecate_PSV.OnAllyCommittedKill
// (Final, Native, Public)
// Parameters:
// class AHWTeamState*                     Team                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDamageEventData&          KillEventData                                          (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnAllyCommittedKill(class AHWTeamState* Team, class AHWPlayerState* Player, const struct FDamageEventData& KillEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnAllyCommittedKill");

	Params::HWAbility_Hecate_PSV_OnAllyCommittedKill Parms{};

	Parms.Team = Team;
	Parms.Player = Player;
	Parms.KillEventData = std::move(KillEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnAllyInteracted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_Base*                PlayerCharacter                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnAllyInteracted(class AHWCharacter_Base* PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnAllyInteracted");

	Params::HWAbility_Hecate_PSV_OnAllyInteracted Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnHecateTeamUpdated
// (Final, Native, Public)
// Parameters:
// class AHWCharacterAbilitySystemActor*   AbilitySystemActor                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     NewTeamState                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnHecateTeamUpdated(class AHWCharacterAbilitySystemActor* AbilitySystemActor, class AHWTeamState* NewTeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnHecateTeamUpdated");

	Params::HWAbility_Hecate_PSV_OnHecateTeamUpdated Parms{};

	Parms.AbilitySystemActor = AbilitySystemActor;
	Parms.NewTeamState = NewTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnNewStructureSpawned
// (Final, Native, Protected)
// Parameters:
// class AHWBotFactory*                    factory                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                spawnedStructure                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnNewStructureSpawned(class AHWBotFactory* factory, class AHWCharacter_Base* spawnedStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnNewStructureSpawned");

	Params::HWAbility_Hecate_PSV_OnNewStructureSpawned Parms{};

	Parms.factory = factory;
	Parms.spawnedStructure = spawnedStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnStructureDied
// (Final, Native, Protected)
// Parameters:
// class AHWBotFactory*                    BotFactory                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnStructureDied(class AHWBotFactory* BotFactory, class AHWCharacter_Base* Structure, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnStructureDied");

	Params::HWAbility_Hecate_PSV_OnStructureDied Parms{};

	Parms.BotFactory = BotFactory;
	Parms.Structure = Structure;
	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnStructureInteracted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AHWCharacter_NPC*                 Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWInteractable_Hecate_PSV*       Interactable                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnStructureInteracted(class AHWCharacter_NPC* Structure, class AHWInteractable_Hecate_PSV* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnStructureInteracted");

	Params::HWAbility_Hecate_PSV_OnStructureInteracted Parms{};

	Parms.Structure = Structure;
	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.OnTeamStructuresUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::OnTeamStructuresUpdated(class AHWTeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "OnTeamStructuresUpdated");

	Params::HWAbility_Hecate_PSV_OnTeamStructuresUpdated Parms{};

	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.RemoveTrackedStructure
// (Final, Native, Protected)
// Parameters:
// class AHWCharacter_Base*                Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Hecate_PSV::RemoveTrackedStructure(class AHWCharacter_Base* Structure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "RemoveTrackedStructure");

	Params::HWAbility_Hecate_PSV_RemoveTrackedStructure Parms{};

	Parms.Structure = Structure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Hecate_PSV.RemoveTrackedStructures
// (Final, Native, Protected)

void UHWAbility_Hecate_PSV::RemoveTrackedStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Hecate_PSV", "RemoveTrackedStructures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.AttemptToBeginConsume
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const bool                              bDamageImmune                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_HunBatz_Psv::AttemptToBeginConsume(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, const bool bDamageImmune)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "AttemptToBeginConsume");

	Params::HWGameplayAbility_HunBatz_Psv_AttemptToBeginConsume Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.bDamageImmune = bDamageImmune;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.AttemptToEndConsume
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_HunBatz_Psv::AttemptToEndConsume(const struct FHitResult& HitResult, const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "AttemptToEndConsume");

	Params::HWGameplayAbility_HunBatz_Psv_AttemptToEndConsume Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.OnAbilityCommited
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGameplayAbility_HunBatz_Psv::OnAbilityCommited(class UGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "OnAbilityCommited");

	Params::HWGameplayAbility_HunBatz_Psv_OnAbilityCommited Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.OnAvatarDeath
// (Final, Native, Public)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWGameplayAbility_HunBatz_Psv::OnAvatarDeath(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "OnAvatarDeath");

	Params::HWGameplayAbility_HunBatz_Psv_OnAvatarDeath Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.OnConsumeStack
// (Event, Protected, BlueprintEvent)

void UHWGameplayAbility_HunBatz_Psv::OnConsumeStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "OnConsumeStack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWGameplayAbility_HunBatz_Psv.ValidTriggerSource
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameplayAbility_HunBatz_Psv::ValidTriggerSource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameplayAbility_HunBatz_Psv", "ValidTriggerSource");

	Params::HWGameplayAbility_HunBatz_Psv_ValidTriggerSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Izanami_Passive.ApplyNewEffectStackCount
// (Event, Public, BlueprintEvent)

void UHWAbility_Izanami_Passive::ApplyNewEffectStackCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "ApplyNewEffectStackCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hemingway.HWAbility_Izanami_Passive.CalculateDeservedStackCountBasedOnCurrentHealth
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAbility_Izanami_Passive::CalculateDeservedStackCountBasedOnCurrentHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "CalculateDeservedStackCountBasedOnCurrentHealth");

	Params::HWAbility_Izanami_Passive_CalculateDeservedStackCountBasedOnCurrentHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Izanami_Passive.CalculateDeservedStackCountBasedOnRecentDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// const float                             TotalRecentDamage                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWAbility_Izanami_Passive::CalculateDeservedStackCountBasedOnRecentDamage(const float TotalRecentDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "CalculateDeservedStackCountBasedOnRecentDamage");

	Params::HWAbility_Izanami_Passive_CalculateDeservedStackCountBasedOnRecentDamage Parms{};

	Parms.TotalRecentDamage = TotalRecentDamage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Izanami_Passive.OnDamageReceived
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (Parm, NativeAccessSpecifierPublic)

void UHWAbility_Izanami_Passive::OnDamageReceived(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "OnDamageReceived");

	Params::HWAbility_Izanami_Passive_OnDamageReceived Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Izanami_Passive.UpdateStackCountFromCurrentHealth
// (Final, Native, Public, BlueprintCallable)

void UHWAbility_Izanami_Passive::UpdateStackCountFromCurrentHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "UpdateStackCountFromCurrentHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Izanami_Passive.UpdateStackCountFromRecentDamage
// (Final, Native, Protected)

void UHWAbility_Izanami_Passive::UpdateStackCountFromRecentDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Izanami_Passive", "UpdateStackCountFromRecentDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Mordred.OnRep_Wrath
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Mordred::OnRep_Wrath(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Mordred", "OnRep_Wrath");

	Params::HWAttributeSet_Mordred_OnRep_Wrath Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAttributeSet_Mordred.OnRep_WrathPerTime
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Mordred::OnRep_WrathPerTime(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Mordred", "OnRep_WrathPerTime");

	Params::HWAttributeSet_Mordred_OnRep_WrathPerTime Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Morrigan_Item_Changeling.GetChangelingTargetCharacterItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* UHWAbility_Morrigan_Item_Changeling::GetChangelingTargetCharacterItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Morrigan_Item_Changeling", "GetChangelingTargetCharacterItem");

	Params::HWAbility_Morrigan_Item_Changeling_GetChangelingTargetCharacterItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Morrigan_Item_Changeling.HasValidChangelingTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Morrigan_Item_Changeling::HasValidChangelingTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Morrigan_Item_Changeling", "HasValidChangelingTarget");

	Params::HWAbility_Morrigan_Item_Changeling_HasValidChangelingTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.ClearGrapple
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHWAbility_Mulan_A03_GrappleListener::ClearGrapple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "ClearGrapple");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.OnGrappleEnded
// (Native, Event, Protected, BlueprintEvent)

void UHWAbility_Mulan_A03_GrappleListener::OnGrappleEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "OnGrappleEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.OnGrappleTargetTweenEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                GrappleTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Mulan_A03_GrappleListener::OnGrappleTargetTweenEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* GrappleTarget, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "OnGrappleTargetTweenEnded");

	Params::HWAbility_Mulan_A03_GrappleListener_OnGrappleTargetTweenEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.GrappleTarget = GrappleTarget;
	Parms.EndTweenReason = EndTweenReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.OnGrappleTargetTweenStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                GrappleTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Mulan_A03_GrappleListener::OnGrappleTargetTweenStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* GrappleTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "OnGrappleTargetTweenStarted");

	Params::HWAbility_Mulan_A03_GrappleListener_OnGrappleTargetTweenStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.GrappleTarget = GrappleTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.OnMulanGrappleTweenEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Mulan                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWEndTweenReason                 EndTweenReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Mulan_A03_GrappleListener::OnMulanGrappleTweenEnded(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* Mulan, const EHWEndTweenReason EndTweenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "OnMulanGrappleTweenEnded");

	Params::HWAbility_Mulan_A03_GrappleListener_OnMulanGrappleTweenEnded Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.Mulan = Mulan;
	Parms.EndTweenReason = EndTweenReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.OnMulanGrappleTweenStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UHWGameplayTween*                 TweenInstance                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacter_Base*                Mulan                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWAbility_Mulan_A03_GrappleListener::OnMulanGrappleTweenStarted(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* Mulan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "OnMulanGrappleTweenStarted");

	Params::HWAbility_Mulan_A03_GrappleListener_OnMulanGrappleTweenStarted Parms{};

	Parms.TweenInstance = TweenInstance;
	Parms.Mulan = Mulan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.StartCharacterGrapple
// (Final, Native, Protected, BlueprintCallable)

void UHWAbility_Mulan_A03_GrappleListener::StartCharacterGrapple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "StartCharacterGrapple");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.StartWallGrapple
// (Final, Native, Protected, BlueprintCallable)

void UHWAbility_Mulan_A03_GrappleListener::StartWallGrapple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "StartWallGrapple");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.CalcGrappleDistance
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          Mulan                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWMulanGrappleInfo&       GrappleInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbility_Mulan_A03_GrappleListener::CalcGrappleDistance(const class AHWCharacter_Base* Mulan, const struct FHWMulanGrappleInfo& GrappleInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "CalcGrappleDistance");

	Params::HWAbility_Mulan_A03_GrappleListener_CalcGrappleDistance Parms{};

	Parms.Mulan = Mulan;
	Parms.GrappleInfo = std::move(GrappleInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.CanGrappleToTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWMulanGrappleInfo&       Info                                                   (ConstParm, Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Mulan_A03_GrappleListener::CanGrappleToTarget(const struct FHWMulanGrappleInfo& Info) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "CanGrappleToTarget");

	Params::HWAbility_Mulan_A03_GrappleListener_CanGrappleToTarget Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.CanMulanGrapple
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Mulan_A03_GrappleListener::CanMulanGrapple() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "CanMulanGrapple");

	Params::HWAbility_Mulan_A03_GrappleListener_CanMulanGrapple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.FindValidGrappleLoc
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWCharacter_Base*          TweenCharacter                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLoc                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InitialEndLoc                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TweenDirection                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsWallGrapple                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutValidLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Mulan_A03_GrappleListener::FindValidGrappleLoc(const class AHWCharacter_Base* TweenCharacter, const struct FVector& StartLoc, const struct FVector& InitialEndLoc, const struct FVector& TweenDirection, const float Range, const bool bIsWallGrapple, struct FVector* OutValidLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "FindValidGrappleLoc");

	Params::HWAbility_Mulan_A03_GrappleListener_FindValidGrappleLoc Parms{};

	Parms.TweenCharacter = TweenCharacter;
	Parms.StartLoc = std::move(StartLoc);
	Parms.InitialEndLoc = std::move(InitialEndLoc);
	Parms.TweenDirection = std::move(TweenDirection);
	Parms.Range = Range;
	Parms.bIsWallGrapple = bIsWallGrapple;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValidLocation != nullptr)
		*OutValidLocation = std::move(Parms.OutValidLocation);

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.IsMulanGrappling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Mulan_A03_GrappleListener::IsMulanGrappling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "IsMulanGrappling");

	Params::HWAbility_Mulan_A03_GrappleListener_IsMulanGrappling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Mulan_A03_GrappleListener.IsValidGrappleWall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     HitActor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWAbility_Mulan_A03_GrappleListener::IsValidGrappleWall(const class AActor* HitActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Mulan_A03_GrappleListener", "IsValidGrappleWall");

	Params::HWAbility_Mulan_A03_GrappleListener_IsValidGrappleWall Parms{};

	Parms.HitActor = HitActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.ApplyEvolutionStatusEffect
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Mulan_Evolution::ApplyEvolutionStatusEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "ApplyEvolutionStatusEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.Devolve
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Mulan_Evolution::Devolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "Devolve");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.Evolve
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UHWEquipmentComponent_Mulan_Evolution::Evolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "Evolve");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.OnDealtDamaged
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Mulan_Evolution::OnDealtDamaged(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "OnDealtDamaged");

	Params::HWEquipmentComponent_Mulan_Evolution_OnDealtDamaged Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.OnRep_CurrentEvolutionXP
// (Final, Native, Protected)

void UHWEquipmentComponent_Mulan_Evolution::OnRep_CurrentEvolutionXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "OnRep_CurrentEvolutionXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.SetEvolution
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const EHWMulanEvolutionState            Evolution                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentComponent_Mulan_Evolution::SetEvolution(const EHWMulanEvolutionState Evolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "SetEvolution");

	Params::HWEquipmentComponent_Mulan_Evolution_SetEvolution Parms{};

	Parms.Evolution = Evolution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.GetCurrentEvolutionXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Mulan_Evolution::GetCurrentEvolutionXP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "GetCurrentEvolutionXP");

	Params::HWEquipmentComponent_Mulan_Evolution_GetCurrentEvolutionXP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.GetEvolutionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWMulanEvolutionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWMulanEvolutionState UHWEquipmentComponent_Mulan_Evolution::GetEvolutionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "GetEvolutionState");

	Params::HWEquipmentComponent_Mulan_Evolution_GetEvolutionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.GetEvolutionXPThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EHWMulanEvolutionState            EvolveState                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Mulan_Evolution::GetEvolutionXPThreshold(const EHWMulanEvolutionState EvolveState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "GetEvolutionXPThreshold");

	Params::HWEquipmentComponent_Mulan_Evolution_GetEvolutionXPThreshold Parms{};

	Parms.EvolveState = EvolveState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.GetXPNeededForNextEvolutionThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWEquipmentComponent_Mulan_Evolution::GetXPNeededForNextEvolutionThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "GetXPNeededForNextEvolutionThreshold");

	Params::HWEquipmentComponent_Mulan_Evolution_GetXPNeededForNextEvolutionThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEquipmentComponent_Mulan_Evolution.IsInEvolution
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EHWMulanEvolutionState            Evolution                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentComponent_Mulan_Evolution::IsInEvolution(const EHWMulanEvolutionState Evolution) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentComponent_Mulan_Evolution", "IsInEvolution");

	Params::HWEquipmentComponent_Mulan_Evolution_IsInEvolution Parms{};

	Parms.Evolution = Evolution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCharacter_NuWa_ClaySoldier.ActivateLocalTargetingVFX
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWCharacter_NuWa_ClaySoldier::ActivateLocalTargetingVFX(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCharacter_NuWa_ClaySoldier", "ActivateLocalTargetingVFX");

	Params::HWCharacter_NuWa_ClaySoldier_ActivateLocalTargetingVFX Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWAttributeSet_Sol.OnRep_Heat
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayAttributeData&    OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWAttributeSet_Sol::OnRep_Heat(const struct FGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAttributeSet_Sol", "OnRep_Heat");

	Params::HWAttributeSet_Sol_OnRep_Heat Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWAbilityTask_Thantos_A02_MarkedMovementSpeed.MarkedMovementSpeedTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAbilityTask_Thantos_A02_MarkedMovementSpeed*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilityTask_Thantos_A02_MarkedMovementSpeed* UHWAbilityTask_Thantos_A02_MarkedMovementSpeed::MarkedMovementSpeedTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWAbilityTask_Thantos_A02_MarkedMovementSpeed", "MarkedMovementSpeedTask");

	Params::HWAbilityTask_Thantos_A02_MarkedMovementSpeed_MarkedMovementSpeedTask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Thanatos_A02_MarkedMovementSpeed.GetExecuteThresholdByAbilityLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             AbilityLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbility_Thanatos_A02_MarkedMovementSpeed::GetExecuteThresholdByAbilityLevel(const int32 AbilityLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Thanatos_A02_MarkedMovementSpeed", "GetExecuteThresholdByAbilityLevel");

	Params::HWAbility_Thanatos_A02_MarkedMovementSpeed_GetExecuteThresholdByAbilityLevel Parms{};

	Parms.AbilityLevel = AbilityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAbility_Thanatos_A02_MarkedMovementSpeed.GetMoveSpeedBonusByAbilityLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             AbilityLevel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHWAbility_Thanatos_A02_MarkedMovementSpeed::GetMoveSpeedBonusByAbilityLevel(const int32 AbilityLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAbility_Thanatos_A02_MarkedMovementSpeed", "GetMoveSpeedBonusByAbilityLevel");

	Params::HWAbility_Thanatos_A02_MarkedMovementSpeed_GetMoveSpeedBonusByAbilityLevel Parms{};

	Parms.AbilityLevel = AbilityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Animation.CalculateBoundsSkelMesh
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoxSphereBounds                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBoxSphereBounds UHWLibrary_Animation::CalculateBoundsSkelMesh(class USkeletalMeshComponent* SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Animation", "CalculateBoundsSkelMesh");

	Params::HWLibrary_Animation_CalculateBoundsSkelMesh Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Animation.CalculateGodActorBounds
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         Origin                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         BoxExtent                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_Animation::CalculateGodActorBounds(class AActor* Actor, struct FVector* Origin, struct FVector* BoxExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Animation", "CalculateGodActorBounds");

	Params::HWLibrary_Animation_CalculateGodActorBounds Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Origin != nullptr)
		*Origin = std::move(Parms.Origin);

	if (BoxExtent != nullptr)
		*BoxExtent = std::move(Parms.BoxExtent);
}


// Function Hemingway.HWLibrary_Animation.CalculateLocationBetweenActorsWithOffset
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           FiringActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NormalOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UHWLibrary_Animation::CalculateLocationBetweenActorsWithOffset(class AActor* FiringActor, class AActor* TargetActor, float NormalOffset, float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Animation", "CalculateLocationBetweenActorsWithOffset");

	Params::HWLibrary_Animation_CalculateLocationBetweenActorsWithOffset Parms{};

	Parms.FiringActor = FiringActor;
	Parms.TargetActor = TargetActor;
	Parms.NormalOffset = NormalOffset;
	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_Animation.ModifyMontageBlendSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimMontage*                     OriginalMontage                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMontageBlendSettings&     BlendInSettings                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FMontageBlendSettings&     BlendOutSettings                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UHWLibrary_Animation::ModifyMontageBlendSettings(class UAnimMontage* OriginalMontage, const struct FMontageBlendSettings& BlendInSettings, const struct FMontageBlendSettings& BlendOutSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_Animation", "ModifyMontageBlendSettings");

	Params::HWLibrary_Animation_ModifyMontageBlendSettings Parms{};

	Parms.OriginalMontage = OriginalMontage;
	Parms.BlendInSettings = std::move(BlendInSettings);
	Parms.BlendOutSettings = std::move(BlendOutSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTagManager.GetActivatedRevealRulesForTags
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const struct FGameplayTagContainer&     ApplicableRevealRuleTags                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TagTriggers                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class AActor*                     SelfActor                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     ObservingActor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutActivatedRevealRuleTags                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetActivatedRevealRulesForTags(const struct FGameplayTagContainer& ApplicableRevealRuleTags, const struct FGameplayTagContainer& TagTriggers, const class AActor* SelfActor, const class AActor* ObservingActor, struct FGameplayTagContainer* OutActivatedRevealRuleTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetActivatedRevealRulesForTags");

	Params::HWTagManager_GetActivatedRevealRulesForTags Parms{};

	Parms.ApplicableRevealRuleTags = std::move(ApplicableRevealRuleTags);
	Parms.TagTriggers = std::move(TagTriggers);
	Parms.SelfActor = SelfActor;
	Parms.ObservingActor = ObservingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActivatedRevealRuleTags != nullptr)
		*OutActivatedRevealRuleTags = std::move(Parms.OutActivatedRevealRuleTags);
}


// Function Hemingway.HWTagManager.GetActivationBlockedTagsBasedOnAbilityTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     AbilityTypeTags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutActivationBlockedTags                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetActivationBlockedTagsBasedOnAbilityTypes(const struct FGameplayTagContainer& AbilityTypeTags, struct FGameplayTagContainer* OutActivationBlockedTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetActivationBlockedTagsBasedOnAbilityTypes");

	Params::HWTagManager_GetActivationBlockedTagsBasedOnAbilityTypes Parms{};

	Parms.AbilityTypeTags = std::move(AbilityTypeTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActivationBlockedTags != nullptr)
		*OutActivationBlockedTags = std::move(Parms.OutActivationBlockedTags);
}


// Function Hemingway.HWTagManager.GetAllowedEquipmentForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              SlotType                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutAllowEquipmentTypes                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetAllowedEquipmentForSlot(const struct FGameplayTag& SlotType, struct FGameplayTagContainer* OutAllowEquipmentTypes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetAllowedEquipmentForSlot");

	Params::HWTagManager_GetAllowedEquipmentForSlot Parms{};

	Parms.SlotType = std::move(SlotType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllowEquipmentTypes != nullptr)
		*OutAllowEquipmentTypes = std::move(Parms.OutAllowEquipmentTypes);
}


// Function Hemingway.HWTagManager.GetAllowedSlotsForEquipmentType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              EquipmentType                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutAllowSlotTypes                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetAllowedSlotsForEquipmentType(const struct FGameplayTag& EquipmentType, struct FGameplayTagContainer* OutAllowSlotTypes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetAllowedSlotsForEquipmentType");

	Params::HWTagManager_GetAllowedSlotsForEquipmentType Parms{};

	Parms.EquipmentType = std::move(EquipmentType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllowSlotTypes != nullptr)
		*OutAllowSlotTypes = std::move(Parms.OutAllowSlotTypes);
}


// Function Hemingway.HWTagManager.GetAllRevealRuleTriggerTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UHWTagManager::GetAllRevealRuleTriggerTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetAllRevealRuleTriggerTags");

	Params::HWTagManager_GetAllRevealRuleTriggerTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTagManager.GetAllTriggerTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FGameplayTag>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FGameplayTag> UHWTagManager::GetAllTriggerTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetAllTriggerTags");

	Params::HWTagManager_GetAllTriggerTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTagManager.GetBlockTagsBasedOnAbilityTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     AbilityTypeTags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutBlockTags                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// class UHWAbilitySystemComponent*        OwningAbilitySystem                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWTagManager::GetBlockTagsBasedOnAbilityTypes(const struct FGameplayTagContainer& AbilityTypeTags, struct FGameplayTagContainer* OutBlockTags, class UHWAbilitySystemComponent* OwningAbilitySystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetBlockTagsBasedOnAbilityTypes");

	Params::HWTagManager_GetBlockTagsBasedOnAbilityTypes Parms{};

	Parms.AbilityTypeTags = std::move(AbilityTypeTags);
	Parms.OwningAbilitySystem = OwningAbilitySystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlockTags != nullptr)
		*OutBlockTags = std::move(Parms.OutBlockTags);
}


// Function Hemingway.HWTagManager.GetBlockTagsBasedOnTriggerTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     TagTriggers                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutBlockTags                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetBlockTagsBasedOnTriggerTags(const struct FGameplayTagContainer& TagTriggers, struct FGameplayTagContainer* OutBlockTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetBlockTagsBasedOnTriggerTags");

	Params::HWTagManager_GetBlockTagsBasedOnTriggerTags Parms{};

	Parms.TagTriggers = std::move(TagTriggers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlockTags != nullptr)
		*OutBlockTags = std::move(Parms.OutBlockTags);
}


// Function Hemingway.HWTagManager.GetCancelTagsBasedOnAbilityTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     AbilityTypeTags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer*           OutCancelTags                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetCancelTagsBasedOnAbilityTypes(const struct FGameplayTagContainer& AbilityTypeTags, struct FGameplayTagContainer* OutCancelTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetCancelTagsBasedOnAbilityTypes");

	Params::HWTagManager_GetCancelTagsBasedOnAbilityTypes Parms{};

	Parms.AbilityTypeTags = std::move(AbilityTypeTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCancelTags != nullptr)
		*OutCancelTags = std::move(Parms.OutCancelTags);
}


// Function Hemingway.HWTagManager.GetCancelTagsBasedOnTriggerTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     TagTriggers                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHWAbilityCancelTagRequirement*  OutCancelTags                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UHWTagManager::GetCancelTagsBasedOnTriggerTags(const struct FGameplayTagContainer& TagTriggers, struct FHWAbilityCancelTagRequirement* OutCancelTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTagManager", "GetCancelTagsBasedOnTriggerTags");

	Params::HWTagManager_GetCancelTagsBasedOnTriggerTags Parms{};

	Parms.TagTriggers = std::move(TagTriggers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCancelTags != nullptr)
		*OutCancelTags = std::move(Parms.OutCancelTags);
}


// Function Hemingway.HWEnhancedPlayerInput.ApplyContextAgnosticSettings
// (Final, Native, Private)

void UHWEnhancedPlayerInput::ApplyContextAgnosticSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "ApplyContextAgnosticSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEnhancedPlayerInput.Input_SwapActionStateChange
// (Final, Native, Private)
// Parameters:
// int32                                   InActionId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEnhancedPlayerInput::Input_SwapActionStateChange(int32 InActionId, bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "Input_SwapActionStateChange");

	Params::HWEnhancedPlayerInput_Input_SwapActionStateChange Parms{};

	Parms.InActionId = InActionId;
	Parms.bIsActive = bIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEnhancedPlayerInput.Input_TriggerOff
// (Final, Native, Private)
// Parameters:
// int32                                   InActionId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEnhancedPlayerInput::Input_TriggerOff(int32 InActionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "Input_TriggerOff");

	Params::HWEnhancedPlayerInput_Input_TriggerOff Parms{};

	Parms.InActionId = InActionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEnhancedPlayerInput.OnControlMappingRebuilt
// (Final, Native, Private)

void UHWEnhancedPlayerInput::OnControlMappingRebuilt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "OnControlMappingRebuilt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEnhancedPlayerInput.GetCurrentInputHardwareType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWInputHardwareType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWInputHardwareType UHWEnhancedPlayerInput::GetCurrentInputHardwareType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "GetCurrentInputHardwareType");

	Params::HWEnhancedPlayerInput_GetCurrentInputHardwareType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEnhancedPlayerInput.GetInputTagKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>*                    OutMouseKeyboardKeys                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FKey>*                    OutGamepadKeys                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWEnhancedPlayerInput::GetInputTagKeys(const struct FGameplayTag& InputTag, TArray<struct FKey>* OutMouseKeyboardKeys, TArray<struct FKey>* OutGamepadKeys) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "GetInputTagKeys");

	Params::HWEnhancedPlayerInput_GetInputTagKeys Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMouseKeyboardKeys != nullptr)
		*OutMouseKeyboardKeys = std::move(Parms.OutMouseKeyboardKeys);

	if (OutGamepadKeys != nullptr)
		*OutGamepadKeys = std::move(Parms.OutGamepadKeys);
}


// Function Hemingway.HWEnhancedPlayerInput.GetInputTagKeysOfState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERH_INPUT_STATE                         InputState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FKey> UHWEnhancedPlayerInput::GetInputTagKeysOfState(const struct FGameplayTag& InputTag, ERH_INPUT_STATE InputState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "GetInputTagKeysOfState");

	Params::HWEnhancedPlayerInput_GetInputTagKeysOfState Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.InputState = InputState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEnhancedPlayerInput.GetLastKnownControllerHardware
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWInputHardwareType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWInputHardwareType UHWEnhancedPlayerInput::GetLastKnownControllerHardware() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "GetLastKnownControllerHardware");

	Params::HWEnhancedPlayerInput_GetLastKnownControllerHardware Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEnhancedPlayerInput.IsSwapActiveForKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEnhancedPlayerInput::IsSwapActiveForKey(const struct FKey& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "IsSwapActiveForKey");

	Params::HWEnhancedPlayerInput_IsSwapActiveForKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEnhancedPlayerInput.IsSwapKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEnhancedPlayerInput::IsSwapKey(const struct FKey& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "IsSwapKey");

	Params::HWEnhancedPlayerInput_IsSwapKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWEnhancedPlayerInput.UsesSOCDPolicy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EHWSOCDPolicy                     InSOCDPolicty                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEnhancedPlayerInput::UsesSOCDPolicy(const EHWSOCDPolicy InSOCDPolicty) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEnhancedPlayerInput", "UsesSOCDPolicy");

	Params::HWEnhancedPlayerInput_UsesSOCDPolicy Parms{};

	Parms.InSOCDPolicty = InSOCDPolicty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputComponent.AddInputMappings
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class UHWInputConfig*             InputConfig                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnhancedInputLocalPlayerSubsystem*InputSubsystem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInputComponent::AddInputMappings(const class UHWInputConfig* InputConfig, class UEnhancedInputLocalPlayerSubsystem* InputSubsystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputComponent", "AddInputMappings");

	Params::HWInputComponent_AddInputMappings Parms{};

	Parms.InputConfig = InputConfig;
	Parms.InputSubsystem = InputSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInputComponent.GetKeyMappedToTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWInputConfig*             InputConfig                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UHWInputComponent::GetKeyMappedToTag(const class UHWInputConfig* InputConfig, const struct FGameplayTag& InputTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputComponent", "GetKeyMappedToTag");

	Params::HWInputComponent_GetKeyMappedToTag Parms{};

	Parms.InputConfig = InputConfig;
	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputComponent.RemoveInputMappings
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class UHWInputConfig*             InputConfig                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnhancedInputLocalPlayerSubsystem*InputSubsystem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWInputComponent::RemoveInputMappings(const class UHWInputConfig* InputConfig, class UEnhancedInputLocalPlayerSubsystem* InputSubsystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputComponent", "RemoveInputMappings");

	Params::HWInputComponent_RemoveInputMappings Parms{};

	Parms.InputConfig = InputConfig;
	Parms.InputSubsystem = InputSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInputConfig.FindAbilityInputActionForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLogNotFound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInputAction*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UInputAction* UHWInputConfig::FindAbilityInputActionForTag(const struct FGameplayTag& InputTag, bool bLogNotFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputConfig", "FindAbilityInputActionForTag");

	Params::HWInputConfig_FindAbilityInputActionForTag Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.bLogNotFound = bLogNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputConfig.FindNativeInputActionForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLogNotFound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInputAction*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UInputAction* UHWInputConfig::FindNativeInputActionForTag(const struct FGameplayTag& InputTag, bool bLogNotFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputConfig", "FindNativeInputActionForTag");

	Params::HWInputConfig_FindNativeInputActionForTag Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.bLogNotFound = bLogNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputConfig.FindUIInputActionForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLogNotFound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInputAction*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UInputAction* UHWInputConfig::FindUIInputActionForTag(const struct FGameplayTag& InputTag, bool bLogNotFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputConfig", "FindUIInputActionForTag");

	Params::HWInputConfig_FindUIInputActionForTag Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.bLogNotFound = bLogNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputConfig.FindVGSInputActionForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLogNotFound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UInputAction*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UInputAction* UHWInputConfig::FindVGSInputActionForTag(const struct FGameplayTag& InputTag, bool bLogNotFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputConfig", "FindVGSInputActionForTag");

	Params::HWInputConfig_FindVGSInputActionForTag Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.bLogNotFound = bLogNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInputConfig.IsAbilityInputAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UInputAction*               InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWInputConfig::IsAbilityInputAction(const class UInputAction* InputAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWInputConfig", "IsAbilityInputAction");

	Params::HWInputConfig_IsAbilityInputAction Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMappingContextComponent.LoadKeybindSettings
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWMappingContextComponent::LoadKeybindSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMappingContextComponent", "LoadKeybindSettings");

	Params::HWMappingContextComponent_LoadKeybindSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMappingContextComponent.HasDirtyRebinds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWMappingContextComponent::HasDirtyRebinds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMappingContextComponent", "HasDirtyRebinds");

	Params::HWMappingContextComponent_HasDirtyRebinds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Controller.ClientSetControllerRotation
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  NewRotation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bResetCamera                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IHWInterface_Controller::ClientSetControllerRotation(const struct FRotator& NewRotation, bool bResetCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Controller", "ClientSetControllerRotation");

	Params::HWInterface_Controller_ClientSetControllerRotation Parms{};

	Parms.NewRotation = std::move(NewRotation);
	Parms.bResetCamera = bResetCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Controller.GetAbilitySystemActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* IHWInterface_Controller::GetAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Controller", "GetAbilitySystemActor");

	Params::HWInterface_Controller_GetAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Controller.GetAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* IHWInterface_Controller::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Controller", "GetAbilitySystemComponent");

	Params::HWInterface_Controller_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Controller.GetStartSpot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IHWInterface_Controller::GetStartSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Controller", "GetStartSpot");

	Params::HWInterface_Controller_GetStartSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_LoadoutManagement.GetLoadoutComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWLoadoutComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWLoadoutComponent* IHWInterface_LoadoutManagement::GetLoadoutComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_LoadoutManagement", "GetLoadoutComponent");

	Params::HWInterface_LoadoutManagement_GetLoadoutComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAnnouncerPackItem.GetAnnouncerCue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMetaSoundSource>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMetaSoundSource> UHWAnnouncerPackItem::GetAnnouncerCue(const struct FAssetRequestKey& AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAnnouncerPackItem", "GetAnnouncerCue");

	Params::HWAnnouncerPackItem_GetAnnouncerCue Parms{};

	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWAnnouncerPackItem.GetSkinnedAnnouncerCues
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<struct FAssetRequestKey, TSoftObjectPtr<class UMetaSoundSource>>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

const TMap<struct FAssetRequestKey, TSoftObjectPtr<class UMetaSoundSource>> UHWAnnouncerPackItem::GetSkinnedAnnouncerCues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWAnnouncerPackItem", "GetSkinnedAnnouncerCues");

	Params::HWAnnouncerPackItem_GetSkinnedAnnouncerCues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMusicPackItem.GetSoundCue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetKey                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMetaSoundSource>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UMetaSoundSource> UHWMusicPackItem::GetSoundCue(const struct FAssetRequestKey& AssetKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMusicPackItem", "GetSoundCue");

	Params::HWMusicPackItem_GetSoundCue Parms{};

	Parms.AssetKey = std::move(AssetKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetPointsRequiredForPage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSeasonItem::GetPointsRequiredForPage(const class UObject* WorldContextObject, int32 PageIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetPointsRequiredForPage");

	Params::HWSeasonItem_GetPointsRequiredForPage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetSeasonItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSeasonItem::GetSeasonItemCount(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetSeasonItemCount");

	Params::HWSeasonItem_GetSeasonItemCount Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetSeasonItemOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSeasonItem::GetSeasonItemOwned(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetSeasonItemOwned");

	Params::HWSeasonItem_GetSeasonItemOwned Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetSecondsRemainingInSeason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UHWSeasonItem::GetSecondsRemainingInSeason(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetSecondsRemainingInSeason");

	Params::HWSeasonItem_GetSecondsRemainingInSeason Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetSpentTokensTrackerItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRH_ItemId                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FRH_ItemId UHWSeasonItem::GetSpentTokensTrackerItemId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetSpentTokensTrackerItemId");

	Params::HWSeasonItem_GetSpentTokensTrackerItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetTotalPagesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSeasonItem::GetTotalPagesCount(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetTotalPagesCount");

	Params::HWSeasonItem_GetTotalPagesCount Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.GetUnlockedPagesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWSeasonItem::GetUnlockedPagesCount(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "GetUnlockedPagesCount");

	Params::HWSeasonItem_GetUnlockedPagesCount Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSeasonItem.IsSeasonFullyCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSeasonItem::IsSeasonFullyCompleted(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSeasonItem", "IsSeasonFullyCompleted");

	Params::HWSeasonItem_IsSeasonFullyCompleted Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.SortSkinListByDisplayName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UHWSkinItem>>&SkinList                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWSkinItem::SortSkinListByDisplayName(TArray<TSoftObjectPtr<class UHWSkinItem>>& SkinList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWSkinItem", "SortSkinListByDisplayName");

	Params::HWSkinItem_SortSkinListByDisplayName Parms{};

	Parms.SkinList = std::move(SkinList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SkinList = std::move(Parms.SkinList);
}


// Function Hemingway.HWSkinItem.SortSkinListByFriendlyName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UHWSkinItem>>&SkinList                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWSkinItem::SortSkinListByFriendlyName(TArray<TSoftObjectPtr<class UHWSkinItem>>& SkinList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWSkinItem", "SortSkinListByFriendlyName");

	Params::HWSkinItem_SortSkinListByFriendlyName Parms{};

	Parms.SkinList = std::move(SkinList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SkinList = std::move(Parms.SkinList);
}


// Function Hemingway.HWSkinItem.StaticGetAssociatedCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSoftObjectPtr<class UHWSkinItem>&Skin                                                   (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UHWCharacterItem>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UHWCharacterItem> UHWSkinItem::StaticGetAssociatedCharacter(const TSoftObjectPtr<class UHWSkinItem>& Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWSkinItem", "StaticGetAssociatedCharacter");

	Params::HWSkinItem_StaticGetAssociatedCharacter Parms{};

	Parms.Skin = Skin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetApparelAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UHWApparelItem>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UHWApparelItem>> UHWSkinItem::GetApparelAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetApparelAssets");

	Params::HWSkinItem_GetApparelAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetAssociatedBaseSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWSkinItem>       ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWSkinItem> UHWSkinItem::GetAssociatedBaseSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetAssociatedBaseSkin");

	Params::HWSkinItem_GetAssociatedBaseSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetNextEvolutionSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWSkinItem>       ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWSkinItem> UHWSkinItem::GetNextEvolutionSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetNextEvolutionSkin");

	Params::HWSkinItem_GetNextEvolutionSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetOtherCompatibleAssociatedCharacterItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UHWCharacterItem>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UHWCharacterItem>> UHWSkinItem::GetOtherCompatibleAssociatedCharacterItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetOtherCompatibleAssociatedCharacterItems");

	Params::HWSkinItem_GetOtherCompatibleAssociatedCharacterItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetPreviewActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UClass>             ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UClass> UHWSkinItem::GetPreviewActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetPreviewActor");

	Params::HWSkinItem_GetPreviewActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetPreviousEvolutionSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWSkinItem>       ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWSkinItem> UHWSkinItem::GetPreviousEvolutionSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetPreviousEvolutionSkin");

	Params::HWSkinItem_GetPreviousEvolutionSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.GetVoicePackItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UHWVoicePackItem>  ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UHWVoicePackItem> UHWSkinItem::GetVoicePackItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "GetVoicePackItem");

	Params::HWSkinItem_GetVoicePackItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.HasSkinVariants
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayableOnly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::HasSkinVariants(class UObject* WorldContext, bool bPlayableOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "HasSkinVariants");

	Params::HWSkinItem_HasSkinVariants Parms{};

	Parms.WorldContext = WorldContext;
	Parms.bPlayableOnly = bPlayableOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsBaseSkinOfVariant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                VariantSkin                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsBaseSkinOfVariant(const class UHWSkinItem* VariantSkin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsBaseSkinOfVariant");

	Params::HWSkinItem_IsBaseSkinOfVariant Parms{};

	Parms.VariantSkin = VariantSkin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsDefaultSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsDefaultSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsDefaultSkin");

	Params::HWSkinItem_IsDefaultSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsMasterySkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsMasterySkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsMasterySkin");

	Params::HWSkinItem_IsMasterySkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsOwnedCachedOrDefault
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsOwnedCachedOrDefault(const class URH_PlayerInfo* PlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsOwnedCachedOrDefault");

	Params::HWSkinItem_IsOwnedCachedOrDefault Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsVariantOfBaseSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                BaseSkin                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsVariantOfBaseSkin(const class UHWSkinItem* BaseSkin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsVariantOfBaseSkin");

	Params::HWSkinItem_IsVariantOfBaseSkin Parms{};

	Parms.BaseSkin = BaseSkin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.IsVariantSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::IsVariantSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "IsVariantSkin");

	Params::HWSkinItem_IsVariantSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinItem.ShouldUseLegacyMeshRotationOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWSkinItem::ShouldUseLegacyMeshRotationOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinItem", "ShouldUseLegacyMeshRotationOffset");

	Params::HWSkinItem_ShouldUseLegacyMeshRotationOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWVoicePackItem.SortSkinListByDisplayName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UHWVoicePackItem>>&VoicePackList                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWVoicePackItem::SortSkinListByDisplayName(TArray<TSoftObjectPtr<class UHWVoicePackItem>>& VoicePackList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWVoicePackItem", "SortSkinListByDisplayName");

	Params::HWVoicePackItem_SortSkinListByDisplayName Parms{};

	Parms.VoicePackList = std::move(VoicePackList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	VoicePackList = std::move(Parms.VoicePackList);
}


// Function Hemingway.HWVoicePackItem.SortSkinListByFriendlyName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UHWVoicePackItem>>&VoicePackList                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UHWVoicePackItem::SortSkinListByFriendlyName(TArray<TSoftObjectPtr<class UHWVoicePackItem>>& VoicePackList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWVoicePackItem", "SortSkinListByFriendlyName");

	Params::HWVoicePackItem_SortSkinListByFriendlyName Parms{};

	Parms.VoicePackList = std::move(VoicePackList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	VoicePackList = std::move(Parms.VoicePackList);
}


// Function Hemingway.HWPingWorldActor.RecycleActor
// (Final, Native, Protected, BlueprintCallable)

void AHWPingWorldActor::RecycleActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingWorldActor", "RecycleActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingWorldActor.SetPingDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPingWorldActor::SetPingDuration(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingWorldActor", "SetPingDuration");

	Params::HWPingWorldActor_SetPingDuration Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPingWorldActor.GetDisplayInfoComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWDisplayInfoComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWDisplayInfoComponent* AHWPingWorldActor::GetDisplayInfoComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingWorldActor", "GetDisplayInfoComponent");

	Params::HWPingWorldActor_GetDisplayInfoComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPingWorldActor.GetPingTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AHWPingWorldActor::GetPingTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPingWorldActor", "GetPingTag");

	Params::HWPingWorldActor_GetPingTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsLocalPlayerOnlyASpectator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsLocalPlayerOnlyASpectator(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWPlayerController", "IsLocalPlayerOnlyASpectator");

	Params::HWPlayerController_IsLocalPlayerOnlyASpectator Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsOnlyASpectator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class APlayerController*          PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsOnlyASpectator(const class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWPlayerController", "IsOnlyASpectator");

	Params::HWPlayerController_IsOnlyASpectator Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.ActivateBooster
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayTag&              BoosterTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ActivateBooster(const struct FGameplayTag& BoosterTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ActivateBooster");

	Params::HWPlayerController_ActivateBooster Parms{};

	Parms.BoosterTag = std::move(BoosterTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.AddLogMarker
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    MarkerText                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::AddLogMarker(const class FString& MarkerText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "AddLogMarker");

	Params::HWPlayerController_AddLogMarker Parms{};

	Parms.MarkerText = std::move(MarkerText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.AntiCheatClientMessageToServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHWPlayerController::AntiCheatClientMessageToServer(const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "AntiCheatClientMessageToServer");

	Params::HWPlayerController_AntiCheatClientMessageToServer Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.AntiCheatServerMessageToClient
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AHWPlayerController::AntiCheatServerMessageToClient(const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "AntiCheatServerMessageToClient");

	Params::HWPlayerController_AntiCheatServerMessageToClient Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.AudioInputDeviceChanged
// (Final, Native, Protected)

void AHWPlayerController::AudioInputDeviceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "AudioInputDeviceChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.BroadcastClientCombatEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWCombatEvent&            CombatEvent                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWPlayerController::BroadcastClientCombatEvent(const struct FHWCombatEvent& CombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "BroadcastClientCombatEvent");

	Params::HWPlayerController_BroadcastClientCombatEvent Parms{};

	Parms.CombatEvent = std::move(CombatEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.CancelCharacterSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::CancelCharacterSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "CancelCharacterSelection");

	Params::HWPlayerController_CancelCharacterSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.CheckForAFK
// (Final, Native, Protected)

void AHWPlayerController::CheckForAFK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "CheckForAFK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ClientDisplayAFKWarning
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AHWPlayerController::ClientDisplayAFKWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ClientDisplayAFKWarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ClientNotifyBackfillStateUpdated
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FHWBackfillQueueInfo&      BackfillQueueInfo                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWPlayerController::ClientNotifyBackfillStateUpdated(const struct FHWBackfillQueueInfo& BackfillQueueInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ClientNotifyBackfillStateUpdated");

	Params::HWPlayerController_ClientNotifyBackfillStateUpdated Parms{};

	Parms.BackfillQueueInfo = std::move(BackfillQueueInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ClientRequestIdToken
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)

void AHWPlayerController::ClientRequestIdToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ClientRequestIdToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleABSActorTeamUpdated
// (Final, Native, Private)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharacterAbilitySystemActor                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleABSActorTeamUpdated(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, class AHWTeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleABSActorTeamUpdated");

	Params::HWPlayerController_HandleABSActorTeamUpdated Parms{};

	Parms.CharacterAbilitySystemActor = CharacterAbilitySystemActor;
	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleControllerVibrationUpdated
// (Final, Native, Protected)

void AHWPlayerController::HandleControllerVibrationUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleControllerVibrationUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleCurrentVGSMenuIdUpdated
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              MenuId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleCurrentVGSMenuIdUpdated(const struct FGameplayTag& MenuId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleCurrentVGSMenuIdUpdated");

	Params::HWPlayerController_HandleCurrentVGSMenuIdUpdated Parms{};

	Parms.MenuId = std::move(MenuId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleEffectsQualitySettingUpdated
// (Final, Native, Protected)

void AHWPlayerController::HandleEffectsQualitySettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleEffectsQualitySettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleInvokeVGSAction
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              ActionId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleInvokeVGSAction(const struct FGameplayTag& ActionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleInvokeVGSAction");

	Params::HWPlayerController_HandleInvokeVGSAction Parms{};

	Parms.ActionId = std::move(ActionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleOnTeamPauseVoteResolved
// (Final, Native, Private)
// Parameters:
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWVoteResult                     Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleOnTeamPauseVoteResolved(class AHWTeamState* TeamState, const EHWVoteResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleOnTeamPauseVoteResolved");

	Params::HWPlayerController_HandleOnTeamPauseVoteResolved Parms{};

	Parms.TeamState = TeamState;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleOnTeamSurrenderResolved
// (Final, Native, Private)
// Parameters:
// class AHWTeamState*                     TeamState                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWVoteResult                     Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleOnTeamSurrenderResolved(class AHWTeamState* TeamState, const EHWVoteResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleOnTeamSurrenderResolved");

	Params::HWPlayerController_HandleOnTeamSurrenderResolved Parms{};

	Parms.TeamState = TeamState;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandlePushToTalkSettingUpdated
// (Final, Native, Protected)

void AHWPlayerController::HandlePushToTalkSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandlePushToTalkSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleVGSManagerReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWVGSManager*                    VGSManager                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::HandleVGSManagerReplicated(class AHWVGSManager* VGSManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleVGSManagerReplicated");

	Params::HWPlayerController_HandleVGSManagerReplicated Parms{};

	Parms.VGSManager = VGSManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.HandleVoiceChatEnabledSettingUpdated
// (Final, Native, Protected)

void AHWPlayerController::HandleVoiceChatEnabledSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "HandleVoiceChatEnabledSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.InitAFKDetection
// (Final, Native, Public)
// Parameters:
// float                                   KickAfterDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WarnAfterDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::InitAFKDetection(float KickAfterDuration, float WarnAfterDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "InitAFKDetection");

	Params::HWPlayerController_InitAFKDetection Parms{};

	Parms.KickAfterDuration = KickAfterDuration;
	Parms.WarnAfterDuration = WarnAfterDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_UIInputTagHeld
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_UIInputTagHeld(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_UIInputTagHeld");

	Params::HWPlayerController_Input_UIInputTagHeld Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_UIInputTagPressed
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_UIInputTagPressed(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_UIInputTagPressed");

	Params::HWPlayerController_Input_UIInputTagPressed Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_UIInputTagReleased
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_UIInputTagReleased(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_UIInputTagReleased");

	Params::HWPlayerController_Input_UIInputTagReleased Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_VGSInputTagHeld
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_VGSInputTagHeld(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_VGSInputTagHeld");

	Params::HWPlayerController_Input_VGSInputTagHeld Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_VGSInputTagPressed
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_VGSInputTagPressed(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_VGSInputTagPressed");

	Params::HWPlayerController_Input_VGSInputTagPressed Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Input_VGSInputTagReleased
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Input_VGSInputTagReleased(const struct FGameplayTag& InputTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Input_VGSInputTagReleased");

	Params::HWPlayerController_Input_VGSInputTagReleased Parms{};

	Parms.InputTag = std::move(InputTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.IsInputBound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InputTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERH_INPUT_STATE                         InputState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsInputBound(const struct FGameplayTag& InputTag, ERH_INPUT_STATE InputState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsInputBound");

	Params::HWPlayerController_IsInputBound Parms{};

	Parms.InputTag = std::move(InputTag);
	Parms.InputState = InputState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.KickAFKPlayer
// (Final, Native, Public)

void AHWPlayerController::KickAFKPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "KickAFKPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.LocalPlayerSpectate
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bWillSpectate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::LocalPlayerSpectate(bool bWillSpectate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "LocalPlayerSpectate");

	Params::HWPlayerController_LocalPlayerSpectate Parms{};

	Parms.bWillSpectate = bWillSpectate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.MicrophoneVolumeSettingChanged
// (Final, Native, Protected)

void AHWPlayerController::MicrophoneVolumeSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "MicrophoneVolumeSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.NotifyBackfillStateUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWBackfillQueueInfo&      BackfillQueueInfo                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWPlayerController::NotifyBackfillStateUpdated(const struct FHWBackfillQueueInfo& BackfillQueueInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "NotifyBackfillStateUpdated");

	Params::HWPlayerController_NotifyBackfillStateUpdated Parms{};

	Parms.BackfillQueueInfo = std::move(BackfillQueueInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnConsoleMouseCursorWidgetLoaded
// (Final, Native, Protected)

void AHWPlayerController::OnConsoleMouseCursorWidgetLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnConsoleMouseCursorWidgetLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnCurrentlyPossessedPawnChanged
// (Native, Protected)
// Parameters:
// class APawn*                            PreviousPossessedPawn                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            CurrentPossessedPawn                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::OnCurrentlyPossessedPawnChanged(class APawn* PreviousPossessedPawn, class APawn* CurrentPossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnCurrentlyPossessedPawnChanged");

	Params::HWPlayerController_OnCurrentlyPossessedPawnChanged Parms{};

	Parms.PreviousPossessedPawn = PreviousPossessedPawn;
	Parms.CurrentPossessedPawn = CurrentPossessedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnDraftActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::OnDraftActorDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnDraftActorDestroyed");

	Params::HWPlayerController_OnDraftActorDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnQuestProgressWritten
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::OnQuestProgressWritten(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnQuestProgressWritten");

	Params::HWPlayerController_OnQuestProgressWritten Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnRep_AbilitySystemActor
// (Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   OldAbilitySystemActor                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::OnRep_AbilitySystemActor(class AHWCharacterAbilitySystemActor* OldAbilitySystemActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnRep_AbilitySystemActor");

	Params::HWPlayerController_OnRep_AbilitySystemActor Parms{};

	Parms.OldAbilitySystemActor = OldAbilitySystemActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnRep_bHasPauseVoted
// (Final, Native, Private)

void AHWPlayerController::OnRep_bHasPauseVoted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnRep_bHasPauseVoted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnRep_bHasSurrenderVoted
// (Final, Native, Private)

void AHWPlayerController::OnRep_bHasSurrenderVoted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnRep_bHasSurrenderVoted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.OnWorldTimeSecondsReplicated
// (Native, Public)

void AHWPlayerController::OnWorldTimeSecondsReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "OnWorldTimeSecondsReplicated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.RequestCharacterReselect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::RequestCharacterReselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "RequestCharacterReselect");

	Params::HWPlayerController_RequestCharacterReselect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.RequestIdToken
// (Final, Native, Public)

void AHWPlayerController::RequestIdToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "RequestIdToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ResetAFKTimer
// (Final, Native, Protected)

void AHWPlayerController::ResetAFKTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ResetAFKTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.Server_ActivateBooster
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FGameplayTag&              BoosterTag                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::Server_ActivateBooster(const struct FGameplayTag& BoosterTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "Server_ActivateBooster");

	Params::HWPlayerController_Server_ActivateBooster Parms{};

	Parms.BoosterTag = std::move(BoosterTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerAddTeamPing
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// const struct FGameplayTag&              PingTag                                                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PingLocation                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWPingSource                           PingSource                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSendChatNotification                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerAddTeamPing(const struct FGameplayTag& PingTag, const struct FVector& PingLocation, EHWPingSource PingSource, bool bSendChatNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerAddTeamPing");

	Params::HWPlayerController_ServerAddTeamPing Parms{};

	Parms.PingTag = std::move(PingTag);
	Parms.PingLocation = std::move(PingLocation);
	Parms.PingSource = PingSource;
	Parms.bSendChatNotification = bSendChatNotification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerCancelCharacterSelection
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AHWPlayerController::ServerCancelCharacterSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerCancelCharacterSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerDebugChangeCameraMode
// (Net, Native, Event, Public, NetServer)
// Parameters:
// EHWCameraMode                           CameraMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerDebugChangeCameraMode(EHWCameraMode CameraMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerDebugChangeCameraMode");

	Params::HWPlayerController_ServerDebugChangeCameraMode Parms{};

	Parms.CameraMode = CameraMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerRequestCharacterReselect
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AHWPlayerController::ServerRequestCharacterReselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerRequestCharacterReselect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerRequestUnpause
// (Net, NetReliable, Native, Event, Protected, NetServer)

void AHWPlayerController::ServerRequestUnpause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerRequestUnpause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerSetActiveAspect
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FRH_ItemId&                AspectItemId                                           (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerSetActiveAspect(const struct FRH_ItemId& AspectItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerSetActiveAspect");

	Params::HWPlayerController_ServerSetActiveAspect Parms{};

	Parms.AspectItemId = std::move(AspectItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerSetInputType
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// ECommonInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerSetInputType(ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerSetInputType");

	Params::HWPlayerController_ServerSetInputType Parms{};

	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerSetSRValue
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// int32                                   InSRValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerSetSRValue(int32 InSRValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerSetSRValue");

	Params::HWPlayerController_ServerSetSRValue Parms{};

	Parms.InSRValue = InSRValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerSubmitPauseVote
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const EHWVoteState                      PauseVote                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerSubmitPauseVote(const EHWVoteState PauseVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerSubmitPauseVote");

	Params::HWPlayerController_ServerSubmitPauseVote Parms{};

	Parms.PauseVote = PauseVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerSubmitSurrenderVote
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const EHWVoteState                      SurrenderVote                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerSubmitSurrenderVote(const EHWVoteState SurrenderVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerSubmitSurrenderVote");

	Params::HWPlayerController_ServerSubmitSurrenderVote Parms{};

	Parms.SurrenderVote = SurrenderVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerTogglePlayCallSuggestion
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerTogglePlayCallSuggestion(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerTogglePlayCallSuggestion");

	Params::HWPlayerController_ServerTogglePlayCallSuggestion Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerUpdateEquipmentCastMode
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FHWInventorySlot&          InventorySlot                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityCastStyle&                CastMode                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerUpdateEquipmentCastMode(const struct FHWInventorySlot& InventorySlot, const EAbilityCastStyle& CastMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerUpdateEquipmentCastMode");

	Params::HWPlayerController_ServerUpdateEquipmentCastMode Parms{};

	Parms.InventorySlot = std::move(InventorySlot);
	Parms.CastMode = CastMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerValidateIdToken
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const class FString&                    ProductUserId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    JsonWebToken                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerValidateIdToken(const class FString& ProductUserId, const class FString& JsonWebToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerValidateIdToken");

	Params::HWPlayerController_ServerValidateIdToken Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.JsonWebToken = std::move(JsonWebToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ServerVGSTriggerAction
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FGameplayTag&              VGSTag                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ServerVGSTriggerAction(const struct FGameplayTag& VGSTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ServerVGSTriggerAction");

	Params::HWPlayerController_ServerVGSTriggerAction Parms{};

	Parms.VGSTag = std::move(VGSTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.SetActiveControlModule
// (Final, BlueprintAuthorityOnly, Native, Public)
// Parameters:
// TSubclassOf<class UHWControlModule>     ControlModClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::SetActiveControlModule(TSubclassOf<class UHWControlModule> ControlModClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "SetActiveControlModule");

	Params::HWPlayerController_SetActiveControlModule Parms{};

	Parms.ControlModClass = ControlModClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.SetAllowedInputCategories
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHWAllowedInputCategory                 AllowedCategories                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::SetAllowedInputCategories(EHWAllowedInputCategory AllowedCategories)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "SetAllowedInputCategories");

	Params::HWPlayerController_SetAllowedInputCategories Parms{};

	Parms.AllowedCategories = AllowedCategories;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.SubmitPauseVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EHWVoteState                      PauseVote                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::SubmitPauseVote(const EHWVoteState PauseVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "SubmitPauseVote");

	Params::HWPlayerController_SubmitPauseVote Parms{};

	Parms.PauseVote = PauseVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.SubmitSurrenderVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EHWVoteState                      SurrenderVote                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::SubmitSurrenderVote(const EHWVoteState SurrenderVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "SubmitSurrenderVote");

	Params::HWPlayerController_SubmitSurrenderVote Parms{};

	Parms.SurrenderVote = SurrenderVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.ToggleCinematicCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::ToggleCinematicCameraMode(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "ToggleCinematicCameraMode");

	Params::HWPlayerController_ToggleCinematicCameraMode Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.TogglePlayCallSuggestion
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::TogglePlayCallSuggestion(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "TogglePlayCallSuggestion");

	Params::HWPlayerController_TogglePlayCallSuggestion Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.TrackSingleStat
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      StatName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::TrackSingleStat(const class FName& StatName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "TrackSingleStat");

	Params::HWPlayerController_TrackSingleStat Parms{};

	Parms.StatName = StatName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.UpdateEquipmentCastMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWInventorySlot&          InventorySlot                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAbilityCastStyle&                CastMode                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController::UpdateEquipmentCastMode(const struct FHWInventorySlot& InventorySlot, const EAbilityCastStyle& CastMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "UpdateEquipmentCastMode");

	Params::HWPlayerController_UpdateEquipmentCastMode Parms{};

	Parms.InventorySlot = std::move(InventorySlot);
	Parms.CastMode = CastMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.UpdateTrackedStatGraph
// (Final, Native, Protected)

void AHWPlayerController::UpdateTrackedStatGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "UpdateTrackedStatGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.WarnAFKPlayer
// (Final, Native, Public)

void AHWPlayerController::WarnAFKPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "WarnAFKPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController.CanCancelCharacterSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::CanCancelCharacterSelection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "CanCancelCharacterSelection");

	Params::HWPlayerController_CanCancelCharacterSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.CanReselectCharacterNow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::CanReselectCharacterNow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "CanReselectCharacterNow");

	Params::HWPlayerController_CanReselectCharacterNow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetAbilitySystemActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* AHWPlayerController::GetAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetAbilitySystemActor");

	Params::HWPlayerController_GetAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetActiveControlModule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWControlModule*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWControlModule* AHWPlayerController::GetActiveControlModule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetActiveControlModule");

	Params::HWPlayerController_GetActiveControlModule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetCurrentInputType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECommonInputType AHWPlayerController::GetCurrentInputType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetCurrentInputType");

	Params::HWPlayerController_GetCurrentInputType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetHasPauseVoted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::GetHasPauseVoted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetHasPauseVoted");

	Params::HWPlayerController_GetHasPauseVoted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetHasSurrenderVoted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::GetHasSurrenderVoted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetHasSurrenderVoted");

	Params::HWPlayerController_GetHasSurrenderVoted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetHWEnhancedPlayerInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWEnhancedPlayerInput*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWEnhancedPlayerInput* AHWPlayerController::GetHWEnhancedPlayerInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetHWEnhancedPlayerInput");

	Params::HWPlayerController_GetHWEnhancedPlayerInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetItemStoreManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWItemStoreManagerComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWItemStoreManagerComponent* AHWPlayerController::GetItemStoreManagerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetItemStoreManagerComponent");

	Params::HWPlayerController_GetItemStoreManagerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.GetPlayCallSuggestionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayCallSuggestionManager*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayCallSuggestionManager* AHWPlayerController::GetPlayCallSuggestionManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "GetPlayCallSuggestionManager");

	Params::HWPlayerController_GetPlayCallSuggestionManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsCinematicCameraModeActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsCinematicCameraModeActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsCinematicCameraModeActive");

	Params::HWPlayerController_IsCinematicCameraModeActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsGm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsGm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsGm");

	Params::HWPlayerController_IsGm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsInputCategoryAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWAllowedInputCategory                 Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsInputCategoryAllowed(EHWAllowedInputCategory Category) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsInputCategoryAllowed");

	Params::HWPlayerController_IsInputCategoryAllowed Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsUIRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsUIRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsUIRelevant");

	Params::HWPlayerController_IsUIRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController.IsUIRelevantOrSpectator
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController::IsUIRelevantOrSpectator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController", "IsUIRelevantOrSpectator");

	Params::HWPlayerController_IsUIRelevantOrSpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.Input_DeathSpecatorLook
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         InputActionValue                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::Input_DeathSpecatorLook(const struct FInputActionValue& InputActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "Input_DeathSpecatorLook");

	Params::HWPlayerController_Smite_Input_DeathSpecatorLook Parms{};

	Parms.InputActionValue = std::move(InputActionValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.OnDeathSpectatorStatusChange
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::OnDeathSpectatorStatusChange(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "OnDeathSpectatorStatusChange");

	Params::HWPlayerController_Smite_OnDeathSpectatorStatusChange Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hemingway.HWPlayerController_Smite.OnRep_IsDeathSpectating
// (Final, Native, Public)

void AHWPlayerController_Smite::OnRep_IsDeathSpectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "OnRep_IsDeathSpectating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.OnRep_UseRestrictedCameraPitch
// (Final, Native, Protected)

void AHWPlayerController_Smite::OnRep_UseRestrictedCameraPitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "OnRep_UseRestrictedCameraPitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.PushCamSettingsToViewTarget
// (Final, Native, Protected)

void AHWPlayerController_Smite::PushCamSettingsToViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "PushCamSettingsToViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.ServerSetUseRestrictedCameraPitch
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                                    bRestrictCamera                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::ServerSetUseRestrictedCameraPitch(bool bRestrictCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "ServerSetUseRestrictedCameraPitch");

	Params::HWPlayerController_Smite_ServerSetUseRestrictedCameraPitch Parms{};

	Parms.bRestrictCamera = bRestrictCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.SetMaxZoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMaxZoom                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::SetMaxZoom(float NewMaxZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "SetMaxZoom");

	Params::HWPlayerController_Smite_SetMaxZoom Parms{};

	Parms.NewMaxZoom = NewMaxZoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.SetMinZoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMinZoom                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::SetMinZoom(float NewMinZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "SetMinZoom");

	Params::HWPlayerController_Smite_SetMinZoom Parms{};

	Parms.NewMinZoom = NewMinZoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.SetRestrictedCameraPitchInterpSpeedOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewInterpSpeedOverride                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::SetRestrictedCameraPitchInterpSpeedOverride(float NewInterpSpeedOverride, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "SetRestrictedCameraPitchInterpSpeedOverride");

	Params::HWPlayerController_Smite_SetRestrictedCameraPitchInterpSpeedOverride Parms{};

	Parms.NewInterpSpeedOverride = NewInterpSpeedOverride;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.SetZoomPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewZoomPercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Smite::SetZoomPercent(float NewZoomPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "SetZoomPercent");

	Params::HWPlayerController_Smite_SetZoomPercent Parms{};

	Parms.NewZoomPercent = NewZoomPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.UpdateActionCamSetting
// (Final, Native, Protected)

void AHWPlayerController_Smite::UpdateActionCamSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "UpdateActionCamSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.UpdateRestrictCameraPitch
// (Final, Native, Protected)

void AHWPlayerController_Smite::UpdateRestrictCameraPitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "UpdateRestrictCameraPitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Smite.GetMaxZoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerController_Smite::GetMaxZoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "GetMaxZoom");

	Params::HWPlayerController_Smite_GetMaxZoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.GetMinZoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerController_Smite::GetMinZoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "GetMinZoom");

	Params::HWPlayerController_Smite_GetMinZoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.GetPlayerSettingsSubsystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWPlayerSettingsSubsystem*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWPlayerSettingsSubsystem* AHWPlayerController_Smite::GetPlayerSettingsSubsystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "GetPlayerSettingsSubsystem");

	Params::HWPlayerController_Smite_GetPlayerSettingsSubsystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.GetSystemSettingsSubsystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWSystemSettingsSubsystem*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWSystemSettingsSubsystem* AHWPlayerController_Smite::GetSystemSettingsSubsystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "GetSystemSettingsSubsystem");

	Params::HWPlayerController_Smite_GetSystemSettingsSubsystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.GetZoomPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerController_Smite::GetZoomPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "GetZoomPercent");

	Params::HWPlayerController_Smite_GetZoomPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.IsCharacterForcedToAimDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController_Smite::IsCharacterForcedToAimDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "IsCharacterForcedToAimDown");

	Params::HWPlayerController_Smite_IsCharacterForcedToAimDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Smite.IsInRestrictedCamPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController_Smite::IsInRestrictedCamPitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Smite", "IsInRestrictedCamPitch");

	Params::HWPlayerController_Smite_IsInRestrictedCamPitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Spectator.DumpSpectatorDebugInfo
// (Final, Exec, Native, Public)

void AHWPlayerController_Spectator::DumpSpectatorDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "DumpSpectatorDebugInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.OnRep_IsCameraFocused
// (Final, Native, Protected)

void AHWPlayerController_Spectator::OnRep_IsCameraFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "OnRep_IsCameraFocused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.OnRep_SpectateTargetIndex
// (Final, Native, Protected)

void AHWPlayerController_Spectator::OnRep_SpectateTargetIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "OnRep_SpectateTargetIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.OnSpectateTargetCanSpectateStatusChanged
// (Final, Native, Protected)
// Parameters:
// class AHWCharacter_Base*                TargetCharacter                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bCanSpectate                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::OnSpectateTargetCanSpectateStatusChanged(class AHWCharacter_Base* TargetCharacter, const bool bCanSpectate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "OnSpectateTargetCanSpectateStatusChanged");

	Params::HWPlayerController_Spectator_OnSpectateTargetCanSpectateStatusChanged Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.bCanSpectate = bCanSpectate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.RequestMinimapCanvasWidgetDebugDump
// (Final, Exec, Native, Public)

void AHWPlayerController_Spectator::RequestMinimapCanvasWidgetDebugDump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "RequestMinimapCanvasWidgetDebugDump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ResetDisplayInfos
// (Final, Exec, Native, Public)

void AHWPlayerController_Spectator::ResetDisplayInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ResetDisplayInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.SelectNextViewTarget
// (Final, Native, Public, BlueprintCallable)

void AHWPlayerController_Spectator::SelectNextViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "SelectNextViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.SelectPrevViewTarget
// (Final, Native, Public, BlueprintCallable)

void AHWPlayerController_Spectator::SelectPrevViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "SelectPrevViewTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.SelectViewTargetByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::SelectViewTargetByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "SelectViewTargetByIndex");

	Params::HWPlayerController_Spectator_SelectViewTargetByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.SelectViewTargetByPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::SelectViewTargetByPlayerState(class AHWPlayerState* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "SelectViewTargetByPlayerState");

	Params::HWPlayerController_Spectator_SelectViewTargetByPlayerState Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ServerCycleNextSpectatorTarget
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                                    Reverse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::ServerCycleNextSpectatorTarget(bool Reverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ServerCycleNextSpectatorTarget");

	Params::HWPlayerController_Spectator_ServerCycleNextSpectatorTarget Parms{};

	Parms.Reverse = Reverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ServerRequestSpectatorTarget
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// int32                                   DesiredSpectateIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::ServerRequestSpectatorTarget(int32 DesiredSpectateIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ServerRequestSpectatorTarget");

	Params::HWPlayerController_Spectator_ServerRequestSpectatorTarget Parms{};

	Parms.DesiredSpectateIndex = DesiredSpectateIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ServerRequestSpectatorTargetByPlayerState
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AHWPlayerState*                   Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::ServerRequestSpectatorTargetByPlayerState(class AHWPlayerState* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ServerRequestSpectatorTargetByPlayerState");

	Params::HWPlayerController_Spectator_ServerRequestSpectatorTargetByPlayerState Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ServerSetCameraFocused
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerController_Spectator::ServerSetCameraFocused(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ServerSetCameraFocused");

	Params::HWPlayerController_Spectator_ServerSetCameraFocused Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.ToggleCameraFocused
// (Final, Native, Public, BlueprintCallable)

void AHWPlayerController_Spectator::ToggleCameraFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "ToggleCameraFocused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.TogglePlayerCameraView
// (Final, Native, Public, BlueprintCallable)

void AHWPlayerController_Spectator::TogglePlayerCameraView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "TogglePlayerCameraView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerController_Spectator.GetCurrentCameraZoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerController_Spectator::GetCurrentCameraZoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "GetCurrentCameraZoom");

	Params::HWPlayerController_Spectator_GetCurrentCameraZoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Spectator.GetTargetPlayerState
// (Final, Native, Public, Const)
// Parameters:
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* AHWPlayerController_Spectator::GetTargetPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "GetTargetPlayerState");

	Params::HWPlayerController_Spectator_GetTargetPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Spectator.IsCameraFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController_Spectator::IsCameraFocused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "IsCameraFocused");

	Params::HWPlayerController_Spectator_IsCameraFocused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerController_Spectator.IsSpectatingPlayerView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerController_Spectator::IsSpectatingPlayerView() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerController_Spectator", "IsSpectatingPlayerView");

	Params::HWPlayerController_Spectator_IsSpectatingPlayerView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.HandlePlayerRolesAssigned
// (Final, Native, Protected)

void AHWPlayerState::HandlePlayerRolesAssigned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "HandlePlayerRolesAssigned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.Multicast_ForceUpdateCharacterPawn
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::Multicast_ForceUpdateCharacterPawn(class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "Multicast_ForceUpdateCharacterPawn");

	Params::HWPlayerState_Multicast_ForceUpdateCharacterPawn Parms{};

	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.MulticastReceiveTradeRequestResult
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AHWPlayerState*                   RequestingPlayerState                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   TargetPlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWTradeRequestType                     TradeType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWTradeRequestResult                   TradeResult                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPGame_ReplicatedTimerId&  TimerId                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::MulticastReceiveTradeRequestResult(class AHWPlayerState* RequestingPlayerState, class AHWPlayerState* TargetPlayerState, EHWTradeRequestType TradeType, EHWTradeRequestResult TradeResult, const struct FPGame_ReplicatedTimerId& TimerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "MulticastReceiveTradeRequestResult");

	Params::HWPlayerState_MulticastReceiveTradeRequestResult Parms{};

	Parms.RequestingPlayerState = RequestingPlayerState;
	Parms.TargetPlayerState = TargetPlayerState;
	Parms.TradeType = TradeType;
	Parms.TradeResult = TradeResult;
	Parms.TimerId = std::move(TimerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.On3DTargeterEnabledSettingUpdated
// (Final, Native, Protected)

void AHWPlayerState::On3DTargeterEnabledSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "On3DTargeterEnabledSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnAutoSkillComponentUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   CharAbilitySysActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHWAutoSkillComponent*            AutoSkillComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::OnAutoSkillComponentUpdated(class AHWCharacterAbilitySystemActor* CharAbilitySysActor, class UHWAutoSkillComponent* AutoSkillComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnAutoSkillComponentUpdated");

	Params::HWPlayerState_OnAutoSkillComponentUpdated Parms{};

	Parms.CharAbilitySysActor = CharAbilitySysActor;
	Parms.AutoSkillComponent = AutoSkillComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnAutoSkillSettingUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnAutoSkillSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnAutoSkillSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnDisableJumpSettingUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnDisableJumpSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnDisableJumpSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnDistanceLineIndicatorSettingUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnDistanceLineIndicatorSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnDistanceLineIndicatorSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnGodBuildLoaded
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyRetrieved                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWGodBuild&               GodBuild                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bEnableAutoBuy                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableAutoSkill                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::OnGodBuildLoaded(bool bSuccessfullyRetrieved, const struct FHWGodBuild& GodBuild, const bool bEnableAutoBuy, const bool bEnableAutoSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnGodBuildLoaded");

	Params::HWPlayerState_OnGodBuildLoaded Parms{};

	Parms.bSuccessfullyRetrieved = bSuccessfullyRetrieved;
	Parms.GodBuild = std::move(GodBuild);
	Parms.bEnableAutoBuy = bEnableAutoBuy;
	Parms.bEnableAutoSkill = bEnableAutoSkill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnGroundTargetHelperSettingUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnGroundTargetHelperSettingUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnGroundTargetHelperSettingUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnNonLocalClientLoadStateChanged
// (Final, Native, Public)

void AHWPlayerState::OnNonLocalClientLoadStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnNonLocalClientLoadStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnPlayerSettingsInitialized
// (Final, Native, Public)

void AHWPlayerState::OnPlayerSettingsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnPlayerSettingsInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_AbilityCastStyle
// (Final, Native, Protected)

void AHWPlayerState::OnRep_AbilityCastStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_AbilityCastStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_AbilitySystemActor
// (Final, Native, Protected)

void AHWPlayerState::OnRep_AbilitySystemActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_AbilitySystemActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_AllPlayedRoles
// (Final, Native, Public)

void AHWPlayerState::OnRep_AllPlayedRoles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_AllPlayedRoles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_AssignedRole
// (Final, Native, Public)

void AHWPlayerState::OnRep_AssignedRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_AssignedRole");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_DoubleTapToFireSetting
// (Final, Native, Protected)

void AHWPlayerState::OnRep_DoubleTapToFireSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_DoubleTapToFireSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_DraftCharacterChoice
// (Final, Native, Public)

void AHWPlayerState::OnRep_DraftCharacterChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_DraftCharacterChoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_DraftSkinChoice
// (Final, Native, Public)

void AHWPlayerState::OnRep_DraftSkinChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_DraftSkinChoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_IsOvertakenByAI
// (Final, Native, Private)

void AHWPlayerState::OnRep_IsOvertakenByAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_IsOvertakenByAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_PlayerStatsTracker
// (Final, Native, Protected)

void AHWPlayerState::OnRep_PlayerStatsTracker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_PlayerStatsTracker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_RankData
// (Final, Native, Public)

void AHWPlayerState::OnRep_RankData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_RankData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_RejectedTradeList
// (Final, Native, Public)

void AHWPlayerState::OnRep_RejectedTradeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_RejectedTradeList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_StartingSkillRating
// (Final, Native, Public)

void AHWPlayerState::OnRep_StartingSkillRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_StartingSkillRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnRep_VIPOwnershipLevel
// (Final, Native, Protected)

void AHWPlayerState::OnRep_VIPOwnershipLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnRep_VIPOwnershipLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnSeamlessTravelStart
// (Final, Native, Protected)
// Parameters:
// class UWorld*                           CurrentWorld                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::OnSeamlessTravelStart(class UWorld* CurrentWorld, const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnSeamlessTravelStart");

	Params::HWPlayerState_OnSeamlessTravelStart Parms{};

	Parms.CurrentWorld = CurrentWorld;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnVFXEffectsQualitySettingsUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnVFXEffectsQualitySettingsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnVFXEffectsQualitySettingsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.OnVFXOpacitySettingsUpdated
// (Final, Native, Protected)

void AHWPlayerState::OnVFXOpacitySettingsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "OnVFXOpacitySettingsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerAutoUpgradeSystemBuildSelected
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// const struct FGuid&                     SelectedBuildId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableAutoBuy                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnableAutoSkill                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerAutoUpgradeSystemBuildSelected(const struct FGuid& SelectedBuildId, const bool bEnableAutoBuy, const bool bEnableAutoSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerAutoUpgradeSystemBuildSelected");

	Params::HWPlayerState_ServerAutoUpgradeSystemBuildSelected Parms{};

	Parms.SelectedBuildId = std::move(SelectedBuildId);
	Parms.bEnableAutoBuy = bEnableAutoBuy;
	Parms.bEnableAutoSkill = bEnableAutoSkill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerDeclineCharacterSwap
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AHWPlayerState*                   TargetPlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerDeclineCharacterSwap(class AHWPlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerDeclineCharacterSwap");

	Params::HWPlayerState_ServerDeclineCharacterSwap Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerDeclineRoleSwap
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AHWPlayerState*                   TargetPlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerDeclineRoleSwap(class AHWPlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerDeclineRoleSwap");

	Params::HWPlayerState_ServerDeclineRoleSwap Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerRequestCharacterRole
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// ECharacterRole                          CharacterRole                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerRequestCharacterRole(ECharacterRole CharacterRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerRequestCharacterRole");

	Params::HWPlayerState_ServerRequestCharacterRole Parms{};

	Parms.CharacterRole = CharacterRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerRequestCharacterSwap
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AHWPlayerState*                   TargetPlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerRequestCharacterSwap(class AHWPlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerRequestCharacterSwap");

	Params::HWPlayerState_ServerRequestCharacterSwap Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerRequestDraftCharacterChoice
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class UHWCharacterItem*           Choice                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerRequestDraftCharacterChoice(const class UHWCharacterItem* Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerRequestDraftCharacterChoice");

	Params::HWPlayerState_ServerRequestDraftCharacterChoice Parms{};

	Parms.Choice = Choice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerRequestDraftSkinChoice
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class UHWSkinItem*                Choice                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerRequestDraftSkinChoice(const class UHWSkinItem* Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerRequestDraftSkinChoice");

	Params::HWPlayerState_ServerRequestDraftSkinChoice Parms{};

	Parms.Choice = Choice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerRequestRoleSwap
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AHWPlayerState*                   TargetPlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerRequestRoleSwap(class AHWPlayerState* TargetPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerRequestRoleSwap");

	Params::HWPlayerState_ServerRequestRoleSwap Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerSetAbilityCastStyle
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EAbilityCastStyle                       DesiredCastStyle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerSetAbilityCastStyle(EAbilityCastStyle DesiredCastStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerSetAbilityCastStyle");

	Params::HWPlayerState_ServerSetAbilityCastStyle Parms{};

	Parms.DesiredCastStyle = DesiredCastStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerSetClientLoadedStatus
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EHWClientLoadState                      ClientLoadState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerSetClientLoadedStatus(EHWClientLoadState ClientLoadState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerSetClientLoadedStatus");

	Params::HWPlayerState_ServerSetClientLoadedStatus Parms{};

	Parms.ClientLoadState = ClientLoadState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerSetDoubleTapToFireSetting
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// int32                                   DesiredDoubleTapToFireSettingValue                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerSetDoubleTapToFireSetting(int32 DesiredDoubleTapToFireSettingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerSetDoubleTapToFireSetting");

	Params::HWPlayerState_ServerSetDoubleTapToFireSetting Parms{};

	Parms.DesiredDoubleTapToFireSettingValue = DesiredDoubleTapToFireSettingValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.ServerSetupManualBuild
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const bool                              bEnableAutoSkill                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerSetupManualBuild(const bool bEnableAutoSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerSetupManualBuild");

	Params::HWPlayerState_ServerSetupManualBuild Parms{};

	Parms.bEnableAutoSkill = bEnableAutoSkill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.SetAbilitySystemActor
// (Final, Native, Public)
// Parameters:
// class AHWCharacterAbilitySystemActor*   NewActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::SetAbilitySystemActor(class AHWCharacterAbilitySystemActor* NewActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "SetAbilitySystemActor");

	Params::HWPlayerState_SetAbilitySystemActor Parms{};

	Parms.NewActor = NewActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.SetDraftCharacterChoice
// (Final, BlueprintAuthorityOnly, Native, Public)
// Parameters:
// const class UHWCharacterItem*           NewChoice                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::SetDraftCharacterChoice(const class UHWCharacterItem* NewChoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "SetDraftCharacterChoice");

	Params::HWPlayerState_SetDraftCharacterChoice Parms{};

	Parms.NewChoice = NewChoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.SetSkillRatingDelta
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSkillRatingDelta                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::SetSkillRatingDelta(int32 InSkillRatingDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "SetSkillRatingDelta");

	Params::HWPlayerState_SetSkillRatingDelta Parms{};

	Parms.InSkillRatingDelta = InSkillRatingDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.SetStartingSkillRating
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InStartingSkillRating                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerState::SetStartingSkillRating(int32 InStartingSkillRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "SetStartingSkillRating");

	Params::HWPlayerState_SetStartingSkillRating Parms{};

	Parms.InStartingSkillRating = InStartingSkillRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.TryToBroadCastUIRelevantInfoHasChanged
// (Final, Native, Public)

void AHWPlayerState::TryToBroadCastUIRelevantInfoHasChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "TryToBroadCastUIRelevantInfoHasChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.UpdateCastMode
// (Final, Native, Protected)

void AHWPlayerState::UpdateCastMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "UpdateCastMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.UpdateDoubleTapToFireSetting
// (Final, Native, Protected)

void AHWPlayerState::UpdateDoubleTapToFireSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "UpdateDoubleTapToFireSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerState.CanRequestTradeWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AHWPlayerState*             TradeTarget                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerState::CanRequestTradeWith(const class AHWPlayerState* TradeTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "CanRequestTradeWith");

	Params::HWPlayerState_CanRequestTradeWith Parms{};

	Parms.TradeTarget = TradeTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetAbilityCastStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityCastStyle                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityCastStyle AHWPlayerState::GetAbilityCastStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetAbilityCastStyle");

	Params::HWPlayerState_GetAbilityCastStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* AHWPlayerState::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetAbilitySystemComponent");

	Params::HWPlayerState_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetActorBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AHWPlayerState::GetActorBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetActorBase");

	Params::HWPlayerState_GetActorBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetAllPlayedRoles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWAssignedRolesMapWrapper       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWAssignedRolesMapWrapper AHWPlayerState::GetAllPlayedRoles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetAllPlayedRoles");

	Params::HWPlayerState_GetAllPlayedRoles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetAssignedRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterRole                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterRole AHWPlayerState::GetAssignedRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetAssignedRole");

	Params::HWPlayerState_GetAssignedRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetCharacterAbilitySystemActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacterAbilitySystemActor*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacterAbilitySystemActor* AHWPlayerState::GetCharacterAbilitySystemActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetCharacterAbilitySystemActor");

	Params::HWPlayerState_GetCharacterAbilitySystemActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetCharacterBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWCharacter_Base*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWCharacter_Base* AHWPlayerState::GetCharacterBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetCharacterBase");

	Params::HWPlayerState_GetCharacterBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetDraftCharacterChoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWCharacterItem*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWCharacterItem* AHWPlayerState::GetDraftCharacterChoice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetDraftCharacterChoice");

	Params::HWPlayerState_GetDraftCharacterChoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetHWAbilitySystemComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAbilitySystemComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAbilitySystemComponent* AHWPlayerState::GetHWAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetHWAbilitySystemComponent");

	Params::HWPlayerState_GetHWAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetIsOvertakenByAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerState::GetIsOvertakenByAI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetIsOvertakenByAI");

	Params::HWPlayerState_GetIsOvertakenByAI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetLastTradeResultReceived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWTradeRequestResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWTradeRequestResult AHWPlayerState::GetLastTradeResultReceived() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetLastTradeResultReceived");

	Params::HWPlayerState_GetLastTradeResultReceived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetPersistentPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWPersistentPlayerId      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FHWPersistentPlayerId AHWPlayerState::GetPersistentPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetPersistentPlayerId");

	Params::HWPlayerState_GetPersistentPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetPlayerStatsTracker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWPlayerStatsTracker*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerStatsTracker* AHWPlayerState::GetPlayerStatsTracker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetPlayerStatsTracker");

	Params::HWPlayerState_GetPlayerStatsTracker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetRankData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FHWRankData                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FHWRankData AHWPlayerState::GetRankData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetRankData");

	Params::HWPlayerState_GetRankData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetSkillRatingDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerState::GetSkillRatingDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetSkillRatingDelta");

	Params::HWPlayerState_GetSkillRatingDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetStartingSkillRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerState::GetStartingSkillRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetStartingSkillRating");

	Params::HWPlayerState_GetStartingSkillRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AHWTeamState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWTeamState* AHWPlayerState::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "GetTeam");

	Params::HWPlayerState_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.IsJumpDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerState::IsJumpDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "IsJumpDisabled");

	Params::HWPlayerState_IsJumpDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.IsUIRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerState::IsUIRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "IsUIRelevant");

	Params::HWPlayerState_IsUIRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.MatchesPersistentPlayerId
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const struct FHWPersistentPlayerId&     ComparisonId                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWPlayerState::MatchesPersistentPlayerId(const struct FHWPersistentPlayerId& ComparisonId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "MatchesPersistentPlayerId");

	Params::HWPlayerState_MatchesPersistentPlayerId Parms{};

	Parms.ComparisonId = std::move(ComparisonId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerState.ServerSendChatEntry
// (Net, NetReliable, Native, Event, Public, NetServer, Const)
// Parameters:
// const struct FHWChatEntry&              ChatEntry                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AHWPlayerState::ServerSendChatEntry(const struct FHWChatEntry& ChatEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerState", "ServerSendChatEntry");

	Params::HWPlayerState_ServerSendChatEntry Parms{};

	Parms.ChatEntry = std::move(ChatEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.GetQuestTierByCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWQuest*                   QuestItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ProgressCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWQuestSubsystem::GetQuestTierByCount(const class UObject* WorldContextObject, const class UHWQuest* QuestItem, int32 ProgressCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWQuestSubsystem", "GetQuestTierByCount");

	Params::HWQuestSubsystem_GetQuestTierByCount Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.QuestItem = QuestItem;
	Parms.ProgressCount = ProgressCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuestSubsystem.ActivateQuests
// (Final, Native, Public)

void UHWQuestSubsystem::ActivateQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "ActivateQuests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.FinishMatchAndFlushQuests
// (Final, Native, Public)

void UHWQuestSubsystem::FinishMatchAndFlushQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "FinishMatchAndFlushQuests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.InitializeQuestsForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AHWPlayerState*                   Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuestSubsystem::InitializeQuestsForPlayer(class AHWPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "InitializeQuestsForPlayer");

	Params::HWQuestSubsystem_InitializeQuestsForPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.OnInventoryCachedForPlayer
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyLoaded                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuestSubsystem::OnInventoryCachedForPlayer(bool bSuccessfullyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "OnInventoryCachedForPlayer");

	Params::HWQuestSubsystem_OnInventoryCachedForPlayer Parms{};

	Parms.bSuccessfullyLoaded = bSuccessfullyLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.OnRHSessionChanged
// (Final, Native, Protected)
// Parameters:
// class URH_JoinedSession*                OldSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ActiveSession                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuestSubsystem::OnRHSessionChanged(class URH_JoinedSession* OldSession, class URH_JoinedSession* ActiveSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "OnRHSessionChanged");

	Params::HWQuestSubsystem_OnRHSessionChanged Parms{};

	Parms.OldSession = OldSession;
	Parms.ActiveSession = ActiveSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.QueueNewQuestInventoryRequest
// (Final, Native, Public, HasDefaults)
// Parameters:
// const struct FGuid&                     RHPlayerId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_PlayerOrderEntry*             RHPlayerOrder                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuestSubsystem::QueueNewQuestInventoryRequest(const struct FGuid& RHPlayerId, class URH_PlayerOrderEntry* RHPlayerOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "QueueNewQuestInventoryRequest");

	Params::HWQuestSubsystem_QueueNewQuestInventoryRequest Parms{};

	Parms.RHPlayerId = std::move(RHPlayerId);
	Parms.RHPlayerOrder = RHPlayerOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.QueueNewQuestInventoryRequests
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FGuid&                     RHPlayerId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class URH_PlayerOrderEntry*>&RHPlayerOrders                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWQuestSubsystem::QueueNewQuestInventoryRequests(const struct FGuid& RHPlayerId, const TArray<class URH_PlayerOrderEntry*>& RHPlayerOrders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "QueueNewQuestInventoryRequests");

	Params::HWQuestSubsystem_QueueNewQuestInventoryRequests Parms{};

	Parms.RHPlayerId = std::move(RHPlayerId);
	Parms.RHPlayerOrders = std::move(RHPlayerOrders);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.ThreadSafeSubmitPendingInventoryRequests
// (Final, Native, Public)

void UHWQuestSubsystem::ThreadSafeSubmitPendingInventoryRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "ThreadSafeSubmitPendingInventoryRequests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.TimerBatchQuestUpdates
// (Final, Native, Public)

void UHWQuestSubsystem::TimerBatchQuestUpdates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "TimerBatchQuestUpdates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuestSubsystem.FindGodQuestEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGodQuestEntry*                  OutGodQuestEntry                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWQuest*                   QuestItem                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQuestSubsystem::FindGodQuestEntry(struct FGodQuestEntry* OutGodQuestEntry, const class UHWCharacterItem* CharacterItem, const class UHWQuest* QuestItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "FindGodQuestEntry");

	Params::HWQuestSubsystem_FindGodQuestEntry Parms{};

	Parms.CharacterItem = CharacterItem;
	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGodQuestEntry != nullptr)
		*OutGodQuestEntry = std::move(Parms.OutGodQuestEntry);

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuestSubsystem.GetQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                QuestItemId                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWQuest*                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWQuest* UHWQuestSubsystem::GetQuest(const struct FRH_ItemId& QuestItemId, const class UHWCharacterItem* CharacterItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuestSubsystem", "GetQuest");

	Params::HWQuestSubsystem_GetQuest Parms{};

	Parms.QuestItemId = std::move(QuestItemId);
	Parms.CharacterItem = CharacterItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuest_BotProficiency.GamePhaseEnded
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              EndingPhaseTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_BotProficiency::GamePhaseEnded(const struct FGameplayTag& EndingPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_BotProficiency", "GamePhaseEnded");

	Params::HWQuest_BotProficiency_GamePhaseEnded Parms{};

	Parms.EndingPhaseTag = std::move(EndingPhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_BotProficiency.GetBotProficiencyFor
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class AHWPlayerController*        TrackedPlayer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWQuest_BotProficiency::GetBotProficiencyFor(const class AHWPlayerController* TrackedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_BotProficiency", "GetBotProficiencyFor");

	Params::HWQuest_BotProficiency_GetBotProficiencyFor Parms{};

	Parms.TrackedPlayer = TrackedPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuest_BotProficiency.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_BotProficiency::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_BotProficiency", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_BotProficiency_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_KillsByType.OnPlayerAssistGranted
// (Final, Native, Protected)
// Parameters:
// const struct FAssistEventData&          AssistEventData                                        (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWQuest_KillsByType::OnPlayerAssistGranted(const struct FAssistEventData& AssistEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_KillsByType", "OnPlayerAssistGranted");

	Params::HWQuest_KillsByType_OnPlayerAssistGranted Parms{};

	Parms.AssistEventData = std::move(AssistEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_KillsByType.OnPlayerKillGranted
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          KillEventData                                          (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWQuest_KillsByType::OnPlayerKillGranted(const struct FDamageEventData& KillEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_KillsByType", "OnPlayerKillGranted");

	Params::HWQuest_KillsByType_OnPlayerKillGranted Parms{};

	Parms.KillEventData = std::move(KillEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_KillsByType.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_KillsByType::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_KillsByType", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_KillsByType_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_LastPlayerAlive.OnPlayerDied
// (Final, Native, Protected)
// Parameters:
// const struct FDamageEventData&          KillEventData                                          (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWQuest_LastPlayerAlive::OnPlayerDied(const struct FDamageEventData& KillEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_LastPlayerAlive", "OnPlayerDied");

	Params::HWQuest_LastPlayerAlive_OnPlayerDied Parms{};

	Parms.KillEventData = std::move(KillEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_LastPlayerAlive.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_LastPlayerAlive::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_LastPlayerAlive", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_LastPlayerAlive_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_MatchesCompleteMinLevel.GamePhaseEnded
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              EndingPhaseTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_MatchesCompleteMinLevel::GamePhaseEnded(const struct FGameplayTag& EndingPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_MatchesCompleteMinLevel", "GamePhaseEnded");

	Params::HWQuest_MatchesCompleteMinLevel_GamePhaseEnded Parms{};

	Parms.EndingPhaseTag = std::move(EndingPhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_MatchesCompleteMinLevel.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_MatchesCompleteMinLevel::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_MatchesCompleteMinLevel", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_MatchesCompleteMinLevel_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_MatchesPlayedInRole.GamePhaseEnded
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              EndingPhaseTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_MatchesPlayedInRole::GamePhaseEnded(const struct FGameplayTag& EndingPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_MatchesPlayedInRole", "GamePhaseEnded");

	Params::HWQuest_MatchesPlayedInRole_GamePhaseEnded Parms{};

	Parms.EndingPhaseTag = std::move(EndingPhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_MatchesPlayedInRole.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_MatchesPlayedInRole::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_MatchesPlayedInRole", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_MatchesPlayedInRole_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeInMatch.CalculateNumberOfPointsToAward
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeInMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWon                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWQuest_TimeInMatch::CalculateNumberOfPointsToAward(float TimeInMatch, bool bWon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeInMatch", "CalculateNumberOfPointsToAward");

	Params::HWQuest_TimeInMatch_CalculateNumberOfPointsToAward Parms{};

	Parms.TimeInMatch = TimeInMatch;
	Parms.bWon = bWon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQuest_TimeInMatch.GamePhaseEnded
// (Final, Native, Protected)
// Parameters:
// const struct FGameplayTag&              EndingPhaseTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeInMatch::GamePhaseEnded(const struct FGameplayTag& EndingPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeInMatch", "GamePhaseEnded");

	Params::HWQuest_TimeInMatch_GamePhaseEnded Parms{};

	Parms.EndingPhaseTag = std::move(EndingPhaseTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQuest_TimeInMatch.TrackQuestForPlayer_Implementation
// (Native, Public)
// Parameters:
// const class UHWQuest*                   TrackedQuest                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWCharacterAbilitySystemActor*   CharAbSysActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQuest_TimeInMatch::TrackQuestForPlayer_Implementation(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQuest_TimeInMatch", "TrackQuestForPlayer_Implementation");

	Params::HWQuest_TimeInMatch_TrackQuestForPlayer_Implementation Parms{};

	Parms.TrackedQuest = TrackedQuest;
	Parms.CharAbSysActor = CharAbSysActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.AddCustomBot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                CharacterItemId                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWBotDifficulty&                 Difficulty                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::AddCustomBot(int32 TeamNum, const struct FRH_ItemId& CharacterItemId, const EHWBotDifficulty& Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "AddCustomBot");

	Params::HWQueueDataFactory_AddCustomBot Parms{};

	Parms.TeamNum = TeamNum;
	Parms.CharacterItemId = std::move(CharacterItemId);
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.AssessQueueItemOwnershipRequirement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InQueuId                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& QueueId, const bool bItemOwned)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::AssessQueueItemOwnershipRequirement(const class FString& InQueuId, TDelegate<void(const class FString& QueueId, const bool bItemOwned)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "AssessQueueItemOwnershipRequirement");

	Params::HWQueueDataFactory_AssessQueueItemOwnershipRequirement Parms{};

	Parms.InQueuId = std::move(InQueuId);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.FillTeamWithRandomBots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHWBotDifficulty                        Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::FillTeamWithRandomBots(int32 TeamNum, EHWBotDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "FillTeamWithRandomBots");

	Params::HWQueueDataFactory_FillTeamWithRandomBots Parms{};

	Parms.TeamNum = TeamNum;
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.HandlePartyUpdated
// (Final, Native, Protected)

void UHWQueueDataFactory::HandlePartyUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "HandlePartyUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.HandlePartyUpdatedWithPartyMemberData
// (Final, Native, Protected)
// Parameters:
// const struct FRH_PartyMemberData&       PartyMemberData                                        (Parm, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::HandlePartyUpdatedWithPartyMemberData(const struct FRH_PartyMemberData& PartyMemberData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "HandlePartyUpdatedWithPartyMemberData");

	Params::HWQueueDataFactory_HandlePartyUpdatedWithPartyMemberData Parms{};

	Parms.PartyMemberData = std::move(PartyMemberData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.HandlePartyUpdatedWithUUID
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::HandlePartyUpdatedWithUUID(const struct FGuid& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "HandlePartyUpdatedWithUUID");

	Params::HWQueueDataFactory_HandlePartyUpdatedWithUUID Parms{};

	Parms.PlayerId = std::move(PlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.HandlePlayerDataReceived
// (Final, Native, Protected)

void UHWQueueDataFactory::HandlePlayerDataReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "HandlePlayerDataReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.HandleSelectedQueueItemOwnershipCheckCompleted
// (Final, Native, Protected)
// Parameters:
// const class FString&                    QueueId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bItemOwned                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::HandleSelectedQueueItemOwnershipCheckCompleted(const class FString& QueueId, bool bItemOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "HandleSelectedQueueItemOwnershipCheckCompleted");

	Params::HWQueueDataFactory_HandleSelectedQueueItemOwnershipCheckCompleted Parms{};

	Parms.QueueId = std::move(QueueId);
	Parms.bItemOwned = bItemOwned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.RemoveCustomBot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                CharacterItemId                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWBotDifficulty&                 Difficulty                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::RemoveCustomBot(int32 TeamNum, const struct FRH_ItemId& CharacterItemId, const EHWBotDifficulty& Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "RemoveCustomBot");

	Params::HWQueueDataFactory_RemoveCustomBot Parms{};

	Parms.TeamNum = TeamNum;
	Parms.CharacterItemId = std::move(CharacterItemId);
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.SwapTeamCustomBot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemId&                CharacterItemId                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHWBotDifficulty&                 Difficulty                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TeamToSwapTo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::SwapTeamCustomBot(int32 TeamNum, const struct FRH_ItemId& CharacterItemId, const EHWBotDifficulty& Difficulty, int32 TeamToSwapTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "SwapTeamCustomBot");

	Params::HWQueueDataFactory_SwapTeamCustomBot Parms{};

	Parms.TeamNum = TeamNum;
	Parms.CharacterItemId = std::move(CharacterItemId);
	Parms.Difficulty = Difficulty;
	Parms.TeamToSwapTo = TeamToSwapTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWQueueDataFactory.AssessPartySizeForRankedQueue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URH_MatchmakingQueueInfo*         InQueueInfo                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERHQueueDisplayState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERHQueueDisplayState UHWQueueDataFactory::AssessPartySizeForRankedQueue(class URH_MatchmakingQueueInfo* InQueueInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "AssessPartySizeForRankedQueue");

	Params::HWQueueDataFactory_AssessPartySizeForRankedQueue Parms{};

	Parms.InQueueInfo = InQueueInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.GetCurrentCustomLobbyBotConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWCustomBotConfig_Game*         OutCustomBotConfig                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::GetCurrentCustomLobbyBotConfig(struct FHWCustomBotConfig_Game* OutCustomBotConfig) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "GetCurrentCustomLobbyBotConfig");

	Params::HWQueueDataFactory_GetCurrentCustomLobbyBotConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCustomBotConfig != nullptr)
		*OutCustomBotConfig = std::move(Parms.OutCustomBotConfig);

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.GetCustomLobbyGameModeInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FHWGameModeInfo>*         OutGameModeInfos                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHWQueueDataFactory::GetCustomLobbyGameModeInfos(TArray<struct FHWGameModeInfo>* OutGameModeInfos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "GetCustomLobbyGameModeInfos");

	Params::HWQueueDataFactory_GetCustomLobbyGameModeInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGameModeInfos != nullptr)
		*OutGameModeInfos = std::move(Parms.OutGameModeInfos);
}


// Function Hemingway.HWQueueDataFactory.GetCustomSessionGameModeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URH_SessionView*                  InSession                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGameModeInfo*                 OutGameModeInfo                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::GetCustomSessionGameModeInfo(class URH_SessionView* InSession, struct FHWGameModeInfo* OutGameModeInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "GetCustomSessionGameModeInfo");

	Params::HWQueueDataFactory_GetCustomSessionGameModeInfo Parms{};

	Parms.InSession = InSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGameModeInfo != nullptr)
		*OutGameModeInfo = std::move(Parms.OutGameModeInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.GetSavedSelectedQueue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWQueueDataFactory::GetSavedSelectedQueue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "GetSavedSelectedQueue");

	Params::HWQueueDataFactory_GetSavedSelectedQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.GetSortedQueues
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class URH_MatchmakingQueueInfo*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class URH_MatchmakingQueueInfo*> UHWQueueDataFactory::GetSortedQueues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "GetSortedQueues");

	Params::HWQueueDataFactory_GetSortedQueues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.IsCustomBotEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::IsCustomBotEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "IsCustomBotEnabled");

	Params::HWQueueDataFactory_IsCustomBotEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.IsQueueIdValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    InQueueId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::IsQueueIdValid(const class FString& InQueueId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "IsQueueIdValid");

	Params::HWQueueDataFactory_IsQueueIdValid Parms{};

	Parms.InQueueId = std::move(InQueueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.IsRankedQueue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URH_MatchmakingQueueInfo*         InQueueInfo                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::IsRankedQueue(class URH_MatchmakingQueueInfo* InQueueInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "IsRankedQueue");

	Params::HWQueueDataFactory_IsRankedQueue Parms{};

	Parms.InQueueInfo = InQueueInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWQueueDataFactory.IsRankedQueueById
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    InQueueId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWQueueDataFactory::IsRankedQueueById(const class FString& InQueueId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWQueueDataFactory", "IsRankedQueueById");

	Params::HWQueueDataFactory_IsRankedQueueById Parms{};

	Parms.InQueueId = std::move(InQueueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_ClientFillLoot
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_LootId&                LootId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRollbackOnFailure                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_ClientFillLoot(const class UObject* WorldContextObject, const struct FRH_LootId& LootId, int32 Quantity, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate, bool bRollbackOnFailure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_ClientFillLoot");

	Params::HWLibrary_RallyHere_BLUEPRINT_ClientFillLoot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LootId = std::move(LootId);
	Parms.Quantity = Quantity;
	Parms.Delegate = Delegate;
	Parms.bRollbackOnFailure = bRollbackOnFailure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_CreateAndRequestPlayerOrder
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERHAPI_PlayerOrderEntryType             OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_LootId&                LootId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TransactionId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_CreateAndRequestPlayerOrder(class URH_PlayerInfo* PlayerInfo, ERHAPI_PlayerOrderEntryType OrderType, const struct FRH_LootId& LootId, int32 Quantity, const class FString& TransactionId, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_CreateAndRequestPlayerOrder");

	Params::HWLibrary_RallyHere_BLUEPRINT_CreateAndRequestPlayerOrder Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.OrderType = OrderType;
	Parms.LootId = std::move(LootId);
	Parms.Quantity = Quantity;
	Parms.TransactionId = std::move(TransactionId);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_GetExpirationDateForItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const struct FDateTime& ExpirationDate)>Delegate                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_GetExpirationDateForItem(const struct FRH_ItemId& ItemId, const class URH_PlayerInfo* PlayerInfo, const TDelegate<void(const struct FDateTime& ExpirationDate)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_GetExpirationDateForItem");

	Params::HWLibrary_RallyHere_BLUEPRINT_GetExpirationDateForItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.PlayerInfo = PlayerInfo;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_GetOwnedAmountForItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(int32 InstanceCount)>Delegate                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_GetOwnedAmountForItem(const struct FRH_ItemId& ItemId, const class URH_PlayerInfo* PlayerInfo, const TDelegate<void(int32 InstanceCount)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_GetOwnedAmountForItem");

	Params::HWLibrary_RallyHere_BLUEPRINT_GetOwnedAmountForItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.PlayerInfo = PlayerInfo;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_RequestPlayerOrder
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_PlayerOrderEntry*             PlayerOrder                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_RequestPlayerOrder(class URH_PlayerInfo* PlayerInfo, class URH_PlayerOrderEntry* PlayerOrder, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_RequestPlayerOrder");

	Params::HWLibrary_RallyHere_BLUEPRINT_RequestPlayerOrder Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.PlayerOrder = PlayerOrder;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.BLUEPRINT_RequestPlayerOrders
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class URH_PlayerOrderEntry*>&PlayerOrders                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>&Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRollbackOnFailure                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::BLUEPRINT_RequestPlayerOrders(class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& PlayerOrders, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate, bool bRollbackOnFailure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "BLUEPRINT_RequestPlayerOrders");

	Params::HWLibrary_RallyHere_BLUEPRINT_RequestPlayerOrders Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.PlayerOrders = std::move(PlayerOrders);
	Parms.Delegate = Delegate;
	Parms.bRollbackOnFailure = bRollbackOnFailure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.CreatePlayerOrder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ERHAPI_PlayerOrderEntryType             OrderType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_LootId&                LootId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TransactionId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_PlayerOrderEntry*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URH_PlayerOrderEntry* UHWLibrary_RallyHere::CreatePlayerOrder(ERHAPI_PlayerOrderEntryType OrderType, const struct FRH_LootId& LootId, int32 Quantity, const class FString& TransactionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "CreatePlayerOrder");

	Params::HWLibrary_RallyHere_CreatePlayerOrder Parms{};

	Parms.OrderType = OrderType;
	Parms.LootId = std::move(LootId);
	Parms.Quantity = Quantity;
	Parms.TransactionId = std::move(TransactionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.EmitErrorEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FHWEventParameterPair>&EventParameters                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWLibrary_RallyHere::EmitErrorEvent(const class UObject* WorldContextObject, const class FString& EventName, const TArray<struct FHWEventParameterPair>& EventParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "EmitErrorEvent");

	Params::HWLibrary_RallyHere_EmitErrorEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventName = std::move(EventName);
	Parms.EventParameters = std::move(EventParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLibrary_RallyHere.GetActiveSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URH_JoinedSession* UHWLibrary_RallyHere::GetActiveSession(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetActiveSession");

	Params::HWLibrary_RallyHere_GetActiveSession Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetActiveSessionTeam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class URH_JoinedSession*          ActiveSession                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRHAPI_SessionTeam*              OutTeam                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetActiveSessionTeam(const class URH_JoinedSession* ActiveSession, int32 TeamNum, struct FRHAPI_SessionTeam* OutTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetActiveSessionTeam");

	Params::HWLibrary_RallyHere_GetActiveSessionTeam Parms{};

	Parms.ActiveSession = ActiveSession;
	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTeam != nullptr)
		*OutTeam = std::move(Parms.OutTeam);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetCachedExpirationDateForItem
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UHWLibrary_RallyHere::GetCachedExpirationDateForItem(const struct FRH_ItemId& ItemId, const class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetCachedExpirationDateForItem");

	Params::HWLibrary_RallyHere_GetCachedExpirationDateForItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetCachedOwnedAmountForItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URH_PlayerInfo*             PlayerInfo                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLibrary_RallyHere::GetCachedOwnedAmountForItem(const struct FRH_ItemId& ItemId, const class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetCachedOwnedAmountForItem");

	Params::HWLibrary_RallyHere_GetCachedOwnedAmountForItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetJoinedSessionAsDedicatedServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UGameInstance*              GameInstance                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URH_JoinedSession* UHWLibrary_RallyHere::GetJoinedSessionAsDedicatedServer(const class UGameInstance* GameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetJoinedSessionAsDedicatedServer");

	Params::HWLibrary_RallyHere_GetJoinedSessionAsDedicatedServer Parms{};

	Parms.GameInstance = GameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetJoinedSessionAsLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class APlayerController*          LocalPlayerController                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URH_JoinedSession* UHWLibrary_RallyHere::GetJoinedSessionAsLocalPlayer(const class APlayerController* LocalPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetJoinedSessionAsLocalPlayer");

	Params::HWLibrary_RallyHere_GetJoinedSessionAsLocalPlayer Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetLevelInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            TableId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            XpPoints                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWLevelInfo*                    OutLevelInfo                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetLevelInfo(const class UObject* WorldContextObject, const int32& TableId, const int32& XpPoints, struct FHWLevelInfo* OutLevelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetLevelInfo");

	Params::HWLibrary_RallyHere_GetLevelInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TableId = TableId;
	Parms.XpPoints = XpPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLevelInfo != nullptr)
		*OutLevelInfo = std::move(Parms.OutLevelInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetXpPoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            ItemId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  XpPoints                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetXpPoints(const class UObject* WorldContextObject, const int32& ItemId, int32* XpPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetXpPoints");

	Params::HWLibrary_RallyHere_GetXpPoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (XpPoints != nullptr)
		*XpPoints = Parms.XpPoints;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetXpTable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XpTableId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRHAPI_XpTable*                  OutXpTable                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetXpTable(const class UObject* WorldContextObject, int32 XpTableId, struct FRHAPI_XpTable* OutXpTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetXpTable");

	Params::HWLibrary_RallyHere_GetXpTable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.XpTableId = XpTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutXpTable != nullptr)
		*OutXpTable = std::move(Parms.OutXpTable);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetXpTableBreakpoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            TableId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>*                          OutTierBreakpoints                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetXpTableBreakpoints(const class UObject* WorldContextObject, const int32& TableId, TArray<int32>* OutTierBreakpoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetXpTableBreakpoints");

	Params::HWLibrary_RallyHere_GetXpTableBreakpoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TableId = TableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTierBreakpoints != nullptr)
		*OutTierBreakpoints = std::move(Parms.OutTierBreakpoints);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.GetXpTableFromItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStoreItem*                     ProgressStoreItem                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRHAPI_XpTable*                  OutXpTable                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::GetXpTableFromItem(const class UObject* WorldContextObject, class URHStoreItem* ProgressStoreItem, struct FRHAPI_XpTable* OutXpTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "GetXpTableFromItem");

	Params::HWLibrary_RallyHere_GetXpTableFromItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ProgressStoreItem = ProgressStoreItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutXpTable != nullptr)
		*OutXpTable = std::move(Parms.OutXpTable);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLibrary_RallyHere.IsInMatchmakeSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class URH_JoinedSession*          JoinedSession                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLibrary_RallyHere::IsInMatchmakeSession(const class URH_JoinedSession* JoinedSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWLibrary_RallyHere", "IsInMatchmakeSession");

	Params::HWLibrary_RallyHere_IsInMatchmakeSession Parms{};

	Parms.JoinedSession = JoinedSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerInfo.UpdateCachedPlayerSkillRating
// (Final, Native, Public)
// Parameters:
// bool                                    bForceRefresh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPlayerInfo::UpdateCachedPlayerSkillRating(bool bForceRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerInfo", "UpdateCachedPlayerSkillRating");

	Params::HWPlayerInfo_UpdateCachedPlayerSkillRating Parms{};

	Parms.bForceRefresh = bForceRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerInfo.GetCachedPlayerLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWPlayerInfo::GetCachedPlayerLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerInfo", "GetCachedPlayerLevel");

	Params::HWPlayerInfo_GetCachedPlayerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerInfo.GetCurrentQueueCachedPlayerSkillRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWPlayerInfo::GetCurrentQueueCachedPlayerSkillRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerInfo", "GetCurrentQueueCachedPlayerSkillRating");

	Params::HWPlayerInfo_GetCurrentQueueCachedPlayerSkillRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerInfo.HasReceivedInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWPlayerInfo::HasReceivedInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerInfo", "HasReceivedInventory");

	Params::HWPlayerInfo_HasReceivedInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerInfo.UpdatePlayerInventory
// (Final, Native, Public, BlueprintCallable, Const)

void UHWPlayerInfo::UpdatePlayerInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerInfo", "UpdatePlayerInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWInterface_Skinnable.GetApparelComponent
// (Native, Public, Const)
// Parameters:
// class UHWApparelComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWApparelComponent* IHWInterface_Skinnable::GetApparelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetApparelComponent");

	Params::HWInterface_Skinnable_GetApparelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetCurrentSkin
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UHWSkinItem*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UHWSkinItem* IHWInterface_Skinnable::GetCurrentSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetCurrentSkin");

	Params::HWInterface_Skinnable_GetCurrentSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedAudioInfo
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedMetaSoundInfo          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedMetaSoundInfo IHWInterface_Skinnable::GetSkinnedAudioInfo(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedAudioInfo");

	Params::HWInterface_Skinnable_GetSkinnedAudioInfo Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedMaterialInfo
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedMaterialInfo           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedMaterialInfo IHWInterface_Skinnable::GetSkinnedMaterialInfo(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedMaterialInfo");

	Params::HWInterface_Skinnable_GetSkinnedMaterialInfo Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedMontage
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWMontageInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWMontageInfo IHWInterface_Skinnable::GetSkinnedMontage(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedMontage");

	Params::HWInterface_Skinnable_GetSkinnedMontage Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedNiagaraInfo
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedNiagaraInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedNiagaraInfo IHWInterface_Skinnable::GetSkinnedNiagaraInfo(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedNiagaraInfo");

	Params::HWInterface_Skinnable_GetSkinnedNiagaraInfo Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedSkeletalMeshInfo
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedSkeletalMeshInfo       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedSkeletalMeshInfo IHWInterface_Skinnable::GetSkinnedSkeletalMeshInfo(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedSkeletalMeshInfo");

	Params::HWInterface_Skinnable_GetSkinnedSkeletalMeshInfo Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.GetSkinnedStaticMeshInfo
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequest                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkinnedStaticMeshInfo         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHWSkinnedStaticMeshInfo IHWInterface_Skinnable::GetSkinnedStaticMeshInfo(const struct FAssetRequestKey& AssetRequest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "GetSkinnedStaticMeshInfo");

	Params::HWInterface_Skinnable_GetSkinnedStaticMeshInfo Parms{};

	Parms.AssetRequest = std::move(AssetRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWInterface_Skinnable.IsSkinningReady
// (Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWInterface_Skinnable::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWInterface_Skinnable", "IsSkinningReady");

	Params::HWInterface_Skinnable_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWNiagaraComponent.PerformSkinUpdate
// (Final, Native, Public)

void UHWNiagaraComponent::PerformSkinUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWNiagaraComponent", "PerformSkinUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.AnimateActorUpDown
// (Final, Native, Public, BlueprintCallable)

void AHWSkinnablePreviewActor::AnimateActorUpDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "AnimateActorUpDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.ApplyCharacterItemToLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::ApplyCharacterItemToLoadout(const class UHWCharacterItem* CharacterItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "ApplyCharacterItemToLoadout");

	Params::HWSkinnablePreviewActor_ApplyCharacterItemToLoadout Parms{};

	Parms.CharacterItem = CharacterItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.ApplyOffsets
// (Final, Native, Public, BlueprintCallable)

void AHWSkinnablePreviewActor::ApplyOffsets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "ApplyOffsets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.ApplySkinItemToLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UHWSkinItem*                SkinItem                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::ApplySkinItemToLoadout(const class UHWSkinItem* SkinItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "ApplySkinItemToLoadout");

	Params::HWSkinnablePreviewActor_ApplySkinItemToLoadout Parms{};

	Parms.SkinItem = SkinItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.HandleOnNewSkinTagAsset
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "HandleOnNewSkinTagAsset");

	Params::HWSkinnablePreviewActor_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.HandleOnSkinTagAssetRemoved
// (Final, Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "HandleOnSkinTagAssetRemoved");

	Params::HWSkinnablePreviewActor_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.OnRep_ApparelComponent
// (Final, Native, Public)

void AHWSkinnablePreviewActor::OnRep_ApparelComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "OnRep_ApparelComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.OnRep_SkinTagContainerChanged
// (Final, Native, Protected)

void AHWSkinnablePreviewActor::OnRep_SkinTagContainerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "OnRep_SkinTagContainerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.SetIntroPresentationType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EIntroPresentationType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::SetIntroPresentationType(EIntroPresentationType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "SetIntroPresentationType");

	Params::HWSkinnablePreviewActor_SetIntroPresentationType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.SetShowOnApparelApplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::SetShowOnApparelApplication(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "SetShowOnApparelApplication");

	Params::HWSkinnablePreviewActor_SetShowOnApparelApplication Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.SwapSkinTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              NewSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OldSkinTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::SwapSkinTags(const struct FGameplayTag& NewSkinTag, const struct FGameplayTag& OldSkinTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "SwapSkinTags");

	Params::HWSkinnablePreviewActor_SwapSkinTags Parms{};

	Parms.NewSkinTag = std::move(NewSkinTag);
	Parms.OldSkinTag = std::move(OldSkinTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.TriggerLocalVoiceEvent
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              VoiceEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::TriggerLocalVoiceEvent(const struct FGameplayTag& VoiceEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "TriggerLocalVoiceEvent");

	Params::HWSkinnablePreviewActor_TriggerLocalVoiceEvent Parms{};

	Parms.VoiceEvent = std::move(VoiceEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.TriggerVoiceEvent
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              VoiceEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              AudienceOverride                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWSkinnablePreviewActor::TriggerVoiceEvent(const struct FGameplayTag& VoiceEvent, const struct FGameplayTag& AudienceOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "TriggerVoiceEvent");

	Params::HWSkinnablePreviewActor_TriggerVoiceEvent Parms{};

	Parms.VoiceEvent = std::move(VoiceEvent);
	Parms.AudienceOverride = std::move(AudienceOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.UpdatePedestal
// (Final, Native, Public, BlueprintCallable)

void AHWSkinnablePreviewActor::UpdatePedestal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "UpdatePedestal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinnablePreviewActor.GetVoiceComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWVoiceComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWVoiceComponent* AHWSkinnablePreviewActor::GetVoiceComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "GetVoiceComponent");

	Params::HWSkinnablePreviewActor_GetVoiceComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinnablePreviewActor.IsSkinningReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHWSkinnablePreviewActor::IsSkinningReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinnablePreviewActor", "IsSkinningReady");

	Params::HWSkinnablePreviewActor_IsSkinningReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSkinEvoEvalComponent_Abilities.HandleAbilityFired
// (Final, Native, Public)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     AbilityTags                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHWSkinEvoEvalComponent_Abilities::HandleAbilityFired(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& AbilityTags, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent_Abilities", "HandleAbilityFired");

	Params::HWSkinEvoEvalComponent_Abilities_HandleAbilityFired Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityTags = std::move(AbilityTags);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSkinEvoEvalComponent_CharacterLevel.HandleCharacterLevelChanged
// (Final, Native, Public)
// Parameters:
// const int32                             PreviousCharacterLevel                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NewCharacterLevel                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSkinEvoEvalComponent_CharacterLevel::HandleCharacterLevelChanged(const int32 PreviousCharacterLevel, const int32 NewCharacterLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSkinEvoEvalComponent_CharacterLevel", "HandleCharacterLevelChanged");

	Params::HWSkinEvoEvalComponent_CharacterLevel_HandleCharacterLevelChanged Parms{};

	Parms.PreviousCharacterLevel = PreviousCharacterLevel;
	Parms.NewCharacterLevel = NewCharacterLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameStatsTracker.OnRep_AnnouncementComponent
// (Final, Native, Protected)

void AHWGameStatsTracker::OnRep_AnnouncementComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameStatsTracker", "OnRep_AnnouncementComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGameStatsTracker.GetAnnouncementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAnnouncementComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAnnouncementComponent* AHWGameStatsTracker::GetAnnouncementComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameStatsTracker", "GetAnnouncementComponent");

	Params::HWGameStatsTracker_GetAnnouncementComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.AddAllyHealingGrantedForAbility
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HealingGranted                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddAllyHealingGrantedForAbility(const struct FGameplayTag& AbilityTag, float HealingGranted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddAllyHealingGrantedForAbility");

	Params::HWPlayerStatsTracker_AddAllyHealingGrantedForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.HealingGranted = HealingGranted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddAssists
// (Final, Native, Public)
// Parameters:
// int32                                   AssistsToAdd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddAssists(int32 AssistsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddAssists");

	Params::HWPlayerStatsTracker_AddAssists Parms{};

	Parms.AssistsToAdd = AssistsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddDamageDealtForAbility
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageDealt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddDamageDealtForAbility(const struct FGameplayTag& AbilityTag, float DamageDealt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddDamageDealtForAbility");

	Params::HWPlayerStatsTracker_AddDamageDealtForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.DamageDealt = DamageDealt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddDamageMitigated
// (Final, Native, Public)
// Parameters:
// float                                   MitigatedDamage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddDamageMitigated(float MitigatedDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddDamageMitigated");

	Params::HWPlayerStatsTracker_AddDamageMitigated Parms{};

	Parms.MitigatedDamage = MitigatedDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddDamageTaken
// (Final, Native, Public)
// Parameters:
// float                                   IncomingDamage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddDamageTaken(float IncomingDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddDamageTaken");

	Params::HWPlayerStatsTracker_AddDamageTaken Parms{};

	Parms.IncomingDamage = IncomingDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddDeaths
// (Final, Native, Public)
// Parameters:
// int32                                   DeathsToAdd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddDeaths(int32 DeathsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddDeaths");

	Params::HWPlayerStatsTracker_AddDeaths Parms{};

	Parms.DeathsToAdd = DeathsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddHealingReceived
// (Final, Native, Public)
// Parameters:
// float                                   ReceivedHealing                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddHealingReceived(float ReceivedHealing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddHealingReceived");

	Params::HWPlayerStatsTracker_AddHealingReceived Parms{};

	Parms.ReceivedHealing = ReceivedHealing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddKills
// (Final, Native, Public)
// Parameters:
// int32                                   KillsToAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddKills(int32 KillsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddKills");

	Params::HWPlayerStatsTracker_AddKills Parms{};

	Parms.KillsToAdd = KillsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddMinionDamageForAbility
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageDealt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddMinionDamageForAbility(const struct FGameplayTag& AbilityTag, float DamageDealt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddMinionDamageForAbility");

	Params::HWPlayerStatsTracker_AddMinionDamageForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.DamageDealt = DamageDealt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddNPCDamageForAbility
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageDealt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddNPCDamageForAbility(const struct FGameplayTag& AbilityTag, float DamageDealt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddNPCDamageForAbility");

	Params::HWPlayerStatsTracker_AddNPCDamageForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.DamageDealt = DamageDealt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddSelfHealingGrantedForAbility
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HealingGranted                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddSelfHealingGrantedForAbility(const struct FGameplayTag& AbilityTag, float HealingGranted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddSelfHealingGrantedForAbility");

	Params::HWPlayerStatsTracker_AddSelfHealingGrantedForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.HealingGranted = HealingGranted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddStatusDuration
// (Final, Native, Public)
// Parameters:
// const struct FGameplayTag&              StatusToTrack                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IncrementalValue                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddStatusDuration(const struct FGameplayTag& StatusToTrack, float IncrementalValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddStatusDuration");

	Params::HWPlayerStatsTracker_AddStatusDuration Parms{};

	Parms.StatusToTrack = std::move(StatusToTrack);
	Parms.IncrementalValue = IncrementalValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddStructureDamage
// (Final, Native, Public)
// Parameters:
// float                                   DamageToStructure                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddStructureDamage(float DamageToStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddStructureDamage");

	Params::HWPlayerStatsTracker_AddStructureDamage Parms{};

	Parms.DamageToStructure = DamageToStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddTimeSpentDead
// (Final, Native, Public)
// Parameters:
// float                                   TimeDead                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddTimeSpentDead(float TimeDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddTimeSpentDead");

	Params::HWPlayerStatsTracker_AddTimeSpentDead Parms{};

	Parms.TimeDead = TimeDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddToDeathStreak
// (Final, Native, Public)
// Parameters:
// int32                                   DeathsToAdd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddToDeathStreak(int32 DeathsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddToDeathStreak");

	Params::HWPlayerStatsTracker_AddToDeathStreak Parms{};

	Parms.DeathsToAdd = DeathsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddToKillStreak
// (Final, Native, Public)
// Parameters:
// int32                                   KillsToAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddToKillStreak(int32 KillsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddToKillStreak");

	Params::HWPlayerStatsTracker_AddToKillStreak Parms{};

	Parms.KillsToAdd = KillsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.AddWardCount
// (Final, Native, Public)
// Parameters:
// int32                                   NumWardsToAdd                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::AddWardCount(int32 NumWardsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "AddWardCount");

	Params::HWPlayerStatsTracker_AddWardCount Parms{};

	Parms.NumWardsToAdd = NumWardsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.GetAllyHealingAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetAllyHealingAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetAllyHealingAbilities");

	Params::HWPlayerStatsTracker_GetAllyHealingAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetCombatStatusTagList
// (Final, Native, Public)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetCombatStatusTagList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetCombatStatusTagList");

	Params::HWPlayerStatsTracker_GetCombatStatusTagList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetDamageDealtAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetDamageDealtAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetDamageDealtAbilities");

	Params::HWPlayerStatsTracker_GetDamageDealtAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetMinionDamageAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetMinionDamageAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetMinionDamageAbilities");

	Params::HWPlayerStatsTracker_GetMinionDamageAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetNPCDamageAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetNPCDamageAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetNPCDamageAbilities");

	Params::HWPlayerStatsTracker_GetNPCDamageAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetSelfHealingAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AHWPlayerStatsTracker::GetSelfHealingAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetSelfHealingAbilities");

	Params::HWPlayerStatsTracker_GetSelfHealingAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalHealingReceived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalHealingReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalHealingReceived");

	Params::HWPlayerStatsTracker_GetTotalHealingReceived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.IncrementBackendStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::IncrementBackendStat(const class FString& Key, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "IncrementBackendStat");

	Params::HWPlayerStatsTracker_IncrementBackendStat Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.IncrementStreakModifier
// (Final, Native, Public)

void AHWPlayerStatsTracker::IncrementStreakModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "IncrementStreakModifier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_AccoladeComponent
// (Final, Native, Protected)

void AHWPlayerStatsTracker::OnRep_AccoladeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_AccoladeComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_Assists
// (Final, Native, Protected)
// Parameters:
// int32                                   OldAssists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_Assists(int32 OldAssists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_Assists");

	Params::HWPlayerStatsTracker_OnRep_Assists Parms{};

	Parms.OldAssists = OldAssists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_DamageMitigated
// (Native, Protected)
// Parameters:
// float                                   OldDamageMitigated                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_DamageMitigated(float OldDamageMitigated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_DamageMitigated");

	Params::HWPlayerStatsTracker_OnRep_DamageMitigated Parms{};

	Parms.OldDamageMitigated = OldDamageMitigated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_DamageTaken
// (Native, Protected)
// Parameters:
// float                                   OldDamageTaken                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_DamageTaken(float OldDamageTaken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_DamageTaken");

	Params::HWPlayerStatsTracker_OnRep_DamageTaken Parms{};

	Parms.OldDamageTaken = OldDamageTaken;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_Deaths
// (Final, Native, Protected)
// Parameters:
// int32                                   OldDeaths                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_Deaths(int32 OldDeaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_Deaths");

	Params::HWPlayerStatsTracker_OnRep_Deaths Parms{};

	Parms.OldDeaths = OldDeaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_DeathStreak
// (Final, Native, Protected)
// Parameters:
// int32                                   OldDeathStreak                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_DeathStreak(int32 OldDeathStreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_DeathStreak");

	Params::HWPlayerStatsTracker_OnRep_DeathStreak Parms{};

	Parms.OldDeathStreak = OldDeathStreak;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_FireGiantsKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldFireGiantsKilled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_FireGiantsKilled(int32 OldFireGiantsKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_FireGiantsKilled");

	Params::HWPlayerStatsTracker_OnRep_FireGiantsKilled Parms{};

	Parms.OldFireGiantsKilled = OldFireGiantsKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_GoldFuriesKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldGoldFuriesKilled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_GoldFuriesKilled(int32 OldGoldFuriesKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_GoldFuriesKilled");

	Params::HWPlayerStatsTracker_OnRep_GoldFuriesKilled Parms{};

	Parms.OldGoldFuriesKilled = OldGoldFuriesKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_Kills
// (Final, Native, Protected)
// Parameters:
// int32                                   OldKills                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_Kills(int32 OldKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_Kills");

	Params::HWPlayerStatsTracker_OnRep_Kills Parms{};

	Parms.OldKills = OldKills;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_KillStreak
// (Final, Native, Protected)
// Parameters:
// int32                                   OldKillStreak                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_KillStreak(int32 OldKillStreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_KillStreak");

	Params::HWPlayerStatsTracker_OnRep_KillStreak Parms{};

	Parms.OldKillStreak = OldKillStreak;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_MinionsKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldMinionsKilled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_MinionsKilled(int32 OldMinionsKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_MinionsKilled");

	Params::HWPlayerStatsTracker_OnRep_MinionsKilled Parms{};

	Parms.OldMinionsKilled = OldMinionsKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_PhoenixesKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldPhoenixesKilled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_PhoenixesKilled(int32 OldPhoenixesKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_PhoenixesKilled");

	Params::HWPlayerStatsTracker_OnRep_PhoenixesKilled Parms{};

	Parms.OldPhoenixesKilled = OldPhoenixesKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_StructureDamage
// (Native, Protected)
// Parameters:
// float                                   OldStructureDamage                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_StructureDamage(float OldStructureDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_StructureDamage");

	Params::HWPlayerStatsTracker_OnRep_StructureDamage Parms{};

	Parms.OldStructureDamage = OldStructureDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TitansKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldTitansKilled                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TitansKilled(int32 OldTitansKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TitansKilled");

	Params::HWPlayerStatsTracker_OnRep_TitansKilled Parms{};

	Parms.OldTitansKilled = OldTitansKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalAllyHealing
// (Native, Protected)
// Parameters:
// float                                   OldTotalAllyHealing                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalAllyHealing(float OldTotalAllyHealing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalAllyHealing");

	Params::HWPlayerStatsTracker_OnRep_TotalAllyHealing Parms{};

	Parms.OldTotalAllyHealing = OldTotalAllyHealing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalDamage
// (Native, Protected)
// Parameters:
// float                                   OldTotalDamage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalDamage(float OldTotalDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalDamage");

	Params::HWPlayerStatsTracker_OnRep_TotalDamage Parms{};

	Parms.OldTotalDamage = OldTotalDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalGoldEarned
// (Final, Native, Protected)
// Parameters:
// float                                   OldTotalGoldEarned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalGoldEarned(float OldTotalGoldEarned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalGoldEarned");

	Params::HWPlayerStatsTracker_OnRep_TotalGoldEarned Parms{};

	Parms.OldTotalGoldEarned = OldTotalGoldEarned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalMinionDamage
// (Native, Protected)
// Parameters:
// float                                   OldTotalMinionDamage                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalMinionDamage(float OldTotalMinionDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalMinionDamage");

	Params::HWPlayerStatsTracker_OnRep_TotalMinionDamage Parms{};

	Parms.OldTotalMinionDamage = OldTotalMinionDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalNPCDamage
// (Native, Protected)
// Parameters:
// float                                   OldTotalNPCDamage                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalNPCDamage(float OldTotalNPCDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalNPCDamage");

	Params::HWPlayerStatsTracker_OnRep_TotalNPCDamage Parms{};

	Parms.OldTotalNPCDamage = OldTotalNPCDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalSelfHealing
// (Native, Protected)
// Parameters:
// float                                   OldTotalSelfHealing                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalSelfHealing(float OldTotalSelfHealing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalSelfHealing");

	Params::HWPlayerStatsTracker_OnRep_TotalSelfHealing Parms{};

	Parms.OldTotalSelfHealing = OldTotalSelfHealing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TotalXPEarned
// (Final, Native, Protected)
// Parameters:
// float                                   OldTotalXPEarned                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TotalXPEarned(float OldTotalXPEarned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TotalXPEarned");

	Params::HWPlayerStatsTracker_OnRep_TotalXPEarned Parms{};

	Parms.OldTotalXPEarned = OldTotalXPEarned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.OnRep_TowersKilled
// (Final, Native, Protected)
// Parameters:
// int32                                   OldTowersKilled                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::OnRep_TowersKilled(int32 OldTowersKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "OnRep_TowersKilled");

	Params::HWPlayerStatsTracker_OnRep_TowersKilled Parms{};

	Parms.OldTowersKilled = OldTowersKilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.ResetBackendStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::ResetBackendStat(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "ResetBackendStat");

	Params::HWPlayerStatsTracker_ResetBackendStat Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetAssists
// (Final, Native, Public)
// Parameters:
// int32                                   NewAssists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetAssists(int32 NewAssists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetAssists");

	Params::HWPlayerStatsTracker_SetAssists Parms{};

	Parms.NewAssists = NewAssists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetDeaths
// (Final, Native, Public)
// Parameters:
// int32                                   NewDeaths                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetDeaths(int32 NewDeaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetDeaths");

	Params::HWPlayerStatsTracker_SetDeaths Parms{};

	Parms.NewDeaths = NewDeaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetDeathStreak
// (Final, Native, Public)
// Parameters:
// int32                                   NewDeathStreak                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetDeathStreak(int32 NewDeathStreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetDeathStreak");

	Params::HWPlayerStatsTracker_SetDeathStreak Parms{};

	Parms.NewDeathStreak = NewDeathStreak;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetKills
// (Final, Native, Public)
// Parameters:
// int32                                   NewKills                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetKills(int32 NewKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetKills");

	Params::HWPlayerStatsTracker_SetKills Parms{};

	Parms.NewKills = NewKills;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetKillStreak
// (Final, Native, Public)
// Parameters:
// int32                                   NewKillStreak                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetKillStreak(int32 NewKillStreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetKillStreak");

	Params::HWPlayerStatsTracker_SetKillStreak Parms{};

	Parms.NewKillStreak = NewKillStreak;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.SetStreakModifier
// (Final, Native, Public)
// Parameters:
// int32                                   InStreakModifier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::SetStreakModifier(int32 InStreakModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "SetStreakModifier");

	Params::HWPlayerStatsTracker_SetStreakModifier Parms{};

	Parms.InStreakModifier = InStreakModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.UpdateTotalGoldEarned
// (Final, Native, Public)
// Parameters:
// const float                             GoldToAdd                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::UpdateTotalGoldEarned(const float GoldToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "UpdateTotalGoldEarned");

	Params::HWPlayerStatsTracker_UpdateTotalGoldEarned Parms{};

	Parms.GoldToAdd = GoldToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.UpdateTotalXPEarned
// (Final, Native, Public)
// Parameters:
// const float                             XPToAdd                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWPlayerStatsTracker::UpdateTotalXPEarned(const float XPToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "UpdateTotalXPEarned");

	Params::HWPlayerStatsTracker_UpdateTotalXPEarned Parms{};

	Parms.XPToAdd = XPToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerStatsTracker.GetAccoladeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAccoladeComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAccoladeComponent* AHWPlayerStatsTracker::GetAccoladeComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetAccoladeComponent");

	Params::HWPlayerStatsTracker_GetAccoladeComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetAssists
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetAssists() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetAssists");

	Params::HWPlayerStatsTracker_GetAssists Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetBackendStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerStatsTracker::GetBackendStatValue(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetBackendStatValue");

	Params::HWPlayerStatsTracker_GetBackendStatValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetDeaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetDeaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetDeaths");

	Params::HWPlayerStatsTracker_GetDeaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetDeathStreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetDeathStreak() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetDeathStreak");

	Params::HWPlayerStatsTracker_GetDeathStreak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetKills");

	Params::HWPlayerStatsTracker_GetKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetKillStreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetKillStreak() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetKillStreak");

	Params::HWPlayerStatsTracker_GetKillStreak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetStreakModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetStreakModifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetStreakModifier");

	Params::HWPlayerStatsTracker_GetStreakModifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTimeSpentDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerStatsTracker::GetTimeSpentDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTimeSpentDead");

	Params::HWPlayerStatsTracker_GetTimeSpentDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalAllyHealingGranted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalAllyHealingGranted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalAllyHealingGranted");

	Params::HWPlayerStatsTracker_GetTotalAllyHealingGranted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalALlyHealingGrantedForAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalALlyHealingGrantedForAbility(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalALlyHealingGrantedForAbility");

	Params::HWPlayerStatsTracker_GetTotalALlyHealingGrantedForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalDamageDealt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalDamageDealt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalDamageDealt");

	Params::HWPlayerStatsTracker_GetTotalDamageDealt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalDamageDealtForAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalDamageDealtForAbility(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalDamageDealtForAbility");

	Params::HWPlayerStatsTracker_GetTotalDamageDealtForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalDamageMitigated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalDamageMitigated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalDamageMitigated");

	Params::HWPlayerStatsTracker_GetTotalDamageMitigated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalDamageTaken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalDamageTaken() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalDamageTaken");

	Params::HWPlayerStatsTracker_GetTotalDamageTaken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalGoldEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerStatsTracker::GetTotalGoldEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalGoldEarned");

	Params::HWPlayerStatsTracker_GetTotalGoldEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalMinionDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalMinionDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalMinionDamage");

	Params::HWPlayerStatsTracker_GetTotalMinionDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalMinionDamageForAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalMinionDamageForAbility(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalMinionDamageForAbility");

	Params::HWPlayerStatsTracker_GetTotalMinionDamageForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalNPCDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalNPCDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalNPCDamage");

	Params::HWPlayerStatsTracker_GetTotalNPCDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalNPCDamageForAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalNPCDamageForAbility(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalNPCDamageForAbility");

	Params::HWPlayerStatsTracker_GetTotalNPCDamageForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalSelfHealingGranted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalSelfHealingGranted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalSelfHealingGranted");

	Params::HWPlayerStatsTracker_GetTotalSelfHealingGranted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalSelfHealingGrantedForAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalSelfHealingGrantedForAbility(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalSelfHealingGrantedForAbility");

	Params::HWPlayerStatsTracker_GetTotalSelfHealingGrantedForAbility Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalStatusDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              RelevantStat                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerStatsTracker::GetTotalStatusDuration(const struct FGameplayTag& RelevantStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalStatusDuration");

	Params::HWPlayerStatsTracker_GetTotalStatusDuration Parms{};

	Parms.RelevantStat = std::move(RelevantStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalStructureDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalStructureDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalStructureDamage");

	Params::HWPlayerStatsTracker_GetTotalStructureDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalWardsPlaced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWPlayerStatsTracker::GetTotalWardsPlaced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalWardsPlaced");

	Params::HWPlayerStatsTracker_GetTotalWardsPlaced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerStatsTracker.GetTotalXPEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHWPlayerStatsTracker::GetTotalXPEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerStatsTracker", "GetTotalXPEarned");

	Params::HWPlayerStatsTracker_GetTotalXPEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.AddFireGiantKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   KillsToAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::AddFireGiantKills(int32 KillsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "AddFireGiantKills");

	Params::HWTeamStatsTracker_AddFireGiantKills Parms{};

	Parms.KillsToAdd = KillsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.AddGoldFuryKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   KillsToAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::AddGoldFuryKills(int32 KillsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "AddGoldFuryKills");

	Params::HWTeamStatsTracker_AddGoldFuryKills Parms{};

	Parms.KillsToAdd = KillsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.AddPyromancerKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   KillsToAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::AddPyromancerKills(int32 KillsToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "AddPyromancerKills");

	Params::HWTeamStatsTracker_AddPyromancerKills Parms{};

	Parms.KillsToAdd = KillsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandleDamageMitigatedUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldDamageMitigated                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewDamageMitigated                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandleDamageMitigatedUpdated(class AHWPlayerState* PlayerState, float OldDamageMitigated, float NewDamageMitigated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandleDamageMitigatedUpdated");

	Params::HWTeamStatsTracker_HandleDamageMitigatedUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldDamageMitigated = OldDamageMitigated;
	Parms.NewDamageMitigated = NewDamageMitigated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandlePlayerAssistsUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldAssists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewAssists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandlePlayerAssistsUpdated(class AHWPlayerState* PlayerState, int32 OldAssists, int32 NewAssists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandlePlayerAssistsUpdated");

	Params::HWTeamStatsTracker_HandlePlayerAssistsUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldAssists = OldAssists;
	Parms.NewAssists = NewAssists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandlePlayerDeathsUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldDeaths                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewDeaths                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandlePlayerDeathsUpdated(class AHWPlayerState* PlayerState, int32 OldDeaths, int32 NewDeaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandlePlayerDeathsUpdated");

	Params::HWTeamStatsTracker_HandlePlayerDeathsUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldDeaths = OldDeaths;
	Parms.NewDeaths = NewDeaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandlePlayerKillsUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldKills                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewKills                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandlePlayerKillsUpdated(class AHWPlayerState* PlayerState, int32 OldKills, int32 NewKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandlePlayerKillsUpdated");

	Params::HWTeamStatsTracker_HandlePlayerKillsUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldKills = OldKills;
	Parms.NewKills = NewKills;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandlePlayerStatsReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerStatsTracker*            PlayerStats                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandlePlayerStatsReplicated(class AHWPlayerState* PlayerState, class AHWPlayerStatsTracker* PlayerStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandlePlayerStatsReplicated");

	Params::HWTeamStatsTracker_HandlePlayerStatsReplicated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.PlayerStats = PlayerStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandleTeamMembersUpdated
// (Final, Native, Protected)

void AHWTeamStatsTracker::HandleTeamMembersUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandleTeamMembersUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandleTotalDamageDealtUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldTotalDamageDealt                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewTotalDamageDealt                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandleTotalDamageDealtUpdated(class AHWPlayerState* PlayerState, float OldTotalDamageDealt, float NewTotalDamageDealt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandleTotalDamageDealtUpdated");

	Params::HWTeamStatsTracker_HandleTotalDamageDealtUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldTotalDamageDealt = OldTotalDamageDealt;
	Parms.NewTotalDamageDealt = NewTotalDamageDealt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandleTotalGoldEarnedUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldTotalGoldEarned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewTotalGoldEarned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandleTotalGoldEarnedUpdated(class AHWPlayerState* PlayerState, int32 OldTotalGoldEarned, int32 NewTotalGoldEarned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandleTotalGoldEarnedUpdated");

	Params::HWTeamStatsTracker_HandleTotalGoldEarnedUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldTotalGoldEarned = OldTotalGoldEarned;
	Parms.NewTotalGoldEarned = NewTotalGoldEarned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.HandleTotalXPEarnedUpdated
// (Final, Native, Protected)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldTotalGoldEarned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewTotalGoldEarned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::HandleTotalXPEarnedUpdated(class AHWPlayerState* PlayerState, int32 OldTotalGoldEarned, int32 NewTotalGoldEarned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "HandleTotalXPEarnedUpdated");

	Params::HWTeamStatsTracker_HandleTotalXPEarnedUpdated Parms{};

	Parms.PlayerState = PlayerState;
	Parms.OldTotalGoldEarned = OldTotalGoldEarned;
	Parms.NewTotalGoldEarned = NewTotalGoldEarned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.OnRep_AccoladeComponent
// (Final, Native, Protected)

void AHWTeamStatsTracker::OnRep_AccoladeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "OnRep_AccoladeComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.OnRep_FireGiantKills
// (Final, Native, Protected)

void AHWTeamStatsTracker::OnRep_FireGiantKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "OnRep_FireGiantKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.OnRep_GoldFuryKills
// (Final, Native, Protected)

void AHWTeamStatsTracker::OnRep_GoldFuryKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "OnRep_GoldFuryKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.OnRep_PyromancerKills
// (Final, Native, Protected)

void AHWTeamStatsTracker::OnRep_PyromancerKills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "OnRep_PyromancerKills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.OnRep_TeamState
// (Final, Native, Protected)

void AHWTeamStatsTracker::OnRep_TeamState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "OnRep_TeamState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.SetFireGiantKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewKillNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::SetFireGiantKills(int32 NewKillNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "SetFireGiantKills");

	Params::HWTeamStatsTracker_SetFireGiantKills Parms{};

	Parms.NewKillNum = NewKillNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.SetGoldFuryKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewKillNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::SetGoldFuryKills(int32 NewKillNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "SetGoldFuryKills");

	Params::HWTeamStatsTracker_SetGoldFuryKills Parms{};

	Parms.NewKillNum = NewKillNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.SetPyromancerKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewKillNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHWTeamStatsTracker::SetPyromancerKills(int32 NewKillNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "SetPyromancerKills");

	Params::HWTeamStatsTracker_SetPyromancerKills Parms{};

	Parms.NewKillNum = NewKillNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWTeamStatsTracker.GetAccoladeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWAccoladeComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWAccoladeComponent* AHWTeamStatsTracker::GetAccoladeComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetAccoladeComponent");

	Params::HWTeamStatsTracker_GetAccoladeComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetFireGiantKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetFireGiantKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetFireGiantKills");

	Params::HWTeamStatsTracker_GetFireGiantKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetGoldFuryKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetGoldFuryKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetGoldFuryKills");

	Params::HWTeamStatsTracker_GetGoldFuryKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetPyromancerKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetPyromancerKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetPyromancerKills");

	Params::HWTeamStatsTracker_GetPyromancerKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTeamAssists
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetTeamAssists() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTeamAssists");

	Params::HWTeamStatsTracker_GetTeamAssists Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTeamDeaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetTeamDeaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTeamDeaths");

	Params::HWTeamStatsTracker_GetTeamDeaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTeamEarnedGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetTeamEarnedGold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTeamEarnedGold");

	Params::HWTeamStatsTracker_GetTeamEarnedGold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTeamEarnedXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetTeamEarnedXP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTeamEarnedXP");

	Params::HWTeamStatsTracker_GetTeamEarnedXP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTeamKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHWTeamStatsTracker::GetTeamKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTeamKills");

	Params::HWTeamStatsTracker_GetTeamKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWTeamStatsTracker.GetTopStatsPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              StatToCheck                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AHWPlayerState*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AHWPlayerState* AHWTeamStatsTracker::GetTopStatsPlayer(const struct FGameplayTag& StatToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWTeamStatsTracker", "GetTopStatsPlayer");

	Params::HWTeamStatsTracker_GetTopStatsPlayer Parms{};

	Parms.StatToCheck = std::move(StatToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionItemHandler.GetCTAPath
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemInventory&         Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UHWCallToActionItemHandler::GetCTAPath(const class UObject* WorldContext, const struct FRH_ItemInventory& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionItemHandler", "GetCTAPath");

	Params::HWCallToActionItemHandler_GetCTAPath Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionItemHandler.ShouldShowCTA
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRH_ItemInventory&         Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionItemHandler::ShouldShowCTA(const class UObject* WorldContext, const struct FRH_ItemInventory& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionItemHandler", "ShouldShowCTA");

	Params::HWCallToActionItemHandler_ShouldShowCTA Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Item = std::move(Item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.PathToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWCallToActionSubsystem::PathToString(const TArray<class FName>& CTAPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HWCallToActionSubsystem", "PathToString");

	Params::HWCallToActionSubsystem_PathToString Parms{};

	Parms.CTAPath = std::move(CTAPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.HandleGodSubsystemReady
// (Final, Native, Private)

void UHWCallToActionSubsystem::HandleGodSubsystemReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "HandleGodSubsystemReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCallToActionSubsystem.HandleInventoryLoaded
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCallToActionSubsystem::HandleInventoryLoaded(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "HandleInventoryLoaded");

	Params::HWCallToActionSubsystem_HandleInventoryLoaded Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCallToActionSubsystem.HandleInventoryUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<int32>&                    UpdatedInventoryIds                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCallToActionSubsystem::HandleInventoryUpdated(const TArray<int32>& UpdatedInventoryIds, class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "HandleInventoryUpdated");

	Params::HWCallToActionSubsystem_HandleInventoryUpdated Parms{};

	Parms.UpdatedInventoryIds = std::move(UpdatedInventoryIds);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCallToActionSubsystem.HandleStoreVendorsLoaded
// (Final, Native, Private)

void UHWCallToActionSubsystem::HandleStoreVendorsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "HandleStoreVendorsLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCallToActionSubsystem.RegisterCTAActiveChildrenCountChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ActiveChildrenCount)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCallToActionSubsystem::RegisterCTAActiveChildrenCountChanged(const TArray<class FName>& CTAPath, TDelegate<void(int32 ActiveChildrenCount)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "RegisterCTAActiveChildrenCountChanged");

	Params::HWCallToActionSubsystem_RegisterCTAActiveChildrenCountChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.RegisterCTASeenAmountChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 InventoryAmount, int32 SeenAmount)>Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::RegisterCTASeenAmountChanged(const TArray<class FName>& CTAPath, TDelegate<void(int32 InventoryAmount, int32 SeenAmount)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "RegisterCTASeenAmountChanged");

	Params::HWCallToActionSubsystem_RegisterCTASeenAmountChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.RegisterCTAStateChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bIsCTAActive)>      Callback                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::RegisterCTAStateChanged(const TArray<class FName>& CTAPath, TDelegate<void(bool bIsCTAActive)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "RegisterCTAStateChanged");

	Params::HWCallToActionSubsystem_RegisterCTAStateChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.ResetAllCTAs
// (Final, Native, Public, BlueprintCallable)

void UHWCallToActionSubsystem::ResetAllCTAs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "ResetAllCTAs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCallToActionSubsystem.SetCTASeen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSetChildrenSeen                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::SetCTASeen(const TArray<class FName>& CTAPath, bool bSetChildrenSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "SetCTASeen");

	Params::HWCallToActionSubsystem_SetCTASeen Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.bSetChildrenSeen = bSetChildrenSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.SetCTASeenAmount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SeenAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCallToActionSubsystem::SetCTASeenAmount(const TArray<class FName>& CTAPath, int32 SeenAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "SetCTASeenAmount");

	Params::HWCallToActionSubsystem_SetCTASeenAmount Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.SeenAmount = SeenAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.UnregisterCTAActiveChildrenCountChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class UObject*                    CallbackObj                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCallToActionSubsystem::UnregisterCTAActiveChildrenCountChanged(const TArray<class FName>& CTAPath, const class UObject* CallbackObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "UnregisterCTAActiveChildrenCountChanged");

	Params::HWCallToActionSubsystem_UnregisterCTAActiveChildrenCountChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.CallbackObj = CallbackObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.UnregisterCTASeenAmountChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class UObject*                    CallbackObj                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::UnregisterCTASeenAmountChanged(const TArray<class FName>& CTAPath, const class UObject* CallbackObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "UnregisterCTASeenAmountChanged");

	Params::HWCallToActionSubsystem_UnregisterCTASeenAmountChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.CallbackObj = CallbackObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.UnregisterCTAStateChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class UObject*                    CallbackObj                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::UnregisterCTAStateChanged(const TArray<class FName>& CTAPath, const class UObject* CallbackObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "UnregisterCTAStateChanged");

	Params::HWCallToActionSubsystem_UnregisterCTAStateChanged Parms{};

	Parms.CTAPath = std::move(CTAPath);
	Parms.CallbackObj = CallbackObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.GetCTAActiveChildrenCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWCallToActionSubsystem::GetCTAActiveChildrenCount(const TArray<class FName>& CTAPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "GetCTAActiveChildrenCount");

	Params::HWCallToActionSubsystem_GetCTAActiveChildrenCount Parms{};

	Parms.CTAPath = std::move(CTAPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.GetCTAStateAndAmounts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32*                                  OutInventoryAmount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSeenAmount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutActiveChildrenCount                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::GetCTAStateAndAmounts(const TArray<class FName>& CTAPath, int32* OutInventoryAmount, int32* OutSeenAmount, int32* OutActiveChildrenCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "GetCTAStateAndAmounts");

	Params::HWCallToActionSubsystem_GetCTAStateAndAmounts Parms{};

	Parms.CTAPath = std::move(CTAPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInventoryAmount != nullptr)
		*OutInventoryAmount = Parms.OutInventoryAmount;

	if (OutSeenAmount != nullptr)
		*OutSeenAmount = Parms.OutSeenAmount;

	if (OutActiveChildrenCount != nullptr)
		*OutActiveChildrenCount = Parms.OutActiveChildrenCount;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.IsCTAActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class FName>&              CTAPath                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWCallToActionSubsystem::IsCTAActive(const TArray<class FName>& CTAPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "IsCTAActive");

	Params::HWCallToActionSubsystem_IsCTAActive Parms{};

	Parms.CTAPath = std::move(CTAPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWCallToActionSubsystem.LogAllActiveCTAs
// (Final, Native, Public, BlueprintCallable, Const)

void UHWCallToActionSubsystem::LogAllActiveCTAs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCallToActionSubsystem", "LogAllActiveCTAs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCrashSubsystem.OnAbilitySystemActorReplicated
// (Final, Native, Protected)
// Parameters:
// class AHWCharacterAbilitySystemActor*   NewASActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCrashSubsystem::OnAbilitySystemActorReplicated(class AHWCharacterAbilitySystemActor* NewASActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCrashSubsystem", "OnAbilitySystemActorReplicated");

	Params::HWCrashSubsystem_OnAbilitySystemActorReplicated Parms{};

	Parms.NewASActor = NewASActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCrashSubsystem.OnCharacterItemUpdated
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class IHWInterface_LoadoutManagement>LoadoutOwner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           NewCharacterItem                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCrashSubsystem::OnCharacterItemUpdated(TScriptInterface<class IHWInterface_LoadoutManagement> LoadoutOwner, const class UHWCharacterItem* NewCharacterItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCrashSubsystem", "OnCharacterItemUpdated");

	Params::HWCrashSubsystem_OnCharacterItemUpdated Parms{};

	Parms.LoadoutOwner = LoadoutOwner;
	Parms.NewCharacterItem = NewCharacterItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCrashSubsystem.OnGameStateUpdate
// (Final, Native, Public)
// Parameters:
// const class AHWGameState*               GameState                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCrashSubsystem::OnGameStateUpdate(const class AHWGameState* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCrashSubsystem", "OnGameStateUpdate");

	Params::HWCrashSubsystem_OnGameStateUpdate Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWCrashSubsystem.OnSkinItemUpdated
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class IHWInterface_LoadoutManagement>LoadoutOwner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWSkinItem*                NewSkinItem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWCrashSubsystem::OnSkinItemUpdated(TScriptInterface<class IHWInterface_LoadoutManagement> LoadoutOwner, const class UHWSkinItem* NewSkinItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWCrashSubsystem", "OnSkinItemUpdated");

	Params::HWCrashSubsystem_OnSkinItemUpdated Parms{};

	Parms.LoadoutOwner = LoadoutOwner;
	Parms.NewSkinItem = NewSkinItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentItemSubsystem.OnItemsVendorReceived
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccessfullyLoaded                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentItemSubsystem::OnItemsVendorReceived(bool bSuccessfullyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItemSubsystem", "OnItemsVendorReceived");

	Params::HWEquipmentItemSubsystem_OnItemsVendorReceived Parms{};

	Parms.bSuccessfullyLoaded = bSuccessfullyLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentItemSubsystem.OnRHSessionChanged
// (Final, Native, Protected)
// Parameters:
// class URH_JoinedSession*                OldSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ActiveSession                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentItemSubsystem::OnRHSessionChanged(class URH_JoinedSession* OldSession, class URH_JoinedSession* ActiveSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItemSubsystem", "OnRHSessionChanged");

	Params::HWEquipmentItemSubsystem_OnRHSessionChanged Parms{};

	Parms.OldSession = OldSession;
	Parms.ActiveSession = ActiveSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentItemSubsystem.OnSettingsChanged
// (Final, Native, Protected)
// Parameters:
// class URH_ConfigSubsystem*              ConfigSubsytem                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWEquipmentItemSubsystem::OnSettingsChanged(class URH_ConfigSubsystem* ConfigSubsytem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItemSubsystem", "OnSettingsChanged");

	Params::HWEquipmentItemSubsystem_OnSettingsChanged Parms{};

	Parms.ConfigSubsytem = ConfigSubsytem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWEquipmentItemSubsystem.IsGodSpecificItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRH_ItemId&                ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWEquipmentItemSubsystem::IsGodSpecificItem(const struct FRH_ItemId& ItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWEquipmentItemSubsystem", "IsGodSpecificItem");

	Params::HWEquipmentItemSubsystem_IsGodSpecificItem Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameModeInfoSubsystem.GetGameModeInfoByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InfoTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWGameModeInfo*                 OutInfo                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameModeInfoSubsystem::GetGameModeInfoByTag(const struct FGameplayTag& InfoTag, struct FHWGameModeInfo* OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameModeInfoSubsystem", "GetGameModeInfoByTag");

	Params::HWGameModeInfoSubsystem_GetGameModeInfoByTag Parms{};

	Parms.InfoTag = std::move(InfoTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInfo != nullptr)
		*OutInfo = std::move(Parms.OutInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGameModeInfoSubsystem.GetGameModeInfoFromActiveSession
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHWGameModeInfo*                 OutGameModeInfo                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGameModeInfoSubsystem::GetGameModeInfoFromActiveSession(struct FHWGameModeInfo* OutGameModeInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGameModeInfoSubsystem", "GetGameModeInfoFromActiveSession");

	Params::HWGameModeInfoSubsystem_GetGameModeInfoFromActiveSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGameModeInfo != nullptr)
		*OutGameModeInfo = std::move(Parms.OutGameModeInfo);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodBuilderSubsystem.GetCachedPrimaryBuild
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHWGodBuild*                     OutGodBuild                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGodBuilderSubsystem::GetCachedPrimaryBuild(struct FHWGodBuild* OutGodBuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodBuilderSubsystem", "GetCachedPrimaryBuild");

	Params::HWGodBuilderSubsystem_GetCachedPrimaryBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGodBuild != nullptr)
		*OutGodBuild = std::move(Parms.OutGodBuild);

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodBuilderSubsystem.OnLocalPlayerPinnedBuildUpdated
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const class UHWCharacterItem*           CharacterItem                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGuid&                     BuildGuid                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWGodBuilderSubsystem::OnLocalPlayerPinnedBuildUpdated(const class UHWCharacterItem* CharacterItem, const struct FGuid& BuildGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodBuilderSubsystem", "OnLocalPlayerPinnedBuildUpdated");

	Params::HWGodBuilderSubsystem_OnLocalPlayerPinnedBuildUpdated Parms{};

	Parms.CharacterItem = CharacterItem;
	Parms.BuildGuid = std::move(BuildGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWGodBuilderSubsystem.ShouldUseGodBuilder
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWGodBuilderSubsystem::ShouldUseGodBuilder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodBuilderSubsystem", "ShouldUseGodBuilder");

	Params::HWGodBuilderSubsystem_ShouldUseGodBuilder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWGodBuilderSubsystem.GetCachedBuildType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EHWCachedBuildType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHWCachedBuildType UHWGodBuilderSubsystem::GetCachedBuildType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWGodBuilderSubsystem", "GetCachedBuildType");

	Params::HWGodBuilderSubsystem_GetCachedBuildType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.CreateLeaderboardDataContainer
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRH_LeaderboardResults*          Results                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FHWLeaderboardDataContainer      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWLeaderboardDataContainer UHWLeaderboardSubsystem::CreateLeaderboardDataContainer(const class FString& LeaderboardId, struct FRH_LeaderboardResults* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "CreateLeaderboardDataContainer");

	Params::HWLeaderboardSubsystem_CreateLeaderboardDataContainer Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Results != nullptr)
		*Results = std::move(Parms.Results);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.ExecuteAllDelegates
// (Final, Native, Protected)
// Parameters:
// const bool                              bSuccess                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWLeaderboardDataContainer&Container                                              (ConstParm, Parm, NativeAccessSpecifierPublic)

void UHWLeaderboardSubsystem::ExecuteAllDelegates(const bool bSuccess, const class FString& LeaderboardId, const struct FHWLeaderboardDataContainer& Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "ExecuteAllDelegates");

	Params::HWLeaderboardSubsystem_ExecuteAllDelegates Parms{};

	Parms.bSuccess = bSuccess;
	Parms.LeaderboardId = std::move(LeaderboardId);
	Parms.Container = std::move(Container);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLeaderboardSubsystem.FindDivision
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWLeaderboardDataContainer&LeaderboardDataContainer                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FHWSkillRatingRank>&Ranks                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StatValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkillRatingDivision*          OutSkillRatingDivision                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::FindDivision(const struct FHWLeaderboardDataContainer& LeaderboardDataContainer, const TArray<struct FHWSkillRatingRank>& Ranks, int32 StatValue, struct FHWSkillRatingDivision* OutSkillRatingDivision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "FindDivision");

	Params::HWLeaderboardSubsystem_FindDivision Parms{};

	Parms.LeaderboardDataContainer = std::move(LeaderboardDataContainer);
	Parms.Ranks = std::move(Ranks);
	Parms.StatValue = StatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkillRatingDivision != nullptr)
		*OutSkillRatingDivision = std::move(Parms.OutSkillRatingDivision);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.FindDivisionFromCache
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StatValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkillRatingDivision*          OutSkillRatingDivision                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::FindDivisionFromCache(const class FString& LeaderboardId, int32 StatValue, struct FHWSkillRatingDivision* OutSkillRatingDivision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "FindDivisionFromCache");

	Params::HWLeaderboardSubsystem_FindDivisionFromCache Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);
	Parms.StatValue = StatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkillRatingDivision != nullptr)
		*OutSkillRatingDivision = std::move(Parms.OutSkillRatingDivision);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.FindRank
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWLeaderboardDataContainer&LeaderboardDataContainer                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FHWSkillRatingRank>&Ranks                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StatValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkillRatingRank*              OutSkillRatingRank                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::FindRank(const struct FHWLeaderboardDataContainer& LeaderboardDataContainer, const TArray<struct FHWSkillRatingRank>& Ranks, int32 StatValue, struct FHWSkillRatingRank* OutSkillRatingRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "FindRank");

	Params::HWLeaderboardSubsystem_FindRank Parms{};

	Parms.LeaderboardDataContainer = std::move(LeaderboardDataContainer);
	Parms.Ranks = std::move(Ranks);
	Parms.StatValue = StatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkillRatingRank != nullptr)
		*OutSkillRatingRank = std::move(Parms.OutSkillRatingRank);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.FindRankFromCache
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StatValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWSkillRatingRank*              OutSkillRatingRank                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::FindRankFromCache(const class FString& LeaderboardId, int32 StatValue, struct FHWSkillRatingRank* OutSkillRatingRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "FindRankFromCache");

	Params::HWLeaderboardSubsystem_FindRankFromCache Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);
	Parms.StatValue = StatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSkillRatingRank != nullptr)
		*OutSkillRatingRank = std::move(Parms.OutSkillRatingRank);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.FindRankIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FHWLeaderboardDataContainer&LeaderboardDataContainer                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FHWSkillRatingRank>&Ranks                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StatValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHWLeaderboardSubsystem::FindRankIndex(const struct FHWLeaderboardDataContainer& LeaderboardDataContainer, const TArray<struct FHWSkillRatingRank>& Ranks, int32 StatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "FindRankIndex");

	Params::HWLeaderboardSubsystem_FindRankIndex Parms{};

	Parms.LeaderboardDataContainer = std::move(LeaderboardDataContainer);
	Parms.Ranks = std::move(Ranks);
	Parms.StatValue = StatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.GetCachedLeaderboard
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWLeaderboardDataContainer*     OutLeaderboardDataContainer                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::GetCachedLeaderboard(const class FString& LeaderboardId, struct FHWLeaderboardDataContainer* OutLeaderboardDataContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "GetCachedLeaderboard");

	Params::HWLeaderboardSubsystem_GetCachedLeaderboard Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLeaderboardDataContainer != nullptr)
		*OutLeaderboardDataContainer = std::move(Parms.OutLeaderboardDataContainer);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.GetLastReceivedLeaderboardId
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWLeaderboardSubsystem::GetLastReceivedLeaderboardId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "GetLastReceivedLeaderboardId");

	Params::HWLeaderboardSubsystem_GetLastReceivedLeaderboardId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.GetLeaderboardDataConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWLeaderboardDataConfig*        OutLeaderboardDataConfig                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWLeaderboardSubsystem::GetLeaderboardDataConfig(const class FString& LeaderboardId, struct FHWLeaderboardDataConfig* OutLeaderboardDataConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "GetLeaderboardDataConfig");

	Params::HWLeaderboardSubsystem_GetLeaderboardDataConfig Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLeaderboardDataConfig != nullptr)
		*OutLeaderboardDataConfig = std::move(Parms.OutLeaderboardDataConfig);

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.GetLeaderboardIds
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UHWLeaderboardSubsystem::GetLeaderboardIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "GetLeaderboardIds");

	Params::HWLeaderboardSubsystem_GetLeaderboardIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLeaderboardSubsystem.InitializeLeaderboardConfigDatas
// (Final, Native, Protected)

void UHWLeaderboardSubsystem::InitializeLeaderboardConfigDatas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "InitializeLeaderboardConfigDatas");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLeaderboardSubsystem.OnLeaderboardConfigLoaded
// (Final, Native, Protected)

void UHWLeaderboardSubsystem::OnLeaderboardConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "OnLeaderboardConfigLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLeaderboardSubsystem.OnRankedConfigsLoaded
// (Final, Native, Protected)

void UHWLeaderboardSubsystem::OnRankedConfigsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "OnRankedConfigsLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLeaderboardSubsystem.RequestAsyncLeaderboard
// (Final, Native, Protected)
// Parameters:
// const class FString&                    LeaderboardId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLeaderboardSubsystem::RequestAsyncLeaderboard(const class FString& LeaderboardId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "RequestAsyncLeaderboard");

	Params::HWLeaderboardSubsystem_RequestAsyncLeaderboard Parms{};

	Parms.LeaderboardId = std::move(LeaderboardId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLeaderboardSubsystem.GetRHLeaderboardSubsystem
// (Final, Native, Protected, Const)
// Parameters:
// class URH_LeaderboardSubsystem*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URH_LeaderboardSubsystem* UHWLeaderboardSubsystem::GetRHLeaderboardSubsystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLeaderboardSubsystem", "GetRHLeaderboardSubsystem");

	Params::HWLeaderboardSubsystem_GetRHLeaderboardSubsystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.HandleOnLinkedPlatformsLoaded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<class URH_PlayerPlatformInfo*>&Platforms                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWLocalPlayerInventorySubsystem::HandleOnLinkedPlatformsLoaded(const TArray<class URH_PlayerPlatformInfo*>& Platforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "HandleOnLinkedPlatformsLoaded");

	Params::HWLocalPlayerInventorySubsystem_HandleOnLinkedPlatformsLoaded Parms{};

	Parms.Platforms = std::move(Platforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.HandleOnLocalPlayerInventoryLoaded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<int32>&                    UpdatedInventoryIds                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLocalPlayerInventorySubsystem::HandleOnLocalPlayerInventoryLoaded(const TArray<int32>& UpdatedInventoryIds, class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "HandleOnLocalPlayerInventoryLoaded");

	Params::HWLocalPlayerInventorySubsystem_HandleOnLocalPlayerInventoryLoaded Parms{};

	Parms.UpdatedInventoryIds = std::move(UpdatedInventoryIds);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.HandleOnLocalPlayerInventoryUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<int32>&                    UpdatedInventoryIds                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWLocalPlayerInventorySubsystem::HandleOnLocalPlayerInventoryUpdated(const TArray<int32>& UpdatedInventoryIds, class URH_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "HandleOnLocalPlayerInventoryUpdated");

	Params::HWLocalPlayerInventorySubsystem_HandleOnLocalPlayerInventoryUpdated Parms{};

	Parms.UpdatedInventoryIds = std::move(UpdatedInventoryIds);
	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.HandleOnLoginComplete
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FRH_LoginResult&           LoginResult                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWLocalPlayerInventorySubsystem::HandleOnLoginComplete(const struct FRH_LoginResult& LoginResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "HandleOnLoginComplete");

	Params::HWLocalPlayerInventorySubsystem_HandleOnLoginComplete Parms{};

	Parms.LoginResult = std::move(LoginResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.OnDoSmite1Link
// (Final, Native, Protected)

void UHWLocalPlayerInventorySubsystem::OnDoSmite1Link()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "OnDoSmite1Link");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWLocalPlayerInventorySubsystem.OnPlayedSMITE
// (Final, Native, Protected)

void UHWLocalPlayerInventorySubsystem::OnPlayedSMITE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWLocalPlayerInventorySubsystem", "OnPlayedSMITE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.CombatLogLobbyEvent
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// EPlayerEventType                        LobbyEventType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGuid&                     PlayerGuid                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           LobbyChar                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            TeamId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ItemNameOverride                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::CombatLogLobbyEvent(EPlayerEventType LobbyEventType, const struct FGuid& PlayerGuid, const class UHWCharacterItem* LobbyChar, const int32& TeamId, const class FString& ItemNameOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "CombatLogLobbyEvent");

	Params::HWMatchDataSubsystem_CombatLogLobbyEvent Parms{};

	Parms.LobbyEventType = LobbyEventType;
	Parms.PlayerGuid = std::move(PlayerGuid);
	Parms.LobbyChar = LobbyChar;
	Parms.TeamId = TeamId;
	Parms.ItemNameOverride = std::move(ItemNameOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.DoesMatchSupportBotFill
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWMatchDataSubsystem::DoesMatchSupportBotFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "DoesMatchSupportBotFill");

	Params::HWMatchDataSubsystem_DoesMatchSupportBotFill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMatchDataSubsystem.GetMatchComposition
// (Final, Native, Public)
// Parameters:
// struct FHWInstanceInfo_PlayerDataList   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FHWInstanceInfo_PlayerDataList UHWMatchDataSubsystem::GetMatchComposition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "GetMatchComposition");

	Params::HWMatchDataSubsystem_GetMatchComposition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMatchDataSubsystem.HandleDemoStoppedRecording
// (Final, Native, Protected)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::HandleDemoStoppedRecording(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "HandleDemoStoppedRecording");

	Params::HWMatchDataSubsystem_HandleDemoStoppedRecording Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.OnCheckedPlayerLevelForDemo
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class URH_PlayerInfo*                   PlayerInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FRHAPI_InventoryLevel>&InventoryLevels                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::OnCheckedPlayerLevelForDemo(class URH_PlayerInfo* PlayerInfo, const TArray<struct FRHAPI_InventoryLevel>& InventoryLevels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "OnCheckedPlayerLevelForDemo");

	Params::HWMatchDataSubsystem_OnCheckedPlayerLevelForDemo Parms{};

	Parms.PlayerInfo = PlayerInfo;
	Parms.InventoryLevels = std::move(InventoryLevels);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.OnDemoFlagOwnershipChecked
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsOwned                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URHStoreItem*                     CatalogItem                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::OnDemoFlagOwnershipChecked(bool bIsOwned, class URHStoreItem* CatalogItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "OnDemoFlagOwnershipChecked");

	Params::HWMatchDataSubsystem_OnDemoFlagOwnershipChecked Parms{};

	Parms.bIsOwned = bIsOwned;
	Parms.CatalogItem = CatalogItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.OnEquipmentPurchased
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UHWEquipmentInstance*             EquipmentInstance                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWInventorySlot&          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::OnEquipmentPurchased(class UHWEquipmentInstance* EquipmentInstance, const struct FHWInventorySlot& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "OnEquipmentPurchased");

	Params::HWMatchDataSubsystem_OnEquipmentPurchased Parms{};

	Parms.EquipmentInstance = EquipmentInstance;
	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.OnPlayerHoveredLobbyPick
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWPersistentPlayerId&     PlayerGuid                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UHWCharacterItem*           HoveredPick                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            TeamId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::OnPlayerHoveredLobbyPick(const struct FHWPersistentPlayerId& PlayerGuid, const class UHWCharacterItem* HoveredPick, const int32& TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "OnPlayerHoveredLobbyPick");

	Params::HWMatchDataSubsystem_OnPlayerHoveredLobbyPick Parms{};

	Parms.PlayerGuid = std::move(PlayerGuid);
	Parms.HoveredPick = HoveredPick;
	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.OnRHSessionChanged
// (Final, Native, Protected)
// Parameters:
// class URH_JoinedSession*                OldSession                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URH_JoinedSession*                ActiveSession                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::OnRHSessionChanged(class URH_JoinedSession* OldSession, class URH_JoinedSession* ActiveSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "OnRHSessionChanged");

	Params::HWMatchDataSubsystem_OnRHSessionChanged Parms{};

	Parms.OldSession = OldSession;
	Parms.ActiveSession = ActiveSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.UpdateMatchComposition
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHWInstanceInfo_PlayerDataList&InPlayerData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::UpdateMatchComposition(const struct FHWInstanceInfo_PlayerDataList& InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "UpdateMatchComposition");

	Params::HWMatchDataSubsystem_UpdateMatchComposition Parms{};

	Parms.InPlayerData = std::move(InPlayerData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.UpdateTeamPlayer
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWTeamPlayer&             InTeamPlayer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHWMatchDataSubsystem::UpdateTeamPlayer(const struct FGenericTeamId& TeamId, const struct FHWTeamPlayer& InTeamPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "UpdateTeamPlayer");

	Params::HWMatchDataSubsystem_UpdateTeamPlayer Parms{};

	Parms.TeamId = std::move(TeamId);
	Parms.InTeamPlayer = std::move(InTeamPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWMatchDataSubsystem.GetCachedTeamPlayer
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const class AHWPlayerState*             PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWTeamPlayer*                   OutTeamPlayer                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWMatchDataSubsystem::GetCachedTeamPlayer(const class AHWPlayerState* PlayerState, struct FHWTeamPlayer* OutTeamPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "GetCachedTeamPlayer");

	Params::HWMatchDataSubsystem_GetCachedTeamPlayer Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTeamPlayer != nullptr)
		*OutTeamPlayer = std::move(Parms.OutTeamPlayer);

	return Parms.ReturnValue;
}


// Function Hemingway.HWMatchDataSubsystem.GetCachedTeamPlayersSnapshot
// (Final, Native, Public, Const)
// Parameters:
// const TArray<struct FHWTeamPlayersSnapshot>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FHWTeamPlayersSnapshot> UHWMatchDataSubsystem::GetCachedTeamPlayersSnapshot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "GetCachedTeamPlayersSnapshot");

	Params::HWMatchDataSubsystem_GetCachedTeamPlayersSnapshot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWMatchDataSubsystem.GetCachedTeamPlayersSnapshotForTeam
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const struct FGenericTeamId&            TeamId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHWTeamPlayersSnapshot*          OutTeamPlayersSnapshot                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHWMatchDataSubsystem::GetCachedTeamPlayersSnapshotForTeam(const struct FGenericTeamId& TeamId, struct FHWTeamPlayersSnapshot* OutTeamPlayersSnapshot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWMatchDataSubsystem", "GetCachedTeamPlayersSnapshotForTeam");

	Params::HWMatchDataSubsystem_GetCachedTeamPlayersSnapshotForTeam Parms{};

	Parms.TeamId = std::move(TeamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTeamPlayersSnapshot != nullptr)
		*OutTeamPlayersSnapshot = std::move(Parms.OutTeamPlayersSnapshot);

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerSettingsSubsystem.CreatePlayerSettingUpdatedCallback
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName                       SettingName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWSettingDelegateStruct&  Delegate                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWPlayerSettingsSubsystem::CreatePlayerSettingUpdatedCallback(const class FName SettingName, const struct FHWSettingDelegateStruct& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "CreatePlayerSettingUpdatedCallback");

	Params::HWPlayerSettingsSubsystem_CreatePlayerSettingUpdatedCallback Parms{};

	Parms.SettingName = SettingName;
	Parms.Delegate = std::move(Delegate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerSettingsSubsystem.RemovePlayerSettingUpdatedCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       SettingName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    CallbackOwner                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWPlayerSettingsSubsystem::RemovePlayerSettingUpdatedCallback(const class FName SettingName, const class UObject* CallbackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "RemovePlayerSettingUpdatedCallback");

	Params::HWPlayerSettingsSubsystem_RemovePlayerSettingUpdatedCallback Parms{};

	Parms.SettingName = SettingName;
	Parms.CallbackOwner = CallbackOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWPlayerSettingsSubsystem.GetFavoriteGodItemIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FRH_ItemId>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FRH_ItemId> UHWPlayerSettingsSubsystem::GetFavoriteGodItemIds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "GetFavoriteGodItemIds");

	Params::HWPlayerSettingsSubsystem_GetFavoriteGodItemIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerSettingsSubsystem.GetLastSeenOrderTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UHWPlayerSettingsSubsystem::GetLastSeenOrderTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "GetLastSeenOrderTime");

	Params::HWPlayerSettingsSubsystem_GetLastSeenOrderTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerSettingsSubsystem.GetMappingContextComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHWMappingContextComponent*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHWMappingContextComponent* UHWPlayerSettingsSubsystem::GetMappingContextComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "GetMappingContextComponent");

	Params::HWPlayerSettingsSubsystem_GetMappingContextComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWPlayerSettingsSubsystem.GetSelectedQueueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHWPlayerSettingsSubsystem::GetSelectedQueueId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWPlayerSettingsSubsystem", "GetSelectedQueueId");

	Params::HWPlayerSettingsSubsystem_GetSelectedQueueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSettingsInfo_AudioDevice.OnSettingApplied
// (Final, Native, Protected, BlueprintCallable)

void UHWSettingsInfo_AudioDevice::OnSettingApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsInfo_AudioDevice", "OnSettingApplied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSettingsInfo_AudioDevice.OnSettingSaved
// (Final, Native, Protected, BlueprintCallable)

void UHWSettingsInfo_AudioDevice::OnSettingSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSettingsInfo_AudioDevice", "OnSettingSaved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSettingsSubsystemInterface.GetSettingAsBool
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutBool                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWSettingsSubsystemInterface::GetSettingAsBool(class FName Name_0, bool* OutBool) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWSettingsSubsystemInterface", "GetSettingAsBool");

	Params::HWSettingsSubsystemInterface_GetSettingAsBool Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBool != nullptr)
		*OutBool = Parms.OutBool;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSettingsSubsystemInterface.GetSettingAsFloat
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutFloat                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWSettingsSubsystemInterface::GetSettingAsFloat(class FName Name_0, float* OutFloat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWSettingsSubsystemInterface", "GetSettingAsFloat");

	Params::HWSettingsSubsystemInterface_GetSettingAsFloat Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFloat != nullptr)
		*OutFloat = Parms.OutFloat;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSettingsSubsystemInterface.GetSettingAsInt
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutInt                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IHWSettingsSubsystemInterface::GetSettingAsInt(class FName Name_0, int32* OutInt) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("HWSettingsSubsystemInterface", "GetSettingAsInt");

	Params::HWSettingsSubsystemInterface_GetSettingAsInt Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInt != nullptr)
		*OutInt = Parms.OutInt;

	return Parms.ReturnValue;
}


// Function Hemingway.HWSystemSettingsSubsystem.CreateSystemSettingUpdatedCallback
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName                       SettingName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHWSettingDelegateStruct&  Delegate                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHWSystemSettingsSubsystem::CreateSystemSettingUpdatedCallback(const class FName SettingName, const struct FHWSettingDelegateStruct& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSystemSettingsSubsystem", "CreateSystemSettingUpdatedCallback");

	Params::HWSystemSettingsSubsystem_CreateSystemSettingUpdatedCallback Parms{};

	Parms.SettingName = SettingName;
	Parms.Delegate = std::move(Delegate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSystemSettingsSubsystem.HandleSettingApplied
// (Native, Protected)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSystemSettingsSubsystem::HandleSettingApplied(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSystemSettingsSubsystem", "HandleSettingApplied");

	Params::HWSystemSettingsSubsystem_HandleSettingApplied Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWSystemSettingsSubsystem.RemoveSystemSettingUpdatedCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       SettingName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    CallbackOwner                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWSystemSettingsSubsystem::RemoveSystemSettingUpdatedCallback(const class FName SettingName, const class UObject* CallbackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWSystemSettingsSubsystem", "RemoveSystemSettingUpdatedCallback");

	Params::HWSystemSettingsSubsystem_RemoveSystemSettingUpdatedCallback Parms{};

	Parms.SettingName = SettingName;
	Parms.CallbackOwner = CallbackOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleAAMethodSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleAAMethodSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleAAMethodSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleDLSSFrameGenSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleDLSSFrameGenSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleDLSSFrameGenSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleDLSSSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleDLSSSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleDLSSSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleFSRFrameGenSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleFSRFrameGenSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleFSRFrameGenSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleFSRSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleFSRSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleFSRSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleUpscalersKVChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FGameplayTag&              AppSettingTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHWUpscalerSubsystem::HandleUpscalersKVChanged(const struct FGameplayTag& AppSettingTag, bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleUpscalersKVChanged");

	Params::HWUpscalerSubsystem_HandleUpscalersKVChanged Parms{};

	Parms.AppSettingTag = std::move(AppSettingTag);
	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.HWUpscalerSubsystem.HandleXeSSSettingChanged
// (Final, Native, Protected)

void UHWUpscalerSubsystem::HandleXeSSSettingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HWUpscalerSubsystem", "HandleXeSSSettingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.VisibilityData.HandleActiveGameplayEffectAdded
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEffectSpec&       EffectSpec                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FActiveGameplayEffectHandle&EffectHandle                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVisibilityData::HandleActiveGameplayEffectAdded(class UAbilitySystemComponent* ASC, const struct FGameplayEffectSpec& EffectSpec, const struct FActiveGameplayEffectHandle& EffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "HandleActiveGameplayEffectAdded");

	Params::VisibilityData_HandleActiveGameplayEffectAdded Parms{};

	Parms.ASC = ASC;
	Parms.EffectSpec = std::move(EffectSpec);
	Parms.EffectHandle = std::move(EffectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.VisibilityData.HandleAnyGameplayEffectRemoved
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FActiveGameplayEffect&     ActiveGameplayEffect                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UVisibilityData::HandleAnyGameplayEffectRemoved(const struct FActiveGameplayEffect& ActiveGameplayEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "HandleAnyGameplayEffectRemoved");

	Params::VisibilityData_HandleAnyGameplayEffectRemoved Parms{};

	Parms.ActiveGameplayEffect = std::move(ActiveGameplayEffect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.VisibilityData.HandleInstigatorStealthToTargetUpdate
// (Final, Native, Public)

void UVisibilityData::HandleInstigatorStealthToTargetUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "HandleInstigatorStealthToTargetUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.VisibilityData.OnRep_StealthFilter
// (Final, Native, Public)

void UVisibilityData::OnRep_StealthFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "OnRep_StealthFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hemingway.VisibilityData.GetStealthStatusToTarget
// (Final, Native, Public, Const)
// Parameters:
// const class AActor*                     ObservingActor                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UVisibilityData::GetStealthStatusToTarget(const class AActor* ObservingActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "GetStealthStatusToTarget");

	Params::VisibilityData_GetStealthStatusToTarget Parms{};

	Parms.ObservingActor = ObservingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.VisibilityData.IsTargetTypeVisibleToEntireTeam
// (Final, Native, Public, Const)
// Parameters:
// const class AHWTeamState*               ObservingTeamState                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVisibilityData::IsTargetTypeVisibleToEntireTeam(const class AHWTeamState* ObservingTeamState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "IsTargetTypeVisibleToEntireTeam");

	Params::VisibilityData_IsTargetTypeVisibleToEntireTeam Parms{};

	Parms.ObservingTeamState = ObservingTeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hemingway.VisibilityData.ShouldIgnoreTeamVisibilitySharing
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVisibilityData::ShouldIgnoreTeamVisibilitySharing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VisibilityData", "ShouldIgnoreTeamVisibilitySharing");

	Params::VisibilityData_ShouldIgnoreTeamVisibilitySharing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

