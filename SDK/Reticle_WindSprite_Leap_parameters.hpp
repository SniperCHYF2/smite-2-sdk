#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Reticle_WindSprite_Leap

#include "Basic.hpp"

#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function Reticle_WindSprite_Leap.Reticle_WindSprite_Leap_C.BP_OnRenderBehaviorDetermined
// 0x0001 (0x0001 - 0x0000)
struct Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined final
{
public:
	EReticleRenderBehavior                        RenderBehavior;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined) == 0x000001, "Wrong alignment on Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined");
static_assert(sizeof(Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined) == 0x000001, "Wrong size on Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined");
static_assert(offsetof(Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined, RenderBehavior) == 0x000000, "Member 'Reticle_WindSprite_Leap_C_BP_OnRenderBehaviorDetermined::RenderBehavior' has a wrong offset!");

// Function Reticle_WindSprite_Leap.Reticle_WindSprite_Leap_C.ExecuteUbergraph_Reticle_WindSprite_Leap
// 0x0008 (0x0008 - 0x0000)
struct Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EReticleRenderBehavior                        K2Node_Event_RenderBehavior;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap) == 0x000004, "Wrong alignment on Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap");
static_assert(sizeof(Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap) == 0x000008, "Wrong size on Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap");
static_assert(offsetof(Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap, EntryPoint) == 0x000000, "Member 'Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap::EntryPoint' has a wrong offset!");
static_assert(offsetof(Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap, K2Node_Event_RenderBehavior) == 0x000004, "Member 'Reticle_WindSprite_Leap_C_ExecuteUbergraph_Reticle_WindSprite_Leap::K2Node_Event_RenderBehavior' has a wrong offset!");

// Function Reticle_WindSprite_Leap.Reticle_WindSprite_Leap_C.OnValidTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct Reticle_WindSprite_Leap_C_OnValidTargetChanged final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_WindSprite_Leap_C_OnValidTargetChanged) == 0x000001, "Wrong alignment on Reticle_WindSprite_Leap_C_OnValidTargetChanged");
static_assert(sizeof(Reticle_WindSprite_Leap_C_OnValidTargetChanged) == 0x000001, "Wrong size on Reticle_WindSprite_Leap_C_OnValidTargetChanged");
static_assert(offsetof(Reticle_WindSprite_Leap_C_OnValidTargetChanged, bNewValue) == 0x000000, "Member 'Reticle_WindSprite_Leap_C_OnValidTargetChanged::bNewValue' has a wrong offset!");

}

