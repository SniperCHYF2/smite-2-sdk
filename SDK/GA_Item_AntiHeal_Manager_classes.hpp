#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Item_AntiHeal_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Item_AntiHeal_Manager.GA_Item_AntiHeal_Manager_C
// 0x0018 (0x0D88 - 0x0D70)
class UGA_Item_AntiHeal_Manager_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         CurrentCount;                                      // 0x0D78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StongestAntiHealAllowed;                           // 0x0D7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CurrentAntiHealEffect;                             // 0x0D80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyGameplayEffectBasedOnStrength(bool IsInitialCheck_);
	void ExecuteUbergraph_GA_Item_AntiHeal_Manager(int32 EntryPoint);
	void HandleNewAndRemoved(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem);
	void SetupListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Item_AntiHeal_Manager_C">();
	}
	static class UGA_Item_AntiHeal_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Item_AntiHeal_Manager_C>();
	}
};
static_assert(alignof(UGA_Item_AntiHeal_Manager_C) == 0x000008, "Wrong alignment on UGA_Item_AntiHeal_Manager_C");
static_assert(sizeof(UGA_Item_AntiHeal_Manager_C) == 0x000D88, "Wrong size on UGA_Item_AntiHeal_Manager_C");
static_assert(offsetof(UGA_Item_AntiHeal_Manager_C, UberGraphFrame) == 0x000D70, "Member 'UGA_Item_AntiHeal_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Item_AntiHeal_Manager_C, CurrentCount) == 0x000D78, "Member 'UGA_Item_AntiHeal_Manager_C::CurrentCount' has a wrong offset!");
static_assert(offsetof(UGA_Item_AntiHeal_Manager_C, StongestAntiHealAllowed) == 0x000D7C, "Member 'UGA_Item_AntiHeal_Manager_C::StongestAntiHealAllowed' has a wrong offset!");
static_assert(offsetof(UGA_Item_AntiHeal_Manager_C, CurrentAntiHealEffect) == 0x000D80, "Member 'UGA_Item_AntiHeal_Manager_C::CurrentAntiHealEffect' has a wrong offset!");

}

