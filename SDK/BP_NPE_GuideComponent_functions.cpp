#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_GuideComponent

#include "Basic.hpp"

#include "BP_NPE_GuideComponent_classes.hpp"
#include "BP_NPE_GuideComponent_parameters.hpp"


namespace SDK
{

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.BindNPEStageEvents
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NPE_Stage_C*                  Stage                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Unbind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::BindNPEStageEvents(class ABP_NPE_Stage_C* Stage, bool Unbind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "BindNPEStageEvents");

	Params::BP_NPE_GuideComponent_C_BindNPEStageEvents Parms{};

	Parms.Stage = Stage;
	Parms.Unbind = Unbind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.BindPlayerStateEvents
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Unbind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::BindPlayerStateEvents(class AHWPlayerState* PlayerState, bool Unbind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "BindPlayerStateEvents");

	Params::BP_NPE_GuideComponent_C_BindPlayerStateEvents Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Unbind = Unbind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.CanRestart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_NPE_GuideComponent_C::CanRestart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "CanRestart");

	Params::BP_NPE_GuideComponent_C_CanRestart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.Cleanup
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.DebugLog
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Log                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsError                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SuppressThis                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::DebugLog(const class FString& Log, bool IsError, bool SuppressThis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "DebugLog");

	Params::BP_NPE_GuideComponent_C_DebugLog Parms{};

	Parms.Log = std::move(Log);
	Parms.IsError = IsError;
	Parms.SuppressThis = SuppressThis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ExecuteUbergraph_BP_NPE_GuideComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::ExecuteUbergraph_BP_NPE_GuideComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "ExecuteUbergraph_BP_NPE_GuideComponent");

	Params::BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GatherNPEStages
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::GatherNPEStages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "GatherNPEStages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.Get Stage Config
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              StageTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UBP_NPE_Guide_Tract_C*            Tract                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_NPE_Guide_StageConfig*        StageConfig                                            (Parm, OutParm, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::Get_Stage_Config(const struct FGameplayTag& StageTag, class UBP_NPE_Guide_Tract_C* Tract, struct FS_NPE_Guide_StageConfig* StageConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "Get Stage Config");

	Params::BP_NPE_GuideComponent_C_Get_Stage_Config Parms{};

	Parms.StageTag = std::move(StageTag);
	Parms.Tract = Tract;

	UObject::ProcessEvent(Func, &Parms);

	if (StageConfig != nullptr)
		*StageConfig = std::move(Parms.StageConfig);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetCurrentTract
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_NPE_Guide_Tract_C**           Tract                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::GetCurrentTract(class UBP_NPE_Guide_Tract_C** Tract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "GetCurrentTract");

	Params::BP_NPE_GuideComponent_C_GetCurrentTract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tract != nullptr)
		*Tract = Parms.Tract;
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetNextStageTag
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              CurrentStageTag_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UBP_NPE_Guide_Tract_C*            Tract                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    NextStageTag                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::GetNextStageTag(const struct FGameplayTag& CurrentStageTag_0, class UBP_NPE_Guide_Tract_C* Tract, struct FGameplayTag* NextStageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "GetNextStageTag");

	Params::BP_NPE_GuideComponent_C_GetNextStageTag Parms{};

	Parms.CurrentStageTag_0 = std::move(CurrentStageTag_0);
	Parms.Tract = Tract;

	UObject::ProcessEvent(Func, &Parms);

	if (NextStageTag != nullptr)
		*NextStageTag = std::move(Parms.NextStageTag);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetStage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              StageTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_NPE_Stage_C**                 Stage                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::GetStage(const struct FGameplayTag& StageTag, class ABP_NPE_Stage_C** Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "GetStage");

	Params::BP_NPE_GuideComponent_C_GetStage Parms{};

	Parms.StageTag = std::move(StageTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Stage != nullptr)
		*Stage = Parms.Stage;
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.HasAuthorityOrIsClientsideMode
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Ok                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::HasAuthorityOrIsClientsideMode(bool* Ok)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "HasAuthorityOrIsClientsideMode");

	Params::BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ok != nullptr)
		*Ok = Parms.Ok;
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.InitializeNPEGuide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterRole                          Role                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::InitializeNPEGuide(ECharacterRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "InitializeNPEGuide");

	Params::BP_NPE_GuideComponent_C_InitializeNPEGuide Parms{};

	Parms.Role = Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAbort
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::NPEGuideAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideAbort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAbortTract
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_NPE_Guide_Tract_C*            Tract                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::NPEGuideAbortTract(class UBP_NPE_Guide_Tract_C* Tract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideAbortTract");

	Params::BP_NPE_GuideComponent_C_NPEGuideAbortTract Parms{};

	Parms.Tract = Tract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAdvanceToNextStage
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NextStageTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::NPEGuideAdvanceToNextStage(const struct FGameplayTag& NextStageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideAdvanceToNextStage");

	Params::BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage Parms{};

	Parms.NextStageTag = std::move(NextStageTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideBeginTract
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::NPEGuideBeginTract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideBeginTract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideRestart
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SkipToStage                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// ECharacterRole                          Role                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::NPEGuideRestart(const struct FGameplayTag& SkipToStage, ECharacterRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideRestart");

	Params::BP_NPE_GuideComponent_C_NPEGuideRestart Parms{};

	Parms.SkipToStage = std::move(SkipToStage);
	Parms.Role = Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideTriggerStage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StageTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBackgroundStage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::NPEGuideTriggerStage(const struct FGameplayTag& StageTag, bool IsBackgroundStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "NPEGuideTriggerStage");

	Params::BP_NPE_GuideComponent_C_NPEGuideTriggerStage Parms{};

	Parms.StageTag = std::move(StageTag);
	Parms.IsBackgroundStage = IsBackgroundStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnCharacterPlayerStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                OwnerCharacter_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AHWPlayerState*                   NewPlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnCharacterPlayerStateChanged(class AHWCharacter_Base* OwnerCharacter_0, class AHWPlayerState* NewPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnCharacterPlayerStateChanged");

	Params::BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged Parms{};

	Parms.OwnerCharacter_0 = OwnerCharacter_0;
	Parms.NewPlayerState = NewPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnGameStateGamePhaseStarted
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewPhase                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnGameStateGamePhaseStarted(const struct FGameplayTag& NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnGameStateGamePhaseStarted");

	Params::BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted Parms{};

	Parms.NewPhase = std::move(NewPhase);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageCustomTrigger
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CustomTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_NPE_Trigger_Event>&    Events                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_NPE_GuideComponent_C::OnNPEStageCustomTrigger(const struct FGameplayTag& CustomTag, TArray<struct FS_NPE_Trigger_Event>& Events)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnNPEStageCustomTrigger");

	Params::BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger Parms{};

	Parms.CustomTag = std::move(CustomTag);
	Parms.Events = std::move(Events);

	UObject::ProcessEvent(Func, &Parms);

	Events = std::move(Parms.Events);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageEnded
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasFailure                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              NewTract                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_NPE_Stage_C*                  Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   StageDepth                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnNPEStageEnded(bool WasFailure, const struct FGameplayTag& NewTract, class ABP_NPE_Stage_C* Instigator, int32 StageDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnNPEStageEnded");

	Params::BP_NPE_GuideComponent_C_OnNPEStageEnded Parms{};

	Parms.WasFailure = WasFailure;
	Parms.NewTract = std::move(NewTract);
	Parms.Instigator = Instigator;
	Parms.StageDepth = StageDepth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageHUDEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     HUDElementTags                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_NPE_GuideComponent_C::OnNPEStageHUDEvent(bool bShow, const struct FGameplayTagContainer& HUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnNPEStageHUDEvent");

	Params::BP_NPE_GuideComponent_C_OnNPEStageHUDEvent Parms{};

	Parms.bShow = bShow;
	Parms.HUDElementTags = std::move(HUDElementTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageStarted
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StageTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnNPEStageStarted(const struct FGameplayTag& StageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnNPEStageStarted");

	Params::BP_NPE_GuideComponent_C_OnNPEStageStarted Parms{};

	Parms.StageTag = std::move(StageTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnPlayerStateAbilitySystemActorChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWPlayerState*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AHWCharacterAbilitySystemActor*   NewASActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnPlayerStateAbilitySystemActorChanged(class AHWPlayerState* PlayerState, class AHWCharacterAbilitySystemActor* NewASActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnPlayerStateAbilitySystemActorChanged");

	Params::BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.NewASActor = NewASActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnPlayerStateAssignedRoleChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterRole                          AssignedRole                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::OnPlayerStateAssignedRoleChanged(ECharacterRole AssignedRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnPlayerStateAssignedRoleChanged");

	Params::BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged Parms{};

	Parms.AssignedRole = AssignedRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnPlayerStateClientLoadStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::OnPlayerStateClientLoadStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "OnPlayerStateClientLoadStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_NPE_GuideComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "ReceiveEndPlay");

	Params::BP_NPE_GuideComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "ReceiveTick");

	Params::BP_NPE_GuideComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.SetTractByAssignedRole
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterRole                          Role                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPE_GuideComponent_C::SetTractByAssignedRole(ECharacterRole Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "SetTractByAssignedRole");

	Params::BP_NPE_GuideComponent_C_SetTractByAssignedRole Parms{};

	Parms.Role = Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.TriggerMatchPhaseChange
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NPE_GuideComponent_C::TriggerMatchPhaseChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_GuideComponent_C", "TriggerMatchPhaseChange");

	UObject::ProcessEvent(Func, nullptr);
}

}

