#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_SentryWard

#include "Basic.hpp"

#include "DBP_SentryWard_classes.hpp"
#include "DBP_SentryWard_parameters.hpp"


namespace SDK
{

// Function DBP_SentryWard.DBP_SentryWard_C.ExecuteUbergraph_DBP_SentryWard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::ExecuteUbergraph_DBP_SentryWard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "ExecuteUbergraph_DBP_SentryWard");

	Params::DBP_SentryWard_C_ExecuteUbergraph_DBP_SentryWard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_SentryWard.DBP_SentryWard_C.IsWardValidTargetForAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWDeployable_Ward*               WardDeployable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValidTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::IsWardValidTargetForAdd(class AHWDeployable_Ward* WardDeployable, bool* IsValidTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "IsWardValidTargetForAdd");

	Params::DBP_SentryWard_C_IsWardValidTargetForAdd Parms{};

	Parms.WardDeployable = WardDeployable;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValidTarget != nullptr)
		*IsValidTarget = Parms.IsValidTarget;
}


// Function DBP_SentryWard.DBP_SentryWard_C.IsWardValidTargetForRemove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWDeployable_Ward*               WardDeployable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValidTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::IsWardValidTargetForRemove(class AHWDeployable_Ward* WardDeployable, bool* IsValidTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "IsWardValidTargetForRemove");

	Params::DBP_SentryWard_C_IsWardValidTargetForRemove Parms{};

	Parms.WardDeployable = WardDeployable;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValidTarget != nullptr)
		*IsValidTarget = Parms.IsValidTarget;
}


// Function DBP_SentryWard.DBP_SentryWard_C.OnVisionRangeBeginOverlap
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FromSweep                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ADBP_SentryWard_C::OnVisionRangeBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "OnVisionRangeBeginOverlap");

	Params::DBP_SentryWard_C_OnVisionRangeBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_SentryWard.DBP_SentryWard_C.OnVisionRangeEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::OnVisionRangeEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "OnVisionRangeEndOverlap");

	Params::DBP_SentryWard_C_OnVisionRangeEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_SentryWard.DBP_SentryWard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADBP_SentryWard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_SentryWard.DBP_SentryWard_C.ReceiveDamageAsPip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             BaseDamageValue                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::ReceiveDamageAsPip(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "ReceiveDamageAsPip");

	Params::DBP_SentryWard_C_ReceiveDamageAsPip Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamageValue = BaseDamageValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_SentryWard.DBP_SentryWard_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_SentryWard_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "ReceiveEndPlay");

	Params::DBP_SentryWard_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_SentryWard.DBP_SentryWard_C.WardDied
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void ADBP_SentryWard_C::WardDied(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_SentryWard_C", "WardDied");

	Params::DBP_SentryWard_C_WardDied Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	UObject::ProcessEvent(Func, &Parms);
}

}

