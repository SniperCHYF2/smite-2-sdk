#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_Stage

#include "Basic.hpp"

#include "BP_NPE_Stage_classes.hpp"
#include "BP_NPE_Stage_parameters.hpp"


namespace SDK
{

// Function BP_NPE_Stage.BP_NPE_Stage_C.AbortNPEStage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::AbortNPEStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "AbortNPEStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.ApplyStageEffects
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::ApplyStageEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "ApplyStageEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.Callback
// (BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::Callback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "Callback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.CheckIsGod
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsGod                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::CheckIsGod(class AActor* Actor, bool* IsGod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "CheckIsGod");

	Params::BP_NPE_Stage_C_CheckIsGod Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsGod != nullptr)
		*IsGod = Parms.IsGod;
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.CheckIsLocalPlayer
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsPlayer                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::CheckIsLocalPlayer(class AActor* Actor, bool* IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "CheckIsLocalPlayer");

	Params::BP_NPE_Stage_C_CheckIsLocalPlayer Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayer != nullptr)
		*IsPlayer = Parms.IsPlayer;
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.CheckTeams
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   TeamsMatch                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::CheckTeams(int32 Team, bool* TeamsMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "CheckTeams");

	Params::BP_NPE_Stage_C_CheckTeams Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (TeamsMatch != nullptr)
		*TeamsMatch = Parms.TeamsMatch;
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.CheckTeamsActor
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   TeamsMatch                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::CheckTeamsActor(class AActor* Actor, bool* TeamsMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "CheckTeamsActor");

	Params::BP_NPE_Stage_C_CheckTeamsActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (TeamsMatch != nullptr)
		*TeamsMatch = Parms.TeamsMatch;
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.Cleanup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.DoCustomTriggerLogicForEvent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_NPE_Trigger_Event&      TriggerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::DoCustomTriggerLogicForEvent(const struct FS_NPE_Trigger_Event& TriggerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "DoCustomTriggerLogicForEvent");

	Params::BP_NPE_Stage_C_DoCustomTriggerLogicForEvent Parms{};

	Parms.TriggerEvent = std::move(TriggerEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.EnableWaypoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::EnableWaypoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "EnableWaypoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.EndNPEStage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasFailure                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::EndNPEStage(bool WasFailure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "EndNPEStage");

	Params::BP_NPE_Stage_C_EndNPEStage Parms{};

	Parms.WasFailure = WasFailure;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.ExecuteUbergraph_BP_NPE_Stage
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::ExecuteUbergraph_BP_NPE_Stage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "ExecuteUbergraph_BP_NPE_Stage");

	Params::BP_NPE_Stage_C_ExecuteUbergraph_BP_NPE_Stage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.LogDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    AppendString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsError                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SuppressThis                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::LogDebug(const class FString& AppendString, bool IsError, bool SuppressThis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "LogDebug");

	Params::BP_NPE_Stage_C_LogDebug Parms{};

	Parms.AppendString = std::move(AppendString);
	Parms.IsError = IsError;
	Parms.SuppressThis = SuppressThis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.OnCustomTrigger
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CustomTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_NPE_Trigger_C*                InstigatorTrigger                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::OnCustomTrigger(const struct FGameplayTag& CustomTag, class ABP_NPE_Trigger_C* InstigatorTrigger, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "OnCustomTrigger");

	Params::BP_NPE_Stage_C_OnCustomTrigger Parms{};

	Parms.CustomTag = std::move(CustomTag);
	Parms.InstigatorTrigger = InstigatorTrigger;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NPE_Stage_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.RemoveStageEffects
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::RemoveStageEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "RemoveStageEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.RestartNPEStage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StageDepth                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Stage_C::RestartNPEStage(double Delay, int32 StageDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "RestartNPEStage");

	Params::BP_NPE_Stage_C_RestartNPEStage Parms{};

	Parms.Delay = Delay;
	Parms.StageDepth = StageDepth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.SpawnAndBindTriggers
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::SpawnAndBindTriggers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "SpawnAndBindTriggers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.StartNPEStage
// (BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::StartNPEStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "StartNPEStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.Test
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::Test()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "Test");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.UnbindCustomTriggerEvents
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::UnbindCustomTriggerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "UnbindCustomTriggerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Stage.BP_NPE_Stage_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Stage_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Stage_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

