#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_Spectator_PlayerStats

#include "Basic.hpp"

#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_Spectator_PlayerStats.WBP_G_Spectator_PlayerStats_C
// 0x0020 (0x0658 - 0x0638)
class UWBP_G_Spectator_PlayerStats_C final : public UHWSpectatorMatchStatsPlayerWidget
{
public:
	class UHWImage*                               BGGradient_TeamColor;                              // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               GodIcon;                                           // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerStatsBar_C*                      PlayerStatsBar;                                    // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           PlayerTextValue;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void CharacterItemChanged(const class UHWCharacterItem* NewCharacterItem);
	void InitializeWidget();
	void PopulatePlayerInfo(const TSoftObjectPtr<class UTexture2D>& PlayerIcon, const struct FGenericTeamId& TeamId);
	void UpdatePlayerStatValues(int32 Value, float Percent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_Spectator_PlayerStats_C">();
	}
	static class UWBP_G_Spectator_PlayerStats_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_Spectator_PlayerStats_C>();
	}
};
static_assert(alignof(UWBP_G_Spectator_PlayerStats_C) == 0x000008, "Wrong alignment on UWBP_G_Spectator_PlayerStats_C");
static_assert(sizeof(UWBP_G_Spectator_PlayerStats_C) == 0x000658, "Wrong size on UWBP_G_Spectator_PlayerStats_C");
static_assert(offsetof(UWBP_G_Spectator_PlayerStats_C, BGGradient_TeamColor) == 0x000638, "Member 'UWBP_G_Spectator_PlayerStats_C::BGGradient_TeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_G_Spectator_PlayerStats_C, GodIcon) == 0x000640, "Member 'UWBP_G_Spectator_PlayerStats_C::GodIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_Spectator_PlayerStats_C, PlayerStatsBar) == 0x000648, "Member 'UWBP_G_Spectator_PlayerStats_C::PlayerStatsBar' has a wrong offset!");
static_assert(offsetof(UWBP_G_Spectator_PlayerStats_C, PlayerTextValue) == 0x000650, "Member 'UWBP_G_Spectator_PlayerStats_C::PlayerTextValue' has a wrong offset!");

}

