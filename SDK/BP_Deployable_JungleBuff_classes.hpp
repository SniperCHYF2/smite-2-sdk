#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_JungleBuff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EJungleBuffType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C
// 0x0118 (0x03B0 - 0x0298)
class ABP_Deployable_JungleBuff_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWAIPlayComponent*                     AIPlay;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableFocalPointComponent_C*  BP_InteractableFocalPointComponent;                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HelpTipComponent_C*                 BP_HelpTipComponent;                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableComponent_C*            BP_InteractableComponent;                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWDisplayInfoComponent*                HWDisplayInfo;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Buff_Template;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       InteractionField;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Animation_AlphaXY_2F11818D430A8AEE376CA0B6D67FA9DC; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Animation_AlphaZ_2F11818D430A8AEE376CA0B6D67FA9DC; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Animation__Direction_2F11818D430A8AEE376CA0B6D67FA9DC; // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Animation;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EJungleBuffType                               JungleBuffType;                                    // 0x0300(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimationHeight;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimationLandingOffset;                            // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BuffLifetime;                                      // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BuffTimer;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Mana_Drop_FX;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Speed_Drop_FX;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Damage_Drop_FX;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Attack_Speed_Drop_FX;                              // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         BuffLevel;                                         // 0x0340(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         OwningTeam;                                        // 0x0344(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Gameplay_Effect_Class;                             // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          HelpTipMap;                                        // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         TrinketDropFX;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AActor* SelfActor, EJungleBuffType BuffType, int32 BuffLevel, int32 OwningTeam)> JungleBuffPickedUp; // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShouldHaveTimer;                                   // 0x0370(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Should_Audio_Auto_Activate;                        // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAnimateForward;                              // 0x0372(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation;                                     // 0x0378(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0390(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Shadow_Drop_FX;                                    // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Animation__Bounce_FX__EventFunc();
	void Animation__FinishedFunc();
	void Animation__UpdateFunc();
	void BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature(class UHWInteractableComponent* Interactable, class AActor* InteractInstigator);
	bool CanCharacterPickupBuff(class UObject* Object);
	void DestroyBuff();
	void Does_Player_Have_Higher_Or_Equal_Buff_Level(class UHWAbilitySystemComponent* ASC, bool* Return, int32* HeldBuffLevel, struct FGameplayTagContainer* BuffTagContainer);
	bool DoesCharacterHaveJungleBuff(class UObject* Object);
	void DoesPlayerHaveLowerOrMatchingBuffLevel(class UHWAbilitySystemComponent* LocalASC, bool* HasLowerOrMatchingBuffLevel);
	void DoesPlayerHaveMatchingBuff(class UHWAbilitySystemComponent* ASC, bool* HasMatchingBuff);
	void ExecuteUbergraph_BP_Deployable_JungleBuff(int32 EntryPoint);
	void FindHighestBuffLevelGE(int32 BuffLevel_0, class UClass** GE);
	void GrantBuff(class AActor* Actor, bool* RefreshedExistingBuff, bool* Return);
	void InitializeNiagaraParameters();
	void OnRep_OwningTeam();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetBuffName();
	void SetDisplayInfo();
	void SetOwningTeam();
	void SetTargetLocation();
	void StartPickupProcess(class AActor* Instigator_0);
	void UpdateNiagaraParameters();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Deployable_JungleBuff_C">();
	}
	static class ABP_Deployable_JungleBuff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Deployable_JungleBuff_C>();
	}
};
static_assert(alignof(ABP_Deployable_JungleBuff_C) == 0x000008, "Wrong alignment on ABP_Deployable_JungleBuff_C");
static_assert(sizeof(ABP_Deployable_JungleBuff_C) == 0x0003B0, "Wrong size on ABP_Deployable_JungleBuff_C");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, UberGraphFrame) == 0x000298, "Member 'ABP_Deployable_JungleBuff_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, AIPlay) == 0x0002A0, "Member 'ABP_Deployable_JungleBuff_C::AIPlay' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BP_InteractableFocalPointComponent) == 0x0002A8, "Member 'ABP_Deployable_JungleBuff_C::BP_InteractableFocalPointComponent' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BP_HelpTipComponent) == 0x0002B0, "Member 'ABP_Deployable_JungleBuff_C::BP_HelpTipComponent' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BP_InteractableComponent) == 0x0002B8, "Member 'ABP_Deployable_JungleBuff_C::BP_InteractableComponent' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, HWDisplayInfo) == 0x0002C0, "Member 'ABP_Deployable_JungleBuff_C::HWDisplayInfo' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Audio) == 0x0002C8, "Member 'ABP_Deployable_JungleBuff_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, NS_Buff_Template) == 0x0002D0, "Member 'ABP_Deployable_JungleBuff_C::NS_Buff_Template' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Scene) == 0x0002D8, "Member 'ABP_Deployable_JungleBuff_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, InteractionField) == 0x0002E0, "Member 'ABP_Deployable_JungleBuff_C::InteractionField' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Animation_AlphaXY_2F11818D430A8AEE376CA0B6D67FA9DC) == 0x0002E8, "Member 'ABP_Deployable_JungleBuff_C::Animation_AlphaXY_2F11818D430A8AEE376CA0B6D67FA9DC' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Animation_AlphaZ_2F11818D430A8AEE376CA0B6D67FA9DC) == 0x0002EC, "Member 'ABP_Deployable_JungleBuff_C::Animation_AlphaZ_2F11818D430A8AEE376CA0B6D67FA9DC' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Animation__Direction_2F11818D430A8AEE376CA0B6D67FA9DC) == 0x0002F0, "Member 'ABP_Deployable_JungleBuff_C::Animation__Direction_2F11818D430A8AEE376CA0B6D67FA9DC' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Animation) == 0x0002F8, "Member 'ABP_Deployable_JungleBuff_C::Animation' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, JungleBuffType) == 0x000300, "Member 'ABP_Deployable_JungleBuff_C::JungleBuffType' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, AnimationHeight) == 0x000308, "Member 'ABP_Deployable_JungleBuff_C::AnimationHeight' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, AnimationLandingOffset) == 0x000310, "Member 'ABP_Deployable_JungleBuff_C::AnimationLandingOffset' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BuffLifetime) == 0x000314, "Member 'ABP_Deployable_JungleBuff_C::BuffLifetime' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BuffTimer) == 0x000318, "Member 'ABP_Deployable_JungleBuff_C::BuffTimer' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Mana_Drop_FX) == 0x000320, "Member 'ABP_Deployable_JungleBuff_C::Mana_Drop_FX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Speed_Drop_FX) == 0x000328, "Member 'ABP_Deployable_JungleBuff_C::Speed_Drop_FX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Damage_Drop_FX) == 0x000330, "Member 'ABP_Deployable_JungleBuff_C::Damage_Drop_FX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Attack_Speed_Drop_FX) == 0x000338, "Member 'ABP_Deployable_JungleBuff_C::Attack_Speed_Drop_FX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, BuffLevel) == 0x000340, "Member 'ABP_Deployable_JungleBuff_C::BuffLevel' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, OwningTeam) == 0x000344, "Member 'ABP_Deployable_JungleBuff_C::OwningTeam' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Gameplay_Effect_Class) == 0x000348, "Member 'ABP_Deployable_JungleBuff_C::Gameplay_Effect_Class' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, HelpTipMap) == 0x000350, "Member 'ABP_Deployable_JungleBuff_C::HelpTipMap' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, TrinketDropFX) == 0x000358, "Member 'ABP_Deployable_JungleBuff_C::TrinketDropFX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, JungleBuffPickedUp) == 0x000360, "Member 'ABP_Deployable_JungleBuff_C::JungleBuffPickedUp' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, ShouldHaveTimer) == 0x000370, "Member 'ABP_Deployable_JungleBuff_C::ShouldHaveTimer' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Should_Audio_Auto_Activate) == 0x000371, "Member 'ABP_Deployable_JungleBuff_C::Should_Audio_Auto_Activate' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, ShouldAnimateForward) == 0x000372, "Member 'ABP_Deployable_JungleBuff_C::ShouldAnimateForward' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, StartLocation) == 0x000378, "Member 'ABP_Deployable_JungleBuff_C::StartLocation' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, TargetLocation) == 0x000390, "Member 'ABP_Deployable_JungleBuff_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_JungleBuff_C, Shadow_Drop_FX) == 0x0003A8, "Member 'ABP_Deployable_JungleBuff_C::Shadow_Drop_FX' has a wrong offset!");

}

