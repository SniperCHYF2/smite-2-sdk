#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_HomeScreen_SkinRotatorPip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_HomeScreen_SkinRotatorPip.WBP_C_HomeScreen_SkinRotatorPip_C.OnSelectedStateChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged");
static_assert(sizeof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged) == 0x000005, "Wrong size on WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged, bIsSelected) == 0x000000, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnSelectedStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_C_HomeScreen_SkinRotatorPip.WBP_C_HomeScreen_SkinRotatorPip_C.OnDisplayItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem final
{
public:
	class UHWInventoryItem*                       Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem");
static_assert(sizeof(WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem) == 0x000008, "Wrong size on WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem, Item) == 0x000000, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_OnDisplayItem::Item' has a wrong offset!");

// Function WBP_C_HomeScreen_SkinRotatorPip.WBP_C_HomeScreen_SkinRotatorPip_C.ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip
// 0x0004 (0x0004 - 0x0000)
struct WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip");
static_assert(sizeof(WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip) == 0x000004, "Wrong size on WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip");
static_assert(offsetof(WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip, EntryPoint) == 0x000000, "Member 'WBP_C_HomeScreen_SkinRotatorPip_C_ExecuteUbergraph_WBP_C_HomeScreen_SkinRotatorPip::EntryPoint' has a wrong offset!");

}

