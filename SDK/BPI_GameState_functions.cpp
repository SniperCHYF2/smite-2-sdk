#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GameState

#include "Basic.hpp"

#include "BPI_GameState_classes.hpp"
#include "BPI_GameState_parameters.hpp"


namespace SDK
{

// Function BPI_GameState.BPI_GameState_C.GetMedianGodLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 MedianLevel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GameState_C::GetMedianGodLevel(double* MedianLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GameState_C", "GetMedianGodLevel");

	Params::BPI_GameState_C_GetMedianGodLevel Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MedianLevel != nullptr)
		*MedianLevel = Parms.MedianLevel;
}


// Function BPI_GameState.BPI_GameState_C.OnGodLevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_GameState_C::OnGodLevelUp(class UHWAbilitySystemComponent* ASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GameState_C", "OnGodLevelUp");

	Params::BPI_GameState_C_OnGodLevelUp Parms{};

	Parms.ASC = ASC;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

