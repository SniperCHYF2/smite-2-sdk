#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ThrobberHorizontal

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ThrobberHorizontal.WBP_ThrobberHorizontal_C.ExecuteUbergraph_WBP_ThrobberHorizontal
// 0x0038 (0x0038 - 0x0000)
struct WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
};
static_assert(alignof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal) == 0x000008, "Wrong alignment on WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal");
static_assert(sizeof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal) == 0x000038, "Wrong size on WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, EntryPoint) == 0x000000, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, CallFunc_GetColorByName_HasFound) == 0x000011, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, CallFunc_GetColorByName_Color) == 0x000014, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'WBP_ThrobberHorizontal_C_ExecuteUbergraph_WBP_ThrobberHorizontal::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_ThrobberHorizontal.WBP_ThrobberHorizontal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ThrobberHorizontal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ThrobberHorizontal_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ThrobberHorizontal_C_PreConstruct");
static_assert(sizeof(WBP_ThrobberHorizontal_C_PreConstruct) == 0x000001, "Wrong size on WBP_ThrobberHorizontal_C_PreConstruct");
static_assert(offsetof(WBP_ThrobberHorizontal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ThrobberHorizontal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ThrobberHorizontal.WBP_ThrobberHorizontal_C.SetThrobberColor
// 0x0014 (0x0014 - 0x0000)
struct WBP_ThrobberHorizontal_C_SetThrobberColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ThrobberHorizontal_C_SetThrobberColor) == 0x000004, "Wrong alignment on WBP_ThrobberHorizontal_C_SetThrobberColor");
static_assert(sizeof(WBP_ThrobberHorizontal_C_SetThrobberColor) == 0x000014, "Wrong size on WBP_ThrobberHorizontal_C_SetThrobberColor");
static_assert(offsetof(WBP_ThrobberHorizontal_C_SetThrobberColor, NewColor) == 0x000000, "Member 'WBP_ThrobberHorizontal_C_SetThrobberColor::NewColor' has a wrong offset!");

}

