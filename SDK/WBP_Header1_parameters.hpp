#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Header1

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Header1.WBP_Header1_C.ExecuteUbergraph_WBP_Header1
// 0x0018 (0x0018 - 0x0000)
struct WBP_Header1_C_ExecuteUbergraph_WBP_Header1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1) == 0x000008, "Wrong alignment on WBP_Header1_C_ExecuteUbergraph_WBP_Header1");
static_assert(sizeof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1) == 0x000018, "Wrong size on WBP_Header1_C_ExecuteUbergraph_WBP_Header1");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, EntryPoint) == 0x000000, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable) == 0x000004, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable_4) == 0x000008, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, Temp_byte_Variable_5) == 0x000009, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, K2Node_Select_Default) == 0x00000B, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Header1_C_ExecuteUbergraph_WBP_Header1, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000010, "Member 'WBP_Header1_C_ExecuteUbergraph_WBP_Header1::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");

// Function WBP_Header1.WBP_Header1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Header1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Header1_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Header1_C_PreConstruct");
static_assert(sizeof(WBP_Header1_C_PreConstruct) == 0x000001, "Wrong size on WBP_Header1_C_PreConstruct");
static_assert(offsetof(WBP_Header1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Header1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Header1.WBP_Header1_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct WBP_Header1_C_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Header1_C_SetText) == 0x000008, "Wrong alignment on WBP_Header1_C_SetText");
static_assert(sizeof(WBP_Header1_C_SetText) == 0x000018, "Wrong size on WBP_Header1_C_SetText");
static_assert(offsetof(WBP_Header1_C_SetText, Text_0) == 0x000000, "Member 'WBP_Header1_C_SetText::Text_0' has a wrong offset!");

}

