#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ItemStore_Inventory

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.EquipmentWidgetAdded
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded final
{
public:
	class UHWInventoryEquipmentWidget*            AddedEquipmentWidget;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded, AddedEquipmentWidget) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetAdded::AddedEquipmentWidget' has a wrong offset!");

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.EquipmentWidgetRemoved
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved final
{
public:
	class UHWInventoryEquipmentWidget*            RemovedEquipmentWidget;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved, RemovedEquipmentWidget) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_EquipmentWidgetRemoved::RemovedEquipmentWidget' has a wrong offset!");

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.GetActionBindingContainers
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers final
{
public:
	TArray<struct FHWUIActionBindingContainer>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_GetActionBindingContainers::ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.UpdateLayout
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_UpdateLayout final
{
public:
	bool                                          IsSplit;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V2_ItemStore_GodItemDisplayEntry_C* K2Node_DynamicCast_AsWBP_G_V2_Item_Store_God_Item_Display_Entry; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_UpdateLayout");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout) == 0x000048, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_UpdateLayout");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, IsSplit) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::IsSplit' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, K2Node_DynamicCast_AsWBP_G_V2_Item_Store_God_Item_Display_Entry) == 0x000038, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::K2Node_DynamicCast_AsWBP_G_V2_Item_Store_God_Item_Display_Entry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_UpdateLayout, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_G_V2_ItemStore_Inventory_C_UpdateLayout::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.BP_GetDesiredFocusTarget
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_DynamicCast_AsCommon_Activatable_Widget;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget) == 0x000028, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsCommon_Activatable_Widget) == 0x000010, "Member 'WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsCommon_Activatable_Widget' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_Inventory_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_Inventory.WBP_G_V2_ItemStore_Inventory_C.GetNavigationStitchEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry final
{
public:
	class UPanelWidget*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry");
static_assert(sizeof(WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry");
static_assert(offsetof(WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_Inventory_C_GetNavigationStitchEntry::ReturnValue' has a wrong offset!");

}

