#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoalDebugDisplayActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoalDebugDisplayActor.BP_AIGoalDebugDisplayActor_C
// 0x0040 (0x02D8 - 0x0298)
class ABP_AIGoalDebugDisplayActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       DisplayWidget;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWAIGoal*                              RootGoal;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentText;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	bool                                          bDrawTargeting;                                    // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AbilityTargetPointBlackboardName;                  // 0x02CC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DrawTargeting();
	void ExecuteUbergraph_BP_AIGoalDebugDisplayActor(int32 EntryPoint);
	void OnRep_CurrentText();
	void ReceiveTick(float DeltaSeconds);
	void UpdateDisplay();
	void UpdateOrientation();
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoalDebugDisplayActor_C">();
	}
	static class ABP_AIGoalDebugDisplayActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AIGoalDebugDisplayActor_C>();
	}
};
static_assert(alignof(ABP_AIGoalDebugDisplayActor_C) == 0x000008, "Wrong alignment on ABP_AIGoalDebugDisplayActor_C");
static_assert(sizeof(ABP_AIGoalDebugDisplayActor_C) == 0x0002D8, "Wrong size on ABP_AIGoalDebugDisplayActor_C");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, UberGraphFrame) == 0x000298, "Member 'ABP_AIGoalDebugDisplayActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, DisplayWidget) == 0x0002A0, "Member 'ABP_AIGoalDebugDisplayActor_C::DisplayWidget' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_AIGoalDebugDisplayActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, RootGoal) == 0x0002B0, "Member 'ABP_AIGoalDebugDisplayActor_C::RootGoal' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, CurrentText) == 0x0002B8, "Member 'ABP_AIGoalDebugDisplayActor_C::CurrentText' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, bDrawTargeting) == 0x0002C8, "Member 'ABP_AIGoalDebugDisplayActor_C::bDrawTargeting' has a wrong offset!");
static_assert(offsetof(ABP_AIGoalDebugDisplayActor_C, AbilityTargetPointBlackboardName) == 0x0002CC, "Member 'ABP_AIGoalDebugDisplayActor_C::AbilityTargetPointBlackboardName' has a wrong offset!");

}

