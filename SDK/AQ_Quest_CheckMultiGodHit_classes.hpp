#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AQ_Quest_CheckMultiGodHit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AQ_Quest_CheckMultiGodHit.AQ_Quest_CheckMultiGodHit_C
// 0x0030 (0x00C0 - 0x0090)
class UAQ_Quest_CheckMultiGodHit_C final : public UHWActiveQuest
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0090(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         NumTargets;                                        // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         GodArray;                                          // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        Timer;                                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CustomEvent(const struct FHitResult& HitResult, const struct FDamageEventData& DamageEventData);
	void ExecuteUbergraph_AQ_Quest_CheckMultiGodHit(int32 EntryPoint);
	void Timerwindow();
	void TrackQuestForPlayer(const class UHWQuest* TrackedQuest, class AHWCharacterAbilitySystemActor* CharAbSysActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AQ_Quest_CheckMultiGodHit_C">();
	}
	static class UAQ_Quest_CheckMultiGodHit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAQ_Quest_CheckMultiGodHit_C>();
	}
};
static_assert(alignof(UAQ_Quest_CheckMultiGodHit_C) == 0x000008, "Wrong alignment on UAQ_Quest_CheckMultiGodHit_C");
static_assert(sizeof(UAQ_Quest_CheckMultiGodHit_C) == 0x0000C0, "Wrong size on UAQ_Quest_CheckMultiGodHit_C");
static_assert(offsetof(UAQ_Quest_CheckMultiGodHit_C, UberGraphFrame) == 0x000090, "Member 'UAQ_Quest_CheckMultiGodHit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAQ_Quest_CheckMultiGodHit_C, NumTargets) == 0x000098, "Member 'UAQ_Quest_CheckMultiGodHit_C::NumTargets' has a wrong offset!");
static_assert(offsetof(UAQ_Quest_CheckMultiGodHit_C, GodArray) == 0x0000A0, "Member 'UAQ_Quest_CheckMultiGodHit_C::GodArray' has a wrong offset!");
static_assert(offsetof(UAQ_Quest_CheckMultiGodHit_C, Timer) == 0x0000B0, "Member 'UAQ_Quest_CheckMultiGodHit_C::Timer' has a wrong offset!");
static_assert(offsetof(UAQ_Quest_CheckMultiGodHit_C, TimerHandle) == 0x0000B8, "Member 'UAQ_Quest_CheckMultiGodHit_C::TimerHandle' has a wrong offset!");

}

