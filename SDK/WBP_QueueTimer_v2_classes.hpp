#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QueueTimer_v2

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_QueueTimer_v2.WBP_QueueTimer_v2_C
// 0x00A8 (0x0670 - 0x05C8)
class UWBP_QueueTimer_v2_C final : public UHWQueueTimerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         BackfillPips;                                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               BackfillPipsOverlay;                               // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ButtonText;                                        // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                CancelBg;                                          // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CancelContainer;                                   // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_MultiPromptWidget_C*             CancelGamepadPrompt;                               // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CancelQueueButton;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Container;                                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ContentBkg;                                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      HWWidgetSwitcher_427;                              // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             QueueName;                                         // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               QueueNameGroup;                                    // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StatusLabel;                                       // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StatusLabel_1;                                     // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             ColorPalette;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    QueueDataFactory;                                  // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingBackfillStateTime;                        // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           BackfillStateTimerHandle;                          // 0x0668(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void CancelQueue();
	void ExecuteUbergraph_WBP_QueueTimer_v2(int32 EntryPoint);
	void GetColorFromPalette(class FName RowName, struct FLinearColor* LinearColor);
	void InitializeWidget();
	void InpActEvt_IA_UI_RightStickClick_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void OnControlQueuePermissionUpdate(bool CanControl);
	void OnUpdateQueueTime(float TimeSecs);
	void OnUpdateQueueTimerState(EQueueTimerState State);
	void SetNeutralLabel(const class FText& InText);
	void StartHideSequence(const struct FGameplayTag& FromRoute, const struct FGameplayTag& ToRoute);
	void StartShowSequence(const struct FGameplayTag& FromRoute, const struct FGameplayTag& ToRoute);
	void UninitializeWidget();
	void UpdateBackfillJoinTimer();
	void UpdateBackfillPips();
	void UpdateCancelButton();
	void UpdatePenaltyTime();
	void UpdateQueueName(bool bShow);
	void UpdateQueueTime();
	void UpdateStatusLabel();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_QueueTimer_v2_C">();
	}
	static class UWBP_QueueTimer_v2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_QueueTimer_v2_C>();
	}
};
static_assert(alignof(UWBP_QueueTimer_v2_C) == 0x000008, "Wrong alignment on UWBP_QueueTimer_v2_C");
static_assert(sizeof(UWBP_QueueTimer_v2_C) == 0x000670, "Wrong size on UWBP_QueueTimer_v2_C");
static_assert(offsetof(UWBP_QueueTimer_v2_C, UberGraphFrame) == 0x0005C8, "Member 'UWBP_QueueTimer_v2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, Hover) == 0x0005D0, "Member 'UWBP_QueueTimer_v2_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, BackfillPips) == 0x0005D8, "Member 'UWBP_QueueTimer_v2_C::BackfillPips' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, BackfillPipsOverlay) == 0x0005E0, "Member 'UWBP_QueueTimer_v2_C::BackfillPipsOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, ButtonText) == 0x0005E8, "Member 'UWBP_QueueTimer_v2_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, CancelBg) == 0x0005F0, "Member 'UWBP_QueueTimer_v2_C::CancelBg' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, CancelContainer) == 0x0005F8, "Member 'UWBP_QueueTimer_v2_C::CancelContainer' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, CancelGamepadPrompt) == 0x000600, "Member 'UWBP_QueueTimer_v2_C::CancelGamepadPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, CancelQueueButton) == 0x000608, "Member 'UWBP_QueueTimer_v2_C::CancelQueueButton' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, Container) == 0x000610, "Member 'UWBP_QueueTimer_v2_C::Container' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, ContentBkg) == 0x000618, "Member 'UWBP_QueueTimer_v2_C::ContentBkg' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, HorizontalBox_1) == 0x000620, "Member 'UWBP_QueueTimer_v2_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, HWWidgetSwitcher_427) == 0x000628, "Member 'UWBP_QueueTimer_v2_C::HWWidgetSwitcher_427' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, QueueName) == 0x000630, "Member 'UWBP_QueueTimer_v2_C::QueueName' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, QueueNameGroup) == 0x000638, "Member 'UWBP_QueueTimer_v2_C::QueueNameGroup' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, StatusLabel) == 0x000640, "Member 'UWBP_QueueTimer_v2_C::StatusLabel' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, StatusLabel_1) == 0x000648, "Member 'UWBP_QueueTimer_v2_C::StatusLabel_1' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, ColorPalette) == 0x000650, "Member 'UWBP_QueueTimer_v2_C::ColorPalette' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, QueueDataFactory) == 0x000658, "Member 'UWBP_QueueTimer_v2_C::QueueDataFactory' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, RemainingBackfillStateTime) == 0x000660, "Member 'UWBP_QueueTimer_v2_C::RemainingBackfillStateTime' has a wrong offset!");
static_assert(offsetof(UWBP_QueueTimer_v2_C, BackfillStateTimerHandle) == 0x000668, "Member 'UWBP_QueueTimer_v2_C::BackfillStateTimerHandle' has a wrong offset!");

}

