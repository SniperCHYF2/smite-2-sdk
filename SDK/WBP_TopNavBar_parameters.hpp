#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TopNavBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "UMG_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_TopNavBar.WBP_TopNavBar_C.ViewRouteRemoved
// 0x0008 (0x0008 - 0x0000)
struct WBP_TopNavBar_C_ViewRouteRemoved final
{
public:
	struct FGameplayTag                           ViewRouteTag;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_ViewRouteRemoved) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_ViewRouteRemoved");
static_assert(sizeof(WBP_TopNavBar_C_ViewRouteRemoved) == 0x000008, "Wrong size on WBP_TopNavBar_C_ViewRouteRemoved");
static_assert(offsetof(WBP_TopNavBar_C_ViewRouteRemoved, ViewRouteTag) == 0x000000, "Member 'WBP_TopNavBar_C_ViewRouteRemoved::ViewRouteTag' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.ViewRouteChanged
// 0x0014 (0x0014 - 0x0000)
struct WBP_TopNavBar_C_ViewRouteChanged final
{
public:
	struct FGameplayTag                           CurrentRoute;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NextRoute;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             Layer;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_ViewRouteChanged) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_ViewRouteChanged");
static_assert(sizeof(WBP_TopNavBar_C_ViewRouteChanged) == 0x000014, "Wrong size on WBP_TopNavBar_C_ViewRouteChanged");
static_assert(offsetof(WBP_TopNavBar_C_ViewRouteChanged, CurrentRoute) == 0x000000, "Member 'WBP_TopNavBar_C_ViewRouteChanged::CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ViewRouteChanged, NextRoute) == 0x000008, "Member 'WBP_TopNavBar_C_ViewRouteChanged::NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ViewRouteChanged, Layer) == 0x000010, "Member 'WBP_TopNavBar_C_ViewRouteChanged::Layer' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.UpdateStoreTabsVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_TopNavBar_C_UpdateStoreTabsVisibility final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_UpdateStoreTabsVisibility) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_UpdateStoreTabsVisibility");
static_assert(sizeof(WBP_TopNavBar_C_UpdateStoreTabsVisibility) == 0x000010, "Wrong size on WBP_TopNavBar_C_UpdateStoreTabsVisibility");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, AppSettingTag) == 0x000000, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, bValue) == 0x000008, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::bValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, Temp_bool_Variable) == 0x000009, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, Temp_byte_Variable) == 0x00000A, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateStoreTabsVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WBP_TopNavBar_C_UpdateStoreTabsVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.UpdateSeasonShopTabVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_TopNavBar_C_UpdateSeasonShopTabVisibility final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_UpdateSeasonShopTabVisibility");
static_assert(sizeof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility) == 0x000010, "Wrong size on WBP_TopNavBar_C_UpdateSeasonShopTabVisibility");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, AppSettingTag) == 0x000000, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, bValue) == 0x000008, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::bValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, Temp_bool_Variable) == 0x000009, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, Temp_byte_Variable) == 0x00000A, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateSeasonShopTabVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WBP_TopNavBar_C_UpdateSeasonShopTabVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.UpdatePlayerProfileTabVisibility
// 0x000C (0x000C - 0x0000)
struct WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility");
static_assert(sizeof(WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility) == 0x00000C, "Wrong size on WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility");
static_assert(offsetof(WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility, AppSettingTag) == 0x000000, "Member 'WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility, bValue) == 0x000008, "Member 'WBP_TopNavBar_C_UpdatePlayerProfileTabVisibility::bValue' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.UpdateEventsTabVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_TopNavBar_C_UpdateEventsTabVisibility final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_UpdateEventsTabVisibility) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_UpdateEventsTabVisibility");
static_assert(sizeof(WBP_TopNavBar_C_UpdateEventsTabVisibility) == 0x000010, "Wrong size on WBP_TopNavBar_C_UpdateEventsTabVisibility");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, AppSettingTag) == 0x000000, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, bValue) == 0x000008, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::bValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, Temp_bool_Variable) == 0x000009, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, Temp_byte_Variable) == 0x00000A, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UpdateEventsTabVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WBP_TopNavBar_C_UpdateEventsTabVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.UninitializeNavButtons
// 0x0028 (0x0028 - 0x0000)
struct WBP_TopNavBar_C_UninitializeNavButtons final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHWidget*                              K2Node_DynamicCast_AsRHWidget;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_UninitializeNavButtons) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_UninitializeNavButtons");
static_assert(sizeof(WBP_TopNavBar_C_UninitializeNavButtons) == 0x000028, "Wrong size on WBP_TopNavBar_C_UninitializeNavButtons");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, Temp_int_Variable) == 0x000000, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, K2Node_DynamicCast_AsRHWidget) == 0x000018, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::K2Node_DynamicCast_AsRHWidget' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000021, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_UninitializeNavButtons, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_TopNavBar_C_UninitializeNavButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.StartShowSequence
// 0x0010 (0x0010 - 0x0000)
struct WBP_TopNavBar_C_StartShowSequence final
{
public:
	struct FGameplayTag                           FromRoute;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ToRoute;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_StartShowSequence) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_StartShowSequence");
static_assert(sizeof(WBP_TopNavBar_C_StartShowSequence) == 0x000010, "Wrong size on WBP_TopNavBar_C_StartShowSequence");
static_assert(offsetof(WBP_TopNavBar_C_StartShowSequence, FromRoute) == 0x000000, "Member 'WBP_TopNavBar_C_StartShowSequence::FromRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_StartShowSequence, ToRoute) == 0x000008, "Member 'WBP_TopNavBar_C_StartShowSequence::ToRoute' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.StartHideSequence
// 0x0010 (0x0010 - 0x0000)
struct WBP_TopNavBar_C_StartHideSequence final
{
public:
	struct FGameplayTag                           FromRoute;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ToRoute;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_StartHideSequence) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_StartHideSequence");
static_assert(sizeof(WBP_TopNavBar_C_StartHideSequence) == 0x000010, "Wrong size on WBP_TopNavBar_C_StartHideSequence");
static_assert(offsetof(WBP_TopNavBar_C_StartHideSequence, FromRoute) == 0x000000, "Member 'WBP_TopNavBar_C_StartHideSequence::FromRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_StartHideSequence, ToRoute) == 0x000008, "Member 'WBP_TopNavBar_C_StartHideSequence::ToRoute' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.ShowTopBarAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_TopNavBar_C_ShowTopBarAnim final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedAlpha;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_ShowTopBarAnim) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_ShowTopBarAnim");
static_assert(sizeof(WBP_TopNavBar_C_ShowTopBarAnim) == 0x000008, "Wrong size on WBP_TopNavBar_C_ShowTopBarAnim");
static_assert(offsetof(WBP_TopNavBar_C_ShowTopBarAnim, ElapsedTime) == 0x000000, "Member 'WBP_TopNavBar_C_ShowTopBarAnim::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ShowTopBarAnim, ElapsedAlpha) == 0x000004, "Member 'WBP_TopNavBar_C_ShowTopBarAnim::ElapsedAlpha' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.SetHideAll
// 0x0001 (0x0001 - 0x0000)
struct WBP_TopNavBar_C_SetHideAll final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_SetHideAll) == 0x000001, "Wrong alignment on WBP_TopNavBar_C_SetHideAll");
static_assert(sizeof(WBP_TopNavBar_C_SetHideAll) == 0x000001, "Wrong size on WBP_TopNavBar_C_SetHideAll");
static_assert(offsetof(WBP_TopNavBar_C_SetHideAll, Hide) == 0x000000, "Member 'WBP_TopNavBar_C_SetHideAll::Hide' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.OnPromptCycleAction
// 0x0001 (0x0001 - 0x0000)
struct WBP_TopNavBar_C_OnPromptCycleAction final
{
public:
	bool                                          bNext;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_OnPromptCycleAction) == 0x000001, "Wrong alignment on WBP_TopNavBar_C_OnPromptCycleAction");
static_assert(sizeof(WBP_TopNavBar_C_OnPromptCycleAction) == 0x000001, "Wrong size on WBP_TopNavBar_C_OnPromptCycleAction");
static_assert(offsetof(WBP_TopNavBar_C_OnPromptCycleAction, bNext) == 0x000000, "Member 'WBP_TopNavBar_C_OnPromptCycleAction::bNext' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.MainLobbyIsTopViewRoute
// 0x0070 (0x0070 - 0x0000)
struct WBP_TopNavBar_C_MainLobbyIsTopViewRoute final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             CallFunc_GetTopLayer_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentRoute_ReturnValue;              // 0x0014(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViewRoute                             CallFunc_GetViewRoute_ViewRoute;                   // 0x0020(0x0048)()
	bool                                          CallFunc_GetViewRoute_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_MainLobbyIsTopViewRoute");
static_assert(sizeof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute) == 0x000070, "Wrong size on WBP_TopNavBar_C_MainLobbyIsTopViewRoute");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, ReturnValue) == 0x000000, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_GetViewManager_ReturnValue) == 0x000008, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_GetTopLayer_ReturnValue) == 0x000010, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_GetTopLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_GetCurrentRoute_ReturnValue) == 0x000014, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_GetCurrentRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_GetViewRoute_ViewRoute) == 0x000020, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_GetViewRoute_ViewRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_GetViewRoute_ReturnValue) == 0x000068, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_GetViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_MainLobbyIsTopViewRoute, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000069, "Member 'WBP_TopNavBar_C_MainLobbyIsTopViewRoute::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_RightShoulder_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'WBP_TopNavBar_C_InpActEvt_IA_UI_LeftShoulder_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.InitializeNavButtons
// 0x0038 (0x0038 - 0x0000)
struct WBP_TopNavBar_C_InitializeNavButtons final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TopNavButton_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_TopNavButton_C*>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_TopNavBar_C_InitializeNavButtons) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_InitializeNavButtons");
static_assert(sizeof(WBP_TopNavBar_C_InitializeNavButtons) == 0x000038, "Wrong size on WBP_TopNavBar_C_InitializeNavButtons");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_TopNavBar_C_InitializeNavButtons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_TopNavBar_C_InitializeNavButtons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_TopNavBar_C_InitializeNavButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_TopNavBar_C_InitializeNavButtons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'WBP_TopNavBar_C_InitializeNavButtons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_TopNavBar_C_InitializeNavButtons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_TopNavBar_C_InitializeNavButtons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_InitializeNavButtons, K2Node_MakeArray_Array) == 0x000028, "Member 'WBP_TopNavBar_C_InitializeNavButtons::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.HideTopBarAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_TopNavBar_C_HideTopBarAnim final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedAlpha;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_HideTopBarAnim) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_HideTopBarAnim");
static_assert(sizeof(WBP_TopNavBar_C_HideTopBarAnim) == 0x000008, "Wrong size on WBP_TopNavBar_C_HideTopBarAnim");
static_assert(offsetof(WBP_TopNavBar_C_HideTopBarAnim, ElapsedTime) == 0x000000, "Member 'WBP_TopNavBar_C_HideTopBarAnim::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HideTopBarAnim, ElapsedAlpha) == 0x000004, "Member 'WBP_TopNavBar_C_HideTopBarAnim::ElapsedAlpha' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.HandleViewRouteChanged
// 0x0040 (0x0040 - 0x0000)
struct WBP_TopNavBar_C_HandleViewRouteChanged final
{
public:
	struct FGameplayTag                           CurrentRoute;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NextRoute;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             Layer;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TopNavButton_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_HandleViewRouteChanged) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_HandleViewRouteChanged");
static_assert(sizeof(WBP_TopNavBar_C_HandleViewRouteChanged) == 0x000040, "Wrong size on WBP_TopNavBar_C_HandleViewRouteChanged");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CurrentRoute) == 0x000000, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, NextRoute) == 0x000008, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, Layer) == 0x000010, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::Layer' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_MatchesTag_ReturnValue) == 0x000012, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, Temp_int_Variable) == 0x000014, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Array_Contains_ReturnValue) == 0x000034, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, Temp_byte_Variable) == 0x000035, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, Temp_byte_Variable_1) == 0x000036, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000037, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_Array_Contains_ReturnValue_1) == 0x000038, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, Temp_bool_Variable) == 0x000039, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleViewRouteChanged, K2Node_Select_Default) == 0x00003B, "Member 'WBP_TopNavBar_C_HandleViewRouteChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.HandleNavRight
// 0x0028 (0x0028 - 0x0000)
struct WBP_TopNavBar_C_HandleNavRight final
{
public:
	bool                                          NextIsTarget;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_TopNavButton_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisabled_Disabled;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_Active;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_HandleNavRight) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_HandleNavRight");
static_assert(sizeof(WBP_TopNavBar_C_HandleNavRight) == 0x000028, "Wrong size on WBP_TopNavBar_C_HandleNavRight");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, NextIsTarget) == 0x000000, "Member 'WBP_TopNavBar_C_HandleNavRight::NextIsTarget' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, Temp_bool_Variable) == 0x000001, "Member 'WBP_TopNavBar_C_HandleNavRight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, Temp_int_Variable) == 0x00000C, "Member 'WBP_TopNavBar_C_HandleNavRight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_IsDisabled_Disabled) == 0x000019, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_IsDisabled_Disabled' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_IsActive_Active) == 0x00001A, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_IsActive_Active' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavRight, CallFunc_BooleanAND_ReturnValue_1) == 0x000025, "Member 'WBP_TopNavBar_C_HandleNavRight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.HandleNavLeft
// 0x0030 (0x0030 - 0x0000)
struct WBP_TopNavBar_C_HandleNavLeft final
{
public:
	bool                                          NextIsTarget;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TopNavButton_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisabled_Disabled;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_Active;                          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_HandleNavLeft) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_HandleNavLeft");
static_assert(sizeof(WBP_TopNavBar_C_HandleNavLeft) == 0x000030, "Wrong size on WBP_TopNavBar_C_HandleNavLeft");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, NextIsTarget) == 0x000000, "Member 'WBP_TopNavBar_C_HandleNavLeft::NextIsTarget' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, Temp_bool_Variable) == 0x000001, "Member 'WBP_TopNavBar_C_HandleNavLeft::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, Temp_int_Variable) == 0x00000C, "Member 'WBP_TopNavBar_C_HandleNavLeft::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_IsVisible_ReturnValue) == 0x000024, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_IsDisabled_Disabled) == 0x000025, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_IsDisabled_Disabled' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_IsActive_Active) == 0x000026, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_IsActive_Active' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_Not_PreBool_ReturnValue_1) == 0x000027, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleNavLeft, CallFunc_BooleanAND_ReturnValue_1) == 0x00002A, "Member 'WBP_TopNavBar_C_HandleNavLeft::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.HandleInputStateChanged
// 0x0006 (0x0006 - 0x0000)
struct WBP_TopNavBar_C_HandleInputStateChanged final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_HandleInputStateChanged) == 0x000001, "Wrong alignment on WBP_TopNavBar_C_HandleInputStateChanged");
static_assert(sizeof(WBP_TopNavBar_C_HandleInputStateChanged) == 0x000006, "Wrong size on WBP_TopNavBar_C_HandleInputStateChanged");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, InputState) == 0x000000, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::InputState' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, Temp_byte_Variable) == 0x000003, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_HandleInputStateChanged, K2Node_Select_Default) == 0x000005, "Member 'WBP_TopNavBar_C_HandleInputStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.Handle Login State Changed
// 0x0001 (0x0001 - 0x0000)
struct WBP_TopNavBar_C_Handle_Login_State_Changed final
{
public:
	ERHLoginState                                 LoginState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_Handle_Login_State_Changed) == 0x000001, "Wrong alignment on WBP_TopNavBar_C_Handle_Login_State_Changed");
static_assert(sizeof(WBP_TopNavBar_C_Handle_Login_State_Changed) == 0x000001, "Wrong size on WBP_TopNavBar_C_Handle_Login_State_Changed");
static_assert(offsetof(WBP_TopNavBar_C_Handle_Login_State_Changed, LoginState) == 0x000000, "Member 'WBP_TopNavBar_C_Handle_Login_State_Changed::LoginState' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.ExecuteUbergraph_WBP_TopNavBar
// 0x02D0 (0x02D0 - 0x0000)
struct WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CurrentRoute;                   // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NextRoute;                      // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             K2Node_CustomEvent_Layer;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x0018(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0040(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_0;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0080(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x00A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_1;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ElapsedTime_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedAlpha_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float ElapsedTime, float ElapsedAlpha)> K2Node_CreateDelegate_OutputDelegate;     // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedAlpha;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float ElapsedTime, float ElapsedAlpha)> K2Node_CreateDelegate_OutputDelegate_2;   // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDisable;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate_4;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHLoginDataFactory*                    CallFunc_GetLoginDataFactory_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERHLoginState                                 CallFunc_GetCurrentLoginState_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& CurrentRoute, const struct FGameplayTag& NextRoute, EViewManagerLayer Layer)> K2Node_CreateDelegate_OutputDelegate_5; // 0x01BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNext)>                   K2Node_CreateDelegate_OutputDelegate_6;            // 0x01CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_FromRoute_1;                          // 0x01DC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_ToRoute_1;                            // 0x01E4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_FromRoute;                            // 0x01EC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_ToRoute;                              // 0x01F4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERHLoginState LoginState)>     K2Node_CreateDelegate_OutputDelegate_7;            // 0x01FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERHLoginState                                 K2Node_CustomEvent_LoginState;                     // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNext;                          // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F[0x1];                                      // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue_1;            // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MainLobbyIsTopViewRoute_ReturnValue;      // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MainLobbyIsTopViewRoute_ReturnValue_1;    // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x1];                                      // 0x022B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> K2Node_CreateDelegate_OutputDelegate_8; // 0x022C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> K2Node_CreateDelegate_OutputDelegate_9; // 0x023C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> K2Node_CreateDelegate_OutputDelegate_10; // 0x024C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> K2Node_CreateDelegate_OutputDelegate_11; // 0x025C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ViewRouteTag;                   // 0x0270(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& ViewRouteTag)> K2Node_CreateDelegate_OutputDelegate_12; // 0x0278(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28B[0x5];                                      // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& CurrentRoute, const struct FGameplayTag& NextRoute, EViewManagerLayer Layer)> K2Node_CreateDelegate_OutputDelegate_13; // 0x0298(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue_1;             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar) == 0x000008, "Wrong alignment on WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar");
static_assert(sizeof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar) == 0x0002D0, "Wrong size on WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, EntryPoint) == 0x000000, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_CurrentRoute) == 0x000004, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_NextRoute) == 0x00000C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_Layer) == 0x000014, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_Layer' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x000018, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000038, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x00003C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000040, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000048, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000049, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_object_Variable) == 0x000050, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable) == 0x000058, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_0) == 0x000060, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_1) == 0x000068, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_bool_Variable) == 0x000070, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_1_0) == 0x000078, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000080, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0000A0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0000A4, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0000A8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_object_Variable_1) == 0x0000B0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x0000B8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_2) == 0x0000C0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_3) == 0x0000C8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_2_0) == 0x0000D0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_real_Variable_3_0) == 0x0000D8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_bool_Variable_1) == 0x0000E0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_ElapsedTime_1) == 0x0000E4, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_ElapsedAlpha_1) == 0x0000E8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_ElapsedAlpha_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x000118, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MakeVector2D_ReturnValue) == 0x000128, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_ElapsedTime) == 0x000138, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_ElapsedAlpha) == 0x00013C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_ElapsedAlpha' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_2) == 0x000140, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000150, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_3) == 0x000158, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MakeVector2D_ReturnValue_1) == 0x000178, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_IsDisable) == 0x000188, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_IsDisable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_4) == 0x00018C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x0001A0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetLoginDataFactory_ReturnValue) == 0x0001B0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetLoginDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetCurrentLoginState_ReturnValue) == 0x0001B8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetCurrentLoginState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetCurrentInputState_ReturnValue) == 0x0001B9, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001BC, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001CC, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_Event_FromRoute_1) == 0x0001DC, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_Event_FromRoute_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_Event_ToRoute_1) == 0x0001E4, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_Event_ToRoute_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_Event_FromRoute) == 0x0001EC, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_Event_FromRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_Event_ToRoute) == 0x0001F4, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_Event_ToRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001FC, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_LoginState) == 0x00020C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_LoginState' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_SwitchEnum_CmpSuccess) == 0x00020D, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_bNext) == 0x00020E, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_bNext' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetInputManager_ReturnValue) == 0x000210, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_byte_Variable) == 0x000218, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetInputManager_ReturnValue_1) == 0x000220, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetInputManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_byte_Variable_1) == 0x000228, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MainLobbyIsTopViewRoute_ReturnValue) == 0x000229, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MainLobbyIsTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MainLobbyIsTopViewRoute_ReturnValue_1) == 0x00022A, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MainLobbyIsTopViewRoute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_8) == 0x00022C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_9) == 0x00023C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_10) == 0x00024C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_11) == 0x00025C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_AddViewRoute_ReturnValue) == 0x00026C, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CustomEvent_ViewRouteTag) == 0x000270, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CustomEvent_ViewRouteTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_12) == 0x000278, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000288, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, Temp_bool_Variable_2) == 0x000289, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_Select_Default) == 0x00028A, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetViewManager_ReturnValue) == 0x000290, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, K2Node_CreateDelegate_OutputDelegate_13) == 0x000298, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_GetViewManager_ReturnValue_1) == 0x0002A8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_GetViewManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast) == 0x0002B0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0002B8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1) == 0x0002C0, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x0002C8, "Member 'WBP_TopNavBar_C_ExecuteUbergraph_WBP_TopNavBar::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.DisableTopBar
// 0x0001 (0x0001 - 0x0000)
struct WBP_TopNavBar_C_DisableTopBar final
{
public:
	bool                                          IsDisable_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_DisableTopBar) == 0x000001, "Wrong alignment on WBP_TopNavBar_C_DisableTopBar");
static_assert(sizeof(WBP_TopNavBar_C_DisableTopBar) == 0x000001, "Wrong size on WBP_TopNavBar_C_DisableTopBar");
static_assert(offsetof(WBP_TopNavBar_C_DisableTopBar, IsDisable_0) == 0x000000, "Member 'WBP_TopNavBar_C_DisableTopBar::IsDisable_0' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x000C (0x000C - 0x0000)
struct WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x00000C, "Wrong size on WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1, AppSettingTag) == 0x000000, "Member 'WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1, bValue) == 0x000008, "Member 'WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_1::bValue' has a wrong offset!");

// Function WBP_TopNavBar.WBP_TopNavBar_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0014 (0x0014 - 0x0000)
struct WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	struct FGameplayTag                           CurrentRoute;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NextRoute;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             Layer;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000004, "Wrong alignment on WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000014, "Wrong size on WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0, CurrentRoute) == 0x000000, "Member 'WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0::CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0, NextRoute) == 0x000008, "Member 'WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0::NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0, Layer) == 0x000010, "Member 'WBP_TopNavBar_C_CREATEDELEGATE_PROXYFUNCTION_0::Layer' has a wrong offset!");

}

