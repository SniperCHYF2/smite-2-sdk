#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_Polynomicon

#include "Basic.hpp"

#include "GA_Items_Polynomicon_classes.hpp"
#include "GA_Items_Polynomicon_parameters.hpp"


namespace SDK
{

// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.ApplyPolynomiconDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Items_Polynomicon_C::ApplyPolynomiconDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "ApplyPolynomiconDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.ExecuteUbergraph_GA_Items_Polynomicon
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Items_Polynomicon_C::ExecuteUbergraph_GA_Items_Polynomicon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "ExecuteUbergraph_GA_Items_Polynomicon");

	Params::GA_Items_Polynomicon_C_ExecuteUbergraph_GA_Items_Polynomicon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.Is Ability Swap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHWGameplayAbility_Enhanced*      Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAbilitySwap                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Items_Polynomicon_C::Is_Ability_Swap(class UHWGameplayAbility_Enhanced* Ability, bool* IsAbilitySwap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "Is Ability Swap");

	Params::GA_Items_Polynomicon_C_Is_Ability_Swap Parms{};

	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAbilitySwap != nullptr)
		*IsAbilitySwap = Parms.IsAbilitySwap;
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.IsAbilityRefire
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHWGameplayAbility_Enhanced*      Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsRefire                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Items_Polynomicon_C::IsAbilityRefire(class UHWGameplayAbility_Enhanced* Ability, bool* IsRefire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "IsAbilityRefire");

	Params::GA_Items_Polynomicon_C_IsAbilityRefire Parms{};

	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRefire != nullptr)
		*IsRefire = Parms.IsRefire;
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.ListenForInhandEnteringFiring
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWAbilitySystemComponent*        AbilitySystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     AbilityTags_0                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// const EAbilityFlowPhase                 PrevPhase                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EAbilityFlowPhase                 NextPhase                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Items_Polynomicon_C::ListenForInhandEnteringFiring(class UHWAbilitySystemComponent* AbilitySystem, const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& AbilityTags_0, const EAbilityFlowPhase PrevPhase, const EAbilityFlowPhase NextPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "ListenForInhandEnteringFiring");

	Params::GA_Items_Polynomicon_C_ListenForInhandEnteringFiring Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityTags_0 = std::move(AbilityTags_0);
	Parms.PrevPhase = PrevPhase;
	Parms.NextPhase = NextPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.OnAbilityStartFire
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     AbilityTags_0                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FHWAbilityFiringInstanceId&FiringInstanceId                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UGA_Items_Polynomicon_C::OnAbilityStartFire(const struct FGameplayAbilitySpecHandle& AbilityHandle, const struct FGameplayTagContainer& AbilityTags_0, const struct FHWAbilityFiringInstanceId& FiringInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "OnAbilityStartFire");

	Params::GA_Items_Polynomicon_C_OnAbilityStartFire Parms{};

	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.AbilityTags_0 = std::move(AbilityTags_0);
	Parms.FiringInstanceId = std::move(FiringInstanceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.OnOwnerDealtDamage
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Items_Polynomicon_C::OnOwnerDealtDamage(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "OnOwnerDealtDamage");

	Params::GA_Items_Polynomicon_C_OnOwnerDealtDamage Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Items_Polynomicon.GA_Items_Polynomicon_C.SetupListeners
// (Event, Protected, BlueprintEvent)

void UGA_Items_Polynomicon_C::SetupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_Polynomicon_C", "SetupListeners");

	UObject::ProcessEvent(Func, nullptr);
}

}

