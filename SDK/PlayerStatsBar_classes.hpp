#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStatsBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerStatsBar.PlayerStatsBar_C
// 0x0030 (0x0628 - 0x05F8)
class UPlayerStatsBar_C final : public UHWWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWImage*                               Bar;                                               // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               BarEnd;                                            // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               BarFade;                                           // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              OriginalSize;                                      // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerStatsBar(int32 EntryPoint);
	void InitializeWidget();
	void Set_Team_Color(const struct FSlateColor& Team_Color);
	void SetProgress(double Percent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerStatsBar_C">();
	}
	static class UPlayerStatsBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerStatsBar_C>();
	}
};
static_assert(alignof(UPlayerStatsBar_C) == 0x000008, "Wrong alignment on UPlayerStatsBar_C");
static_assert(sizeof(UPlayerStatsBar_C) == 0x000628, "Wrong size on UPlayerStatsBar_C");
static_assert(offsetof(UPlayerStatsBar_C, UberGraphFrame) == 0x0005F8, "Member 'UPlayerStatsBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerStatsBar_C, Bar) == 0x000600, "Member 'UPlayerStatsBar_C::Bar' has a wrong offset!");
static_assert(offsetof(UPlayerStatsBar_C, BarEnd) == 0x000608, "Member 'UPlayerStatsBar_C::BarEnd' has a wrong offset!");
static_assert(offsetof(UPlayerStatsBar_C, BarFade) == 0x000610, "Member 'UPlayerStatsBar_C::BarFade' has a wrong offset!");
static_assert(offsetof(UPlayerStatsBar_C, OriginalSize) == 0x000618, "Member 'UPlayerStatsBar_C::OriginalSize' has a wrong offset!");

}

