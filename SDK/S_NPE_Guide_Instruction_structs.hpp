#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_NPE_Guide_Instruction

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_NPE_Guide_Instruction.S_NPE_Guide_Instruction
// 0x0090 (0x0090 - 0x0000)
struct FS_NPE_Guide_Instruction final
{
public:
	struct FGameplayTag                           InputKey_2_FEAEDFB540036F15007616B3C52F1287;       // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FText                                   TitleText_5_96077CB04D164CAA18A89A9B02F8BDC2;      // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   ContentText_7_B9E77ED048AE71DABF025080BDF40B83;    // 0x0020(0x0018)(Edit, BlueprintVisible)
	bool                                          OverrideContentByCastMode_13_B77D89104A25C3759C2DFA9EFF176EE2; // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentText_NormalCast_10_B4F0986F4D57F302592576A4995001A2; // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   ContentText_QuickCast_18_6A2CE76045D170E2852B71AACA014D6D; // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   ContentText_InstantCast_19_EE83E6BA4EB09B2C9733458188ACBBDA; // 0x0070(0x0018)(Edit, BlueprintVisible)
	struct FGameplayTag                           InputTag2_22_5FF1C4BB4336B76F797D4DB7176CF718;     // 0x0088(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_NPE_Guide_Instruction) == 0x000008, "Wrong alignment on FS_NPE_Guide_Instruction");
static_assert(sizeof(FS_NPE_Guide_Instruction) == 0x000090, "Wrong size on FS_NPE_Guide_Instruction");
static_assert(offsetof(FS_NPE_Guide_Instruction, InputKey_2_FEAEDFB540036F15007616B3C52F1287) == 0x000000, "Member 'FS_NPE_Guide_Instruction::InputKey_2_FEAEDFB540036F15007616B3C52F1287' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, TitleText_5_96077CB04D164CAA18A89A9B02F8BDC2) == 0x000008, "Member 'FS_NPE_Guide_Instruction::TitleText_5_96077CB04D164CAA18A89A9B02F8BDC2' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, ContentText_7_B9E77ED048AE71DABF025080BDF40B83) == 0x000020, "Member 'FS_NPE_Guide_Instruction::ContentText_7_B9E77ED048AE71DABF025080BDF40B83' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, OverrideContentByCastMode_13_B77D89104A25C3759C2DFA9EFF176EE2) == 0x000038, "Member 'FS_NPE_Guide_Instruction::OverrideContentByCastMode_13_B77D89104A25C3759C2DFA9EFF176EE2' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, ContentText_NormalCast_10_B4F0986F4D57F302592576A4995001A2) == 0x000040, "Member 'FS_NPE_Guide_Instruction::ContentText_NormalCast_10_B4F0986F4D57F302592576A4995001A2' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, ContentText_QuickCast_18_6A2CE76045D170E2852B71AACA014D6D) == 0x000058, "Member 'FS_NPE_Guide_Instruction::ContentText_QuickCast_18_6A2CE76045D170E2852B71AACA014D6D' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, ContentText_InstantCast_19_EE83E6BA4EB09B2C9733458188ACBBDA) == 0x000070, "Member 'FS_NPE_Guide_Instruction::ContentText_InstantCast_19_EE83E6BA4EB09B2C9733458188ACBBDA' has a wrong offset!");
static_assert(offsetof(FS_NPE_Guide_Instruction, InputTag2_22_5FF1C4BB4336B76F797D4DB7176CF718) == 0x000088, "Member 'FS_NPE_Guide_Instruction::InputTag2_22_5FF1C4BB4336B76F797D4DB7176CF718' has a wrong offset!");

}

