#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WindSprite_Vortex_01

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_WindSprite_Vortex_01.GA_WindSprite_Vortex_01_C.ExecuteUbergraph_GA_WindSprite_Vortex_01
// 0x0200 (0x0200 - 0x0000)
struct GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWGameplayTween*                       K2Node_CustomEvent_TweenInstance_1;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_CustomEvent_TweenTarget_1;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWEndTweenReason                             K2Node_CustomEvent_EndTweenReason;                 // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget, const EHWEndTweenReason EndTweenReason)> K2Node_CreateDelegate_OutputDelegate; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWGameplayTween*                       K2Node_CustomEvent_TweenInstance;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_CustomEvent_TweenTarget;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UHWGameplayTween* TweenInstance, class AHWCharacter_Base* TweenTarget)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWGameplayTween*                       Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0060(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0150(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateAimTargetDataFromStartAndEndLocation_ReturnValue; // 0x01B0(0x0028)()
	class UHWAbilityTask_GameplayTween*           CallFunc_PerformGameplayTweenOnTarget_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x01EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01) == 0x000010, "Wrong alignment on GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01");
static_assert(sizeof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01) == 0x000200, "Wrong size on GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, EntryPoint) == 0x000000, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CustomEvent_TweenInstance_1) == 0x000008, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CustomEvent_TweenInstance_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CustomEvent_TweenTarget_1) == 0x000010, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CustomEvent_TweenTarget_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CustomEvent_EndTweenReason) == 0x000018, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CustomEvent_EndTweenReason' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CustomEvent_TweenInstance) == 0x000030, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CustomEvent_TweenInstance' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CustomEvent_TweenTarget) == 0x000038, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CustomEvent_TweenTarget' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, Temp_object_Variable) == 0x000050, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, Temp_object_Variable_1) == 0x000058, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_Event_EventData) == 0x000060, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000110, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000138, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000148, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_GetTransform_ReturnValue) == 0x000150, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_CreateAimTargetDataFromStartAndEndLocation_ReturnValue) == 0x0001B0, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_CreateAimTargetDataFromStartAndEndLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_PerformGameplayTweenOnTarget_ReturnValue) == 0x0001D8, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_PerformGameplayTweenOnTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x0001E0, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_IsValid_ReturnValue_1) == 0x0001E8, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0001EC, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01, CallFunc_IsValid_ReturnValue_2) == 0x0001F4, "Member 'GA_WindSprite_Vortex_01_C_ExecuteUbergraph_GA_WindSprite_Vortex_01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GA_WindSprite_Vortex_01.GA_WindSprite_Vortex_01_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_WindSprite_Vortex_01_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_WindSprite_Vortex_01.GA_WindSprite_Vortex_01_C.OnTweenEndedDel_4AD1F590486F3498293374BD67143F19
// 0x0018 (0x0018 - 0x0000)
struct GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19 final
{
public:
	class UHWGameplayTween*                       TweenInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      TweenTarget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWEndTweenReason                             EndTweenReason;                                    // 0x0010(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19) == 0x000008, "Wrong alignment on GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19");
static_assert(sizeof(GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19) == 0x000018, "Wrong size on GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19, TweenInstance) == 0x000000, "Member 'GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19::TweenInstance' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19, TweenTarget) == 0x000008, "Member 'GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19::TweenTarget' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19, EndTweenReason) == 0x000010, "Member 'GA_WindSprite_Vortex_01_C_OnTweenEndedDel_4AD1F590486F3498293374BD67143F19::EndTweenReason' has a wrong offset!");

// Function GA_WindSprite_Vortex_01.GA_WindSprite_Vortex_01_C.OnTweenStartedDel_4AD1F590486F3498293374BD67143F19
// 0x0010 (0x0010 - 0x0000)
struct GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19 final
{
public:
	class UHWGameplayTween*                       TweenInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      TweenTarget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19) == 0x000008, "Wrong alignment on GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19");
static_assert(sizeof(GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19) == 0x000010, "Wrong size on GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19, TweenInstance) == 0x000000, "Member 'GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19::TweenInstance' has a wrong offset!");
static_assert(offsetof(GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19, TweenTarget) == 0x000008, "Member 'GA_WindSprite_Vortex_01_C_OnTweenStartedDel_4AD1F590486F3498293374BD67143F19::TweenTarget' has a wrong offset!");

}

