#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_WorldOverlay_TowerShieldHealthBar

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_WorldOverlay_TowerShieldHealthBar.WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C.ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar) == 0x000004, "Wrong alignment on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar");
static_assert(sizeof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar) == 0x000004, "Wrong size on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar, EntryPoint) == 0x000000, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_ExecuteUbergraph_WBP_G_V1_WorldOverlay_TowerShieldHealthBar::EntryPoint' has a wrong offset!");

// Function WBP_G_V1_WorldOverlay_TowerShieldHealthBar.WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C.Get_HealthProgressBar_FillColorAndOpacity
// 0x0068 (0x0068 - 0x0000)
struct WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitudeTowards_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity) == 0x000008, "Wrong alignment on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity");
static_assert(sizeof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity) == 0x000068, "Wrong size on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, ReturnValue) == 0x000000, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, Temp_byte_Variable) == 0x000010, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, Temp_struct_Variable) == 0x000014, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, Temp_struct_Variable_1) == 0x000024, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, Temp_struct_Variable_2) == 0x000034, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, CallFunc_GetTeamAttitudeTowards_ReturnValue) == 0x000050, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::CallFunc_GetTeamAttitudeTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity, K2Node_Select_Default) == 0x000054, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_FillColorAndOpacity::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_WorldOverlay_TowerShieldHealthBar.WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C.Get_HealthProgressBar_Percent
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent) == 0x000008, "Wrong alignment on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent");
static_assert(sizeof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent) == 0x000018, "Wrong size on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent, ReturnValue) == 0x000000, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Percent::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_WorldOverlay_TowerShieldHealthBar.WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C.Get_HealthProgressBar_Visibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorInLocalPlayerLOS_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility) == 0x000008, "Wrong alignment on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility");
static_assert(sizeof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility) == 0x000018, "Wrong size on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, ReturnValue) == 0x000000, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, Temp_byte_Variable) == 0x000003, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000005, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000008, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, CallFunc_IsActorInLocalPlayerLOS_ReturnValue) == 0x000010, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::CallFunc_IsActorInLocalPlayerLOS_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility, K2Node_Select_Default) == 0x000012, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_Get_HealthProgressBar_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_WorldOverlay_TowerShieldHealthBar.WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C.GetTowerReference
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Tower_C*                        K2Node_DynamicCast_AsBP_NPC_Tower;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference) == 0x000008, "Wrong alignment on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference");
static_assert(sizeof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference) == 0x000018, "Wrong size on WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference, Success) == 0x000000, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference::Success' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference, K2Node_DynamicCast_AsBP_NPC_Tower) == 0x000008, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference::K2Node_DynamicCast_AsBP_NPC_Tower' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_G_V1_WorldOverlay_TowerShieldHealthBar_C_GetTowerReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

