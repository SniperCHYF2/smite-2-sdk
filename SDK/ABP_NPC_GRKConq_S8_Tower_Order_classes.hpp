#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_GRKConq_S8_Tower_Order

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_GRKConq_S8_Tower_Order.ABP_NPC_GRKConq_S8_Tower_Order_C
// 0x02B0 (0x0600 - 0x0350)
class UABP_NPC_GRKConq_S8_Tower_Order_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0390(0x0050)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03E0(0x0050)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0430(0x0130)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0560(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0588(0x0028)()
	class ABP_NPC_Tower_C*                        OwnerTower;                                        // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation;                                     // 0x05B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               EnemyLookAtRotation;                               // 0x05D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Rotation;                                          // 0x05E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_GRKConq_S8_Tower_Order_AnimGraphNode_ModifyBone_8AB0A7B040937B04A0DC8BBF51D93909();
	void ExecuteUbergraph_ABP_NPC_GRKConq_S8_Tower_Order(int32 EntryPoint);
	void UpdateSmoothRotation(double Delta);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_GRKConq_S8_Tower_Order_C">();
	}
	static class UABP_NPC_GRKConq_S8_Tower_Order_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_GRKConq_S8_Tower_Order_C>();
	}
};
static_assert(alignof(UABP_NPC_GRKConq_S8_Tower_Order_C) == 0x000010, "Wrong alignment on UABP_NPC_GRKConq_S8_Tower_Order_C");
static_assert(sizeof(UABP_NPC_GRKConq_S8_Tower_Order_C) == 0x000600, "Wrong size on UABP_NPC_GRKConq_S8_Tower_Order_C");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, UberGraphFrame) == 0x000350, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_Root) == 0x000368, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_Slot) == 0x000390, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_SequencePlayer) == 0x0003E0, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_ModifyBone) == 0x000430, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_ComponentToLocalSpace) == 0x000560, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, AnimGraphNode_LocalToComponentSpace) == 0x000588, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, OwnerTower) == 0x0005B0, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::OwnerTower' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, StartRotation) == 0x0005B8, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::StartRotation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, EnemyLookAtRotation) == 0x0005D0, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::EnemyLookAtRotation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_GRKConq_S8_Tower_Order_C, Rotation) == 0x0005E8, "Member 'UABP_NPC_GRKConq_S8_Tower_Order_C::Rotation' has a wrong offset!");

}

