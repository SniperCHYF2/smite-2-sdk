#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetails_GodAbilityWidget

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_C_GodDetails_GodAbilityWidget.WBP_C_GodDetails_GodAbilityWidget_C
// 0x0058 (0x0680 - 0x0628)
class UWBP_C_GodDetails_GodAbilityWidget_C final : public UHWGodAbilityEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0628(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWImage*                               AbilityIcon;                                       // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWButton*                              HitArea;                                           // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Hover_Stroke;                                      // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LoadingThrobber_C*                 LoadingThrobber;                                   // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             Main_SizeBox;                                      // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_GodDetails_AbilitySet_PipSet_C*  PipSet;                                            // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Selected_Stroke;                                   // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AbilityIconMaterial;                               // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXSelect;                                         // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXHover;                                          // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_C_GodAbilityWidget_HitArea_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_C_GodAbilityWidget_HitArea_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_C_GodAbilityWidget_HitArea_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BP_UpdatePipDisplay(int32 CurrentIndex, int32 TotalPips);
	void DisplayEquipmentItem(const class UHWEquipmentItem* EquipmentItem);
	void ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget(int32 EntryPoint);
	void InitializeWidget();
	void OnPipClicked(int32 PipIndex);
	void PlayAbilitySelectSFX();
	void PlayHoverSFX();
	void ToggleLoadingState(bool bLoading);
	void UpdateSelectedIndicator(bool bIsSelected);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_C_GodDetails_GodAbilityWidget_C">();
	}
	static class UWBP_C_GodDetails_GodAbilityWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_C_GodDetails_GodAbilityWidget_C>();
	}
};
static_assert(alignof(UWBP_C_GodDetails_GodAbilityWidget_C) == 0x000008, "Wrong alignment on UWBP_C_GodDetails_GodAbilityWidget_C");
static_assert(sizeof(UWBP_C_GodDetails_GodAbilityWidget_C) == 0x000680, "Wrong size on UWBP_C_GodDetails_GodAbilityWidget_C");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, UberGraphFrame) == 0x000628, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, AbilityIcon) == 0x000630, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, HitArea) == 0x000638, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::HitArea' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, Hover_Stroke) == 0x000640, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::Hover_Stroke' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, LoadingThrobber) == 0x000648, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::LoadingThrobber' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, Main_SizeBox) == 0x000650, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::Main_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, PipSet) == 0x000658, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::PipSet' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, Selected_Stroke) == 0x000660, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::Selected_Stroke' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, AbilityIconMaterial) == 0x000668, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::AbilityIconMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, SFXSelect) == 0x000670, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::SFXSelect' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_GodAbilityWidget_C, SFXHover) == 0x000678, "Member 'UWBP_C_GodDetails_GodAbilityWidget_C::SFXHover' has a wrong offset!");

}

