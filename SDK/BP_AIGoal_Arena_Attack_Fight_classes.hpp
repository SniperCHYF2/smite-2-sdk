#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Arena_Attack_Fight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AIGoal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_Arena_Attack_Fight.BP_AIGoal_Arena_Attack_Fight_C
// 0x0018 (0x0280 - 0x0268)
class UBP_AIGoal_Arena_Attack_Fight_C final : public UBP_AIGoal_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AIGoal_Arena_Attack_Fight_C;     // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MinAttackLevel;                                    // 0x0270(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HostileThreatTimeout;                              // 0x0278(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float CalculateWeight(class AHWAIController* InController);
	void CanAttackNearbyGod(class AHWAIController* InController, class AHWCharacter_Base* CurrentThreat, bool* ShouldAttack);
	bool CheckPreconditionsBP(class AHWAIController* InController);
	void EndGoalBP();
	void ExecuteUbergraph_BP_AIGoal_Arena_Attack_Fight(int32 EntryPoint);
	void HasMatchStarted(bool* MatchStarted);
	void ShouldOnlyReturnFire(class AHWAIController* InController, bool* ReturnFireOnly);
	void StartGoalBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_Arena_Attack_Fight_C">();
	}
	static class UBP_AIGoal_Arena_Attack_Fight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_Arena_Attack_Fight_C>();
	}
};
static_assert(alignof(UBP_AIGoal_Arena_Attack_Fight_C) == 0x000008, "Wrong alignment on UBP_AIGoal_Arena_Attack_Fight_C");
static_assert(sizeof(UBP_AIGoal_Arena_Attack_Fight_C) == 0x000280, "Wrong size on UBP_AIGoal_Arena_Attack_Fight_C");
static_assert(offsetof(UBP_AIGoal_Arena_Attack_Fight_C, UberGraphFrame_BP_AIGoal_Arena_Attack_Fight_C) == 0x000268, "Member 'UBP_AIGoal_Arena_Attack_Fight_C::UberGraphFrame_BP_AIGoal_Arena_Attack_Fight_C' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Arena_Attack_Fight_C, MinAttackLevel) == 0x000270, "Member 'UBP_AIGoal_Arena_Attack_Fight_C::MinAttackLevel' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Arena_Attack_Fight_C, HostileThreatTimeout) == 0x000278, "Member 'UBP_AIGoal_Arena_Attack_Fight_C::HostileThreatTimeout' has a wrong offset!");

}

