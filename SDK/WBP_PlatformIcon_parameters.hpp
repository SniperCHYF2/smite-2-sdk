#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlatformIcon

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlatformIcon.WBP_PlatformIcon_C.SetPlatformByDisplayType
// 0x0018 (0x0018 - 0x0000)
struct WBP_PlatformIcon_C_SetPlatformByDisplayType final
{
public:
	ERHPlatformDisplayType                        Platform_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetPlatformIconByDisplayType_Icon;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlatformIcon_C_SetPlatformByDisplayType) == 0x000008, "Wrong alignment on WBP_PlatformIcon_C_SetPlatformByDisplayType");
static_assert(sizeof(WBP_PlatformIcon_C_SetPlatformByDisplayType) == 0x000018, "Wrong size on WBP_PlatformIcon_C_SetPlatformByDisplayType");
static_assert(offsetof(WBP_PlatformIcon_C_SetPlatformByDisplayType, Platform_0) == 0x000000, "Member 'WBP_PlatformIcon_C_SetPlatformByDisplayType::Platform_0' has a wrong offset!");
static_assert(offsetof(WBP_PlatformIcon_C_SetPlatformByDisplayType, CallFunc_GetPlatformIconByDisplayType_Icon) == 0x000008, "Member 'WBP_PlatformIcon_C_SetPlatformByDisplayType::CallFunc_GetPlatformIconByDisplayType_Icon' has a wrong offset!");
static_assert(offsetof(WBP_PlatformIcon_C_SetPlatformByDisplayType, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PlatformIcon_C_SetPlatformByDisplayType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

