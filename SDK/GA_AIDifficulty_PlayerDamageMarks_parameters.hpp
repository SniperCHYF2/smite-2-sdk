#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AIDifficulty_PlayerDamageMarks

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function GA_AIDifficulty_PlayerDamageMarks.GA_AIDifficulty_PlayerDamageMarks_C.ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks
// 0x0050 (0x0050 - 0x0000)
struct GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_2; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_3; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks) == 0x000008, "Wrong alignment on GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks");
static_assert(sizeof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks) == 0x000050, "Wrong size on GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, EntryPoint) == 0x000000, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_1) == 0x000010, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, K2Node_Event_bWasCancelled) == 0x000028, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_2) == 0x000030, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_3) == 0x000048, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue_3' has a wrong offset!");

// Function GA_AIDifficulty_PlayerDamageMarks.GA_AIDifficulty_PlayerDamageMarks_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility");
static_assert(sizeof(GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_AIDifficulty_PlayerDamageMarks.GA_AIDifficulty_PlayerDamageMarks_C.OnDamageTaken
// 0x0108 (0x0108 - 0x0000)
struct GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken final
{
public:
	struct FGameplayTagContainer                  EffectTags;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FDamageCalcInfo                        DamageCalcInfo;                                    // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UHWAbilitySystemComponent*              BroadcastingAbilitySystemComponent;                // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHWAdjustAttributeEventType                   AdjustAttributeEventType;                          // 0x00B8(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseDamageValue;                                   // 0x00BC(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x00D0(0x0018)()
	class AActor*                                 CallFunc_EffectContextGetOriginalInstigatorActor_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBotControlled_ReturnValue;              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken) == 0x000008, "Wrong alignment on GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken");
static_assert(sizeof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken) == 0x000108, "Wrong size on GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, EffectTags) == 0x000000, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::EffectTags' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, DamageCalcInfo) == 0x000020, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::DamageCalcInfo' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, BroadcastingAbilitySystemComponent) == 0x0000B0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::BroadcastingAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, AdjustAttributeEventType) == 0x0000B8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::AdjustAttributeEventType' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, BaseDamageValue) == 0x0000BC, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::BaseDamageValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000C0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_HasTag_ReturnValue) == 0x0000C8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_GetEffectContext_ReturnValue) == 0x0000D0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_EffectContextGetOriginalInstigatorActor_ReturnValue) == 0x0000E8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_EffectContextGetOriginalInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, K2Node_DynamicCast_AsHWCharacter_Base) == 0x0000F8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_BooleanOR_ReturnValue) == 0x000101, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_IsBotControlled_ReturnValue) == 0x000102, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_IsBotControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken, CallFunc_Not_PreBool_ReturnValue_1) == 0x000103, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDamageTaken::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function GA_AIDifficulty_PlayerDamageMarks.GA_AIDifficulty_PlayerDamageMarks_C.OnDealtDamage
// 0x00E8 (0x00E8 - 0x0000)
struct GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage final
{
public:
	struct FGameplayTagContainer                  EffectTags;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FDamageCalcInfo                        DamageCalcInfo;                                    // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UHWAbilitySystemComponent*              BroadcastingAbilitySystemComponent;                // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHWAdjustAttributeEventType                   AdjustAttributeEventType;                          // 0x00B8(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseDamageValue;                                   // 0x00BC(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActor_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Smite_God*                 K2Node_DynamicCast_AsHWCharacter_Smite_God;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBotControlled_ReturnValue;              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage) == 0x000008, "Wrong alignment on GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage");
static_assert(sizeof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage) == 0x0000E8, "Wrong size on GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, EffectTags) == 0x000000, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::EffectTags' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, DamageCalcInfo) == 0x000020, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::DamageCalcInfo' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, BroadcastingAbilitySystemComponent) == 0x0000B0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::BroadcastingAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, AdjustAttributeEventType) == 0x0000B8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::AdjustAttributeEventType' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, BaseDamageValue) == 0x0000BC, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::BaseDamageValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000C0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_HasTag_ReturnValue) == 0x0000C8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_GetAvatarActor_ReturnValue) == 0x0000D0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_GetAvatarActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, K2Node_DynamicCast_AsHWCharacter_Smite_God) == 0x0000D8, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::K2Node_DynamicCast_AsHWCharacter_Smite_God' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_Not_PreBool_ReturnValue) == 0x0000E1, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_IsBotControlled_ReturnValue) == 0x0000E2, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_IsBotControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_BooleanOR_ReturnValue) == 0x0000E3, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E4, "Member 'GA_AIDifficulty_PlayerDamageMarks_C_OnDealtDamage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

}

