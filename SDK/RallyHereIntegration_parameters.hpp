#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RallyHereIntegration

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RallyHereAPI_structs.hpp"
#include "RallyHereIntegration_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RallyHereIntegration.RH_LocalPlayerSubsystemPlugin.GetGameInstanceSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem final
{
public:
	class URH_GameInstanceSubsystem*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystemPlugin_GetGameInstanceSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystemPlugin.GetLocalPlayerSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem final
{
public:
	class URH_LocalPlayerSubsystem*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystemPlugin_GetLocalPlayerSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_AdSubsystem.GetCodesFromLocale
// 0x0028 (0x0028 - 0x0000)
struct RH_AdSubsystem_GetCodesFromLocale final
{
public:
	class FString                                 OutLangCode;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutCountryCode;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_AdSubsystem_GetCodesFromLocale) == 0x000008, "Wrong alignment on RH_AdSubsystem_GetCodesFromLocale");
static_assert(sizeof(RH_AdSubsystem_GetCodesFromLocale) == 0x000028, "Wrong size on RH_AdSubsystem_GetCodesFromLocale");
static_assert(offsetof(RH_AdSubsystem_GetCodesFromLocale, OutLangCode) == 0x000000, "Member 'RH_AdSubsystem_GetCodesFromLocale::OutLangCode' has a wrong offset!");
static_assert(offsetof(RH_AdSubsystem_GetCodesFromLocale, OutCountryCode) == 0x000010, "Member 'RH_AdSubsystem_GetCodesFromLocale::OutCountryCode' has a wrong offset!");
static_assert(offsetof(RH_AdSubsystem_GetCodesFromLocale, ReturnValue) == 0x000020, "Member 'RH_AdSubsystem_GetCodesFromLocale::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_AdSubsystem.GetAdApiToken
// 0x0010 (0x0010 - 0x0000)
struct RH_AdSubsystem_GetAdApiToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_AdSubsystem_GetAdApiToken) == 0x000008, "Wrong alignment on RH_AdSubsystem_GetAdApiToken");
static_assert(sizeof(RH_AdSubsystem_GetAdApiToken) == 0x000010, "Wrong size on RH_AdSubsystem_GetAdApiToken");
static_assert(offsetof(RH_AdSubsystem_GetAdApiToken, ReturnValue) == 0x000000, "Member 'RH_AdSubsystem_GetAdApiToken::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_TestBeaconClient.ClientPong
// 0x0008 (0x0008 - 0x0000)
struct RH_TestBeaconClient_ClientPong final
{
public:
	struct FDateTime                              ClientTime;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_TestBeaconClient_ClientPong) == 0x000008, "Wrong alignment on RH_TestBeaconClient_ClientPong");
static_assert(sizeof(RH_TestBeaconClient_ClientPong) == 0x000008, "Wrong size on RH_TestBeaconClient_ClientPong");
static_assert(offsetof(RH_TestBeaconClient_ClientPong, ClientTime) == 0x000000, "Member 'RH_TestBeaconClient_ClientPong::ClientTime' has a wrong offset!");

// Function RallyHereIntegration.RH_TestBeaconClient.ServerPing
// 0x0008 (0x0008 - 0x0000)
struct RH_TestBeaconClient_ServerPing final
{
public:
	struct FDateTime                              ClientTime;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_TestBeaconClient_ServerPing) == 0x000008, "Wrong alignment on RH_TestBeaconClient_ServerPing");
static_assert(sizeof(RH_TestBeaconClient_ServerPing) == 0x000008, "Wrong size on RH_TestBeaconClient_ServerPing");
static_assert(offsetof(RH_TestBeaconClient_ServerPing, ClientTime) == 0x000000, "Member 'RH_TestBeaconClient_ServerPing::ClientTime' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetAvailabilityFlags
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetAvailabilityFlags final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetAvailabilityFlags) == 0x000004, "Wrong alignment on RH_CatalogItem_GetAvailabilityFlags");
static_assert(sizeof(RH_CatalogItem_GetAvailabilityFlags) == 0x000004, "Wrong size on RH_CatalogItem_GetAvailabilityFlags");
static_assert(offsetof(RH_CatalogItem_GetAvailabilityFlags, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetAvailabilityFlags::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetCouponConsumeOnUse
// 0x0001 (0x0001 - 0x0000)
struct RH_CatalogItem_GetCouponConsumeOnUse final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetCouponConsumeOnUse) == 0x000001, "Wrong alignment on RH_CatalogItem_GetCouponConsumeOnUse");
static_assert(sizeof(RH_CatalogItem_GetCouponConsumeOnUse) == 0x000001, "Wrong size on RH_CatalogItem_GetCouponConsumeOnUse");
static_assert(offsetof(RH_CatalogItem_GetCouponConsumeOnUse, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetCouponConsumeOnUse::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetCouponDiscountCurrencyItemId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetCouponDiscountCurrencyItemId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetCouponDiscountCurrencyItemId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetCouponDiscountCurrencyItemId");
static_assert(sizeof(RH_CatalogItem_GetCouponDiscountCurrencyItemId) == 0x000004, "Wrong size on RH_CatalogItem_GetCouponDiscountCurrencyItemId");
static_assert(offsetof(RH_CatalogItem_GetCouponDiscountCurrencyItemId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetCouponDiscountCurrencyItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetCouponDiscountLoot
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogItem_GetCouponDiscountLoot final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetCouponDiscountLoot) == 0x000008, "Wrong alignment on RH_CatalogItem_GetCouponDiscountLoot");
static_assert(sizeof(RH_CatalogItem_GetCouponDiscountLoot) == 0x000010, "Wrong size on RH_CatalogItem_GetCouponDiscountLoot");
static_assert(offsetof(RH_CatalogItem_GetCouponDiscountLoot, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetCouponDiscountLoot::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetCouponDiscountPercentage
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetCouponDiscountPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetCouponDiscountPercentage) == 0x000004, "Wrong alignment on RH_CatalogItem_GetCouponDiscountPercentage");
static_assert(sizeof(RH_CatalogItem_GetCouponDiscountPercentage) == 0x000004, "Wrong size on RH_CatalogItem_GetCouponDiscountPercentage");
static_assert(offsetof(RH_CatalogItem_GetCouponDiscountPercentage, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetCouponDiscountPercentage::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetEntitledLootId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetEntitledLootId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetEntitledLootId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetEntitledLootId");
static_assert(sizeof(RH_CatalogItem_GetEntitledLootId) == 0x000004, "Wrong size on RH_CatalogItem_GetEntitledLootId");
static_assert(offsetof(RH_CatalogItem_GetEntitledLootId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetEntitledLootId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetItemId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetItemId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetItemId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetItemId");
static_assert(sizeof(RH_CatalogItem_GetItemId) == 0x000004, "Wrong size on RH_CatalogItem_GetItemId");
static_assert(offsetof(RH_CatalogItem_GetItemId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetItemInventoryBucketUseRulesetId
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogItem_GetItemInventoryBucketUseRulesetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetItemInventoryBucketUseRulesetId) == 0x000008, "Wrong alignment on RH_CatalogItem_GetItemInventoryBucketUseRulesetId");
static_assert(sizeof(RH_CatalogItem_GetItemInventoryBucketUseRulesetId) == 0x000010, "Wrong size on RH_CatalogItem_GetItemInventoryBucketUseRulesetId");
static_assert(offsetof(RH_CatalogItem_GetItemInventoryBucketUseRulesetId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetItemInventoryBucketUseRulesetId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetLevelVendorId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetLevelVendorId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetLevelVendorId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetLevelVendorId");
static_assert(sizeof(RH_CatalogItem_GetLevelVendorId) == 0x000004, "Wrong size on RH_CatalogItem_GetLevelVendorId");
static_assert(offsetof(RH_CatalogItem_GetLevelVendorId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetLevelVendorId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetLevelXpTableId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetLevelXpTableId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetLevelXpTableId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetLevelXpTableId");
static_assert(sizeof(RH_CatalogItem_GetLevelXpTableId) == 0x000004, "Wrong size on RH_CatalogItem_GetLevelXpTableId");
static_assert(offsetof(RH_CatalogItem_GetLevelXpTableId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetLevelXpTableId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetRefItemId
// 0x0004 (0x0004 - 0x0000)
struct RH_CatalogItem_GetRefItemId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetRefItemId) == 0x000004, "Wrong alignment on RH_CatalogItem_GetRefItemId");
static_assert(sizeof(RH_CatalogItem_GetRefItemId) == 0x000004, "Wrong size on RH_CatalogItem_GetRefItemId");
static_assert(offsetof(RH_CatalogItem_GetRefItemId, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetRefItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogItem.GetType
// 0x0001 (0x0001 - 0x0000)
struct RH_CatalogItem_GetType final
{
public:
	ERHAPI_ItemType                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogItem_GetType) == 0x000001, "Wrong alignment on RH_CatalogItem_GetType");
static_assert(sizeof(RH_CatalogItem_GetType) == 0x000001, "Wrong size on RH_CatalogItem_GetType");
static_assert(offsetof(RH_CatalogItem_GetType, ReturnValue) == 0x000000, "Member 'RH_CatalogItem_GetType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystemPlugin.GetGameInstanceSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem final
{
public:
	class URH_GameInstanceSubsystem*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystemPlugin_GetGameInstanceSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogItem
// 0x0014 (0x0014 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem) == 0x000014, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem, ItemId) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem::ItemId' has a wrong offset!");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem, Delegate) == 0x000004, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogItem::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogLoot
// 0x0014 (0x0014 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot) == 0x000014, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot, ItemId) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot::ItemId' has a wrong offset!");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot, Delegate) == 0x000004, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogLoot::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogPricePointsAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogPricePointsAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogTimeFramesAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogTimeFramesAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogVendor
// 0x0038 (0x0038 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor final
{
public:
	struct FRHVendorGetRequest                    VendorRequest;                                     // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor) == 0x000008, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor) == 0x000038, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor, VendorRequest) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendor::VendorRequest' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogVendorsAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogVendorsAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.BLUEPRINT_GetCatalogXpAll
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll) == 0x000004, "Wrong alignment on RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll");
static_assert(sizeof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll) == 0x000010, "Wrong size on RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll");
static_assert(offsetof(RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll, Delegate) == 0x000000, "Member 'RH_CatalogSubsystem_BLUEPRINT_GetCatalogXpAll::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogSubsystem.GetXpTable
// 0x00F8 (0x00F8 - 0x0000)
struct RH_CatalogSubsystem_GetXpTable final
{
public:
	int32                                         XpTableId;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_XpTable                         XpTable;                                           // 0x0008(0x00E8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogSubsystem_GetXpTable) == 0x000008, "Wrong alignment on RH_CatalogSubsystem_GetXpTable");
static_assert(sizeof(RH_CatalogSubsystem_GetXpTable) == 0x0000F8, "Wrong size on RH_CatalogSubsystem_GetXpTable");
static_assert(offsetof(RH_CatalogSubsystem_GetXpTable, XpTableId) == 0x000000, "Member 'RH_CatalogSubsystem_GetXpTable::XpTableId' has a wrong offset!");
static_assert(offsetof(RH_CatalogSubsystem_GetXpTable, XpTable) == 0x000008, "Member 'RH_CatalogSubsystem_GetXpTable::XpTable' has a wrong offset!");
static_assert(offsetof(RH_CatalogSubsystem_GetXpTable, ReturnValue) == 0x0000F0, "Member 'RH_CatalogSubsystem_GetXpTable::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetCouponDiscountedPrice
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice final
{
public:
	class URH_CatalogItem*                        CouponItem;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice) == 0x000010, "Wrong size on RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice, CouponItem) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice::CouponItem' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice, Price) == 0x000008, "Member 'RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice::Price' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice, ReturnValue) == 0x00000C, "Member 'RH_CatalogBlueprintLibrary_GetCouponDiscountedPrice::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetLevelAtXp
// 0x00F8 (0x00F8 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetLevelAtXp final
{
public:
	struct FRHAPI_XpTable                         XpTable;                                           // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int64                                         XpPoints;                                          // 0x00E8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x00F0(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetLevelAtXp) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetLevelAtXp");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetLevelAtXp) == 0x0000F8, "Wrong size on RH_CatalogBlueprintLibrary_GetLevelAtXp");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetLevelAtXp, XpTable) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetLevelAtXp::XpTable' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetLevelAtXp, XpPoints) == 0x0000E8, "Member 'RH_CatalogBlueprintLibrary_GetLevelAtXp::XpPoints' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetLevelAtXp, ReturnValue) == 0x0000F0, "Member 'RH_CatalogBlueprintLibrary_GetLevelAtXp::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetUnitPrice
// 0x0020 (0x0020 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetUnitPrice final
{
public:
	TArray<struct FRHAPI_PriceBreakpoint>         PriceBreakpoints;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         CurrencyItemId;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetUnitPrice) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetUnitPrice");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetUnitPrice) == 0x000020, "Wrong size on RH_CatalogBlueprintLibrary_GetUnitPrice");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrice, PriceBreakpoints) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrice::PriceBreakpoints' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrice, CurrencyItemId) == 0x000010, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrice::CurrencyItemId' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrice, Quantity) == 0x000014, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrice::Quantity' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrice, Price) == 0x000018, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrice::Price' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrice, ReturnValue) == 0x00001C, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrice::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetUnitPrices
// 0x0038 (0x0038 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetUnitPrices final
{
public:
	TArray<struct FRHAPI_PriceBreakpoint>         PriceBreakpoints;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 CurrencyIds;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRHAPI_PriceBreakPointCurrency> ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetUnitPrices) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetUnitPrices");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetUnitPrices) == 0x000038, "Wrong size on RH_CatalogBlueprintLibrary_GetUnitPrices");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrices, PriceBreakpoints) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrices::PriceBreakpoints' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrices, CurrencyIds) == 0x000010, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrices::CurrencyIds' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrices, Quantity) == 0x000020, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrices::Quantity' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetUnitPrices, ReturnValue) == 0x000028, "Member 'RH_CatalogBlueprintLibrary_GetUnitPrices::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetVendorItemById
// 0x0460 (0x0460 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetVendorItemById final
{
public:
	struct FRHAPI_Vendor                          Vendor;                                            // 0x0000(0x00F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         LootId;                                            // 0x00F8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_Loot                            LootItem;                                          // 0x0100(0x0358)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0458(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetVendorItemById) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetVendorItemById");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetVendorItemById) == 0x000460, "Wrong size on RH_CatalogBlueprintLibrary_GetVendorItemById");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetVendorItemById, Vendor) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetVendorItemById::Vendor' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetVendorItemById, LootId) == 0x0000F8, "Member 'RH_CatalogBlueprintLibrary_GetVendorItemById::LootId' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetVendorItemById, LootItem) == 0x000100, "Member 'RH_CatalogBlueprintLibrary_GetVendorItemById::LootItem' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetVendorItemById, ReturnValue) == 0x000458, "Member 'RH_CatalogBlueprintLibrary_GetVendorItemById::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.GetXpAtLevel
// 0x00F8 (0x00F8 - 0x0000)
struct RH_CatalogBlueprintLibrary_GetXpAtLevel final
{
public:
	struct FRHAPI_XpTable                         XpTable;                                           // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         XpLevel;                                           // 0x00E8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_CatalogBlueprintLibrary_GetXpAtLevel) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_GetXpAtLevel");
static_assert(sizeof(RH_CatalogBlueprintLibrary_GetXpAtLevel) == 0x0000F8, "Wrong size on RH_CatalogBlueprintLibrary_GetXpAtLevel");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetXpAtLevel, XpTable) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_GetXpAtLevel::XpTable' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetXpAtLevel, XpLevel) == 0x0000E8, "Member 'RH_CatalogBlueprintLibrary_GetXpAtLevel::XpLevel' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_GetXpAtLevel, ReturnValue) == 0x0000F0, "Member 'RH_CatalogBlueprintLibrary_GetXpAtLevel::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.IsCouponApplicableForItem
// 0x0368 (0x0368 - 0x0000)
struct RH_CatalogBlueprintLibrary_IsCouponApplicableForItem final
{
public:
	class URH_CatalogItem*                        CouponItem;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_Loot                            LootItem;                                          // 0x0008(0x0358)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0360(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogBlueprintLibrary_IsCouponApplicableForItem) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_IsCouponApplicableForItem");
static_assert(sizeof(RH_CatalogBlueprintLibrary_IsCouponApplicableForItem) == 0x000368, "Wrong size on RH_CatalogBlueprintLibrary_IsCouponApplicableForItem");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForItem, CouponItem) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForItem::CouponItem' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForItem, LootItem) == 0x000008, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForItem::LootItem' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForItem, ReturnValue) == 0x000360, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForItem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_CatalogBlueprintLibrary.IsCouponApplicableForLootId
// 0x0010 (0x0010 - 0x0000)
struct RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId final
{
public:
	class URH_CatalogItem*                        CouponItem;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LootId;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId) == 0x000008, "Wrong alignment on RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId");
static_assert(sizeof(RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId) == 0x000010, "Wrong size on RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId, CouponItem) == 0x000000, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId::CouponItem' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId, LootId) == 0x000008, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId::LootId' has a wrong offset!");
static_assert(offsetof(RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId, ReturnValue) == 0x00000C, "Member 'RH_CatalogBlueprintLibrary_IsCouponApplicableForLootId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.BLUEPRINT_RefreshServerTimeCache
// 0x0010 (0x0010 - 0x0000)
struct RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache final
{
public:
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache) == 0x000004, "Wrong alignment on RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache");
static_assert(sizeof(RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache) == 0x000010, "Wrong size on RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache");
static_assert(offsetof(RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache, Delegate) == 0x000000, "Member 'RH_ConfigSubsystem_BLUEPRINT_RefreshServerTimeCache::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetAnyKV
// 0x0028 (0x0028 - 0x0000)
struct RH_ConfigSubsystem_GetAnyKV final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetAnyKV) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetAnyKV");
static_assert(sizeof(RH_ConfigSubsystem_GetAnyKV) == 0x000028, "Wrong size on RH_ConfigSubsystem_GetAnyKV");
static_assert(offsetof(RH_ConfigSubsystem_GetAnyKV, Key) == 0x000000, "Member 'RH_ConfigSubsystem_GetAnyKV::Key' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetAnyKV, Value) == 0x000010, "Member 'RH_ConfigSubsystem_GetAnyKV::Value' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetAnyKV, ReturnValue) == 0x000020, "Member 'RH_ConfigSubsystem_GetAnyKV::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetAppSetting
// 0x0028 (0x0028 - 0x0000)
struct RH_ConfigSubsystem_GetAppSetting final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetAppSetting) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetAppSetting");
static_assert(sizeof(RH_ConfigSubsystem_GetAppSetting) == 0x000028, "Wrong size on RH_ConfigSubsystem_GetAppSetting");
static_assert(offsetof(RH_ConfigSubsystem_GetAppSetting, Key) == 0x000000, "Member 'RH_ConfigSubsystem_GetAppSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetAppSetting, Value) == 0x000010, "Member 'RH_ConfigSubsystem_GetAppSetting::Value' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetAppSetting, ReturnValue) == 0x000020, "Member 'RH_ConfigSubsystem_GetAppSetting::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetAppSettings
// 0x0050 (0x0050 - 0x0000)
struct RH_ConfigSubsystem_GetAppSettings final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_ConfigSubsystem_GetAppSettings) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetAppSettings");
static_assert(sizeof(RH_ConfigSubsystem_GetAppSettings) == 0x000050, "Wrong size on RH_ConfigSubsystem_GetAppSettings");
static_assert(offsetof(RH_ConfigSubsystem_GetAppSettings, ReturnValue) == 0x000000, "Member 'RH_ConfigSubsystem_GetAppSettings::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetKickBeforeHint
// 0x0008 (0x0008 - 0x0000)
struct RH_ConfigSubsystem_GetKickBeforeHint final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_ConfigSubsystem_GetKickBeforeHint) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetKickBeforeHint");
static_assert(sizeof(RH_ConfigSubsystem_GetKickBeforeHint) == 0x000008, "Wrong size on RH_ConfigSubsystem_GetKickBeforeHint");
static_assert(offsetof(RH_ConfigSubsystem_GetKickBeforeHint, ReturnValue) == 0x000000, "Member 'RH_ConfigSubsystem_GetKickBeforeHint::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetKV
// 0x0028 (0x0028 - 0x0000)
struct RH_ConfigSubsystem_GetKV final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetKV) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetKV");
static_assert(sizeof(RH_ConfigSubsystem_GetKV) == 0x000028, "Wrong size on RH_ConfigSubsystem_GetKV");
static_assert(offsetof(RH_ConfigSubsystem_GetKV, Key) == 0x000000, "Member 'RH_ConfigSubsystem_GetKV::Key' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetKV, Value) == 0x000010, "Member 'RH_ConfigSubsystem_GetKV::Value' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetKV, ReturnValue) == 0x000020, "Member 'RH_ConfigSubsystem_GetKV::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetKVBool
// 0x0018 (0x0018 - 0x0000)
struct RH_ConfigSubsystem_GetKVBool final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DefaultValue;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetKVBool) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetKVBool");
static_assert(sizeof(RH_ConfigSubsystem_GetKVBool) == 0x000018, "Wrong size on RH_ConfigSubsystem_GetKVBool");
static_assert(offsetof(RH_ConfigSubsystem_GetKVBool, Key) == 0x000000, "Member 'RH_ConfigSubsystem_GetKVBool::Key' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetKVBool, DefaultValue) == 0x000010, "Member 'RH_ConfigSubsystem_GetKVBool::DefaultValue' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetKVBool, ReturnValue) == 0x000011, "Member 'RH_ConfigSubsystem_GetKVBool::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetKVs
// 0x0050 (0x0050 - 0x0000)
struct RH_ConfigSubsystem_GetKVs final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_ConfigSubsystem_GetKVs) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetKVs");
static_assert(sizeof(RH_ConfigSubsystem_GetKVs) == 0x000050, "Wrong size on RH_ConfigSubsystem_GetKVs");
static_assert(offsetof(RH_ConfigSubsystem_GetKVs, ReturnValue) == 0x000000, "Member 'RH_ConfigSubsystem_GetKVs::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetServerTime
// 0x0010 (0x0010 - 0x0000)
struct RH_ConfigSubsystem_GetServerTime final
{
public:
	struct FDateTime                              Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetServerTime) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetServerTime");
static_assert(sizeof(RH_ConfigSubsystem_GetServerTime) == 0x000010, "Wrong size on RH_ConfigSubsystem_GetServerTime");
static_assert(offsetof(RH_ConfigSubsystem_GetServerTime, Time) == 0x000000, "Member 'RH_ConfigSubsystem_GetServerTime::Time' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetServerTime, ReturnValue) == 0x000008, "Member 'RH_ConfigSubsystem_GetServerTime::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetServerTimeCache
// 0x0010 (0x0010 - 0x0000)
struct RH_ConfigSubsystem_GetServerTimeCache final
{
public:
	struct FRH_ServerTimeCache                    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_ConfigSubsystem_GetServerTimeCache) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetServerTimeCache");
static_assert(sizeof(RH_ConfigSubsystem_GetServerTimeCache) == 0x000010, "Wrong size on RH_ConfigSubsystem_GetServerTimeCache");
static_assert(offsetof(RH_ConfigSubsystem_GetServerTimeCache, ReturnValue) == 0x000000, "Member 'RH_ConfigSubsystem_GetServerTimeCache::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_ConfigSubsystem.GetServerTimeDrift
// 0x0010 (0x0010 - 0x0000)
struct RH_ConfigSubsystem_GetServerTimeDrift final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_ConfigSubsystem_GetServerTimeDrift) == 0x000008, "Wrong alignment on RH_ConfigSubsystem_GetServerTimeDrift");
static_assert(sizeof(RH_ConfigSubsystem_GetServerTimeDrift) == 0x000010, "Wrong size on RH_ConfigSubsystem_GetServerTimeDrift");
static_assert(offsetof(RH_ConfigSubsystem_GetServerTimeDrift, Timespan) == 0x000000, "Member 'RH_ConfigSubsystem_GetServerTimeDrift::Timespan' has a wrong offset!");
static_assert(offsetof(RH_ConfigSubsystem_GetServerTimeDrift, ReturnValue) == 0x000008, "Member 'RH_ConfigSubsystem_GetServerTimeDrift::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_DiagnosticsBlueprintLibrary.GenerateReport
// 0x0060 (0x0060 - 0x0000)
struct RH_DiagnosticsBlueprintLibrary_GenerateReport final
{
public:
	struct FRH_DiagnosticReportOptions            Options;                                           // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_DiagnosticsBlueprintLibrary_GenerateReport) == 0x000008, "Wrong alignment on RH_DiagnosticsBlueprintLibrary_GenerateReport");
static_assert(sizeof(RH_DiagnosticsBlueprintLibrary_GenerateReport) == 0x000060, "Wrong size on RH_DiagnosticsBlueprintLibrary_GenerateReport");
static_assert(offsetof(RH_DiagnosticsBlueprintLibrary_GenerateReport, Options) == 0x000000, "Member 'RH_DiagnosticsBlueprintLibrary_GenerateReport::Options' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.IsFriendPlatformBlocked
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_IsFriendPlatformBlocked final
{
public:
	const class URH_RHFriendAndPlatformFriend*    Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_IsFriendPlatformBlocked) == 0x000008, "Wrong alignment on RH_FriendSubsystem_IsFriendPlatformBlocked");
static_assert(sizeof(RH_FriendSubsystem_IsFriendPlatformBlocked) == 0x000010, "Wrong size on RH_FriendSubsystem_IsFriendPlatformBlocked");
static_assert(offsetof(RH_FriendSubsystem_IsFriendPlatformBlocked, Player) == 0x000000, "Member 'RH_FriendSubsystem_IsFriendPlatformBlocked::Player' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_IsFriendPlatformBlocked, ReturnValue) == 0x000008, "Member 'RH_FriendSubsystem_IsFriendPlatformBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_AddFriend
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_AddFriend final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid, ERHAPI_FriendshipStatus FriendStatus)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_AddFriend) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_AddFriend");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_AddFriend) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_AddFriend");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddFriend, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_AddFriend::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddFriend, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_AddFriend::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddFriend, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_AddFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_AddNotes
// 0x0038 (0x0038 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_AddNotes final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Notes;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid, const class FString& NewNote)> Delegate; // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_AddNotes) == 0x000008, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_AddNotes");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_AddNotes) == 0x000038, "Wrong size on RH_FriendSubsystem_BLUEPRINT_AddNotes");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddNotes, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_AddNotes::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddNotes, Notes) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_AddNotes::Notes' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddNotes, Delegate) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_AddNotes::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_AddNotes, ReturnValue) == 0x000030, "Member 'RH_FriendSubsystem_BLUEPRINT_AddNotes::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_BlockPlayer
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_BlockPlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_BlockPlayer) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_BlockPlayer");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_BlockPlayer) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_BlockPlayer");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_BlockPlayer, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_BlockPlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_BlockPlayer, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_BlockPlayer::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_BlockPlayer, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_BlockPlayer::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_DeleteNotes
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_DeleteNotes final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_DeleteNotes) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_DeleteNotes");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_DeleteNotes) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_DeleteNotes");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_DeleteNotes, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_DeleteNotes::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_DeleteNotes, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_DeleteNotes::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_DeleteNotes, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_DeleteNotes::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_FetchBlockedList
// 0x0014 (0x0014 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_FetchBlockedList final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedList) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_FetchBlockedList");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedList) == 0x000014, "Wrong size on RH_FriendSubsystem_BLUEPRINT_FetchBlockedList");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedList, Delegate) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchBlockedList::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedList, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchBlockedList::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_FetchBlockedPlayer
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchBlockedPlayer::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_FetchFriend
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_FetchFriend final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_FetchFriend) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_FetchFriend");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_FetchFriend) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_FetchFriend");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchFriend, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchFriend::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchFriend, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchFriend::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchFriend, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_FetchFriendsList
// 0x0014 (0x0014 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_FetchFriendsList final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_FetchFriendsList) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_FetchFriendsList");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_FetchFriendsList) == 0x000014, "Wrong size on RH_FriendSubsystem_BLUEPRINT_FetchFriendsList");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchFriendsList, Delegate) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchFriendsList::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_FetchFriendsList, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_FetchFriendsList::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_RemoveFriend
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_RemoveFriend final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_RemoveFriend) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_RemoveFriend");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_RemoveFriend) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_RemoveFriend");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_RemoveFriend, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_RemoveFriend::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_RemoveFriend, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_RemoveFriend::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_RemoveFriend, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_RemoveFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.BLUEPRINT_UnblockPlayer
// 0x0024 (0x0024 - 0x0000)
struct RH_FriendSubsystem_BLUEPRINT_UnblockPlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_BLUEPRINT_UnblockPlayer) == 0x000004, "Wrong alignment on RH_FriendSubsystem_BLUEPRINT_UnblockPlayer");
static_assert(sizeof(RH_FriendSubsystem_BLUEPRINT_UnblockPlayer) == 0x000024, "Wrong size on RH_FriendSubsystem_BLUEPRINT_UnblockPlayer");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_UnblockPlayer, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_BLUEPRINT_UnblockPlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_UnblockPlayer, Delegate) == 0x000010, "Member 'RH_FriendSubsystem_BLUEPRINT_UnblockPlayer::Delegate' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_BLUEPRINT_UnblockPlayer, ReturnValue) == 0x000020, "Member 'RH_FriendSubsystem_BLUEPRINT_UnblockPlayer::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetOrCreateFriend
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_GetOrCreateFriend final
{
public:
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_RHFriendAndPlatformFriend*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetOrCreateFriend) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetOrCreateFriend");
static_assert(sizeof(RH_FriendSubsystem_GetOrCreateFriend) == 0x000010, "Wrong size on RH_FriendSubsystem_GetOrCreateFriend");
static_assert(offsetof(RH_FriendSubsystem_GetOrCreateFriend, PlayerInfo) == 0x000000, "Member 'RH_FriendSubsystem_GetOrCreateFriend::PlayerInfo' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetOrCreateFriend, ReturnValue) == 0x000008, "Member 'RH_FriendSubsystem_GetOrCreateFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.UpdateRecentPlayerForOSS
// 0x0018 (0x0018 - 0x0000)
struct RH_FriendSubsystem_UpdateRecentPlayerForOSS final
{
public:
	const class URH_LocalPlayerSubsystem*         LocalPlayerSubsystem;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerUuid;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_UpdateRecentPlayerForOSS) == 0x000008, "Wrong alignment on RH_FriendSubsystem_UpdateRecentPlayerForOSS");
static_assert(sizeof(RH_FriendSubsystem_UpdateRecentPlayerForOSS) == 0x000018, "Wrong size on RH_FriendSubsystem_UpdateRecentPlayerForOSS");
static_assert(offsetof(RH_FriendSubsystem_UpdateRecentPlayerForOSS, LocalPlayerSubsystem) == 0x000000, "Member 'RH_FriendSubsystem_UpdateRecentPlayerForOSS::LocalPlayerSubsystem' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_UpdateRecentPlayerForOSS, PlayerUuid) == 0x000008, "Member 'RH_FriendSubsystem_UpdateRecentPlayerForOSS::PlayerUuid' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetBlocked
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_GetBlocked final
{
public:
	TArray<struct FGuid>                          ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetBlocked) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetBlocked");
static_assert(sizeof(RH_FriendSubsystem_GetBlocked) == 0x000010, "Wrong size on RH_FriendSubsystem_GetBlocked");
static_assert(offsetof(RH_FriendSubsystem_GetBlocked, ReturnValue) == 0x000000, "Member 'RH_FriendSubsystem_GetBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetFriendByPlatformId
// 0x0020 (0x0020 - 0x0000)
struct RH_FriendSubsystem_GetFriendByPlatformId final
{
public:
	struct FRH_PlayerPlatformId                   PlatformPlayerId;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_RHFriendAndPlatformFriend*          ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetFriendByPlatformId) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetFriendByPlatformId");
static_assert(sizeof(RH_FriendSubsystem_GetFriendByPlatformId) == 0x000020, "Wrong size on RH_FriendSubsystem_GetFriendByPlatformId");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByPlatformId, PlatformPlayerId) == 0x000000, "Member 'RH_FriendSubsystem_GetFriendByPlatformId::PlatformPlayerId' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByPlatformId, ReturnValue) == 0x000018, "Member 'RH_FriendSubsystem_GetFriendByPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetFriendByPlayerInfo
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_GetFriendByPlayerInfo final
{
public:
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_RHFriendAndPlatformFriend*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetFriendByPlayerInfo) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetFriendByPlayerInfo");
static_assert(sizeof(RH_FriendSubsystem_GetFriendByPlayerInfo) == 0x000010, "Wrong size on RH_FriendSubsystem_GetFriendByPlayerInfo");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByPlayerInfo, PlayerInfo) == 0x000000, "Member 'RH_FriendSubsystem_GetFriendByPlayerInfo::PlayerInfo' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByPlayerInfo, ReturnValue) == 0x000008, "Member 'RH_FriendSubsystem_GetFriendByPlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetFriendByUuid
// 0x0018 (0x0018 - 0x0000)
struct RH_FriendSubsystem_GetFriendByUuid final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_RHFriendAndPlatformFriend*          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetFriendByUuid) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetFriendByUuid");
static_assert(sizeof(RH_FriendSubsystem_GetFriendByUuid) == 0x000018, "Wrong size on RH_FriendSubsystem_GetFriendByUuid");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByUuid, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_GetFriendByUuid::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByUuid, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_GetFriendByUuid::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetFriendByUuidOrPlatformId
// 0x0030 (0x0030 - 0x0000)
struct RH_FriendSubsystem_GetFriendByUuidOrPlatformId final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_PlayerPlatformId                   PlatformPlayerId;                                  // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_RHFriendAndPlatformFriend*          ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetFriendByUuidOrPlatformId) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetFriendByUuidOrPlatformId");
static_assert(sizeof(RH_FriendSubsystem_GetFriendByUuidOrPlatformId) == 0x000030, "Wrong size on RH_FriendSubsystem_GetFriendByUuidOrPlatformId");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByUuidOrPlatformId, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_GetFriendByUuidOrPlatformId::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByUuidOrPlatformId, PlatformPlayerId) == 0x000010, "Member 'RH_FriendSubsystem_GetFriendByUuidOrPlatformId::PlatformPlayerId' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_GetFriendByUuidOrPlatformId, ReturnValue) == 0x000028, "Member 'RH_FriendSubsystem_GetFriendByUuidOrPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetFriends
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_GetFriends final
{
public:
	TArray<class URH_RHFriendAndPlatformFriend*>  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetFriends) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetFriends");
static_assert(sizeof(RH_FriendSubsystem_GetFriends) == 0x000010, "Wrong size on RH_FriendSubsystem_GetFriends");
static_assert(offsetof(RH_FriendSubsystem_GetFriends, ReturnValue) == 0x000000, "Member 'RH_FriendSubsystem_GetFriends::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.GetRH_PlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_FriendSubsystem_GetRH_PlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_GetRH_PlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_FriendSubsystem_GetRH_PlayerInfoSubsystem");
static_assert(sizeof(RH_FriendSubsystem_GetRH_PlayerInfoSubsystem) == 0x000008, "Wrong size on RH_FriendSubsystem_GetRH_PlayerInfoSubsystem");
static_assert(offsetof(RH_FriendSubsystem_GetRH_PlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_FriendSubsystem_GetRH_PlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.HasFriendsCached
// 0x0001 (0x0001 - 0x0000)
struct RH_FriendSubsystem_HasFriendsCached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_FriendSubsystem_HasFriendsCached) == 0x000001, "Wrong alignment on RH_FriendSubsystem_HasFriendsCached");
static_assert(sizeof(RH_FriendSubsystem_HasFriendsCached) == 0x000001, "Wrong size on RH_FriendSubsystem_HasFriendsCached");
static_assert(offsetof(RH_FriendSubsystem_HasFriendsCached, ReturnValue) == 0x000000, "Member 'RH_FriendSubsystem_HasFriendsCached::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.IsFriendBlocked
// 0x0010 (0x0010 - 0x0000)
struct RH_FriendSubsystem_IsFriendBlocked final
{
public:
	const class URH_RHFriendAndPlatformFriend*    Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_IsFriendBlocked) == 0x000008, "Wrong alignment on RH_FriendSubsystem_IsFriendBlocked");
static_assert(sizeof(RH_FriendSubsystem_IsFriendBlocked) == 0x000010, "Wrong size on RH_FriendSubsystem_IsFriendBlocked");
static_assert(offsetof(RH_FriendSubsystem_IsFriendBlocked, Player) == 0x000000, "Member 'RH_FriendSubsystem_IsFriendBlocked::Player' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_IsFriendBlocked, ReturnValue) == 0x000008, "Member 'RH_FriendSubsystem_IsFriendBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.IsPlayerBlocked
// 0x0014 (0x0014 - 0x0000)
struct RH_FriendSubsystem_IsPlayerBlocked final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_IsPlayerBlocked) == 0x000004, "Wrong alignment on RH_FriendSubsystem_IsPlayerBlocked");
static_assert(sizeof(RH_FriendSubsystem_IsPlayerBlocked) == 0x000014, "Wrong size on RH_FriendSubsystem_IsPlayerBlocked");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerBlocked, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_IsPlayerBlocked::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerBlocked, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_IsPlayerBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.IsPlayerPlatformBlocked
// 0x0014 (0x0014 - 0x0000)
struct RH_FriendSubsystem_IsPlayerPlatformBlocked final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_IsPlayerPlatformBlocked) == 0x000004, "Wrong alignment on RH_FriendSubsystem_IsPlayerPlatformBlocked");
static_assert(sizeof(RH_FriendSubsystem_IsPlayerPlatformBlocked) == 0x000014, "Wrong size on RH_FriendSubsystem_IsPlayerPlatformBlocked");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerPlatformBlocked, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_IsPlayerPlatformBlocked::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerPlatformBlocked, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_IsPlayerPlatformBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_FriendSubsystem.IsPlayerRhBlocked
// 0x0014 (0x0014 - 0x0000)
struct RH_FriendSubsystem_IsPlayerRhBlocked final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_FriendSubsystem_IsPlayerRhBlocked) == 0x000004, "Wrong alignment on RH_FriendSubsystem_IsPlayerRhBlocked");
static_assert(sizeof(RH_FriendSubsystem_IsPlayerRhBlocked) == 0x000014, "Wrong size on RH_FriendSubsystem_IsPlayerRhBlocked");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerRhBlocked, PlayerUuid) == 0x000000, "Member 'RH_FriendSubsystem_IsPlayerRhBlocked::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_FriendSubsystem_IsPlayerRhBlocked, ReturnValue) == 0x000010, "Member 'RH_FriendSubsystem_IsPlayerRhBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.Init
// 0x0008 (0x0008 - 0x0000)
struct RH_PlatformFriend_Init final
{
public:
	class URH_PlatformFriend*                     Other;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_Init) == 0x000008, "Wrong alignment on RH_PlatformFriend_Init");
static_assert(sizeof(RH_PlatformFriend_Init) == 0x000008, "Wrong size on RH_PlatformFriend_Init");
static_assert(offsetof(RH_PlatformFriend_Init, Other) == 0x000000, "Member 'RH_PlatformFriend_Init::Other' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.SetBlocked
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_SetBlocked final
{
public:
	bool                                          bNewBlocked;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_SetBlocked) == 0x000001, "Wrong alignment on RH_PlatformFriend_SetBlocked");
static_assert(sizeof(RH_PlatformFriend_SetBlocked) == 0x000001, "Wrong size on RH_PlatformFriend_SetBlocked");
static_assert(offsetof(RH_PlatformFriend_SetBlocked, bNewBlocked) == 0x000000, "Member 'RH_PlatformFriend_SetBlocked::bNewBlocked' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetClientDisplayName
// 0x0010 (0x0010 - 0x0000)
struct RH_PlatformFriend_GetClientDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetClientDisplayName) == 0x000008, "Wrong alignment on RH_PlatformFriend_GetClientDisplayName");
static_assert(sizeof(RH_PlatformFriend_GetClientDisplayName) == 0x000010, "Wrong size on RH_PlatformFriend_GetClientDisplayName");
static_assert(offsetof(RH_PlatformFriend_GetClientDisplayName, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetClientDisplayName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetPlatform
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_GetPlatform final
{
public:
	ERHAPI_Platform                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetPlatform) == 0x000001, "Wrong alignment on RH_PlatformFriend_GetPlatform");
static_assert(sizeof(RH_PlatformFriend_GetPlatform) == 0x000001, "Wrong size on RH_PlatformFriend_GetPlatform");
static_assert(offsetof(RH_PlatformFriend_GetPlatform, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetPlatform::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetPlatformBase
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_GetPlatformBase final
{
public:
	ERHAPI_Platform                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetPlatformBase) == 0x000001, "Wrong alignment on RH_PlatformFriend_GetPlatformBase");
static_assert(sizeof(RH_PlatformFriend_GetPlatformBase) == 0x000001, "Wrong size on RH_PlatformFriend_GetPlatformBase");
static_assert(offsetof(RH_PlatformFriend_GetPlatformBase, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetPlatformBase::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetPlatformUserId
// 0x0010 (0x0010 - 0x0000)
struct RH_PlatformFriend_GetPlatformUserId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetPlatformUserId) == 0x000008, "Wrong alignment on RH_PlatformFriend_GetPlatformUserId");
static_assert(sizeof(RH_PlatformFriend_GetPlatformUserId) == 0x000010, "Wrong size on RH_PlatformFriend_GetPlatformUserId");
static_assert(offsetof(RH_PlatformFriend_GetPlatformUserId, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetPlatformUserId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetPlayerPlatformId
// 0x0018 (0x0018 - 0x0000)
struct RH_PlatformFriend_GetPlayerPlatformId final
{
public:
	struct FRH_PlayerPlatformId                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetPlayerPlatformId) == 0x000008, "Wrong alignment on RH_PlatformFriend_GetPlayerPlatformId");
static_assert(sizeof(RH_PlatformFriend_GetPlayerPlatformId) == 0x000018, "Wrong size on RH_PlatformFriend_GetPlayerPlatformId");
static_assert(offsetof(RH_PlatformFriend_GetPlayerPlatformId, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetPlayerPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.GetRichPresenceInfo
// 0x0010 (0x0010 - 0x0000)
struct RH_PlatformFriend_GetRichPresenceInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_GetRichPresenceInfo) == 0x000008, "Wrong alignment on RH_PlatformFriend_GetRichPresenceInfo");
static_assert(sizeof(RH_PlatformFriend_GetRichPresenceInfo) == 0x000010, "Wrong size on RH_PlatformFriend_GetRichPresenceInfo");
static_assert(offsetof(RH_PlatformFriend_GetRichPresenceInfo, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_GetRichPresenceInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.HasAnyRelationship
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_HasAnyRelationship final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_HasAnyRelationship) == 0x000001, "Wrong alignment on RH_PlatformFriend_HasAnyRelationship");
static_assert(sizeof(RH_PlatformFriend_HasAnyRelationship) == 0x000001, "Wrong size on RH_PlatformFriend_HasAnyRelationship");
static_assert(offsetof(RH_PlatformFriend_HasAnyRelationship, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_HasAnyRelationship::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.HasPendingFriendRequestFromYou
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_HasPendingFriendRequestFromYou final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_HasPendingFriendRequestFromYou) == 0x000001, "Wrong alignment on RH_PlatformFriend_HasPendingFriendRequestFromYou");
static_assert(sizeof(RH_PlatformFriend_HasPendingFriendRequestFromYou) == 0x000001, "Wrong size on RH_PlatformFriend_HasPendingFriendRequestFromYou");
static_assert(offsetof(RH_PlatformFriend_HasPendingFriendRequestFromYou, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_HasPendingFriendRequestFromYou::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.HasPendingFriendRequestToYou
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_HasPendingFriendRequestToYou final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_HasPendingFriendRequestToYou) == 0x000001, "Wrong alignment on RH_PlatformFriend_HasPendingFriendRequestToYou");
static_assert(sizeof(RH_PlatformFriend_HasPendingFriendRequestToYou) == 0x000001, "Wrong size on RH_PlatformFriend_HasPendingFriendRequestToYou");
static_assert(offsetof(RH_PlatformFriend_HasPendingFriendRequestToYou, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_HasPendingFriendRequestToYou::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsBlocked
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsBlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsBlocked) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsBlocked");
static_assert(sizeof(RH_PlatformFriend_IsBlocked) == 0x000001, "Wrong size on RH_PlatformFriend_IsBlocked");
static_assert(offsetof(RH_PlatformFriend_IsBlocked, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsBlocked::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsDND
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsDND final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsDND) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsDND");
static_assert(sizeof(RH_PlatformFriend_IsDND) == 0x000001, "Wrong size on RH_PlatformFriend_IsDND");
static_assert(offsetof(RH_PlatformFriend_IsDND, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsDND::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsFriend
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsFriend final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsFriend) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsFriend");
static_assert(sizeof(RH_PlatformFriend_IsFriend) == 0x000001, "Wrong size on RH_PlatformFriend_IsFriend");
static_assert(offsetof(RH_PlatformFriend_IsFriend, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsJoinable
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsJoinable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsJoinable) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsJoinable");
static_assert(sizeof(RH_PlatformFriend_IsJoinable) == 0x000001, "Wrong size on RH_PlatformFriend_IsJoinable");
static_assert(offsetof(RH_PlatformFriend_IsJoinable, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsJoinable::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsOnline
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsOnline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsOnline) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsOnline");
static_assert(sizeof(RH_PlatformFriend_IsOnline) == 0x000001, "Wrong size on RH_PlatformFriend_IsOnline");
static_assert(offsetof(RH_PlatformFriend_IsOnline, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsOnline::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsPlayingGame
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsPlayingGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsPlayingGame) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsPlayingGame");
static_assert(sizeof(RH_PlatformFriend_IsPlayingGame) == 0x000001, "Wrong size on RH_PlatformFriend_IsPlayingGame");
static_assert(offsetof(RH_PlatformFriend_IsPlayingGame, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsPlayingGame::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformFriend.IsPlayingThisGame
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformFriend_IsPlayingThisGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformFriend_IsPlayingThisGame) == 0x000001, "Wrong alignment on RH_PlatformFriend_IsPlayingThisGame");
static_assert(sizeof(RH_PlatformFriend_IsPlayingThisGame) == 0x000001, "Wrong size on RH_PlatformFriend_IsPlayingThisGame");
static_assert(offsetof(RH_PlatformFriend_IsPlayingThisGame, ReturnValue) == 0x000000, "Member 'RH_PlatformFriend_IsPlayingThisGame::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.BLUEPRINT_GetLastKnownDisplayNameAsync
// 0x0020 (0x0020 - 0x0000)
struct RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync final
{
public:
	struct FTimespan                              StaleThreshold;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Platform                               PreferredPlatformType;                             // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const class FString& DisplayName)> Delegate;                       // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync) == 0x000020, "Wrong size on RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync, StaleThreshold) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync, bForceRefresh) == 0x000008, "Member 'RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync, PreferredPlatformType) == 0x000009, "Member 'RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync::PreferredPlatformType' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync, Delegate) == 0x00000C, "Member 'RH_RHFriendAndPlatformFriend_BLUEPRINT_GetLastKnownDisplayNameAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.BLUEPRINT_GetRHPlayerUuidAsync
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync final
{
public:
	TDelegate<void(bool bSuccess, const struct FGuid& PlayerUuid)> Delegate;                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync) == 0x000004, "Wrong alignment on RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync, Delegate) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_BLUEPRINT_GetRHPlayerUuidAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.AreFriends
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_AreFriends final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_AreFriends) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_AreFriends");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_AreFriends) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_AreFriends");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_AreFriends, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_AreFriends::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.ArePlatformFriends
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_ArePlatformFriends final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_ArePlatformFriends) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_ArePlatformFriends");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_ArePlatformFriends) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_ArePlatformFriends");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_ArePlatformFriends, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_ArePlatformFriends::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.AreRHFriends
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_AreRHFriends final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_AreRHFriends) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_AreRHFriends");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_AreRHFriends) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_AreRHFriends");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_AreRHFriends, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_AreRHFriends::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.AwaitingFriendshipResponse
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_AwaitingFriendshipResponse::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.CanViewPlatformProfile
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_CanViewPlatformProfile final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_CanViewPlatformProfile) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_CanViewPlatformProfile");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_CanViewPlatformProfile) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_CanViewPlatformProfile");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_CanViewPlatformProfile, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_CanViewPlatformProfile::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.FriendRequestSent
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_FriendRequestSent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_FriendRequestSent) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_FriendRequestSent");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_FriendRequestSent) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_FriendRequestSent");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_FriendRequestSent, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_FriendRequestSent::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetFriendSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetFriendSubsystem final
{
public:
	class URH_FriendSubsystem*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetFriendSubsystem) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetFriendSubsystem");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetFriendSubsystem) == 0x000008, "Wrong size on RH_RHFriendAndPlatformFriend_GetFriendSubsystem");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetFriendSubsystem, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetFriendSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetLastKnownDisplayName
// 0x0018 (0x0018 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName final
{
public:
	ERHAPI_Platform                               PreferredPlatformType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName) == 0x000018, "Wrong size on RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName, PreferredPlatformType) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName::PreferredPlatformType' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName, ReturnValue) == 0x000008, "Member 'RH_RHFriendAndPlatformFriend_GetLastKnownDisplayName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetLastModifiedOn
// 0x0008 (0x0008 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetLastModifiedOn final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetLastModifiedOn) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetLastModifiedOn");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetLastModifiedOn) == 0x000008, "Wrong size on RH_RHFriendAndPlatformFriend_GetLastModifiedOn");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetLastModifiedOn, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetLastModifiedOn::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetNotes
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetNotes final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetNotes) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetNotes");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetNotes) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetNotes");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetNotes, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetNotes::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlatformFriend
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlatformFriend final
{
public:
	ERHAPI_Platform                               Platform;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlatformFriend*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlatformFriend) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlatformFriend");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlatformFriend) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlatformFriend");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriend, Platform) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriend::Platform' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriend, ReturnValue) == 0x000008, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriend::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlatformFriendAtIndex
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlatformFriend*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex, Index_0) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex, ReturnValue) == 0x000008, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriendAtIndex::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlatformFriendBase
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlatformFriendBase final
{
public:
	ERHAPI_Platform                               Platform;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlatformFriend*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlatformFriendBase) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlatformFriendBase");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlatformFriendBase) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlatformFriendBase");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriendBase, Platform) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriendBase::Platform' has a wrong offset!");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriendBase, ReturnValue) == 0x000008, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriendBase::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlatformFriends
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlatformFriends final
{
public:
	TArray<class URH_PlatformFriend*>             ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlatformFriends) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlatformFriends");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlatformFriends) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlatformFriends");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlatformFriends, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlatformFriends::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlayerAndPlatformInfo
// 0x0028 (0x0028 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo final
{
public:
	struct FRH_PlayerAndPlatformInfo              ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo) == 0x000028, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlayerAndPlatformInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPlayerInfo
// 0x0008 (0x0008 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPlayerInfo final
{
public:
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPlayerInfo) == 0x000008, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPlayerInfo");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPlayerInfo) == 0x000008, "Wrong size on RH_RHFriendAndPlatformFriend_GetPlayerInfo");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPlayerInfo, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetPreviousStatus
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetPreviousStatus final
{
public:
	ERHAPI_FriendshipStatus                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetPreviousStatus) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetPreviousStatus");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetPreviousStatus) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_GetPreviousStatus");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetPreviousStatus, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetPreviousStatus::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetRHPlayerUuid
// 0x0010 (0x0010 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetRHPlayerUuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetRHPlayerUuid) == 0x000004, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetRHPlayerUuid");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetRHPlayerUuid) == 0x000010, "Wrong size on RH_RHFriendAndPlatformFriend_GetRHPlayerUuid");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetRHPlayerUuid, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetRHPlayerUuid::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_GetStatus final
{
public:
	ERHAPI_FriendshipStatus                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_GetStatus) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_GetStatus");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_GetStatus) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_GetStatus");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_GetStatus, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_GetStatus::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.HaveAnyRelationship
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_HaveAnyRelationship final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_HaveAnyRelationship) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_HaveAnyRelationship");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_HaveAnyRelationship) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_HaveAnyRelationship");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_HaveAnyRelationship, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_HaveAnyRelationship::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.HavePlatformRelationship
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_HavePlatformRelationship final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_HavePlatformRelationship) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_HavePlatformRelationship");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_HavePlatformRelationship) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_HavePlatformRelationship");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_HavePlatformRelationship, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_HavePlatformRelationship::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.HaveRhRelationship
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_HaveRhRelationship final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_HaveRhRelationship) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_HaveRhRelationship");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_HaveRhRelationship) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_HaveRhRelationship");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_HaveRhRelationship, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_HaveRhRelationship::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.IsDND
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_IsDND final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_IsDND) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_IsDND");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_IsDND) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_IsDND");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_IsDND, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_IsDND::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.IsOnline
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_IsOnline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_IsOnline) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_IsOnline");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_IsOnline) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_IsOnline");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_IsOnline, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_IsOnline::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.IsPlayingThisGame
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_IsPlayingThisGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_IsPlayingThisGame) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_IsPlayingThisGame");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_IsPlayingThisGame) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_IsPlayingThisGame");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_IsPlayingThisGame, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_IsPlayingThisGame::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.OtherDeclinedFriendship
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_OtherDeclinedFriendship::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.OtherIsAwaitingFriendshipResponse
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_OtherIsAwaitingFriendshipResponse::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.PendingFriendRequest
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_PendingFriendRequest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_PendingFriendRequest) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_PendingFriendRequest");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_PendingFriendRequest) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_PendingFriendRequest");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_PendingFriendRequest, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_PendingFriendRequest::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.RHFriendRequestSent
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_RHFriendRequestSent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_RHFriendRequestSent) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_RHFriendRequestSent");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_RHFriendRequestSent) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_RHFriendRequestSent");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_RHFriendRequestSent, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_RHFriendRequestSent::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.RhPendingFriendRequest
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_RhPendingFriendRequest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_RhPendingFriendRequest) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_RhPendingFriendRequest");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_RhPendingFriendRequest) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_RhPendingFriendRequest");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_RhPendingFriendRequest, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_RhPendingFriendRequest::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RHFriendAndPlatformFriend.ViewPlatformProfile
// 0x0001 (0x0001 - 0x0000)
struct RH_RHFriendAndPlatformFriend_ViewPlatformProfile final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RHFriendAndPlatformFriend_ViewPlatformProfile) == 0x000001, "Wrong alignment on RH_RHFriendAndPlatformFriend_ViewPlatformProfile");
static_assert(sizeof(RH_RHFriendAndPlatformFriend_ViewPlatformProfile) == 0x000001, "Wrong size on RH_RHFriendAndPlatformFriend_ViewPlatformProfile");
static_assert(offsetof(RH_RHFriendAndPlatformFriend_ViewPlatformProfile, ReturnValue) == 0x000000, "Member 'RH_RHFriendAndPlatformFriend_ViewPlatformProfile::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.BLUEPRINT_CustomEndpoint
// 0x0048 (0x0048 - 0x0000)
struct RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint final
{
public:
	struct FRH_CustomEndpointRequestWrapper       Request;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FRH_CustomEndpointResponseWrapper& CustomResponseWrapper)> Delegate; // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint");
static_assert(sizeof(RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint) == 0x000048, "Wrong size on RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint");
static_assert(offsetof(RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint, Request) == 0x000000, "Member 'RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint::Request' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint, Delegate) == 0x000038, "Member 'RH_GameInstanceSubsystem_BLUEPRINT_CustomEndpoint::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetCatalogSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetCatalogSubsystem final
{
public:
	class URH_CatalogSubsystem*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetCatalogSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetCatalogSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetCatalogSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetCatalogSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetCatalogSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetCatalogSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetClientBootstrapper
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetClientBootstrapper final
{
public:
	class URH_GameInstanceClientBootstrapper*     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetClientBootstrapper) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetClientBootstrapper");
static_assert(sizeof(RH_GameInstanceSubsystem_GetClientBootstrapper) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetClientBootstrapper");
static_assert(offsetof(RH_GameInstanceSubsystem_GetClientBootstrapper, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetClientBootstrapper::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetConfigSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetConfigSubsystem final
{
public:
	class URH_ConfigSubsystem*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetConfigSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetConfigSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetConfigSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetConfigSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetConfigSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetConfigSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetGuideSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetGuideSubsystem final
{
public:
	class URH_GuideSubsystem*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetGuideSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetGuideSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetGuideSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetGuideSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetGuideSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetGuideSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetLastKnownIPAddress
// 0x0010 (0x0010 - 0x0000)
struct RH_GameInstanceSubsystem_GetLastKnownIPAddress final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetLastKnownIPAddress) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetLastKnownIPAddress");
static_assert(sizeof(RH_GameInstanceSubsystem_GetLastKnownIPAddress) == 0x000010, "Wrong size on RH_GameInstanceSubsystem_GetLastKnownIPAddress");
static_assert(offsetof(RH_GameInstanceSubsystem_GetLastKnownIPAddress, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetLastKnownIPAddress::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetLeaderboardSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetLeaderboardSubsystem final
{
public:
	class URH_LeaderboardSubsystem*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetLeaderboardSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetLeaderboardSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetLeaderboardSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetLeaderboardSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetLeaderboardSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetLeaderboardSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetMatchmakingCache
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetMatchmakingCache final
{
public:
	class URH_MatchmakingBrowserCache*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetMatchmakingCache) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetMatchmakingCache");
static_assert(sizeof(RH_GameInstanceSubsystem_GetMatchmakingCache) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetMatchmakingCache");
static_assert(offsetof(RH_GameInstanceSubsystem_GetMatchmakingCache, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetMatchmakingCache::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetMatchSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetMatchSubsystem final
{
public:
	class URH_MatchSubsystem*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetMatchSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetMatchSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetMatchSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetMatchSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetMatchSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetMatchSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetPlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetPlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetPlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetPlayerInfoSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetPlayerInfoSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetPlayerInfoSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetPlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetPlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetRemoteFileSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetRemoteFileSubsystem final
{
public:
	class URH_RemoteFileSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetRemoteFileSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetRemoteFileSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetRemoteFileSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetRemoteFileSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetRemoteFileSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetRemoteFileSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetServerBootstrapper
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetServerBootstrapper final
{
public:
	class URH_GameInstanceServerBootstrapper*     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetServerBootstrapper) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetServerBootstrapper");
static_assert(sizeof(RH_GameInstanceSubsystem_GetServerBootstrapper) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetServerBootstrapper");
static_assert(offsetof(RH_GameInstanceSubsystem_GetServerBootstrapper, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetServerBootstrapper::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetSessionSearchCache
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetSessionSearchCache final
{
public:
	class URH_SessionBrowserCache*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetSessionSearchCache) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetSessionSearchCache");
static_assert(sizeof(RH_GameInstanceSubsystem_GetSessionSearchCache) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetSessionSearchCache");
static_assert(offsetof(RH_GameInstanceSubsystem_GetSessionSearchCache, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetSessionSearchCache::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetSessionSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetSessionSubsystem final
{
public:
	class URH_GameInstanceSessionSubsystem*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetSessionSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetSessionSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetSessionSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetSessionSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetSessionSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetSessionSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSubsystem.GetSettingsSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSubsystem_GetSettingsSubsystem final
{
public:
	class URH_SettingsSubsystem*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSubsystem_GetSettingsSubsystem) == 0x000008, "Wrong alignment on RH_GameInstanceSubsystem_GetSettingsSubsystem");
static_assert(sizeof(RH_GameInstanceSubsystem_GetSettingsSubsystem) == 0x000008, "Wrong size on RH_GameInstanceSubsystem_GetSettingsSubsystem");
static_assert(offsetof(RH_GameInstanceSubsystem_GetSettingsSubsystem, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSubsystem_GetSettingsSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.RemoveSessionById
// 0x0010 (0x0010 - 0x0000)
struct RH_GameInstanceServerBootstrapper_RemoveSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_RemoveSessionById) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_RemoveSessionById");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_RemoveSessionById) == 0x000010, "Wrong size on RH_GameInstanceServerBootstrapper_RemoveSessionById");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_RemoveSessionById, SessionId) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_RemoveSessionById::SessionId' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetBootstrapMode
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetBootstrapMode final
{
public:
	ERH_ServerBootstrapMode                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetBootstrapMode) == 0x000001, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetBootstrapMode");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetBootstrapMode) == 0x000001, "Wrong size on RH_GameInstanceServerBootstrapper_GetBootstrapMode");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetBootstrapMode, ReturnValue) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetBootstrapMode::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetBootstrapStep
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetBootstrapStep final
{
public:
	ERH_ServerBootstrapFlowStep                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetBootstrapStep) == 0x000001, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetBootstrapStep");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetBootstrapStep) == 0x000001, "Wrong size on RH_GameInstanceServerBootstrapper_GetBootstrapStep");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetBootstrapStep, ReturnValue) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetBootstrapStep::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetPlatformSyncerByPlatformSessionId
// 0x0038 (0x0038 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId final
{
public:
	struct FUniqueNetIdRepl                       PlatformSessionId;                                 // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId) == 0x000038, "Wrong size on RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId, PlatformSessionId) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId::PlatformSessionId' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId, ReturnValue) == 0x000030, "Member 'RH_GameInstanceServerBootstrapper_GetPlatformSyncerByPlatformSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetPlatformSyncerByRHSessionId
// 0x0018 (0x0018 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId) == 0x000018, "Wrong size on RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId, SessionId) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId, ReturnValue) == 0x000010, "Member 'RH_GameInstanceServerBootstrapper_GetPlatformSyncerByRHSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetSession
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetSession final
{
public:
	class URH_OnlineSession*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetSession) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetSession");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetSession) == 0x000008, "Wrong size on RH_GameInstanceServerBootstrapper_GetSession");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetSession, ReturnValue) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetSessionById
// 0x0018 (0x0018 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_SessionView*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetSessionById) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetSessionById");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetSessionById) == 0x000018, "Wrong size on RH_GameInstanceServerBootstrapper_GetSessionById");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetSessionById, SessionId) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetSessionById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetSessionById, ReturnValue) == 0x000010, "Member 'RH_GameInstanceServerBootstrapper_GetSessionById::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceServerBootstrapper.GetTemplate
// 0x0230 (0x0230 - 0x0000)
struct RH_GameInstanceServerBootstrapper_GetTemplate final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SessionTemplate                 Template;                                          // 0x0010(0x0218)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceServerBootstrapper_GetTemplate) == 0x000008, "Wrong alignment on RH_GameInstanceServerBootstrapper_GetTemplate");
static_assert(sizeof(RH_GameInstanceServerBootstrapper_GetTemplate) == 0x000230, "Wrong size on RH_GameInstanceServerBootstrapper_GetTemplate");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetTemplate, Type) == 0x000000, "Member 'RH_GameInstanceServerBootstrapper_GetTemplate::Type' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetTemplate, Template) == 0x000010, "Member 'RH_GameInstanceServerBootstrapper_GetTemplate::Template' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceServerBootstrapper_GetTemplate, ReturnValue) == 0x000228, "Member 'RH_GameInstanceServerBootstrapper_GetTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceClientBootstrapper.CreateOfflineSession
// 0x0030 (0x0030 - 0x0000)
struct RH_GameInstanceClientBootstrapper_CreateOfflineSession final
{
public:
	class FString                                 SessionType;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeamId;                                            // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SessionId;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_OfflineSession*                     ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceClientBootstrapper_CreateOfflineSession) == 0x000008, "Wrong alignment on RH_GameInstanceClientBootstrapper_CreateOfflineSession");
static_assert(sizeof(RH_GameInstanceClientBootstrapper_CreateOfflineSession) == 0x000030, "Wrong size on RH_GameInstanceClientBootstrapper_CreateOfflineSession");
static_assert(offsetof(RH_GameInstanceClientBootstrapper_CreateOfflineSession, SessionType) == 0x000000, "Member 'RH_GameInstanceClientBootstrapper_CreateOfflineSession::SessionType' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceClientBootstrapper_CreateOfflineSession, TeamId) == 0x000010, "Member 'RH_GameInstanceClientBootstrapper_CreateOfflineSession::TeamId' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceClientBootstrapper_CreateOfflineSession, SessionId) == 0x000018, "Member 'RH_GameInstanceClientBootstrapper_CreateOfflineSession::SessionId' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceClientBootstrapper_CreateOfflineSession, ReturnValue) == 0x000028, "Member 'RH_GameInstanceClientBootstrapper_CreateOfflineSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.BLUEPRINT_StartJoinInstanceFlow
// 0x0014 (0x0014 - 0x0000)
struct RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow final
{
public:
	TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow) == 0x000004, "Wrong alignment on RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow) == 0x000014, "Wrong size on RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow, Delegate) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow::Delegate' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow, ReturnValue) == 0x000010, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_StartJoinInstanceFlow::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.BLUEPRINT_StartLeaveInstanceFlow
// 0x0014 (0x0014 - 0x0000)
struct RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow final
{
public:
	bool                                          bAlreadyDisconnected;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckDesired;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)> Delegate; // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow) == 0x000004, "Wrong alignment on RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow) == 0x000014, "Wrong size on RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow, bAlreadyDisconnected) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow::bAlreadyDisconnected' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow, bCheckDesired) == 0x000001, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow::bCheckDesired' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow, Delegate) == 0x000004, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_StartLeaveInstanceFlow::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.BLUEPRINT_SyncToSession
// 0x0018 (0x0018 - 0x0000)
struct RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession final
{
public:
	class URH_JoinedSession*                      SessionInfo;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)> Delegate; // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession) == 0x000018, "Wrong size on RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession, SessionInfo) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession::SessionInfo' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession, Delegate) == 0x000008, "Member 'RH_GameInstanceSessionSubsystem_BLUEPRINT_SyncToSession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetActiveMatchId
// 0x0010 (0x0010 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetActiveMatchId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetActiveMatchId) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetActiveMatchId");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetActiveMatchId) == 0x000010, "Wrong size on RH_GameInstanceSessionSubsystem_GetActiveMatchId");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetActiveMatchId, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetActiveMatchId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetActiveSession
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetActiveSession final
{
public:
	class URH_JoinedSession*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetActiveSession) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetActiveSession");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetActiveSession) == 0x000008, "Wrong size on RH_GameInstanceSessionSubsystem_GetActiveSession");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetActiveSession, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetActiveSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetActiveSessionState
// 0x07A8 (0x07A8 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetActiveSessionState final
{
public:
	struct FRH_ActiveSessionState                 ReturnValue;                                       // 0x0000(0x07A8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetActiveSessionState) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetActiveSessionState");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetActiveSessionState) == 0x0007A8, "Wrong size on RH_GameInstanceSessionSubsystem_GetActiveSessionState");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetActiveSessionState, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetActiveSessionState::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetDesiredSession
// 0x0008 (0x0008 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetDesiredSession final
{
public:
	class URH_JoinedSession*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetDesiredSession) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetDesiredSession");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetDesiredSession) == 0x000008, "Wrong size on RH_GameInstanceSessionSubsystem_GetDesiredSession");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetDesiredSession, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetDesiredSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetInstanceHealthStatusToReport
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport final
{
public:
	ERHAPI_InstanceHealthStatus                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport) == 0x000001, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport) == 0x000001, "Wrong size on RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetInstanceHealthStatusToReport::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetShouldKeepBackfillAlive
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive) == 0x000001, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive) == 0x000001, "Wrong size on RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetShouldKeepBackfillAlive::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.GetShouldKeepInstanceHealthAlive
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive) == 0x000001, "Wrong alignment on RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive) == 0x000001, "Wrong size on RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_GetShouldKeepInstanceHealthAlive::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsBackfillTerminated
// 0x0001 (0x0001 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsBackfillTerminated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsBackfillTerminated) == 0x000001, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsBackfillTerminated");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsBackfillTerminated) == 0x000001, "Wrong size on RH_GameInstanceSessionSubsystem_IsBackfillTerminated");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsBackfillTerminated, ReturnValue) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsBackfillTerminated::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsLocallyHostedInstance
// 0x0258 (0x0258 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance final
{
public:
	struct FRHAPI_InstanceInfo                    Instance;                                          // 0x0000(0x0250)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0250(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance) == 0x000258, "Wrong size on RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance, Instance) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance::Instance' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance, ReturnValue) == 0x000250, "Member 'RH_GameInstanceSessionSubsystem_IsLocallyHostedInstance::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsLocallyHostedSession
// 0x0010 (0x0010 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsLocallyHostedSession final
{
public:
	const class URH_JoinedSession*                Session;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsLocallyHostedSession) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsLocallyHostedSession");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsLocallyHostedSession) == 0x000010, "Wrong size on RH_GameInstanceSessionSubsystem_IsLocallyHostedSession");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsLocallyHostedSession, Session) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsLocallyHostedSession::Session' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsLocallyHostedSession, ReturnValue) == 0x000008, "Member 'RH_GameInstanceSessionSubsystem_IsLocallyHostedSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsPlayerLocal
// 0x0170 (0x0170 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsPlayerLocal final
{
public:
	struct FRHAPI_SessionPlayer                   Player;                                            // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsPlayerLocal) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsPlayerLocal");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsPlayerLocal) == 0x000170, "Wrong size on RH_GameInstanceSessionSubsystem_IsPlayerLocal");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsPlayerLocal, Player) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsPlayerLocal::Player' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsPlayerLocal, ReturnValue) == 0x000168, "Member 'RH_GameInstanceSessionSubsystem_IsPlayerLocal::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsReadyToJoinInstance
// 0x0010 (0x0010 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance final
{
public:
	const class URH_JoinedSession*                Session;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLog;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance) == 0x000010, "Wrong size on RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance, Session) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance::Session' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance, bLog) == 0x000008, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance::bLog' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance, ReturnValue) == 0x000009, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstance::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GameInstanceSessionSubsystem.IsReadyToJoinInstanceWithReason
// 0x0020 (0x0020 - 0x0000)
struct RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason final
{
public:
	const class URH_JoinedSession*                Session;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason) == 0x000008, "Wrong alignment on RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason");
static_assert(sizeof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason) == 0x000020, "Wrong size on RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason, Session) == 0x000000, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason::Session' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason, Error) == 0x000008, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason::Error' has a wrong offset!");
static_assert(offsetof(RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason, ReturnValue) == 0x000018, "Member 'RH_GameInstanceSessionSubsystem_IsReadyToJoinInstanceWithReason::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSearch.BLUEPRINT_RequestNextPage
// 0x0014 (0x0014 - 0x0000)
struct RH_GuideSearch_BLUEPRINT_RequestNextPage final
{
public:
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GuideSearch_BLUEPRINT_RequestNextPage) == 0x000004, "Wrong alignment on RH_GuideSearch_BLUEPRINT_RequestNextPage");
static_assert(sizeof(RH_GuideSearch_BLUEPRINT_RequestNextPage) == 0x000014, "Wrong size on RH_GuideSearch_BLUEPRINT_RequestNextPage");
static_assert(offsetof(RH_GuideSearch_BLUEPRINT_RequestNextPage, Delegate) == 0x000000, "Member 'RH_GuideSearch_BLUEPRINT_RequestNextPage::Delegate' has a wrong offset!");
static_assert(offsetof(RH_GuideSearch_BLUEPRINT_RequestNextPage, ReturnValue) == 0x000010, "Member 'RH_GuideSearch_BLUEPRINT_RequestNextPage::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSearch.GetInputRequest
// 0x0278 (0x0278 - 0x0000)
struct RH_GuideSearch_GetInputRequest final
{
public:
	struct FRH_GuideSearchRequest                 ReturnValue;                                       // 0x0000(0x0278)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSearch_GetInputRequest) == 0x000008, "Wrong alignment on RH_GuideSearch_GetInputRequest");
static_assert(sizeof(RH_GuideSearch_GetInputRequest) == 0x000278, "Wrong size on RH_GuideSearch_GetInputRequest");
static_assert(offsetof(RH_GuideSearch_GetInputRequest, ReturnValue) == 0x000000, "Member 'RH_GuideSearch_GetInputRequest::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSearch.GetRequestInProgress
// 0x0001 (0x0001 - 0x0000)
struct RH_GuideSearch_GetRequestInProgress final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSearch_GetRequestInProgress) == 0x000001, "Wrong alignment on RH_GuideSearch_GetRequestInProgress");
static_assert(sizeof(RH_GuideSearch_GetRequestInProgress) == 0x000001, "Wrong size on RH_GuideSearch_GetRequestInProgress");
static_assert(offsetof(RH_GuideSearch_GetRequestInProgress, ReturnValue) == 0x000000, "Member 'RH_GuideSearch_GetRequestInProgress::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSearch.GetResultPages
// 0x0010 (0x0010 - 0x0000)
struct RH_GuideSearch_GetResultPages final
{
public:
	TArray<struct FRHAPI_SearchGuideResponse>     ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSearch_GetResultPages) == 0x000008, "Wrong alignment on RH_GuideSearch_GetResultPages");
static_assert(sizeof(RH_GuideSearch_GetResultPages) == 0x000010, "Wrong size on RH_GuideSearch_GetResultPages");
static_assert(offsetof(RH_GuideSearch_GetResultPages, ReturnValue) == 0x000000, "Member 'RH_GuideSearch_GetResultPages::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSearch.HasMorePages
// 0x0001 (0x0001 - 0x0000)
struct RH_GuideSearch_HasMorePages final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSearch_HasMorePages) == 0x000001, "Wrong alignment on RH_GuideSearch_HasMorePages");
static_assert(sizeof(RH_GuideSearch_HasMorePages) == 0x000001, "Wrong size on RH_GuideSearch_HasMorePages");
static_assert(offsetof(RH_GuideSearch_HasMorePages, ReturnValue) == 0x000000, "Member 'RH_GuideSearch_HasMorePages::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.BLUEPRINT_CreateGuide
// 0x03C0 (0x03C0 - 0x0000)
struct RH_GuideSubsystem_BLUEPRINT_CreateGuide final
{
public:
	struct FRHAPI_GuideCreateRequest              Request;                                           // 0x0000(0x03B0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)> Delegate; // 0x03B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_BLUEPRINT_CreateGuide) == 0x000008, "Wrong alignment on RH_GuideSubsystem_BLUEPRINT_CreateGuide");
static_assert(sizeof(RH_GuideSubsystem_BLUEPRINT_CreateGuide) == 0x0003C0, "Wrong size on RH_GuideSubsystem_BLUEPRINT_CreateGuide");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_CreateGuide, Request) == 0x000000, "Member 'RH_GuideSubsystem_BLUEPRINT_CreateGuide::Request' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_CreateGuide, Delegate) == 0x0003B0, "Member 'RH_GuideSubsystem_BLUEPRINT_CreateGuide::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.BLUEPRINT_DeleteGuide
// 0x0020 (0x0020 - 0x0000)
struct RH_GuideSubsystem_BLUEPRINT_DeleteGuide final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_BLUEPRINT_DeleteGuide) == 0x000004, "Wrong alignment on RH_GuideSubsystem_BLUEPRINT_DeleteGuide");
static_assert(sizeof(RH_GuideSubsystem_BLUEPRINT_DeleteGuide) == 0x000020, "Wrong size on RH_GuideSubsystem_BLUEPRINT_DeleteGuide");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_DeleteGuide, GuideId) == 0x000000, "Member 'RH_GuideSubsystem_BLUEPRINT_DeleteGuide::GuideId' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_DeleteGuide, Delegate) == 0x000010, "Member 'RH_GuideSubsystem_BLUEPRINT_DeleteGuide::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.BLUEPRINT_GetGuideAsync
// 0x0024 (0x0024 - 0x0000)
struct RH_GuideSubsystem_BLUEPRINT_GetGuideAsync final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCache;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FRHAPI_GuideFull& Guide)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_BLUEPRINT_GetGuideAsync) == 0x000004, "Wrong alignment on RH_GuideSubsystem_BLUEPRINT_GetGuideAsync");
static_assert(sizeof(RH_GuideSubsystem_BLUEPRINT_GetGuideAsync) == 0x000024, "Wrong size on RH_GuideSubsystem_BLUEPRINT_GetGuideAsync");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_GetGuideAsync, GuideId) == 0x000000, "Member 'RH_GuideSubsystem_BLUEPRINT_GetGuideAsync::GuideId' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_GetGuideAsync, bIgnoreCache) == 0x000010, "Member 'RH_GuideSubsystem_BLUEPRINT_GetGuideAsync::bIgnoreCache' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_GetGuideAsync, Delegate) == 0x000014, "Member 'RH_GuideSubsystem_BLUEPRINT_GetGuideAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.BLUEPRINT_UpdateGuide
// 0x03D0 (0x03D0 - 0x0000)
struct RH_GuideSubsystem_BLUEPRINT_UpdateGuide final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_GuideCreateRequest              Request;                                           // 0x0010(0x03B0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)> Delegate; // 0x03C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_BLUEPRINT_UpdateGuide) == 0x000008, "Wrong alignment on RH_GuideSubsystem_BLUEPRINT_UpdateGuide");
static_assert(sizeof(RH_GuideSubsystem_BLUEPRINT_UpdateGuide) == 0x0003D0, "Wrong size on RH_GuideSubsystem_BLUEPRINT_UpdateGuide");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_UpdateGuide, GuideId) == 0x000000, "Member 'RH_GuideSubsystem_BLUEPRINT_UpdateGuide::GuideId' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_UpdateGuide, Request) == 0x000010, "Member 'RH_GuideSubsystem_BLUEPRINT_UpdateGuide::Request' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_BLUEPRINT_UpdateGuide, Delegate) == 0x0003C0, "Member 'RH_GuideSubsystem_BLUEPRINT_UpdateGuide::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.CreateGuideSearch
// 0x0280 (0x0280 - 0x0000)
struct RH_GuideSubsystem_CreateGuideSearch final
{
public:
	struct FRH_GuideSearchRequest                 InRequest;                                         // 0x0000(0x0278)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class URH_GuideSearch*                        ReturnValue;                                       // 0x0278(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_CreateGuideSearch) == 0x000008, "Wrong alignment on RH_GuideSubsystem_CreateGuideSearch");
static_assert(sizeof(RH_GuideSubsystem_CreateGuideSearch) == 0x000280, "Wrong size on RH_GuideSubsystem_CreateGuideSearch");
static_assert(offsetof(RH_GuideSubsystem_CreateGuideSearch, InRequest) == 0x000000, "Member 'RH_GuideSubsystem_CreateGuideSearch::InRequest' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_CreateGuideSearch, ReturnValue) == 0x000278, "Member 'RH_GuideSubsystem_CreateGuideSearch::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.RemoveCachedGuide
// 0x0014 (0x0014 - 0x0000)
struct RH_GuideSubsystem_RemoveCachedGuide final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GuideSubsystem_RemoveCachedGuide) == 0x000004, "Wrong alignment on RH_GuideSubsystem_RemoveCachedGuide");
static_assert(sizeof(RH_GuideSubsystem_RemoveCachedGuide) == 0x000014, "Wrong size on RH_GuideSubsystem_RemoveCachedGuide");
static_assert(offsetof(RH_GuideSubsystem_RemoveCachedGuide, GuideId) == 0x000000, "Member 'RH_GuideSubsystem_RemoveCachedGuide::GuideId' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_RemoveCachedGuide, ReturnValue) == 0x000010, "Member 'RH_GuideSubsystem_RemoveCachedGuide::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.RemoveGuideSearch
// 0x0008 (0x0008 - 0x0000)
struct RH_GuideSubsystem_RemoveGuideSearch final
{
public:
	class URH_GuideSearch*                        GuideSearch;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_RemoveGuideSearch) == 0x000008, "Wrong alignment on RH_GuideSubsystem_RemoveGuideSearch");
static_assert(sizeof(RH_GuideSubsystem_RemoveGuideSearch) == 0x000008, "Wrong size on RH_GuideSubsystem_RemoveGuideSearch");
static_assert(offsetof(RH_GuideSubsystem_RemoveGuideSearch, GuideSearch) == 0x000000, "Member 'RH_GuideSubsystem_RemoveGuideSearch::GuideSearch' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.RemoveGuideSearchAt
// 0x0004 (0x0004 - 0x0000)
struct RH_GuideSubsystem_RemoveGuideSearchAt final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_RemoveGuideSearchAt) == 0x000004, "Wrong alignment on RH_GuideSubsystem_RemoveGuideSearchAt");
static_assert(sizeof(RH_GuideSubsystem_RemoveGuideSearchAt) == 0x000004, "Wrong size on RH_GuideSubsystem_RemoveGuideSearchAt");
static_assert(offsetof(RH_GuideSubsystem_RemoveGuideSearchAt, Index_0) == 0x000000, "Member 'RH_GuideSubsystem_RemoveGuideSearchAt::Index_0' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.GetGuide
// 0x0408 (0x0408 - 0x0000)
struct RH_GuideSubsystem_GetGuide final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_GuideFull                       OutGuide;                                          // 0x0010(0x03F0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0400(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_GuideSubsystem_GetGuide) == 0x000008, "Wrong alignment on RH_GuideSubsystem_GetGuide");
static_assert(sizeof(RH_GuideSubsystem_GetGuide) == 0x000408, "Wrong size on RH_GuideSubsystem_GetGuide");
static_assert(offsetof(RH_GuideSubsystem_GetGuide, GuideId) == 0x000000, "Member 'RH_GuideSubsystem_GetGuide::GuideId' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_GetGuide, OutGuide) == 0x000010, "Member 'RH_GuideSubsystem_GetGuide::OutGuide' has a wrong offset!");
static_assert(offsetof(RH_GuideSubsystem_GetGuide, ReturnValue) == 0x000400, "Member 'RH_GuideSubsystem_GetGuide::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_GuideSubsystem.GetGuideSearches
// 0x0010 (0x0010 - 0x0000)
struct RH_GuideSubsystem_GetGuideSearches final
{
public:
	TArray<class URH_GuideSearch*>                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_GuideSubsystem_GetGuideSearches) == 0x000008, "Wrong alignment on RH_GuideSubsystem_GetGuideSearches");
static_assert(sizeof(RH_GuideSubsystem_GetGuideSearches) == 0x000010, "Wrong size on RH_GuideSubsystem_GetGuideSearches");
static_assert(offsetof(RH_GuideSubsystem_GetGuideSearches, ReturnValue) == 0x000000, "Member 'RH_GuideSubsystem_GetGuideSearches::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.BLUEPRINT_GetAllConfigAsync
// 0x0010 (0x0010 - 0x0000)
struct RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync final
{
public:
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardConfigList* ConfigList)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync) == 0x000004, "Wrong alignment on RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync");
static_assert(sizeof(RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync) == 0x000010, "Wrong size on RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync, Delegate) == 0x000000, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetAllConfigAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.BLUEPRINT_GetLeaderboardAsync
// 0x0030 (0x0030 - 0x0000)
struct RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerUuid;                                        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardPage* LeaderboardPage)> Delegate; // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync");
static_assert(sizeof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync) == 0x000030, "Wrong size on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync, PlayerUuid) == 0x000010, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync, Delegate) == 0x000020, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.BLUEPRINT_GetLeaderboardMetaDataAsync
// 0x0020 (0x0020 - 0x0000)
struct RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardMetaData* LeaderboardMetaData)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync");
static_assert(sizeof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync) == 0x000020, "Wrong size on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync, Delegate) == 0x000010, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardMetaDataAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.BLUEPRINT_GetLeaderboardPageAsync
// 0x0048 (0x0048 - 0x0000)
struct RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Cursor;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerUuid;                                        // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardPage* LeaderboardPage)> Delegate; // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageSize;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync");
static_assert(sizeof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync) == 0x000048, "Wrong size on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync, Cursor) == 0x000010, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync::Cursor' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync, PlayerUuid) == 0x000020, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync, Delegate) == 0x000030, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync::Delegate' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync, PageSize) == 0x000040, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPageAsync::PageSize' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.BLUEPRINT_GetLeaderboardPositionAsync
// 0x0028 (0x0028 - 0x0000)
struct RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         position;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardEntry* LeaderboardEntry)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync");
static_assert(sizeof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync) == 0x000028, "Wrong size on RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync, position) == 0x000010, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync::position' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync, Delegate) == 0x000014, "Member 'RH_LeaderboardSubsystem_BLUEPRINT_GetLeaderboardPositionAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboard
// 0x00A0 (0x00A0 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboard final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_LeaderboardResults                 Results;                                           // 0x0010(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboard) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboard");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboard) == 0x0000A0, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboard");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboard, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboard::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboard, Results) == 0x000010, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboard::Results' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboard, ReturnValue) == 0x000098, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboard::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboardConfig
// 0x0068 (0x0068 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboardConfig final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_LeaderboardConfig               CachedConfig;                                      // 0x0010(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfig) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboardConfig");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfig) == 0x000068, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboardConfig");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfig, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardConfig::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfig, CachedConfig) == 0x000010, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardConfig::CachedConfig' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfig, ReturnValue) == 0x000060, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardConfig::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboardConfigs
// 0x0058 (0x0058 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs final
{
public:
	TMap<class FString, struct FRHAPI_LeaderboardConfig> OutConfigMap;                               // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs) == 0x000058, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs, OutConfigMap) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs::OutConfigMap' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs, ReturnValue) == 0x000050, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardConfigs::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboardMetaData
// 0x0030 (0x0030 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_LeaderboardMetaData             OutMetaData;                                       // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData) == 0x000030, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData, OutMetaData) == 0x000010, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData::OutMetaData' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData, ReturnValue) == 0x000028, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardMetaData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboardPage
// 0x0050 (0x0050 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboardPage final
{
public:
	class FString                                 LeaderboardId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_LeaderboardPage                 CachedPage;                                        // 0x0010(0x0038)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboardPage) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboardPage");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboardPage) == 0x000050, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboardPage");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardPage, LeaderboardId) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardPage::LeaderboardId' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardPage, CachedPage) == 0x000010, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardPage::CachedPage' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardPage, ReturnValue) == 0x000048, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardPage::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LeaderboardSubsystem.GetCachedLeaderboardPosition
// 0x0030 (0x0030 - 0x0000)
struct RH_LeaderboardSubsystem_GetCachedLeaderboardPosition final
{
public:
	struct FRHAPI_LeaderboardEntry                OutEntry;                                          // 0x0000(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LeaderboardSubsystem_GetCachedLeaderboardPosition) == 0x000008, "Wrong alignment on RH_LeaderboardSubsystem_GetCachedLeaderboardPosition");
static_assert(sizeof(RH_LeaderboardSubsystem_GetCachedLeaderboardPosition) == 0x000030, "Wrong size on RH_LeaderboardSubsystem_GetCachedLeaderboardPosition");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardPosition, OutEntry) == 0x000000, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardPosition::OutEntry' has a wrong offset!");
static_assert(offsetof(RH_LeaderboardSubsystem_GetCachedLeaderboardPosition, ReturnValue) == 0x000028, "Member 'RH_LeaderboardSubsystem_GetCachedLeaderboardPosition::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.SetDesiredCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData final
{
public:
	TMap<class FString, class FString>            NewCustomData;                                     // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData) == 0x000050, "Wrong size on RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData, NewCustomData) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredCustomData::NewCustomData' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.SetDesiredDoNotDisturb
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb final
{
public:
	bool                                          NewDoNotDisturb;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb) == 0x000001, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb) == 0x000001, "Wrong size on RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb, NewDoNotDisturb) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredDoNotDisturb::NewDoNotDisturb' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.SetDesiredMessage
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_SetDesiredMessage final
{
public:
	class FString                                 NewMessage;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bImmediateRefresh;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_SetDesiredMessage) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_SetDesiredMessage");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_SetDesiredMessage) == 0x000018, "Wrong size on RH_LocalPlayerPresenceSubsystem_SetDesiredMessage");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredMessage, NewMessage) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredMessage::NewMessage' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredMessage, bImmediateRefresh) == 0x000010, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredMessage::bImmediateRefresh' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.SetDesiredPresence
// 0x0080 (0x0080 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_SetDesiredPresence final
{
public:
	struct FRHAPI_PlayerPresenceUpdateSelf        NewPresenceState;                                  // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_SetDesiredPresence) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_SetDesiredPresence");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_SetDesiredPresence) == 0x000080, "Wrong size on RH_LocalPlayerPresenceSubsystem_SetDesiredPresence");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredPresence, NewPresenceState) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredPresence::NewPresenceState' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.SetDesiredStatus
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_SetDesiredStatus final
{
public:
	ERHAPI_OnlineStatus                           NewStatus;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_SetDesiredStatus) == 0x000001, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_SetDesiredStatus");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_SetDesiredStatus) == 0x000001, "Wrong size on RH_LocalPlayerPresenceSubsystem_SetDesiredStatus");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_SetDesiredStatus, NewStatus) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_SetDesiredStatus::NewStatus' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.GetDesiredCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData) == 0x000050, "Wrong size on RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_GetDesiredCustomData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.GetDesiredDoNotDisturb
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb) == 0x000001, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb) == 0x000001, "Wrong size on RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_GetDesiredDoNotDisturb::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.GetDesiredMessage
// 0x0010 (0x0010 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_GetDesiredMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_GetDesiredMessage) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_GetDesiredMessage");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_GetDesiredMessage) == 0x000010, "Wrong size on RH_LocalPlayerPresenceSubsystem_GetDesiredMessage");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_GetDesiredMessage, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_GetDesiredMessage::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.GetDesiredPresence
// 0x0080 (0x0080 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_GetDesiredPresence final
{
public:
	struct FRHAPI_PlayerPresenceUpdateSelf        ReturnValue;                                       // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_GetDesiredPresence) == 0x000008, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_GetDesiredPresence");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_GetDesiredPresence) == 0x000080, "Wrong size on RH_LocalPlayerPresenceSubsystem_GetDesiredPresence");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_GetDesiredPresence, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_GetDesiredPresence::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.GetDesiredStatus
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_GetDesiredStatus final
{
public:
	ERHAPI_OnlineStatus                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_GetDesiredStatus) == 0x000001, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_GetDesiredStatus");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_GetDesiredStatus) == 0x000001, "Wrong size on RH_LocalPlayerPresenceSubsystem_GetDesiredStatus");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_GetDesiredStatus, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_GetDesiredStatus::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerPresenceSubsystem.IsRefreshTimerActive
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive final
{
public:
	float                                         TimeRemaining;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive) == 0x000004, "Wrong alignment on RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive");
static_assert(sizeof(RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive) == 0x000008, "Wrong size on RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive, TimeRemaining) == 0x000000, "Member 'RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive::TimeRemaining' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive, ReturnValue) == 0x000004, "Member 'RH_LocalPlayerPresenceSubsystem_IsRefreshTimerActive::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.BLUEPRINT_CustomEndpoint
// 0x0048 (0x0048 - 0x0000)
struct RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint final
{
public:
	struct FRH_CustomEndpointRequestWrapper       Request;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FRH_CustomEndpointResponseWrapper& CustomResponseWrapper)> Delegate; // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint");
static_assert(sizeof(RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint) == 0x000048, "Wrong size on RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint");
static_assert(offsetof(RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint, Request) == 0x000000, "Member 'RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint::Request' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint, Delegate) == 0x000038, "Member 'RH_LocalPlayerSubsystem_BLUEPRINT_CustomEndpoint::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetAdSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetAdSubsystem final
{
public:
	class URH_AdSubsystem*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetAdSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetAdSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetAdSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetAdSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetAdSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetAdSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetEntitlementSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetEntitlementSubsystem final
{
public:
	class URH_EntitlementSubsystem*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetEntitlementSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetEntitlementSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetEntitlementSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetEntitlementSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetEntitlementSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetEntitlementSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetFriendSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetFriendSubsystem final
{
public:
	class URH_FriendSubsystem*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetFriendSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetFriendSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetFriendSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetFriendSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetFriendSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetFriendSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetLocalPlayerInfo
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetLocalPlayerInfo final
{
public:
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetLocalPlayerInfo) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetLocalPlayerInfo");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetLocalPlayerInfo) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetLocalPlayerInfo");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetLocalPlayerInfo, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetLocalPlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetLoginSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetLoginSubsystem final
{
public:
	class URH_LocalPlayerLoginSubsystem*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetLoginSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetLoginSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetLoginSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetLoginSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetLoginSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetLoginSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetPlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetPlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetPlayerNotifications
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetPlayerNotifications final
{
public:
	class URH_PlayerNotifications*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetPlayerNotifications) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetPlayerNotifications");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetPlayerNotifications) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetPlayerNotifications");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetPlayerNotifications, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetPlayerNotifications::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetPlayerPlatformId
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSubsystem_GetPlayerPlatformId final
{
public:
	struct FRH_PlayerPlatformId                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetPlayerPlatformId) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetPlayerPlatformId");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetPlayerPlatformId) == 0x000018, "Wrong size on RH_LocalPlayerSubsystem_GetPlayerPlatformId");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetPlayerPlatformId, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetPlayerPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetPresenceSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetPresenceSubsystem final
{
public:
	class URH_LocalPlayerPresenceSubsystem*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetPresenceSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetPresenceSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetPresenceSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetPresenceSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetPresenceSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetPresenceSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetPurgeSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetPurgeSubsystem final
{
public:
	class URH_PurgeSubsystem*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetPurgeSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetPurgeSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetPurgeSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetPurgeSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetPurgeSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetPurgeSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSubsystem.GetSessionSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSubsystem_GetSessionSubsystem final
{
public:
	class URH_LocalPlayerSessionSubsystem*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSubsystem_GetSessionSubsystem) == 0x000008, "Wrong alignment on RH_LocalPlayerSubsystem_GetSessionSubsystem");
static_assert(sizeof(RH_LocalPlayerSubsystem_GetSessionSubsystem) == 0x000008, "Wrong size on RH_LocalPlayerSubsystem_GetSessionSubsystem");
static_assert(offsetof(RH_LocalPlayerSubsystem_GetSessionSubsystem, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSubsystem_GetSessionSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.BLUEPRINT_CreateOrJoinSessionByType
// 0x0158 (0x0158 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType final
{
public:
	struct FRHAPI_CreateOrJoinRequest             CreateParams;                                      // 0x0000(0x0148)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0148(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType) == 0x000158, "Wrong size on RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType, CreateParams) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType::CreateParams' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType, Delegate) == 0x000148, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_CreateOrJoinSessionByType::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.BLUEPRINT_JoinSessionById
// 0x0020 (0x0020 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById) == 0x000020, "Wrong size on RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById, Delegate) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionById::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.BLUEPRINT_JoinSessionByIdEx
// 0x00E0 (0x00E0 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SelfSessionPlayerUpdateRequest  JoinDetails;                                       // 0x0010(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx) == 0x0000E0, "Wrong size on RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx::SessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx, JoinDetails) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx::JoinDetails' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx, Delegate) == 0x0000D0, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_JoinSessionByIdEx::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.BLUEPRINT_SearchForSessions
// 0x0050 (0x0050 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions final
{
public:
	struct FRH_SessionBrowserSearchParams         Params_0;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_SessionBrowserSearchResult& SearchResult)> Delegate; // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions) == 0x000050, "Wrong size on RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions, Params_0) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions::Params_0' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions, Delegate) == 0x000040, "Member 'RH_LocalPlayerSessionSubsystem_BLUEPRINT_SearchForSessions::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.ForcePollForUpdate
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_ForcePollForUpdate final
{
public:
	bool                                          bClearETag;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_ForcePollForUpdate) == 0x000001, "Wrong alignment on RH_LocalPlayerSessionSubsystem_ForcePollForUpdate");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_ForcePollForUpdate) == 0x000001, "Wrong size on RH_LocalPlayerSessionSubsystem_ForcePollForUpdate");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_ForcePollForUpdate, bClearETag) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_ForcePollForUpdate::bClearETag' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.IsInSession
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_IsInSession final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_IsInSession) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_IsInSession");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_IsInSession) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_IsInSession");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_IsInSession, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_IsInSession::SessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_IsInSession, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_IsInSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.RemoveSessionById
// 0x0010 (0x0010 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_RemoveSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_RemoveSessionById) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_RemoveSessionById");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_RemoveSessionById) == 0x000010, "Wrong size on RH_LocalPlayerSessionSubsystem_RemoveSessionById");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_RemoveSessionById, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_RemoveSessionById::SessionId' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetFirstActiveSession
// 0x0008 (0x0008 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetFirstActiveSession final
{
public:
	class URH_JoinedSession*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetFirstActiveSession) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetFirstActiveSession");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetFirstActiveSession) == 0x000008, "Wrong size on RH_LocalPlayerSessionSubsystem_GetFirstActiveSession");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstActiveSession, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstActiveSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetFirstInvitedSessionByType
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_InvitedSession*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstInvitedSessionByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetFirstJoinedSessionByType
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_JoinedSession*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstJoinedSessionByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetFirstSessionByType
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetFirstSessionByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_SessionView*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetFirstSessionByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetFirstSessionByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetFirstSessionByType) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_GetFirstSessionByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstSessionByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstSessionByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetFirstSessionByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetFirstSessionByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetInvitedSessionsByType
// 0x0020 (0x0020 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URH_InvitedSession*>             ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType) == 0x000020, "Wrong size on RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetInvitedSessionsByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetJoinedSessionsByType
// 0x0020 (0x0020 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URH_JoinedSession*>              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType) == 0x000020, "Wrong size on RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetJoinedSessionsByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetPlatformSyncerByPlatformSessionId
// 0x0038 (0x0038 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId final
{
public:
	struct FUniqueNetIdRepl                       PlatformSessionId;                                 // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId) == 0x000038, "Wrong size on RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId, PlatformSessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId::PlatformSessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId, ReturnValue) == 0x000030, "Member 'RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByPlatformSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetPlatformSyncerByRHSessionId
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetPlatformSyncerByRHSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetPollTimeRemaining
// 0x0004 (0x0004 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining) == 0x000004, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining) == 0x000004, "Wrong size on RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetPollTimeRemaining::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetSessionById
// 0x0018 (0x0018 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_SessionView*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetSessionById) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetSessionById");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetSessionById) == 0x000018, "Wrong size on RH_LocalPlayerSessionSubsystem_GetSessionById");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetSessionById, SessionId) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetSessionById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetSessionById, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetSessionById::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetSessions
// 0x0010 (0x0010 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetSessions final
{
public:
	TArray<class URH_SessionView*>                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetSessions) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetSessions");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetSessions) == 0x000010, "Wrong size on RH_LocalPlayerSessionSubsystem_GetSessions");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetSessions, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetSessions::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetSessionsByType
// 0x0020 (0x0020 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetSessionsByType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URH_SessionView*>                ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetSessionsByType) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetSessionsByType");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetSessionsByType) == 0x000020, "Wrong size on RH_LocalPlayerSessionSubsystem_GetSessionsByType");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetSessionsByType, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetSessionsByType::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetSessionsByType, ReturnValue) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetSessionsByType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetTemplate
// 0x0230 (0x0230 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetTemplate final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SessionTemplate                 Template;                                          // 0x0010(0x0218)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetTemplate) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetTemplate");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetTemplate) == 0x000230, "Wrong size on RH_LocalPlayerSessionSubsystem_GetTemplate");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetTemplate, Type) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetTemplate::Type' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetTemplate, Template) == 0x000010, "Member 'RH_LocalPlayerSessionSubsystem_GetTemplate::Template' has a wrong offset!");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetTemplate, ReturnValue) == 0x000228, "Member 'RH_LocalPlayerSessionSubsystem_GetTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.GetTemplates
// 0x0010 (0x0010 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_GetTemplates final
{
public:
	TArray<struct FRHAPI_SessionTemplate>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_GetTemplates) == 0x000008, "Wrong alignment on RH_LocalPlayerSessionSubsystem_GetTemplates");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_GetTemplates) == 0x000010, "Wrong size on RH_LocalPlayerSessionSubsystem_GetTemplates");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_GetTemplates, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_GetTemplates::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.HasInitialSessionData
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_HasInitialSessionData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_HasInitialSessionData) == 0x000001, "Wrong alignment on RH_LocalPlayerSessionSubsystem_HasInitialSessionData");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_HasInitialSessionData) == 0x000001, "Wrong size on RH_LocalPlayerSessionSubsystem_HasInitialSessionData");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_HasInitialSessionData, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_HasInitialSessionData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_LocalPlayerSessionSubsystem.IsJoiningPlatformSession
// 0x0001 (0x0001 - 0x0000)
struct RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession) == 0x000001, "Wrong alignment on RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession");
static_assert(sizeof(RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession) == 0x000001, "Wrong size on RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession");
static_assert(offsetof(RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession, ReturnValue) == 0x000000, "Member 'RH_LocalPlayerSessionSubsystem_IsJoiningPlatformSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingQueueInfo.GetQueueId
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingQueueInfo_GetQueueId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingQueueInfo_GetQueueId) == 0x000008, "Wrong alignment on RH_MatchmakingQueueInfo_GetQueueId");
static_assert(sizeof(RH_MatchmakingQueueInfo_GetQueueId) == 0x000010, "Wrong size on RH_MatchmakingQueueInfo_GetQueueId");
static_assert(offsetof(RH_MatchmakingQueueInfo_GetQueueId, ReturnValue) == 0x000000, "Member 'RH_MatchmakingQueueInfo_GetQueueId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingQueueInfo.GetQueueInfo
// 0x0088 (0x0088 - 0x0000)
struct RH_MatchmakingQueueInfo_GetQueueInfo final
{
public:
	struct FRHAPI_QueueConfigV2                   ReturnValue;                                       // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingQueueInfo_GetQueueInfo) == 0x000008, "Wrong alignment on RH_MatchmakingQueueInfo_GetQueueInfo");
static_assert(sizeof(RH_MatchmakingQueueInfo_GetQueueInfo) == 0x000088, "Wrong size on RH_MatchmakingQueueInfo_GetQueueInfo");
static_assert(offsetof(RH_MatchmakingQueueInfo_GetQueueInfo, ReturnValue) == 0x000000, "Member 'RH_MatchmakingQueueInfo_GetQueueInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingQueueInfo.IsActive
// 0x0001 (0x0001 - 0x0000)
struct RH_MatchmakingQueueInfo_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingQueueInfo_IsActive) == 0x000001, "Wrong alignment on RH_MatchmakingQueueInfo_IsActive");
static_assert(sizeof(RH_MatchmakingQueueInfo_IsActive) == 0x000001, "Wrong size on RH_MatchmakingQueueInfo_IsActive");
static_assert(offsetof(RH_MatchmakingQueueInfo_IsActive, ReturnValue) == 0x000000, "Member 'RH_MatchmakingQueueInfo_IsActive::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingTemplateGroupInfo.GetInfo
// 0x0080 (0x0080 - 0x0000)
struct RH_MatchmakingTemplateGroupInfo_GetInfo final
{
public:
	struct FRHAPI_MatchMakingTemplateGroupV2      ReturnValue;                                       // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingTemplateGroupInfo_GetInfo) == 0x000008, "Wrong alignment on RH_MatchmakingTemplateGroupInfo_GetInfo");
static_assert(sizeof(RH_MatchmakingTemplateGroupInfo_GetInfo) == 0x000080, "Wrong size on RH_MatchmakingTemplateGroupInfo_GetInfo");
static_assert(offsetof(RH_MatchmakingTemplateGroupInfo_GetInfo, ReturnValue) == 0x000000, "Member 'RH_MatchmakingTemplateGroupInfo_GetInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingTemplateGroupInfo.GetPossibleInstanceRequestTemplateIds
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds final
{
public:
	TArray<struct FGuid>                          ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds) == 0x000008, "Wrong alignment on RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds");
static_assert(sizeof(RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds) == 0x000010, "Wrong size on RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds");
static_assert(offsetof(RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds, ReturnValue) == 0x000000, "Member 'RH_MatchmakingTemplateGroupInfo_GetPossibleInstanceRequestTemplateIds::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingTemplateGroupInfo.GetRequiredItemIds
// 0x0050 (0x0050 - 0x0000)
struct RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds final
{
public:
	TSet<int32>                                   ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds) == 0x000008, "Wrong alignment on RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds");
static_assert(sizeof(RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds) == 0x000050, "Wrong size on RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds");
static_assert(offsetof(RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds, ReturnValue) == 0x000000, "Member 'RH_MatchmakingTemplateGroupInfo_GetRequiredItemIds::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingTemplateGroupInfo.GetTemplateGroupId
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId) == 0x000004, "Wrong alignment on RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId");
static_assert(sizeof(RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId) == 0x000010, "Wrong size on RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId");
static_assert(offsetof(RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId, ReturnValue) == 0x000000, "Member 'RH_MatchmakingTemplateGroupInfo_GetTemplateGroupId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingProfileInfo.GetProfile
// 0x00F8 (0x00F8 - 0x0000)
struct RH_MatchmakingProfileInfo_GetProfile final
{
public:
	struct FRHAPI_MatchMakingProfileV2            ReturnValue;                                       // 0x0000(0x00F8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingProfileInfo_GetProfile) == 0x000008, "Wrong alignment on RH_MatchmakingProfileInfo_GetProfile");
static_assert(sizeof(RH_MatchmakingProfileInfo_GetProfile) == 0x0000F8, "Wrong size on RH_MatchmakingProfileInfo_GetProfile");
static_assert(offsetof(RH_MatchmakingProfileInfo_GetProfile, ReturnValue) == 0x000000, "Member 'RH_MatchmakingProfileInfo_GetProfile::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingProfileInfo.GetProfileId
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingProfileInfo_GetProfileId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingProfileInfo_GetProfileId) == 0x000008, "Wrong alignment on RH_MatchmakingProfileInfo_GetProfileId");
static_assert(sizeof(RH_MatchmakingProfileInfo_GetProfileId) == 0x000010, "Wrong size on RH_MatchmakingProfileInfo_GetProfileId");
static_assert(offsetof(RH_MatchmakingProfileInfo_GetProfileId, ReturnValue) == 0x000000, "Member 'RH_MatchmakingProfileInfo_GetProfileId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InstanceRequestTemplate.GetCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_InstanceRequestTemplate_GetCustomData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InstanceRequestTemplate_GetCustomData) == 0x000008, "Wrong alignment on RH_InstanceRequestTemplate_GetCustomData");
static_assert(sizeof(RH_InstanceRequestTemplate_GetCustomData) == 0x000050, "Wrong size on RH_InstanceRequestTemplate_GetCustomData");
static_assert(offsetof(RH_InstanceRequestTemplate_GetCustomData, ReturnValue) == 0x000000, "Member 'RH_InstanceRequestTemplate_GetCustomData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InstanceRequestTemplate.GetETag
// 0x0010 (0x0010 - 0x0000)
struct RH_InstanceRequestTemplate_GetETag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InstanceRequestTemplate_GetETag) == 0x000008, "Wrong alignment on RH_InstanceRequestTemplate_GetETag");
static_assert(sizeof(RH_InstanceRequestTemplate_GetETag) == 0x000010, "Wrong size on RH_InstanceRequestTemplate_GetETag");
static_assert(offsetof(RH_InstanceRequestTemplate_GetETag, ReturnValue) == 0x000000, "Member 'RH_InstanceRequestTemplate_GetETag::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InstanceRequestTemplate.GetInfo
// 0x00A0 (0x00A0 - 0x0000)
struct RH_InstanceRequestTemplate_GetInfo final
{
public:
	struct FRHAPI_InstanceRequestTemplate         ReturnValue;                                       // 0x0000(0x00A0)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InstanceRequestTemplate_GetInfo) == 0x000008, "Wrong alignment on RH_InstanceRequestTemplate_GetInfo");
static_assert(sizeof(RH_InstanceRequestTemplate_GetInfo) == 0x0000A0, "Wrong size on RH_InstanceRequestTemplate_GetInfo");
static_assert(offsetof(RH_InstanceRequestTemplate_GetInfo, ReturnValue) == 0x000000, "Member 'RH_InstanceRequestTemplate_GetInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InstanceRequestTemplate.GetInstanceRequestTemplateId
// 0x0010 (0x0010 - 0x0000)
struct RH_InstanceRequestTemplate_GetInstanceRequestTemplateId final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InstanceRequestTemplate_GetInstanceRequestTemplateId) == 0x000004, "Wrong alignment on RH_InstanceRequestTemplate_GetInstanceRequestTemplateId");
static_assert(sizeof(RH_InstanceRequestTemplate_GetInstanceRequestTemplateId) == 0x000010, "Wrong size on RH_InstanceRequestTemplate_GetInstanceRequestTemplateId");
static_assert(offsetof(RH_InstanceRequestTemplate_GetInstanceRequestTemplateId, ReturnValue) == 0x000000, "Member 'RH_InstanceRequestTemplate_GetInstanceRequestTemplateId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.BLUEPRINT_SearchInstanceRequestTemplate
// 0x0020 (0x0020 - 0x0000)
struct RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate final
{
public:
	struct FGuid                                  TemplateId;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_InstanceRequestTemplate* Result, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate) == 0x000004, "Wrong alignment on RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate");
static_assert(sizeof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate) == 0x000020, "Wrong size on RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate, TemplateId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate::TemplateId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate, Delegate) == 0x000010, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchInstanceRequestTemplate::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.BLUEPRINT_SearchMatchmakingProfile
// 0x0020 (0x0020 - 0x0000)
struct RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile final
{
public:
	class FString                                 ProfileId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_MatchmakingProfileInfo* Result, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile");
static_assert(sizeof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile) == 0x000020, "Wrong size on RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile, ProfileId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile::ProfileId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile, Delegate) == 0x000010, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingProfile::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.BLUEPRINT_SearchMatchmakingTemplateGroup
// 0x0020 (0x0020 - 0x0000)
struct RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup final
{
public:
	struct FGuid                                  TemplateId;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_MatchmakingTemplateGroupInfo* Result, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup) == 0x000004, "Wrong alignment on RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup");
static_assert(sizeof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup) == 0x000020, "Wrong size on RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup, TemplateId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup::TemplateId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup, Delegate) == 0x000010, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchMatchmakingTemplateGroup::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.BLUEPRINT_SearchQueues
// 0x0018 (0x0018 - 0x0000)
struct RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues final
{
public:
	struct FRH_QueueSearchParams                  Params_0;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_QueueSearchResult& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues) == 0x000004, "Wrong alignment on RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues");
static_assert(sizeof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues) == 0x000018, "Wrong size on RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues, Params_0) == 0x000000, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues::Params_0' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues, Delegate) == 0x000008, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchQueues::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.BLUEPRINT_SearchRegions
// 0x0014 (0x0014 - 0x0000)
struct RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions final
{
public:
	int32                                         Cursor;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_Region>& Result, int32 Cursor, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions) == 0x000004, "Wrong alignment on RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions");
static_assert(sizeof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions) == 0x000014, "Wrong size on RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions, Cursor) == 0x000000, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions::Cursor' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions, Delegate) == 0x000004, "Member 'RH_MatchmakingBrowserCache_BLUEPRINT_SearchRegions::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetAllInstanceRequestTemplates
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates final
{
public:
	TArray<class URH_InstanceRequestTemplate*>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates) == 0x000010, "Wrong size on RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates, ReturnValue) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetAllInstanceRequestTemplates::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetAllMatchmakingProfiles
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles final
{
public:
	TArray<class URH_MatchmakingProfileInfo*>     ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles) == 0x000010, "Wrong size on RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles, ReturnValue) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetAllMatchmakingProfiles::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetAllMatchmakingTemplateGroups
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups final
{
public:
	TArray<class URH_MatchmakingTemplateGroupInfo*> ReturnValue;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups) == 0x000010, "Wrong size on RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups, ReturnValue) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetAllMatchmakingTemplateGroups::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetAllQueues
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingBrowserCache_GetAllQueues final
{
public:
	TArray<class URH_MatchmakingQueueInfo*>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetAllQueues) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetAllQueues");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetAllQueues) == 0x000010, "Wrong size on RH_MatchmakingBrowserCache_GetAllQueues");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetAllQueues, ReturnValue) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetAllQueues::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetAllRegions
// 0x0010 (0x0010 - 0x0000)
struct RH_MatchmakingBrowserCache_GetAllRegions final
{
public:
	TArray<struct FRHAPI_Region>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetAllRegions) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetAllRegions");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetAllRegions) == 0x000010, "Wrong size on RH_MatchmakingBrowserCache_GetAllRegions");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetAllRegions, ReturnValue) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetAllRegions::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetInstanceRequestTemplate
// 0x0018 (0x0018 - 0x0000)
struct RH_MatchmakingBrowserCache_GetInstanceRequestTemplate final
{
public:
	struct FGuid                                  InstanceRequestTemplateId;                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_InstanceRequestTemplate*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetInstanceRequestTemplate) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetInstanceRequestTemplate");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetInstanceRequestTemplate) == 0x000018, "Wrong size on RH_MatchmakingBrowserCache_GetInstanceRequestTemplate");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetInstanceRequestTemplate, InstanceRequestTemplateId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetInstanceRequestTemplate::InstanceRequestTemplateId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetInstanceRequestTemplate, ReturnValue) == 0x000010, "Member 'RH_MatchmakingBrowserCache_GetInstanceRequestTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetMatchmakingProfile
// 0x0018 (0x0018 - 0x0000)
struct RH_MatchmakingBrowserCache_GetMatchmakingProfile final
{
public:
	class FString                                 ProfileId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_MatchmakingProfileInfo*             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetMatchmakingProfile) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetMatchmakingProfile");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetMatchmakingProfile) == 0x000018, "Wrong size on RH_MatchmakingBrowserCache_GetMatchmakingProfile");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetMatchmakingProfile, ProfileId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetMatchmakingProfile::ProfileId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetMatchmakingProfile, ReturnValue) == 0x000010, "Member 'RH_MatchmakingBrowserCache_GetMatchmakingProfile::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetMatchmakingTemplateGroup
// 0x0018 (0x0018 - 0x0000)
struct RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup final
{
public:
	struct FGuid                                  TemplateGroupId;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_MatchmakingTemplateGroupInfo*       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup) == 0x000018, "Wrong size on RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup, TemplateGroupId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup::TemplateGroupId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup, ReturnValue) == 0x000010, "Member 'RH_MatchmakingBrowserCache_GetMatchmakingTemplateGroup::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetQueue
// 0x0018 (0x0018 - 0x0000)
struct RH_MatchmakingBrowserCache_GetQueue final
{
public:
	class FString                                 QueueId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_MatchmakingQueueInfo*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetQueue) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetQueue");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetQueue) == 0x000018, "Wrong size on RH_MatchmakingBrowserCache_GetQueue");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetQueue, QueueId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetQueue::QueueId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetQueue, ReturnValue) == 0x000010, "Member 'RH_MatchmakingBrowserCache_GetQueue::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchmakingBrowserCache.GetRegion
// 0x0050 (0x0050 - 0x0000)
struct RH_MatchmakingBrowserCache_GetRegion final
{
public:
	class FString                                 RegionId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_Region                          OutRegion;                                         // 0x0010(0x0038)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_MatchmakingBrowserCache_GetRegion) == 0x000008, "Wrong alignment on RH_MatchmakingBrowserCache_GetRegion");
static_assert(sizeof(RH_MatchmakingBrowserCache_GetRegion) == 0x000050, "Wrong size on RH_MatchmakingBrowserCache_GetRegion");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetRegion, RegionId) == 0x000000, "Member 'RH_MatchmakingBrowserCache_GetRegion::RegionId' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetRegion, OutRegion) == 0x000010, "Member 'RH_MatchmakingBrowserCache_GetRegion::OutRegion' has a wrong offset!");
static_assert(offsetof(RH_MatchmakingBrowserCache_GetRegion, ReturnValue) == 0x000048, "Member 'RH_MatchmakingBrowserCache_GetRegion::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.GetMatchDeveloperFileDirectory
// 0x0028 (0x0028 - 0x0000)
struct RH_MatchSubsystem_GetMatchDeveloperFileDirectory final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_RemoteFileApiDirectory             ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_GetMatchDeveloperFileDirectory) == 0x000008, "Wrong alignment on RH_MatchSubsystem_GetMatchDeveloperFileDirectory");
static_assert(sizeof(RH_MatchSubsystem_GetMatchDeveloperFileDirectory) == 0x000028, "Wrong size on RH_MatchSubsystem_GetMatchDeveloperFileDirectory");
static_assert(offsetof(RH_MatchSubsystem_GetMatchDeveloperFileDirectory, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_GetMatchDeveloperFileDirectory::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_GetMatchDeveloperFileDirectory, ReturnValue) == 0x000010, "Member 'RH_MatchSubsystem_GetMatchDeveloperFileDirectory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.GetMatchFileDirectory
// 0x0028 (0x0028 - 0x0000)
struct RH_MatchSubsystem_GetMatchFileDirectory final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_RemoteFileApiDirectory             ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_GetMatchFileDirectory) == 0x000008, "Wrong alignment on RH_MatchSubsystem_GetMatchFileDirectory");
static_assert(sizeof(RH_MatchSubsystem_GetMatchFileDirectory) == 0x000028, "Wrong size on RH_MatchSubsystem_GetMatchFileDirectory");
static_assert(offsetof(RH_MatchSubsystem_GetMatchFileDirectory, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_GetMatchFileDirectory::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_GetMatchFileDirectory, ReturnValue) == 0x000010, "Member 'RH_MatchSubsystem_GetMatchFileDirectory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_CreateMatch
// 0x0140 (0x0140 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_CreateMatch final
{
public:
	struct FRHAPI_MatchRequest                    Match;                                             // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0130(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_CreateMatch) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_CreateMatch");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_CreateMatch) == 0x000140, "Wrong size on RH_MatchSubsystem_BLUEPRINT_CreateMatch");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_CreateMatch, Match) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_CreateMatch::Match' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_CreateMatch, Delegate) == 0x000130, "Member 'RH_MatchSubsystem_BLUEPRINT_CreateMatch::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_GetMatchAsync
// 0x0028 (0x0028 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_GetMatchAsync final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCache;                                      // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_GetMatchAsync) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_GetMatchAsync");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_GetMatchAsync) == 0x000028, "Wrong size on RH_MatchSubsystem_BLUEPRINT_GetMatchAsync");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_GetMatchAsync, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_GetMatchAsync::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_GetMatchAsync, bIgnoreCache) == 0x000010, "Member 'RH_MatchSubsystem_BLUEPRINT_GetMatchAsync::bIgnoreCache' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_GetMatchAsync, Delegate) == 0x000014, "Member 'RH_MatchSubsystem_BLUEPRINT_GetMatchAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_SearchMatches
// 0x0090 (0x0090 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_SearchMatches final
{
public:
	struct FRH_MatchSearchParams                  Params_0;                                          // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_MatchSearchResult& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_SearchMatches) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_SearchMatches");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_SearchMatches) == 0x000090, "Wrong size on RH_MatchSubsystem_BLUEPRINT_SearchMatches");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_SearchMatches, Params_0) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_SearchMatches::Params_0' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_SearchMatches, Delegate) == 0x000080, "Member 'RH_MatchSubsystem_BLUEPRINT_SearchMatches::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_UpdateMatch
// 0x0150 (0x0150 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_UpdateMatch final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_MatchRequest                    Match;                                             // 0x0010(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0140(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_UpdateMatch) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_UpdateMatch");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_UpdateMatch) == 0x000150, "Wrong size on RH_MatchSubsystem_BLUEPRINT_UpdateMatch");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatch, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatch::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatch, Match) == 0x000010, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatch::Match' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatch, Delegate) == 0x000140, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatch::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_UpdateMatchPlayer
// 0x0138 (0x0138 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerId;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_MatchPlayerRequest              Player;                                            // 0x0020(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_MatchPlayerWithMatch& Match, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0128(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer) == 0x000138, "Wrong size on RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer, PlayerId) == 0x000010, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer::PlayerId' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer, Player) == 0x000020, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer::Player' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer, Delegate) == 0x000128, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchPlayer::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.BLUEPRINT_UpdateMatchSegment
// 0x0148 (0x0148 - 0x0000)
struct RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SegmentID;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_MatchSegmentPatchRequest        Segment;                                           // 0x0020(0x0118)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0138(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment) == 0x000008, "Wrong alignment on RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment");
static_assert(sizeof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment) == 0x000148, "Wrong size on RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment, SegmentID) == 0x000010, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment::SegmentID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment, Segment) == 0x000020, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment::Segment' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment, Delegate) == 0x000138, "Member 'RH_MatchSubsystem_BLUEPRINT_UpdateMatchSegment::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.GetMatch
// 0x0180 (0x0180 - 0x0000)
struct RH_MatchSubsystem_GetMatch final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_MatchWithPlayers                OutMatch;                                          // 0x0010(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0178(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_MatchSubsystem_GetMatch) == 0x000008, "Wrong alignment on RH_MatchSubsystem_GetMatch");
static_assert(sizeof(RH_MatchSubsystem_GetMatch) == 0x000180, "Wrong size on RH_MatchSubsystem_GetMatch");
static_assert(offsetof(RH_MatchSubsystem_GetMatch, MatchID) == 0x000000, "Member 'RH_MatchSubsystem_GetMatch::MatchID' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_GetMatch, OutMatch) == 0x000010, "Member 'RH_MatchSubsystem_GetMatch::OutMatch' has a wrong offset!");
static_assert(offsetof(RH_MatchSubsystem_GetMatch, ReturnValue) == 0x000178, "Member 'RH_MatchSubsystem_GetMatch::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_MatchSubsystem.GetAllMatches
// 0x0050 (0x0050 - 0x0000)
struct RH_MatchSubsystem_GetAllMatches final
{
public:
	TMap<class FString, struct FRHAPI_MatchWithPlayers> ReturnValue;                                 // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_MatchSubsystem_GetAllMatches) == 0x000008, "Wrong alignment on RH_MatchSubsystem_GetAllMatches");
static_assert(sizeof(RH_MatchSubsystem_GetAllMatches) == 0x000050, "Wrong size on RH_MatchSubsystem_GetAllMatches");
static_assert(offsetof(RH_MatchSubsystem_GetAllMatches, ReturnValue) == 0x000000, "Member 'RH_MatchSubsystem_GetAllMatches::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.EndPlatformSession
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_EndPlatformSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_EndPlatformSession) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_EndPlatformSession");
static_assert(sizeof(RH_PlatformSessionSyncer_EndPlatformSession) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_EndPlatformSession");
static_assert(offsetof(RH_PlatformSessionSyncer_EndPlatformSession, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_EndPlatformSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.StartPlatformSession
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_StartPlatformSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_StartPlatformSession) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_StartPlatformSession");
static_assert(sizeof(RH_PlatformSessionSyncer_StartPlatformSession) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_StartPlatformSession");
static_assert(offsetof(RH_PlatformSessionSyncer_StartPlatformSession, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_StartPlatformSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetCurrentSyncActionState
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_GetCurrentSyncActionState final
{
public:
	ESyncActionState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_GetCurrentSyncActionState) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_GetCurrentSyncActionState");
static_assert(sizeof(RH_PlatformSessionSyncer_GetCurrentSyncActionState) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_GetCurrentSyncActionState");
static_assert(offsetof(RH_PlatformSessionSyncer_GetCurrentSyncActionState, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetCurrentSyncActionState::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetPlatformSessionIdFromPlatformSession
// 0x0038 (0x0038 - 0x0000)
struct RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession final
{
public:
	struct FUniqueNetIdRepl                       PlatformSessionId;                                 // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession) == 0x000008, "Wrong alignment on RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession");
static_assert(sizeof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession) == 0x000038, "Wrong size on RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession");
static_assert(offsetof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession, PlatformSessionId) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession::PlatformSessionId' has a wrong offset!");
static_assert(offsetof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession, ReturnValue) == 0x000030, "Member 'RH_PlatformSessionSyncer_GetPlatformSessionIdFromPlatformSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetPlatformSessionIdFromRHSession
// 0x0038 (0x0038 - 0x0000)
struct RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession final
{
public:
	struct FUniqueNetIdRepl                       PlatformSessionId;                                 // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession) == 0x000008, "Wrong alignment on RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession");
static_assert(sizeof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession) == 0x000038, "Wrong size on RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession");
static_assert(offsetof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession, PlatformSessionId) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession::PlatformSessionId' has a wrong offset!");
static_assert(offsetof(RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession, ReturnValue) == 0x000030, "Member 'RH_PlatformSessionSyncer_GetPlatformSessionIdFromRHSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetPlatformSessionName
// 0x0008 (0x0008 - 0x0000)
struct RH_PlatformSessionSyncer_GetPlatformSessionName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_GetPlatformSessionName) == 0x000004, "Wrong alignment on RH_PlatformSessionSyncer_GetPlatformSessionName");
static_assert(sizeof(RH_PlatformSessionSyncer_GetPlatformSessionName) == 0x000008, "Wrong size on RH_PlatformSessionSyncer_GetPlatformSessionName");
static_assert(offsetof(RH_PlatformSessionSyncer_GetPlatformSessionName, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetPlatformSessionName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetRHSession
// 0x0008 (0x0008 - 0x0000)
struct RH_PlatformSessionSyncer_GetRHSession final
{
public:
	class URH_JoinedSession*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_GetRHSession) == 0x000008, "Wrong alignment on RH_PlatformSessionSyncer_GetRHSession");
static_assert(sizeof(RH_PlatformSessionSyncer_GetRHSession) == 0x000008, "Wrong size on RH_PlatformSessionSyncer_GetRHSession");
static_assert(offsetof(RH_PlatformSessionSyncer_GetRHSession, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetRHSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetRHSessionId
// 0x0010 (0x0010 - 0x0000)
struct RH_PlatformSessionSyncer_GetRHSessionId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_GetRHSessionId) == 0x000008, "Wrong alignment on RH_PlatformSessionSyncer_GetRHSessionId");
static_assert(sizeof(RH_PlatformSessionSyncer_GetRHSessionId) == 0x000010, "Wrong size on RH_PlatformSessionSyncer_GetRHSessionId");
static_assert(offsetof(RH_PlatformSessionSyncer_GetRHSessionId, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetRHSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.GetSessionOwner
// 0x0010 (0x0010 - 0x0000)
struct RH_PlatformSessionSyncer_GetSessionOwner final
{
public:
	TScriptInterface<class IRH_SessionOwnerInterface> ReturnValue;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_GetSessionOwner) == 0x000008, "Wrong alignment on RH_PlatformSessionSyncer_GetSessionOwner");
static_assert(sizeof(RH_PlatformSessionSyncer_GetSessionOwner) == 0x000010, "Wrong size on RH_PlatformSessionSyncer_GetSessionOwner");
static_assert(offsetof(RH_PlatformSessionSyncer_GetSessionOwner, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_GetSessionOwner::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.IsCleaningUp
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_IsCleaningUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_IsCleaningUp) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_IsCleaningUp");
static_assert(sizeof(RH_PlatformSessionSyncer_IsCleaningUp) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_IsCleaningUp");
static_assert(offsetof(RH_PlatformSessionSyncer_IsCleaningUp, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_IsCleaningUp::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.IsCleanupComplete
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_IsCleanupComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_IsCleanupComplete) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_IsCleanupComplete");
static_assert(sizeof(RH_PlatformSessionSyncer_IsCleanupComplete) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_IsCleanupComplete");
static_assert(offsetof(RH_PlatformSessionSyncer_IsCleanupComplete, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_IsCleanupComplete::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.IsLocalPlayerScout
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_IsLocalPlayerScout final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_IsLocalPlayerScout) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_IsLocalPlayerScout");
static_assert(sizeof(RH_PlatformSessionSyncer_IsLocalPlayerScout) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_IsLocalPlayerScout");
static_assert(offsetof(RH_PlatformSessionSyncer_IsLocalPlayerScout, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_IsLocalPlayerScout::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlatformSessionSyncer.IsSynchronized
// 0x0001 (0x0001 - 0x0000)
struct RH_PlatformSessionSyncer_IsSynchronized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlatformSessionSyncer_IsSynchronized) == 0x000001, "Wrong alignment on RH_PlatformSessionSyncer_IsSynchronized");
static_assert(sizeof(RH_PlatformSessionSyncer_IsSynchronized) == 0x000001, "Wrong size on RH_PlatformSessionSyncer_IsSynchronized");
static_assert(offsetof(RH_PlatformSessionSyncer_IsSynchronized, ReturnValue) == 0x000000, "Member 'RH_PlatformSessionSyncer_IsSynchronized::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PEXBlueprintableStats.BLUEPRINT_CapturePerFrameStats
// 0x0010 (0x0010 - 0x0000)
struct RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats final
{
public:
	TScriptInterface<class IRH_PEXOwnerInterface> Owner;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats) == 0x000008, "Wrong alignment on RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats");
static_assert(sizeof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats) == 0x000010, "Wrong size on RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats");
static_assert(offsetof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats, Owner) == 0x000000, "Member 'RH_PEXBlueprintableStats_BLUEPRINT_CapturePerFrameStats::Owner' has a wrong offset!");

// Function RallyHereIntegration.RH_PEXBlueprintableStats.BLUEPRINT_CapturePerSecondStats
// 0x0010 (0x0010 - 0x0000)
struct RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats final
{
public:
	TScriptInterface<class IRH_PEXOwnerInterface> Owner;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats) == 0x000008, "Wrong alignment on RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats");
static_assert(sizeof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats) == 0x000010, "Wrong size on RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats");
static_assert(offsetof(RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats, Owner) == 0x000000, "Member 'RH_PEXBlueprintableStats_BLUEPRINT_CapturePerSecondStats::Owner' has a wrong offset!");

// Function RallyHereIntegration.RH_PEXBlueprintableStats.CaptureCounterValue
// 0x000C (0x000C - 0x0000)
struct RH_PEXBlueprintableStats_CaptureCounterValue final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PEXBlueprintableStats_CaptureCounterValue) == 0x000004, "Wrong alignment on RH_PEXBlueprintableStats_CaptureCounterValue");
static_assert(sizeof(RH_PEXBlueprintableStats_CaptureCounterValue) == 0x00000C, "Wrong size on RH_PEXBlueprintableStats_CaptureCounterValue");
static_assert(offsetof(RH_PEXBlueprintableStats_CaptureCounterValue, StatName) == 0x000000, "Member 'RH_PEXBlueprintableStats_CaptureCounterValue::StatName' has a wrong offset!");
static_assert(offsetof(RH_PEXBlueprintableStats_CaptureCounterValue, Value) == 0x000008, "Member 'RH_PEXBlueprintableStats_CaptureCounterValue::Value' has a wrong offset!");

// Function RallyHereIntegration.RH_PEXBlueprintableStats.CaptureStatValue
// 0x000C (0x000C - 0x0000)
struct RH_PEXBlueprintableStats_CaptureStatValue final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PEXBlueprintableStats_CaptureStatValue) == 0x000004, "Wrong alignment on RH_PEXBlueprintableStats_CaptureStatValue");
static_assert(sizeof(RH_PEXBlueprintableStats_CaptureStatValue) == 0x00000C, "Wrong size on RH_PEXBlueprintableStats_CaptureStatValue");
static_assert(offsetof(RH_PEXBlueprintableStats_CaptureStatValue, StatName) == 0x000000, "Member 'RH_PEXBlueprintableStats_CaptureStatValue::StatName' has a wrong offset!");
static_assert(offsetof(RH_PEXBlueprintableStats_CaptureStatValue, Value) == 0x000008, "Member 'RH_PEXBlueprintableStats_CaptureStatValue::Value' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubobject.BLUEPRINT_RequestUpdate
// 0x0014 (0x0014 - 0x0000)
struct RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate final
{
public:
	bool                                          bForceUpdate;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)> Delegate;               // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate) == 0x000004, "Wrong alignment on RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate");
static_assert(sizeof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate) == 0x000014, "Wrong size on RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate");
static_assert(offsetof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate, bForceUpdate) == 0x000000, "Member 'RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate::bForceUpdate' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate, Delegate) == 0x000004, "Member 'RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdate::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubobject.BLUEPRINT_RequestUpdateIfStale
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale final
{
public:
	struct FTimespan                              StaleThreshold;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)> Delegate;               // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale) == 0x000008, "Wrong alignment on RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale");
static_assert(sizeof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale) == 0x000020, "Wrong size on RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale");
static_assert(offsetof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale, StaleThreshold) == 0x000000, "Member 'RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale, bForceRefresh) == 0x000008, "Member 'RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale, Delegate) == 0x00000C, "Member 'RH_PlayerInfoSubobject_BLUEPRINT_RequestUpdateIfStale::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubobject.GetPlayerInfo
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfoSubobject_GetPlayerInfo final
{
public:
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubobject_GetPlayerInfo) == 0x000008, "Wrong alignment on RH_PlayerInfoSubobject_GetPlayerInfo");
static_assert(sizeof(RH_PlayerInfoSubobject_GetPlayerInfo) == 0x000008, "Wrong size on RH_PlayerInfoSubobject_GetPlayerInfo");
static_assert(offsetof(RH_PlayerInfoSubobject_GetPlayerInfo, ReturnValue) == 0x000000, "Member 'RH_PlayerInfoSubobject_GetPlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerSettings.BLUEPRINT_DeletePlayerSetting
// 0x0030 (0x0030 - 0x0000)
struct RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting) == 0x000008, "Wrong alignment on RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting");
static_assert(sizeof(RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting) == 0x000030, "Wrong size on RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting, SettingTypeId) == 0x000000, "Member 'RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting, Key) == 0x000010, "Member 'RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting, Delegate) == 0x000020, "Member 'RH_PlayerSettings_BLUEPRINT_DeletePlayerSetting::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerSettings.BLUEPRINT_GetPlayerSetting
// 0x0040 (0x0040 - 0x0000)
struct RH_PlayerSettings_BLUEPRINT_GetPlayerSetting final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              StaleThreshold;                                    // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)> Delegate;   // 0x002C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting) == 0x000008, "Wrong alignment on RH_PlayerSettings_BLUEPRINT_GetPlayerSetting");
static_assert(sizeof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting) == 0x000040, "Wrong size on RH_PlayerSettings_BLUEPRINT_GetPlayerSetting");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting, SettingTypeId) == 0x000000, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSetting::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting, Key) == 0x000010, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting, StaleThreshold) == 0x000020, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSetting::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting, bForceRefresh) == 0x000028, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSetting::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSetting, Delegate) == 0x00002C, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSetting::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerSettings.BLUEPRINT_GetPlayerSettingsForKeys
// 0x0040 (0x0040 - 0x0000)
struct RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Keys;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTimespan                              StaleThreshold;                                    // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)> Delegate;   // 0x002C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys) == 0x000008, "Wrong alignment on RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys");
static_assert(sizeof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys) == 0x000040, "Wrong size on RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys, SettingTypeId) == 0x000000, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys, Keys) == 0x000010, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys::Keys' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys, StaleThreshold) == 0x000020, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys, bForceRefresh) == 0x000028, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys, Delegate) == 0x00002C, "Member 'RH_PlayerSettings_BLUEPRINT_GetPlayerSettingsForKeys::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerSettings.BLUEPRINT_SetPlayerSetting
// 0x0098 (0x0098 - 0x0000)
struct RH_PlayerSettings_BLUEPRINT_SetPlayerSetting final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SetSinglePlayerSettingRequest   Document;                                          // 0x0020(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& UpdatedSettings, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_ObjectVersionCheck                 VersionCheck;                                      // 0x0058(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting) == 0x000008, "Wrong alignment on RH_PlayerSettings_BLUEPRINT_SetPlayerSetting");
static_assert(sizeof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting) == 0x000098, "Wrong size on RH_PlayerSettings_BLUEPRINT_SetPlayerSetting");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting, SettingTypeId) == 0x000000, "Member 'RH_PlayerSettings_BLUEPRINT_SetPlayerSetting::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting, Key) == 0x000010, "Member 'RH_PlayerSettings_BLUEPRINT_SetPlayerSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting, Document) == 0x000020, "Member 'RH_PlayerSettings_BLUEPRINT_SetPlayerSetting::Document' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting, Delegate) == 0x000048, "Member 'RH_PlayerSettings_BLUEPRINT_SetPlayerSetting::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerSettings_BLUEPRINT_SetPlayerSetting, VersionCheck) == 0x000058, "Member 'RH_PlayerSettings_BLUEPRINT_SetPlayerSetting::VersionCheck' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerSettings.GetAllStoredPlayerSettings
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerSettings_GetAllStoredPlayerSettings final
{
public:
	TMap<class FString, struct FRH_PlayerSettingsDataWrapper> ReturnValue;                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerSettings_GetAllStoredPlayerSettings) == 0x000008, "Wrong alignment on RH_PlayerSettings_GetAllStoredPlayerSettings");
static_assert(sizeof(RH_PlayerSettings_GetAllStoredPlayerSettings) == 0x000050, "Wrong size on RH_PlayerSettings_GetAllStoredPlayerSettings");
static_assert(offsetof(RH_PlayerSettings_GetAllStoredPlayerSettings, ReturnValue) == 0x000000, "Member 'RH_PlayerSettings_GetAllStoredPlayerSettings::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerDeserter.BLUEPRINT_ClearAllDeserterStatus
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus final
{
public:
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus) == 0x000004, "Wrong alignment on RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus");
static_assert(sizeof(RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus) == 0x000010, "Wrong size on RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus, Delegate) == 0x000000, "Member 'RH_PlayerDeserter_BLUEPRINT_ClearAllDeserterStatus::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerDeserter.BLUEPRINT_ClearDeserterStatus
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus final
{
public:
	class FString                                 DeserterId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus) == 0x000008, "Wrong alignment on RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus");
static_assert(sizeof(RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus) == 0x000020, "Wrong size on RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus, DeserterId) == 0x000000, "Member 'RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus::DeserterId' has a wrong offset!");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus, Delegate) == 0x000010, "Member 'RH_PlayerDeserter_BLUEPRINT_ClearDeserterStatus::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerDeserter.BLUEPRINT_SetDeserterStatus
// 0x0098 (0x0098 - 0x0000)
struct RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus final
{
public:
	class FString                                 DeserterId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_DeserterUpdateRequest           NewDeserterStatus;                                 // 0x0010(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)> Delegate;               // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus) == 0x000008, "Wrong alignment on RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus");
static_assert(sizeof(RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus) == 0x000098, "Wrong size on RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus, DeserterId) == 0x000000, "Member 'RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus::DeserterId' has a wrong offset!");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus, NewDeserterStatus) == 0x000010, "Member 'RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus::NewDeserterStatus' has a wrong offset!");
static_assert(offsetof(RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus, Delegate) == 0x000088, "Member 'RH_PlayerDeserter_BLUEPRINT_SetDeserterStatus::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerReports.BLUEPRINT_CreateReport
// 0x0100 (0x0100 - 0x0000)
struct RH_PlayerReports_BLUEPRINT_CreateReport final
{
public:
	struct FRHAPI_PlayerReportCreate              Report;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_PlayerReport& Report, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x00F0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerReports_BLUEPRINT_CreateReport) == 0x000008, "Wrong alignment on RH_PlayerReports_BLUEPRINT_CreateReport");
static_assert(sizeof(RH_PlayerReports_BLUEPRINT_CreateReport) == 0x000100, "Wrong size on RH_PlayerReports_BLUEPRINT_CreateReport");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_CreateReport, Report) == 0x000000, "Member 'RH_PlayerReports_BLUEPRINT_CreateReport::Report' has a wrong offset!");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_CreateReport, Delegate) == 0x0000F0, "Member 'RH_PlayerReports_BLUEPRINT_CreateReport::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerReports.BLUEPRINT_GetReportsReceivedAsync
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync final
{
public:
	class FString                                 Cursor;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageSize;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerReport>& PlayerReports, const class FString& Cursor, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync) == 0x000008, "Wrong alignment on RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync");
static_assert(sizeof(RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync) == 0x000028, "Wrong size on RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync, Cursor) == 0x000000, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync::Cursor' has a wrong offset!");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync, PageSize) == 0x000010, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync::PageSize' has a wrong offset!");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync, Delegate) == 0x000014, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsReceivedAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerReports.BLUEPRINT_GetReportsSentAsync
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerReports_BLUEPRINT_GetReportsSentAsync final
{
public:
	class FString                                 Cursor;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageSize;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerReport>& PlayerReports, const class FString& Cursor, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerReports_BLUEPRINT_GetReportsSentAsync) == 0x000008, "Wrong alignment on RH_PlayerReports_BLUEPRINT_GetReportsSentAsync");
static_assert(sizeof(RH_PlayerReports_BLUEPRINT_GetReportsSentAsync) == 0x000028, "Wrong size on RH_PlayerReports_BLUEPRINT_GetReportsSentAsync");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsSentAsync, Cursor) == 0x000000, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsSentAsync::Cursor' has a wrong offset!");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsSentAsync, PageSize) == 0x000010, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsSentAsync::PageSize' has a wrong offset!");
static_assert(offsetof(RH_PlayerReports_BLUEPRINT_GetReportsSentAsync, Delegate) == 0x000014, "Member 'RH_PlayerReports_BLUEPRINT_GetReportsSentAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerReports.GetReportsReceived
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerReports_GetReportsReceived final
{
public:
	TArray<struct FRHAPI_PlayerReport>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerReports_GetReportsReceived) == 0x000008, "Wrong alignment on RH_PlayerReports_GetReportsReceived");
static_assert(sizeof(RH_PlayerReports_GetReportsReceived) == 0x000010, "Wrong size on RH_PlayerReports_GetReportsReceived");
static_assert(offsetof(RH_PlayerReports_GetReportsReceived, ReturnValue) == 0x000000, "Member 'RH_PlayerReports_GetReportsReceived::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerReports.GetReportsSent
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerReports_GetReportsSent final
{
public:
	TArray<struct FRHAPI_PlayerReport>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerReports_GetReportsSent) == 0x000008, "Wrong alignment on RH_PlayerReports_GetReportsSent");
static_assert(sizeof(RH_PlayerReports_GetReportsSent) == 0x000010, "Wrong size on RH_PlayerReports_GetReportsSent");
static_assert(offsetof(RH_PlayerReports_GetReportsSent, ReturnValue) == 0x000000, "Member 'RH_PlayerReports_GetReportsSent::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerRecentlyPlayedWith.GetRecentlyPlayedWith
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith final
{
public:
	TArray<struct FRHAPI_RecentlyPlayedPlayer>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith) == 0x000008, "Wrong alignment on RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith");
static_assert(sizeof(RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith) == 0x000010, "Wrong size on RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith");
static_assert(offsetof(RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith, ReturnValue) == 0x000000, "Member 'RH_PlayerRecentlyPlayedWith_GetRecentlyPlayedWith::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerGuideEngagement.BLUEPRINT_AddGuideToFavorites
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites) == 0x000004, "Wrong alignment on RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites");
static_assert(sizeof(RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites) == 0x000020, "Wrong size on RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites, GuideId) == 0x000000, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites::GuideId' has a wrong offset!");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites, Delegate) == 0x000010, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_AddGuideToFavorites::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerGuideEngagement.BLUEPRINT_GetGuideEngagementAsync
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync final
{
public:
	TArray<struct FGuid>                          GuideIDs;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_ManyEntityGuideEngagement& Engagement, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync) == 0x000008, "Wrong alignment on RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync");
static_assert(sizeof(RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync) == 0x000020, "Wrong size on RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync, GuideIDs) == 0x000000, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync::GuideIDs' has a wrong offset!");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync, Delegate) == 0x000010, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_GetGuideEngagementAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerGuideEngagement.BLUEPRINT_RateGuide
// 0x0024 (0x0024 - 0x0000)
struct RH_PlayerGuideEngagement_BLUEPRINT_RateGuide final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Rating;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerGuideEngagement_BLUEPRINT_RateGuide) == 0x000004, "Wrong alignment on RH_PlayerGuideEngagement_BLUEPRINT_RateGuide");
static_assert(sizeof(RH_PlayerGuideEngagement_BLUEPRINT_RateGuide) == 0x000024, "Wrong size on RH_PlayerGuideEngagement_BLUEPRINT_RateGuide");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_RateGuide, GuideId) == 0x000000, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_RateGuide::GuideId' has a wrong offset!");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_RateGuide, Rating) == 0x000010, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_RateGuide::Rating' has a wrong offset!");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_RateGuide, Delegate) == 0x000014, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_RateGuide::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerGuideEngagement.BLUEPRINT_RemoveGuideFromFavorites
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites final
{
public:
	struct FGuid                                  GuideId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites) == 0x000004, "Wrong alignment on RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites");
static_assert(sizeof(RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites) == 0x000020, "Wrong size on RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites, GuideId) == 0x000000, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites::GuideId' has a wrong offset!");
static_assert(offsetof(RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites, Delegate) == 0x000010, "Member 'RH_PlayerGuideEngagement_BLUEPRINT_RemoveGuideFromFavorites::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerGuideEngagement.GetGuideEngagement
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerGuideEngagement_GetGuideEngagement final
{
public:
	TMap<struct FGuid, struct FRHAPI_EntityGuideEngagement> ReturnValue;                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerGuideEngagement_GetGuideEngagement) == 0x000008, "Wrong alignment on RH_PlayerGuideEngagement_GetGuideEngagement");
static_assert(sizeof(RH_PlayerGuideEngagement_GetGuideEngagement) == 0x000050, "Wrong size on RH_PlayerGuideEngagement_GetGuideEngagement");
static_assert(offsetof(RH_PlayerGuideEngagement_GetGuideEngagement, ReturnValue) == 0x000000, "Member 'RH_PlayerGuideEngagement_GetGuideEngagement::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerPlatformInfo.GetLastKnownDisplayName
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerPlatformInfo_GetLastKnownDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerPlatformInfo_GetLastKnownDisplayName) == 0x000008, "Wrong alignment on RH_PlayerPlatformInfo_GetLastKnownDisplayName");
static_assert(sizeof(RH_PlayerPlatformInfo_GetLastKnownDisplayName) == 0x000010, "Wrong size on RH_PlayerPlatformInfo_GetLastKnownDisplayName");
static_assert(offsetof(RH_PlayerPlatformInfo_GetLastKnownDisplayName, ReturnValue) == 0x000000, "Member 'RH_PlayerPlatformInfo_GetLastKnownDisplayName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerPlatformInfo.GetPlatform
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerPlatformInfo_GetPlatform final
{
public:
	ERHAPI_Platform                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerPlatformInfo_GetPlatform) == 0x000001, "Wrong alignment on RH_PlayerPlatformInfo_GetPlatform");
static_assert(sizeof(RH_PlayerPlatformInfo_GetPlatform) == 0x000001, "Wrong size on RH_PlayerPlatformInfo_GetPlatform");
static_assert(offsetof(RH_PlayerPlatformInfo_GetPlatform, ReturnValue) == 0x000000, "Member 'RH_PlayerPlatformInfo_GetPlatform::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerPlatformInfo.GetPlatformUserId
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerPlatformInfo_GetPlatformUserId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerPlatformInfo_GetPlatformUserId) == 0x000008, "Wrong alignment on RH_PlayerPlatformInfo_GetPlatformUserId");
static_assert(sizeof(RH_PlayerPlatformInfo_GetPlatformUserId) == 0x000010, "Wrong size on RH_PlayerPlatformInfo_GetPlatformUserId");
static_assert(offsetof(RH_PlayerPlatformInfo_GetPlatformUserId, ReturnValue) == 0x000000, "Member 'RH_PlayerPlatformInfo_GetPlatformUserId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerPlatformInfo.GetPlayerPlatformId
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerPlatformInfo_GetPlayerPlatformId final
{
public:
	struct FRH_PlayerPlatformId                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerPlatformInfo_GetPlayerPlatformId) == 0x000008, "Wrong alignment on RH_PlayerPlatformInfo_GetPlayerPlatformId");
static_assert(sizeof(RH_PlayerPlatformInfo_GetPlayerPlatformId) == 0x000018, "Wrong size on RH_PlayerPlatformInfo_GetPlayerPlatformId");
static_assert(offsetof(RH_PlayerPlatformInfo_GetPlayerPlatformId, ReturnValue) == 0x000000, "Member 'RH_PlayerPlatformInfo_GetPlayerPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_DeletePlayerSetting
// 0x0030 (0x0030 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting) == 0x000030, "Wrong size on RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting, SettingTypeId) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting, Key) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting, Delegate) == 0x000020, "Member 'RH_PlayerInfo_BLUEPRINT_DeletePlayerSetting::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetLastKnownDisplayNameAsync
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync final
{
public:
	const class URH_LocalPlayerSubsystem*         LocalPlayerSubsystem;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              StaleThreshold;                                    // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Platform                               PreferredPlatformType;                             // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const class FString& DisplayName)> Delegate;                       // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync) == 0x000028, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync, LocalPlayerSubsystem) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync::LocalPlayerSubsystem' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync, StaleThreshold) == 0x000008, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync, bForceRefresh) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync, PreferredPlatformType) == 0x000011, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync::PreferredPlatformType' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync, Delegate) == 0x000014, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayNameAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetLinkedPlatformInfo
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo final
{
public:
	struct FTimespan                              StaleThreshold;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const TArray<class URH_PlayerPlatformInfo*>& Platforms)> Delegate; // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo) == 0x000020, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo, StaleThreshold) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo, bForceRefresh) == 0x000008, "Member 'RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo, Delegate) == 0x00000C, "Member 'RH_PlayerInfo_BLUEPRINT_GetLinkedPlatformInfo::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetPlayerRankings
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetPlayerRankings final
{
public:
	struct FTimespan                              StaleThreshold;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerRankResponseV2>& PlayerRankingInfo)> Delegate; // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetPlayerRankings) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetPlayerRankings");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetPlayerRankings) == 0x000020, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetPlayerRankings");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerRankings, StaleThreshold) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerRankings::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerRankings, bForceRefresh) == 0x000008, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerRankings::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerRankings, Delegate) == 0x00000C, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerRankings::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetPlayerSettings
// 0x0030 (0x0030 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetPlayerSettings final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              StaleThreshold;                                    // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)> Delegate;   // 0x001C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetPlayerSettings");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings) == 0x000030, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetPlayerSettings");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings, SettingTypeId) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettings::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings, StaleThreshold) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettings::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings, bForceRefresh) == 0x000018, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettings::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettings, Delegate) == 0x00001C, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettings::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetPlayerSettingsForKeys
// 0x0040 (0x0040 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Keys;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTimespan                              StaleThreshold;                                    // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)> Delegate;   // 0x002C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys) == 0x000040, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys, SettingTypeId) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys, Keys) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys::Keys' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys, StaleThreshold) == 0x000020, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys::StaleThreshold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys, bForceRefresh) == 0x000028, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys::bForceRefresh' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys, Delegate) == 0x00002C, "Member 'RH_PlayerInfo_BLUEPRINT_GetPlayerSettingsForKeys::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_SetPlayerSetting
// 0x0058 (0x0058 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_SetPlayerSetting final
{
public:
	class FString                                 SettingTypeId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SetSinglePlayerSettingRequest   Document;                                          // 0x0020(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& UpdatedSettings, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_SetPlayerSetting");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting) == 0x000058, "Wrong size on RH_PlayerInfo_BLUEPRINT_SetPlayerSetting");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting, SettingTypeId) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_SetPlayerSetting::SettingTypeId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting, Key) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_SetPlayerSetting::Key' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting, Document) == 0x000020, "Member 'RH_PlayerInfo_BLUEPRINT_SetPlayerSetting::Document' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_SetPlayerSetting, Delegate) == 0x000048, "Member 'RH_PlayerInfo_BLUEPRINT_SetPlayerSetting::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_UpdatePlayerRanking
// 0x00A8 (0x00A8 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking final
{
public:
	class FString                                 RankId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_PlayerRankUpdateRequest         RankData;                                          // 0x0010(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerRankResponseV2>& PlayerRankingInfo)> Delegate; // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking) == 0x0000A8, "Wrong size on RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking, RankId) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking::RankId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking, RankData) == 0x000010, "Member 'RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking::RankData' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking, Delegate) == 0x000098, "Member 'RH_PlayerInfo_BLUEPRINT_UpdatePlayerRanking::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerPlatformIds
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInfo_GetPlayerPlatformIds final
{
public:
	TArray<struct FRH_PlayerPlatformId>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerPlatformIds) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerPlatformIds");
static_assert(sizeof(RH_PlayerInfo_GetPlayerPlatformIds) == 0x000010, "Wrong size on RH_PlayerInfo_GetPlayerPlatformIds");
static_assert(offsetof(RH_PlayerInfo_GetPlayerPlatformIds, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerPlatformIds::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetRHPlayerUuid
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInfo_GetRHPlayerUuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetRHPlayerUuid) == 0x000004, "Wrong alignment on RH_PlayerInfo_GetRHPlayerUuid");
static_assert(sizeof(RH_PlayerInfo_GetRHPlayerUuid) == 0x000010, "Wrong size on RH_PlayerInfo_GetRHPlayerUuid");
static_assert(offsetof(RH_PlayerInfo_GetRHPlayerUuid, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetRHPlayerUuid::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.StopStreamingNotifications
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerInfo_StopStreamingNotifications final
{
public:
	bool                                          bClearCache;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_StopStreamingNotifications) == 0x000001, "Wrong alignment on RH_PlayerInfo_StopStreamingNotifications");
static_assert(sizeof(RH_PlayerInfo_StopStreamingNotifications) == 0x000001, "Wrong size on RH_PlayerInfo_StopStreamingNotifications");
static_assert(offsetof(RH_PlayerInfo_StopStreamingNotifications, bClearCache) == 0x000000, "Member 'RH_PlayerInfo_StopStreamingNotifications::bClearCache' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.BLUEPRINT_GetLastKnownDisplayName
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName final
{
public:
	ERHAPI_Platform                               PreferredPlatformType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutDisplayName;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName) == 0x000008, "Wrong alignment on RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName");
static_assert(sizeof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName) == 0x000020, "Wrong size on RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName, PreferredPlatformType) == 0x000000, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName::PreferredPlatformType' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName, OutDisplayName) == 0x000008, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName::OutDisplayName' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName, ReturnValue) == 0x000018, "Member 'RH_PlayerInfo_BLUEPRINT_GetLastKnownDisplayName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetAllStoredPlayerRankings
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerInfo_GetAllStoredPlayerRankings final
{
public:
	TMap<class FString, struct FRHAPI_PlayerRankResponseV2> ReturnValue;                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetAllStoredPlayerRankings) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetAllStoredPlayerRankings");
static_assert(sizeof(RH_PlayerInfo_GetAllStoredPlayerRankings) == 0x000050, "Wrong size on RH_PlayerInfo_GetAllStoredPlayerRankings");
static_assert(offsetof(RH_PlayerInfo_GetAllStoredPlayerRankings, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetAllStoredPlayerRankings::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetAllStoredPlayerSettings
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerInfo_GetAllStoredPlayerSettings final
{
public:
	TMap<class FString, struct FRH_PlayerSettingsDataWrapper> ReturnValue;                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetAllStoredPlayerSettings) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetAllStoredPlayerSettings");
static_assert(sizeof(RH_PlayerInfo_GetAllStoredPlayerSettings) == 0x000050, "Wrong size on RH_PlayerInfo_GetAllStoredPlayerSettings");
static_assert(offsetof(RH_PlayerInfo_GetAllStoredPlayerSettings, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetAllStoredPlayerSettings::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetDeserter
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetDeserter final
{
public:
	class URH_PlayerDeserter*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetDeserter) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetDeserter");
static_assert(sizeof(RH_PlayerInfo_GetDeserter) == 0x000008, "Wrong size on RH_PlayerInfo_GetDeserter");
static_assert(offsetof(RH_PlayerInfo_GetDeserter, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetDeserter::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetGuideEngagement
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetGuideEngagement final
{
public:
	class URH_PlayerGuideEngagement*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetGuideEngagement) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetGuideEngagement");
static_assert(sizeof(RH_PlayerInfo_GetGuideEngagement) == 0x000008, "Wrong size on RH_PlayerInfo_GetGuideEngagement");
static_assert(offsetof(RH_PlayerInfo_GetGuideEngagement, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetGuideEngagement::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetMatches
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetMatches final
{
public:
	class URH_PlayerMatches*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetMatches) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetMatches");
static_assert(sizeof(RH_PlayerInfo_GetMatches) == 0x000008, "Wrong size on RH_PlayerInfo_GetMatches");
static_assert(offsetof(RH_PlayerInfo_GetMatches, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetMatches::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetPlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerInfoSubsystem");
static_assert(sizeof(RH_PlayerInfo_GetPlayerInfoSubsystem) == 0x000008, "Wrong size on RH_PlayerInfo_GetPlayerInfoSubsystem");
static_assert(offsetof(RH_PlayerInfo_GetPlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerInventory
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetPlayerInventory final
{
public:
	class URH_PlayerInventory*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerInventory) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerInventory");
static_assert(sizeof(RH_PlayerInfo_GetPlayerInventory) == 0x000008, "Wrong size on RH_PlayerInfo_GetPlayerInventory");
static_assert(offsetof(RH_PlayerInfo_GetPlayerInventory, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerInventory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerNotifications
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetPlayerNotifications final
{
public:
	class URH_PlayerNotifications*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerNotifications) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerNotifications");
static_assert(sizeof(RH_PlayerInfo_GetPlayerNotifications) == 0x000008, "Wrong size on RH_PlayerInfo_GetPlayerNotifications");
static_assert(offsetof(RH_PlayerInfo_GetPlayerNotifications, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerNotifications::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerPlatformInfo
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfo_GetPlayerPlatformInfo final
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerPlatformInfo*                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerPlatformInfo) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerPlatformInfo");
static_assert(sizeof(RH_PlayerInfo_GetPlayerPlatformInfo) == 0x000020, "Wrong size on RH_PlayerInfo_GetPlayerPlatformInfo");
static_assert(offsetof(RH_PlayerInfo_GetPlayerPlatformInfo, PlayerPlatformId) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerPlatformInfo::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfo_GetPlayerPlatformInfo, ReturnValue) == 0x000018, "Member 'RH_PlayerInfo_GetPlayerPlatformInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPlayerPlatforms
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInfo_GetPlayerPlatforms final
{
public:
	TArray<class URH_PlayerPlatformInfo*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPlayerPlatforms) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPlayerPlatforms");
static_assert(sizeof(RH_PlayerInfo_GetPlayerPlatforms) == 0x000010, "Wrong size on RH_PlayerInfo_GetPlayerPlatforms");
static_assert(offsetof(RH_PlayerInfo_GetPlayerPlatforms, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPlayerPlatforms::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetPresence
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetPresence final
{
public:
	class URH_PlayerPresence*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetPresence) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetPresence");
static_assert(sizeof(RH_PlayerInfo_GetPresence) == 0x000008, "Wrong size on RH_PlayerInfo_GetPresence");
static_assert(offsetof(RH_PlayerInfo_GetPresence, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetPresence::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetRecentlyPlayedWith
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetRecentlyPlayedWith final
{
public:
	class URH_PlayerRecentlyPlayedWith*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetRecentlyPlayedWith) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetRecentlyPlayedWith");
static_assert(sizeof(RH_PlayerInfo_GetRecentlyPlayedWith) == 0x000008, "Wrong size on RH_PlayerInfo_GetRecentlyPlayedWith");
static_assert(offsetof(RH_PlayerInfo_GetRecentlyPlayedWith, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetRecentlyPlayedWith::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetReports
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetReports final
{
public:
	class URH_PlayerReports*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetReports) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetReports");
static_assert(sizeof(RH_PlayerInfo_GetReports) == 0x000008, "Wrong size on RH_PlayerInfo_GetReports");
static_assert(offsetof(RH_PlayerInfo_GetReports, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetReports::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetSessions
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetSessions final
{
public:
	class URH_PlayerSessions*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetSessions) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetSessions");
static_assert(sizeof(RH_PlayerInfo_GetSessions) == 0x000008, "Wrong size on RH_PlayerInfo_GetSessions");
static_assert(offsetof(RH_PlayerInfo_GetSessions, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetSessions::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.GetSettings
// 0x0008 (0x0008 - 0x0000)
struct RH_PlayerInfo_GetSettings final
{
public:
	class URH_PlayerSettings*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_GetSettings) == 0x000008, "Wrong alignment on RH_PlayerInfo_GetSettings");
static_assert(sizeof(RH_PlayerInfo_GetSettings) == 0x000008, "Wrong size on RH_PlayerInfo_GetSettings");
static_assert(offsetof(RH_PlayerInfo_GetSettings, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_GetSettings::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfo.IsUsingLegacyName
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerInfo_IsUsingLegacyName final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfo_IsUsingLegacyName) == 0x000001, "Wrong alignment on RH_PlayerInfo_IsUsingLegacyName");
static_assert(sizeof(RH_PlayerInfo_IsUsingLegacyName) == 0x000001, "Wrong size on RH_PlayerInfo_IsUsingLegacyName");
static_assert(offsetof(RH_PlayerInfo_IsUsingLegacyName, ReturnValue) == 0x000000, "Member 'RH_PlayerInfo_IsUsingLegacyName::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SandboxedSubsystemPlugin.GetLocalPlayerSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem final
{
public:
	class URH_LocalPlayerSubsystem*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem) == 0x000008, "Wrong alignment on RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem");
static_assert(sizeof(RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem) == 0x000008, "Wrong size on RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem");
static_assert(offsetof(RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem, ReturnValue) == 0x000000, "Member 'RH_SandboxedSubsystemPlugin_GetLocalPlayerSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.BLUEPRINT_LookupPlayer
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<class URH_PlayerInfo*>& PlayerInfo)> Delegate;        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer");
static_assert(sizeof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer) == 0x000020, "Wrong size on RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer");
static_assert(offsetof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer, PlayerName) == 0x000000, "Member 'RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer::PlayerName' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer, Delegate) == 0x000010, "Member 'RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayer::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.BLUEPRINT_LookupPlayerByPlatformUserId
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId final
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const TArray<class URH_PlayerInfo*>& PlayerInfo)> Delegate;        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId");
static_assert(sizeof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId) == 0x000028, "Wrong size on RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId");
static_assert(offsetof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId, PlayerPlatformId) == 0x000000, "Member 'RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId, Delegate) == 0x000018, "Member 'RH_PlayerInfoSubsystem_BLUEPRINT_LookupPlayerByPlatformUserId::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.GetOrCreatePlayerInfo
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo");
static_assert(sizeof(RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo) == 0x000018, "Wrong size on RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo, PlayerUuid) == 0x000000, "Member 'RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo, ReturnValue) == 0x000010, "Member 'RH_PlayerInfoSubsystem_GetOrCreatePlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.GetOrCreatePlayerPlatformInfo
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo final
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerPlatformInfo*                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo");
static_assert(sizeof(RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo) == 0x000020, "Wrong size on RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo, PlayerPlatformId) == 0x000000, "Member 'RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo, ReturnValue) == 0x000018, "Member 'RH_PlayerInfoSubsystem_GetOrCreatePlayerPlatformInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.RemovePlayerInfoFromCache
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache");
static_assert(sizeof(RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache) == 0x000018, "Wrong size on RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache");
static_assert(offsetof(RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache, PlayerUuid) == 0x000000, "Member 'RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache, ReturnValue) == 0x000010, "Member 'RH_PlayerInfoSubsystem_RemovePlayerInfoFromCache::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.FindPlayerInfoByPlatformId
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId final
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId");
static_assert(sizeof(RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId) == 0x000020, "Wrong size on RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId");
static_assert(offsetof(RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId, PlayerPlatformId) == 0x000000, "Member 'RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId, ReturnValue) == 0x000018, "Member 'RH_PlayerInfoSubsystem_FindPlayerInfoByPlatformId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.GetPlayerInfo
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerInfoSubsystem_GetPlayerInfo final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerInfo*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_GetPlayerInfo) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_GetPlayerInfo");
static_assert(sizeof(RH_PlayerInfoSubsystem_GetPlayerInfo) == 0x000018, "Wrong size on RH_PlayerInfoSubsystem_GetPlayerInfo");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetPlayerInfo, PlayerUuid) == 0x000000, "Member 'RH_PlayerInfoSubsystem_GetPlayerInfo::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetPlayerInfo, ReturnValue) == 0x000010, "Member 'RH_PlayerInfoSubsystem_GetPlayerInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.GetPlayerInfos
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerInfoSubsystem_GetPlayerInfos final
{
public:
	TMap<struct FGuid, class URH_PlayerInfo*>     ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_GetPlayerInfos) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_GetPlayerInfos");
static_assert(sizeof(RH_PlayerInfoSubsystem_GetPlayerInfos) == 0x000050, "Wrong size on RH_PlayerInfoSubsystem_GetPlayerInfos");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetPlayerInfos, ReturnValue) == 0x000000, "Member 'RH_PlayerInfoSubsystem_GetPlayerInfos::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInfoSubsystem.GetPlayerPlatformInfo
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInfoSubsystem_GetPlayerPlatformInfo final
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlayerPlatformInfo*                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInfoSubsystem_GetPlayerPlatformInfo) == 0x000008, "Wrong alignment on RH_PlayerInfoSubsystem_GetPlayerPlatformInfo");
static_assert(sizeof(RH_PlayerInfoSubsystem_GetPlayerPlatformInfo) == 0x000020, "Wrong size on RH_PlayerInfoSubsystem_GetPlayerPlatformInfo");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetPlayerPlatformInfo, PlayerPlatformId) == 0x000000, "Member 'RH_PlayerInfoSubsystem_GetPlayerPlatformInfo::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInfoSubsystem_GetPlayerPlatformInfo, ReturnValue) == 0x000018, "Member 'RH_PlayerInfoSubsystem_GetPlayerPlatformInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_AddPendingOrdersFromEntitlementResult
// 0x00C0 (0x00C0 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult final
{
public:
	struct FRHAPI_PlatformEntitlementProcessResult EntitlementResult;                                // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)> Delegate;                 // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult) == 0x0000C0, "Wrong size on RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult, EntitlementResult) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult::EntitlementResult' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult, Delegate) == 0x0000B0, "Member 'RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementResult::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_AddPendingOrdersFromEntitlementsArray
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray final
{
public:
	TArray<struct FRHAPI_PlatformEntitlement>     Entitlements;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)> Delegate;                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray) == 0x000020, "Wrong size on RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray, Entitlements) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray::Entitlements' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray, Delegate) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_AddPendingOrdersFromEntitlementsArray::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_ClearOrderWatch
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_ClearOrderWatch final
{
public:
	TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)> Delegate;                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_ClearOrderWatch) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_ClearOrderWatch");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_ClearOrderWatch) == 0x000010, "Wrong size on RH_PlayerInventory_BLUEPRINT_ClearOrderWatch");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_ClearOrderWatch, Delegate) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_ClearOrderWatch::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateInventory
// 0x0038 (0x0038 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateInventory final
{
public:
	struct FGuid                                  ClientOrderReferenceId;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRH_CreateInventory>            CreateInventories;                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Source                                 Source;                                            // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateInventory) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateInventory");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateInventory) == 0x000038, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateInventory");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventory, ClientOrderReferenceId) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventory::ClientOrderReferenceId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventory, CreateInventories) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventory::CreateInventories' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventory, Delegate) == 0x000020, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventory::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventory, Source) == 0x000030, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventory::Source' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateInventorySession
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateInventorySession final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateInventorySession) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateInventorySession");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateInventorySession) == 0x000010, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateInventorySession");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventorySession, Delegate) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventorySession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateInventorySessionForPlatform
// 0x0014 (0x0014 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform final
{
public:
	ERHAPI_InventoryPlatform                      Platform;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform) == 0x000014, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform, Platform) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform::Platform' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform, Delegate) == 0x000004, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventorySessionForPlatform::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateInventoryWithoutClientOrderRefId
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId final
{
public:
	TArray<struct FRH_CreateInventory>            CreateInventories;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Source                                 Source;                                            // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId) == 0x000028, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId, CreateInventories) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId::CreateInventories' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId, Delegate) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId, Source) == 0x000020, "Member 'RH_PlayerInventory_BLUEPRINT_CreateInventoryWithoutClientOrderRefId::Source' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateNewPlayerOrder
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder final
{
public:
	ERHAPI_Source                                 OrderSource;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_PlayerOrderEntry*>           OrderEntries;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)> Delegate; // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder) == 0x000028, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder, OrderSource) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder::OrderSource' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder, OrderEntries) == 0x000008, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder::OrderEntries' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder, Delegate) == 0x000018, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreateNewPlayerOrder2
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2 final
{
public:
	ERHAPI_Source                                 OrderSource;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTransaction;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_PlayerOrderEntry*>           OrderEntries;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)> Delegate; // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2) == 0x000028, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2, OrderSource) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2::OrderSource' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2, IsTransaction) == 0x000001, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2::IsTransaction' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2, OrderEntries) == 0x000008, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2::OrderEntries' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2, Delegate) == 0x000018, "Member 'RH_PlayerInventory_BLUEPRINT_CreateNewPlayerOrder2::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_CreatePlayerOrder
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder final
{
public:
	ERHAPI_PlayerOrderEntryType                   FillType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Source                                 OrderSource;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_PlayerOrderEntry*>           OrderEntries;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)> Delegate; // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder) == 0x000028, "Wrong size on RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder, FillType) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder::FillType' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder, OrderSource) == 0x000001, "Member 'RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder::OrderSource' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder, OrderEntries) == 0x000008, "Member 'RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder::OrderEntries' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder, Delegate) == 0x000018, "Member 'RH_PlayerInventory_BLUEPRINT_CreatePlayerOrder::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_GetInventory
// 0x0030 (0x0030 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_GetInventory final
{
public:
	struct FTimespan                              StaleThresold;                                     // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ItemIds;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_GetInventory) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_GetInventory");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_GetInventory) == 0x000030, "Wrong size on RH_PlayerInventory_BLUEPRINT_GetInventory");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventory, StaleThresold) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventory::StaleThresold' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventory, bForce) == 0x000008, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventory::bForce' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventory, ItemIds) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventory::ItemIds' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventory, Delegate) == 0x000020, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventory::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_GetInventoryCount
// 0x0014 (0x0014 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_GetInventoryCount final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 InstanceCount)>          Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_GetInventoryCount) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_GetInventoryCount");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_GetInventoryCount) == 0x000014, "Wrong size on RH_PlayerInventory_BLUEPRINT_GetInventoryCount");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventoryCount, ItemId) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventoryCount::ItemId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventoryCount, Delegate) == 0x000004, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventoryCount::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_GetInventorySession
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_GetInventorySession final
{
public:
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_GetInventorySession) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_GetInventorySession");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_GetInventorySession) == 0x000010, "Wrong size on RH_PlayerInventory_BLUEPRINT_GetInventorySession");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetInventorySession, Delegate) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_GetInventorySession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_GetItemLevelsAsync
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync final
{
public:
	TArray<int32>                                 ItemIds;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync) == 0x000020, "Wrong size on RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync, ItemIds) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync::ItemIds' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync, Delegate) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_GetItemLevelsAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_IsInventoryItemOwned
// 0x0014 (0x0014 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool IsValid)>                 Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned) == 0x000014, "Wrong size on RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned, ItemId) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned::ItemId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned, Delegate) == 0x000004, "Member 'RH_PlayerInventory_BLUEPRINT_IsInventoryItemOwned::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_IsInventoryItemRented
// 0x0014 (0x0014 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool IsValid)>                 Delegate;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented) == 0x000014, "Wrong size on RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented, ItemId) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented::ItemId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented, Delegate) == 0x000004, "Member 'RH_PlayerInventory_BLUEPRINT_IsInventoryItemRented::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_RedeemPromoCode
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_RedeemPromoCode final
{
public:
	class FString                                 PromoCode;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const class FString& PromoCode, const struct FRHAPI_PlayerOrder& OrderResult)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_RedeemPromoCode) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_RedeemPromoCode");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_RedeemPromoCode) == 0x000020, "Wrong size on RH_PlayerInventory_BLUEPRINT_RedeemPromoCode");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_RedeemPromoCode, PromoCode) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_RedeemPromoCode::PromoCode' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_RedeemPromoCode, Delegate) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_RedeemPromoCode::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_SetOrderWatch
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_SetOrderWatch final
{
public:
	TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)> Delegate;                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_SetOrderWatch) == 0x000004, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_SetOrderWatch");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_SetOrderWatch) == 0x000010, "Wrong size on RH_PlayerInventory_BLUEPRINT_SetOrderWatch");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_SetOrderWatch, Delegate) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_SetOrderWatch::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_UpdateInventory
// 0x0038 (0x0038 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_UpdateInventory final
{
public:
	struct FGuid                                  ClientOrderReferenceId;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRH_UpdateInventory>            UpdateInventories;                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Source                                 Source;                                            // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_UpdateInventory) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_UpdateInventory");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_UpdateInventory) == 0x000038, "Wrong size on RH_PlayerInventory_BLUEPRINT_UpdateInventory");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventory, ClientOrderReferenceId) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventory::ClientOrderReferenceId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventory, UpdateInventories) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventory::UpdateInventories' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventory, Delegate) == 0x000020, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventory::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventory, Source) == 0x000030, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventory::Source' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.BLUEPRINT_UpdateInventoryWithoutClientOrderRefId
// 0x0028 (0x0028 - 0x0000)
struct RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId final
{
public:
	TArray<struct FRH_UpdateInventory>            UpdateInventories;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                Delegate;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_Source                                 Source;                                            // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId) == 0x000008, "Wrong alignment on RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId");
static_assert(sizeof(RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId) == 0x000028, "Wrong size on RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId, UpdateInventories) == 0x000000, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId::UpdateInventories' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId, Delegate) == 0x000010, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId, Source) == 0x000020, "Member 'RH_PlayerInventory_BLUEPRINT_UpdateInventoryWithoutClientOrderRefId::Source' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetAllCachedInventory
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_GetAllCachedInventory final
{
public:
	TArray<struct FRH_ItemInventory>              ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetAllCachedInventory) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetAllCachedInventory");
static_assert(sizeof(RH_PlayerInventory_GetAllCachedInventory) == 0x000010, "Wrong size on RH_PlayerInventory_GetAllCachedInventory");
static_assert(offsetof(RH_PlayerInventory_GetAllCachedInventory, ReturnValue) == 0x000000, "Member 'RH_PlayerInventory_GetAllCachedInventory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventoryForInventoryId
// 0x00A8 (0x00A8 - 0x0000)
struct RH_PlayerInventory_GetCachedInventoryForInventoryId final
{
public:
	struct FGuid                                  InventoryId;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_ItemInventory                      Item;                                              // 0x0010(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventoryForInventoryId) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventoryForInventoryId");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventoryForInventoryId) == 0x0000A8, "Wrong size on RH_PlayerInventory_GetCachedInventoryForInventoryId");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForInventoryId, InventoryId) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventoryForInventoryId::InventoryId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForInventoryId, Item) == 0x000010, "Member 'RH_PlayerInventory_GetCachedInventoryForInventoryId::Item' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForInventoryId, ReturnValue) == 0x0000A0, "Member 'RH_PlayerInventory_GetCachedInventoryForInventoryId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventoryForItem
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerInventory_GetCachedInventoryForItem final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRH_ItemInventory>              ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventoryForItem) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventoryForItem");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventoryForItem) == 0x000018, "Wrong size on RH_PlayerInventory_GetCachedInventoryForItem");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItem, ItemId) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventoryForItem::ItemId' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItem, ReturnValue) == 0x000008, "Member 'RH_PlayerInventory_GetCachedInventoryForItem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventoryForItems
// 0x0020 (0x0020 - 0x0000)
struct RH_PlayerInventory_GetCachedInventoryForItems final
{
public:
	TArray<int32>                                 ItemIds;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FRH_ItemInventory>              ReturnValue;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventoryForItems) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventoryForItems");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventoryForItems) == 0x000020, "Wrong size on RH_PlayerInventory_GetCachedInventoryForItems");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItems, ItemIds) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventoryForItems::ItemIds' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItems, ReturnValue) == 0x000010, "Member 'RH_PlayerInventory_GetCachedInventoryForItems::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventoryForItemsAndTypes
// 0x0030 (0x0030 - 0x0000)
struct RH_PlayerInventory_GetCachedInventoryForItemsAndTypes final
{
public:
	TArray<int32>                                 ItemIds;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<ERHAPI_InventoryType>                  Types;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FRH_ItemInventory>              ReturnValue;                                       // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventoryForItemsAndTypes) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventoryForItemsAndTypes");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventoryForItemsAndTypes) == 0x000030, "Wrong size on RH_PlayerInventory_GetCachedInventoryForItemsAndTypes");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItemsAndTypes, ItemIds) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventoryForItemsAndTypes::ItemIds' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItemsAndTypes, Types) == 0x000010, "Member 'RH_PlayerInventory_GetCachedInventoryForItemsAndTypes::Types' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForItemsAndTypes, ReturnValue) == 0x000020, "Member 'RH_PlayerInventory_GetCachedInventoryForItemsAndTypes::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventoryForType
// 0x0018 (0x0018 - 0x0000)
struct RH_PlayerInventory_GetCachedInventoryForType final
{
public:
	ERHAPI_InventoryType                          Type;                                              // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRH_ItemInventory>              ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventoryForType) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventoryForType");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventoryForType) == 0x000018, "Wrong size on RH_PlayerInventory_GetCachedInventoryForType");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForType, Type) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventoryForType::Type' has a wrong offset!");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventoryForType, ReturnValue) == 0x000008, "Member 'RH_PlayerInventory_GetCachedInventoryForType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedInventorySession
// 0x0038 (0x0038 - 0x0000)
struct RH_PlayerInventory_GetCachedInventorySession final
{
public:
	struct FRH_InventorySession                   ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedInventorySession) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedInventorySession");
static_assert(sizeof(RH_PlayerInventory_GetCachedInventorySession) == 0x000038, "Wrong size on RH_PlayerInventory_GetCachedInventorySession");
static_assert(offsetof(RH_PlayerInventory_GetCachedInventorySession, ReturnValue) == 0x000000, "Member 'RH_PlayerInventory_GetCachedInventorySession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetCachedItemLevels
// 0x0050 (0x0050 - 0x0000)
struct RH_PlayerInventory_GetCachedItemLevels final
{
public:
	TMap<int32, struct FRHAPI_InventoryLevel>     ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetCachedItemLevels) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetCachedItemLevels");
static_assert(sizeof(RH_PlayerInventory_GetCachedItemLevels) == 0x000050, "Wrong size on RH_PlayerInventory_GetCachedItemLevels");
static_assert(offsetof(RH_PlayerInventory_GetCachedItemLevels, ReturnValue) == 0x000000, "Member 'RH_PlayerInventory_GetCachedItemLevels::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerInventory.GetOrderResults
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerInventory_GetOrderResults final
{
public:
	TArray<struct FRHAPI_PlayerOrder>             ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerInventory_GetOrderResults) == 0x000008, "Wrong alignment on RH_PlayerInventory_GetOrderResults");
static_assert(sizeof(RH_PlayerInventory_GetOrderResults) == 0x000010, "Wrong size on RH_PlayerInventory_GetOrderResults");
static_assert(offsetof(RH_PlayerInventory_GetOrderResults, ReturnValue) == 0x000000, "Member 'RH_PlayerInventory_GetOrderResults::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetCouponItemId
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerOrderEntry_GetCouponItemId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetCouponItemId) == 0x000004, "Wrong alignment on RH_PlayerOrderEntry_GetCouponItemId");
static_assert(sizeof(RH_PlayerOrderEntry_GetCouponItemId) == 0x000004, "Wrong size on RH_PlayerOrderEntry_GetCouponItemId");
static_assert(offsetof(RH_PlayerOrderEntry_GetCouponItemId, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetCouponItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetExternalTransactionId
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerOrderEntry_GetExternalTransactionId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetExternalTransactionId) == 0x000008, "Wrong alignment on RH_PlayerOrderEntry_GetExternalTransactionId");
static_assert(sizeof(RH_PlayerOrderEntry_GetExternalTransactionId) == 0x000010, "Wrong size on RH_PlayerOrderEntry_GetExternalTransactionId");
static_assert(offsetof(RH_PlayerOrderEntry_GetExternalTransactionId, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetExternalTransactionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetFillType
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerOrderEntry_GetFillType final
{
public:
	ERHAPI_PlayerOrderEntryType                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetFillType) == 0x000001, "Wrong alignment on RH_PlayerOrderEntry_GetFillType");
static_assert(sizeof(RH_PlayerOrderEntry_GetFillType) == 0x000001, "Wrong size on RH_PlayerOrderEntry_GetFillType");
static_assert(offsetof(RH_PlayerOrderEntry_GetFillType, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetFillType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetLootId
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerOrderEntry_GetLootId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetLootId) == 0x000004, "Wrong alignment on RH_PlayerOrderEntry_GetLootId");
static_assert(sizeof(RH_PlayerOrderEntry_GetLootId) == 0x000004, "Wrong size on RH_PlayerOrderEntry_GetLootId");
static_assert(offsetof(RH_PlayerOrderEntry_GetLootId, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetLootId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetLootItem
// 0x0358 (0x0358 - 0x0000)
struct RH_PlayerOrderEntry_GetLootItem final
{
public:
	struct FRHAPI_Loot                            ReturnValue;                                       // 0x0000(0x0358)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetLootItem) == 0x000008, "Wrong alignment on RH_PlayerOrderEntry_GetLootItem");
static_assert(sizeof(RH_PlayerOrderEntry_GetLootItem) == 0x000358, "Wrong size on RH_PlayerOrderEntry_GetLootItem");
static_assert(offsetof(RH_PlayerOrderEntry_GetLootItem, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetLootItem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetPrice
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerOrderEntry_GetPrice final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetPrice) == 0x000004, "Wrong alignment on RH_PlayerOrderEntry_GetPrice");
static_assert(sizeof(RH_PlayerOrderEntry_GetPrice) == 0x000004, "Wrong size on RH_PlayerOrderEntry_GetPrice");
static_assert(offsetof(RH_PlayerOrderEntry_GetPrice, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetPrice::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetPriceItemId
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerOrderEntry_GetPriceItemId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetPriceItemId) == 0x000004, "Wrong alignment on RH_PlayerOrderEntry_GetPriceItemId");
static_assert(sizeof(RH_PlayerOrderEntry_GetPriceItemId) == 0x000004, "Wrong size on RH_PlayerOrderEntry_GetPriceItemId");
static_assert(offsetof(RH_PlayerOrderEntry_GetPriceItemId, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetPriceItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetPrices
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerOrderEntry_GetPrices final
{
public:
	TArray<struct FRHAPI_PurchasePriceCurrency>   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetPrices) == 0x000008, "Wrong alignment on RH_PlayerOrderEntry_GetPrices");
static_assert(sizeof(RH_PlayerOrderEntry_GetPrices) == 0x000010, "Wrong size on RH_PlayerOrderEntry_GetPrices");
static_assert(offsetof(RH_PlayerOrderEntry_GetPrices, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetPrices::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerOrderEntry.GetQuantity
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerOrderEntry_GetQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerOrderEntry_GetQuantity) == 0x000004, "Wrong alignment on RH_PlayerOrderEntry_GetQuantity");
static_assert(sizeof(RH_PlayerOrderEntry_GetQuantity) == 0x000004, "Wrong size on RH_PlayerOrderEntry_GetQuantity");
static_assert(offsetof(RH_PlayerOrderEntry_GetQuantity, ReturnValue) == 0x000000, "Member 'RH_PlayerOrderEntry_GetQuantity::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.AddCustomDataToItemInventory
// 0x00B0 (0x00B0 - 0x0000)
struct RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory final
{
public:
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0000(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory");
static_assert(sizeof(RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory) == 0x0000B0, "Wrong size on RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory");
static_assert(offsetof(RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory, ItemInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory, Key) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory::Key' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory, Value) == 0x0000A0, "Member 'RH_InventoryBlueprintLibrary_AddCustomDataToItemInventory::Value' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.CheckIfInventoryExpires
// 0x0098 (0x0098 - 0x0000)
struct RH_InventoryBlueprintLibrary_CheckIfInventoryExpires final
{
public:
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_InventoryBlueprintLibrary_CheckIfInventoryExpires) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_CheckIfInventoryExpires");
static_assert(sizeof(RH_InventoryBlueprintLibrary_CheckIfInventoryExpires) == 0x000098, "Wrong size on RH_InventoryBlueprintLibrary_CheckIfInventoryExpires");
static_assert(offsetof(RH_InventoryBlueprintLibrary_CheckIfInventoryExpires, ItemInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_CheckIfInventoryExpires::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_CheckIfInventoryExpires, ReturnValue) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_CheckIfInventoryExpires::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.FindCustomDataOnItemInventory
// 0x00B0 (0x00B0 - 0x0000)
struct RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory final
{
public:
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x00A0(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory");
static_assert(sizeof(RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory) == 0x0000B0, "Wrong size on RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory");
static_assert(offsetof(RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory, ItemInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory, Key) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory::Key' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory, ReturnValue) == 0x0000A0, "Member 'RH_InventoryBlueprintLibrary_FindCustomDataOnItemInventory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.GetInventoryExpiration
// 0x00A0 (0x00A0 - 0x0000)
struct RH_InventoryBlueprintLibrary_GetInventoryExpiration final
{
public:
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              DateTimeOut;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_InventoryBlueprintLibrary_GetInventoryExpiration) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_GetInventoryExpiration");
static_assert(sizeof(RH_InventoryBlueprintLibrary_GetInventoryExpiration) == 0x0000A0, "Wrong size on RH_InventoryBlueprintLibrary_GetInventoryExpiration");
static_assert(offsetof(RH_InventoryBlueprintLibrary_GetInventoryExpiration, ItemInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_GetInventoryExpiration::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_GetInventoryExpiration, DateTimeOut) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_GetInventoryExpiration::DateTimeOut' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_GetInventoryExpiration, ReturnValue) == 0x000098, "Member 'RH_InventoryBlueprintLibrary_GetInventoryExpiration::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.InitCreateInventoryWithItemInventoryValues
// 0x0118 (0x0118 - 0x0000)
struct RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues final
{
public:
	struct FRH_CreateInventory                    CreateInventory;                                   // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0080(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues");
static_assert(sizeof(RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues) == 0x000118, "Wrong size on RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues, CreateInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues::CreateInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues, ItemInventory) == 0x000080, "Member 'RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues, ReturnValue) == 0x000110, "Member 'RH_InventoryBlueprintLibrary_InitCreateInventoryWithItemInventoryValues::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.InitUpdateInventoryWithItemInventoryValues
// 0x0128 (0x0128 - 0x0000)
struct RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues final
{
public:
	struct FRH_UpdateInventory                    UpdateInventory;                                   // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0090(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues");
static_assert(sizeof(RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues) == 0x000128, "Wrong size on RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues, UpdateInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues::UpdateInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues, ItemInventory) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues, ReturnValue) == 0x000120, "Member 'RH_InventoryBlueprintLibrary_InitUpdateInventoryWithItemInventoryValues::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InventoryBlueprintLibrary.RemoveCustomDataFromItemInventory
// 0x00A0 (0x00A0 - 0x0000)
struct RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory final
{
public:
	struct FRH_ItemInventory                      ItemInventory;                                     // 0x0000(0x0090)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory) == 0x000008, "Wrong alignment on RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory");
static_assert(sizeof(RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory) == 0x0000A0, "Wrong size on RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory");
static_assert(offsetof(RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory, ItemInventory) == 0x000000, "Member 'RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory::ItemInventory' has a wrong offset!");
static_assert(offsetof(RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory, Key) == 0x000090, "Member 'RH_InventoryBlueprintLibrary_RemoveCustomDataFromItemInventory::Key' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.BLUEPRINT_CreateNotification
// 0x0098 (0x0098 - 0x0000)
struct RH_PlayerNotifications_BLUEPRINT_CreateNotification final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RhUrl;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            CustomData;                                        // 0x0030(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const class FString& NotificationId, const struct FRH_ErrorInfo& Resp)> Delegate; // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PlayerNotifications_BLUEPRINT_CreateNotification) == 0x000008, "Wrong alignment on RH_PlayerNotifications_BLUEPRINT_CreateNotification");
static_assert(sizeof(RH_PlayerNotifications_BLUEPRINT_CreateNotification) == 0x000098, "Wrong size on RH_PlayerNotifications_BLUEPRINT_CreateNotification");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, PlayerUuid) == 0x000000, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, Message) == 0x000010, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::Message' has a wrong offset!");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, RhUrl) == 0x000020, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::RhUrl' has a wrong offset!");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, CustomData) == 0x000030, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::CustomData' has a wrong offset!");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, Delegate) == 0x000080, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PlayerNotifications_BLUEPRINT_CreateNotification, ReturnValue) == 0x000090, "Member 'RH_PlayerNotifications_BLUEPRINT_CreateNotification::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.SetStreamingHistorySize
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerNotifications_SetStreamingHistorySize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_SetStreamingHistorySize) == 0x000004, "Wrong alignment on RH_PlayerNotifications_SetStreamingHistorySize");
static_assert(sizeof(RH_PlayerNotifications_SetStreamingHistorySize) == 0x000004, "Wrong size on RH_PlayerNotifications_SetStreamingHistorySize");
static_assert(offsetof(RH_PlayerNotifications_SetStreamingHistorySize, Size) == 0x000000, "Member 'RH_PlayerNotifications_SetStreamingHistorySize::Size' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.StartStreamingLatestNotifications
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerNotifications_StartStreamingLatestNotifications final
{
public:
	class FString                                 Cursor;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_StartStreamingLatestNotifications) == 0x000008, "Wrong alignment on RH_PlayerNotifications_StartStreamingLatestNotifications");
static_assert(sizeof(RH_PlayerNotifications_StartStreamingLatestNotifications) == 0x000010, "Wrong size on RH_PlayerNotifications_StartStreamingLatestNotifications");
static_assert(offsetof(RH_PlayerNotifications_StartStreamingLatestNotifications, Cursor) == 0x000000, "Member 'RH_PlayerNotifications_StartStreamingLatestNotifications::Cursor' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.StopStreamingLatestNotifications
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerNotifications_StopStreamingLatestNotifications final
{
public:
	bool                                          bClearCache;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_StopStreamingLatestNotifications) == 0x000001, "Wrong alignment on RH_PlayerNotifications_StopStreamingLatestNotifications");
static_assert(sizeof(RH_PlayerNotifications_StopStreamingLatestNotifications) == 0x000001, "Wrong size on RH_PlayerNotifications_StopStreamingLatestNotifications");
static_assert(offsetof(RH_PlayerNotifications_StopStreamingLatestNotifications, bClearCache) == 0x000000, "Member 'RH_PlayerNotifications_StopStreamingLatestNotifications::bClearCache' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.GetStreamingCursor
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerNotifications_GetStreamingCursor final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_GetStreamingCursor) == 0x000008, "Wrong alignment on RH_PlayerNotifications_GetStreamingCursor");
static_assert(sizeof(RH_PlayerNotifications_GetStreamingCursor) == 0x000010, "Wrong size on RH_PlayerNotifications_GetStreamingCursor");
static_assert(offsetof(RH_PlayerNotifications_GetStreamingCursor, ReturnValue) == 0x000000, "Member 'RH_PlayerNotifications_GetStreamingCursor::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.GetStreamingHistory
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerNotifications_GetStreamingHistory final
{
public:
	TArray<struct FRHAPI_Notification>            ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_GetStreamingHistory) == 0x000008, "Wrong alignment on RH_PlayerNotifications_GetStreamingHistory");
static_assert(sizeof(RH_PlayerNotifications_GetStreamingHistory) == 0x000010, "Wrong size on RH_PlayerNotifications_GetStreamingHistory");
static_assert(offsetof(RH_PlayerNotifications_GetStreamingHistory, ReturnValue) == 0x000000, "Member 'RH_PlayerNotifications_GetStreamingHistory::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.GetStreamingHistorySize
// 0x0004 (0x0004 - 0x0000)
struct RH_PlayerNotifications_GetStreamingHistorySize final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_GetStreamingHistorySize) == 0x000004, "Wrong alignment on RH_PlayerNotifications_GetStreamingHistorySize");
static_assert(sizeof(RH_PlayerNotifications_GetStreamingHistorySize) == 0x000004, "Wrong size on RH_PlayerNotifications_GetStreamingHistorySize");
static_assert(offsetof(RH_PlayerNotifications_GetStreamingHistorySize, ReturnValue) == 0x000000, "Member 'RH_PlayerNotifications_GetStreamingHistorySize::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.GetStreamingPlayerUuid
// 0x0010 (0x0010 - 0x0000)
struct RH_PlayerNotifications_GetStreamingPlayerUuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_GetStreamingPlayerUuid) == 0x000004, "Wrong alignment on RH_PlayerNotifications_GetStreamingPlayerUuid");
static_assert(sizeof(RH_PlayerNotifications_GetStreamingPlayerUuid) == 0x000010, "Wrong size on RH_PlayerNotifications_GetStreamingPlayerUuid");
static_assert(offsetof(RH_PlayerNotifications_GetStreamingPlayerUuid, ReturnValue) == 0x000000, "Member 'RH_PlayerNotifications_GetStreamingPlayerUuid::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PlayerNotifications.IsStreaming
// 0x0001 (0x0001 - 0x0000)
struct RH_PlayerNotifications_IsStreaming final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PlayerNotifications_IsStreaming) == 0x000001, "Wrong alignment on RH_PlayerNotifications_IsStreaming");
static_assert(sizeof(RH_PlayerNotifications_IsStreaming) == 0x000001, "Wrong size on RH_PlayerNotifications_IsStreaming");
static_assert(offsetof(RH_PlayerNotifications_IsStreaming, ReturnValue) == 0x000000, "Member 'RH_PlayerNotifications_IsStreaming::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RallyHerePropertiesBlueprintLibrary.EqualEqual_FRH_ItemId
// 0x002C (0x002C - 0x0000)
struct RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId final
{
public:
	struct FRH_ItemId                             A;                                                 // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_ItemId                             B;                                                 // 0x0014(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId) == 0x000004, "Wrong alignment on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId");
static_assert(sizeof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId) == 0x00002C, "Wrong size on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId, A) == 0x000000, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId::A' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId, B) == 0x000014, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId::B' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId, ReturnValue) == 0x000028, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_ItemId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RallyHerePropertiesBlueprintLibrary.EqualEqual_FRH_LegacyIdToGuid
// 0x002C (0x002C - 0x0000)
struct RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid final
{
public:
	struct FRH_LegacyIdToGuid                     A;                                                 // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_LegacyIdToGuid                     B;                                                 // 0x0014(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid) == 0x000004, "Wrong alignment on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid");
static_assert(sizeof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid) == 0x00002C, "Wrong size on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid, A) == 0x000000, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid::A' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid, B) == 0x000014, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid::B' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid, ReturnValue) == 0x000028, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LegacyIdToGuid::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RallyHerePropertiesBlueprintLibrary.EqualEqual_FRH_LootId
// 0x002C (0x002C - 0x0000)
struct RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId final
{
public:
	struct FRH_LootId                             A;                                                 // 0x0000(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRH_LootId                             B;                                                 // 0x0014(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId) == 0x000004, "Wrong alignment on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId");
static_assert(sizeof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId) == 0x00002C, "Wrong size on RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId, A) == 0x000000, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId::A' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId, B) == 0x000014, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId::B' has a wrong offset!");
static_assert(offsetof(RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId, ReturnValue) == 0x000028, "Member 'RH_RallyHerePropertiesBlueprintLibrary_EqualEqual_FRH_LootId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.BLUEPRINT_DequeueMeForPurge
// 0x0014 (0x0014 - 0x0000)
struct RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge final
{
public:
	TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge) == 0x000004, "Wrong alignment on RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge");
static_assert(sizeof(RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge) == 0x000014, "Wrong size on RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge, Delegate) == 0x000000, "Member 'RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge, ReturnValue) == 0x000010, "Member 'RH_PurgeSubsystem_BLUEPRINT_DequeueMeForPurge::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.BLUEPRINT_EnqueueMeForPurge
// 0x0014 (0x0014 - 0x0000)
struct RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge final
{
public:
	TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge) == 0x000004, "Wrong alignment on RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge");
static_assert(sizeof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge) == 0x000014, "Wrong size on RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge, Delegate) == 0x000000, "Member 'RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge, ReturnValue) == 0x000010, "Member 'RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurge::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.BLUEPRINT_EnqueueMeForPurgeWithPurgeTime
// 0x0020 (0x0020 - 0x0000)
struct RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime final
{
public:
	struct FDateTime                              PurgeTime;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)> Delegate; // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime) == 0x000008, "Wrong alignment on RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime");
static_assert(sizeof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime) == 0x000020, "Wrong size on RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime, PurgeTime) == 0x000000, "Member 'RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime::PurgeTime' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime, Delegate) == 0x000008, "Member 'RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime, ReturnValue) == 0x000018, "Member 'RH_PurgeSubsystem_BLUEPRINT_EnqueueMeForPurgeWithPurgeTime::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.BLUEPRINT_PurgeMeImmediately
// 0x0014 (0x0014 - 0x0000)
struct RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately final
{
public:
	TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately) == 0x000004, "Wrong alignment on RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately");
static_assert(sizeof(RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately) == 0x000014, "Wrong size on RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately, Delegate) == 0x000000, "Member 'RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately, ReturnValue) == 0x000010, "Member 'RH_PurgeSubsystem_BLUEPRINT_PurgeMeImmediately::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.BLUEPRINT_QueryMyPurgeStatus
// 0x0014 (0x0014 - 0x0000)
struct RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus final
{
public:
	TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus) == 0x000004, "Wrong alignment on RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus");
static_assert(sizeof(RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus) == 0x000014, "Wrong size on RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus, Delegate) == 0x000000, "Member 'RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus::Delegate' has a wrong offset!");
static_assert(offsetof(RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus, ReturnValue) == 0x000010, "Member 'RH_PurgeSubsystem_BLUEPRINT_QueryMyPurgeStatus::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_PurgeSubsystem.GetMyPurgeStatus
// 0x0040 (0x0040 - 0x0000)
struct RH_PurgeSubsystem_GetMyPurgeStatus final
{
public:
	struct FRHAPI_PurgeResponse                   ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_PurgeSubsystem_GetMyPurgeStatus) == 0x000008, "Wrong alignment on RH_PurgeSubsystem_GetMyPurgeStatus");
static_assert(sizeof(RH_PurgeSubsystem_GetMyPurgeStatus) == 0x000040, "Wrong size on RH_PurgeSubsystem_GetMyPurgeStatus");
static_assert(offsetof(RH_PurgeSubsystem_GetMyPurgeStatus, ReturnValue) == 0x000000, "Member 'RH_PurgeSubsystem_GetMyPurgeStatus::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.BLUEPRINT_DeleteFile
// 0x0038 (0x0038 - 0x0000)
struct RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RemoteFileName;                                    // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile");
static_assert(sizeof(RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile) == 0x000038, "Wrong size on RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile, RemoteFileName) == 0x000018, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile::RemoteFileName' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile, Delegate) == 0x000028, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DeleteFile::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.BLUEPRINT_DownloadAllFiles
// 0x0040 (0x0040 - 0x0000)
struct RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalDirectory;                                    // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCachedList;                                    // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const TArray<class FString>& DownloadedFileNames, const TArray<class FString>& FailedFileNames, const TArray<struct FRH_ErrorInfo>& ErrorInfo)> Delegate; // 0x002C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles");
static_assert(sizeof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles) == 0x000040, "Wrong size on RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles, LocalDirectory) == 0x000018, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles::LocalDirectory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles, bUseCachedList) == 0x000028, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles::bUseCachedList' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles, Delegate) == 0x00002C, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadAllFiles::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.BLUEPRINT_DownloadFile
// 0x0048 (0x0048 - 0x0000)
struct RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RemoteFileName;                                    // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalFilePath;                                     // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile");
static_assert(sizeof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile) == 0x000048, "Wrong size on RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile, RemoteFileName) == 0x000018, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile::RemoteFileName' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile, LocalFilePath) == 0x000028, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile::LocalFilePath' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile, Delegate) == 0x000038, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_DownloadFile::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.BLUEPRINT_LookupFileList
// 0x0028 (0x0028 - 0x0000)
struct RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList");
static_assert(sizeof(RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList) == 0x000028, "Wrong size on RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList, Delegate) == 0x000018, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_LookupFileList::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.BLUEPRINT_UploadFile
// 0x0048 (0x0048 - 0x0000)
struct RH_RemoteFileSubsystem_BLUEPRINT_UploadFile final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RemoteFileName;                                    // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalFilePath;                                     // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_BLUEPRINT_UploadFile");
static_assert(sizeof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile) == 0x000048, "Wrong size on RH_RemoteFileSubsystem_BLUEPRINT_UploadFile");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_UploadFile::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile, RemoteFileName) == 0x000018, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_UploadFile::RemoteFileName' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile, LocalFilePath) == 0x000028, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_UploadFile::LocalFilePath' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_BLUEPRINT_UploadFile, Delegate) == 0x000038, "Member 'RH_RemoteFileSubsystem_BLUEPRINT_UploadFile::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.ListFiles
// 0x0038 (0x0038 - 0x0000)
struct RH_RemoteFileSubsystem_ListFiles final
{
public:
	struct FRH_RemoteFileApiDirectory             Directory;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_FileListResponse                OutFileList;                                       // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_RemoteFileSubsystem_ListFiles) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_ListFiles");
static_assert(sizeof(RH_RemoteFileSubsystem_ListFiles) == 0x000038, "Wrong size on RH_RemoteFileSubsystem_ListFiles");
static_assert(offsetof(RH_RemoteFileSubsystem_ListFiles, Directory) == 0x000000, "Member 'RH_RemoteFileSubsystem_ListFiles::Directory' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_ListFiles, OutFileList) == 0x000018, "Member 'RH_RemoteFileSubsystem_ListFiles::OutFileList' has a wrong offset!");
static_assert(offsetof(RH_RemoteFileSubsystem_ListFiles, ReturnValue) == 0x000030, "Member 'RH_RemoteFileSubsystem_ListFiles::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_RemoteFileSubsystem.GetFileListCache
// 0x0050 (0x0050 - 0x0000)
struct RH_RemoteFileSubsystem_GetFileListCache final
{
public:
	TMap<struct FRH_RemoteFileApiDirectory, struct FRHAPI_FileListResponse> ReturnValue;             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_RemoteFileSubsystem_GetFileListCache) == 0x000008, "Wrong alignment on RH_RemoteFileSubsystem_GetFileListCache");
static_assert(sizeof(RH_RemoteFileSubsystem_GetFileListCache) == 0x000050, "Wrong size on RH_RemoteFileSubsystem_GetFileListCache");
static_assert(offsetof(RH_RemoteFileSubsystem_GetFileListCache, ReturnValue) == 0x000000, "Member 'RH_RemoteFileSubsystem_GetFileListCache::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.BLUEPRINT_Search
// 0x0050 (0x0050 - 0x0000)
struct RH_SessionBrowserCache_BLUEPRINT_Search final
{
public:
	struct FRH_SessionBrowserSearchParams         Params_0;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_SessionBrowserSearchResult& SearchResult)> Delegate; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_BLUEPRINT_Search) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_BLUEPRINT_Search");
static_assert(sizeof(RH_SessionBrowserCache_BLUEPRINT_Search) == 0x000050, "Wrong size on RH_SessionBrowserCache_BLUEPRINT_Search");
static_assert(offsetof(RH_SessionBrowserCache_BLUEPRINT_Search, Params_0) == 0x000000, "Member 'RH_SessionBrowserCache_BLUEPRINT_Search::Params_0' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_BLUEPRINT_Search, Delegate) == 0x000040, "Member 'RH_SessionBrowserCache_BLUEPRINT_Search::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.RemoveSessionById
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionBrowserCache_RemoveSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_RemoveSessionById) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_RemoveSessionById");
static_assert(sizeof(RH_SessionBrowserCache_RemoveSessionById) == 0x000010, "Wrong size on RH_SessionBrowserCache_RemoveSessionById");
static_assert(offsetof(RH_SessionBrowserCache_RemoveSessionById, SessionId) == 0x000000, "Member 'RH_SessionBrowserCache_RemoveSessionById::SessionId' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.GetPlatformSyncerByPlatformSessionId
// 0x0038 (0x0038 - 0x0000)
struct RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId final
{
public:
	struct FUniqueNetIdRepl                       PlatformSessionId;                                 // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId");
static_assert(sizeof(RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId) == 0x000038, "Wrong size on RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId");
static_assert(offsetof(RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId, PlatformSessionId) == 0x000000, "Member 'RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId::PlatformSessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId, ReturnValue) == 0x000030, "Member 'RH_SessionBrowserCache_GetPlatformSyncerByPlatformSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.GetPlatformSyncerByRHSessionId
// 0x0018 (0x0018 - 0x0000)
struct RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId");
static_assert(sizeof(RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId) == 0x000018, "Wrong size on RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId");
static_assert(offsetof(RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId, SessionId) == 0x000000, "Member 'RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId, ReturnValue) == 0x000010, "Member 'RH_SessionBrowserCache_GetPlatformSyncerByRHSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.GetPlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_SessionBrowserCache_GetPlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_GetPlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_GetPlayerInfoSubsystem");
static_assert(sizeof(RH_SessionBrowserCache_GetPlayerInfoSubsystem) == 0x000008, "Wrong size on RH_SessionBrowserCache_GetPlayerInfoSubsystem");
static_assert(offsetof(RH_SessionBrowserCache_GetPlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_SessionBrowserCache_GetPlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.GetSessionById
// 0x0018 (0x0018 - 0x0000)
struct RH_SessionBrowserCache_GetSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_SessionView*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionBrowserCache_GetSessionById) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_GetSessionById");
static_assert(sizeof(RH_SessionBrowserCache_GetSessionById) == 0x000018, "Wrong size on RH_SessionBrowserCache_GetSessionById");
static_assert(offsetof(RH_SessionBrowserCache_GetSessionById, SessionId) == 0x000000, "Member 'RH_SessionBrowserCache_GetSessionById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_GetSessionById, ReturnValue) == 0x000010, "Member 'RH_SessionBrowserCache_GetSessionById::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionBrowserCache.GetTemplate
// 0x0230 (0x0230 - 0x0000)
struct RH_SessionBrowserCache_GetTemplate final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SessionTemplate                 Template;                                          // 0x0010(0x0218)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionBrowserCache_GetTemplate) == 0x000008, "Wrong alignment on RH_SessionBrowserCache_GetTemplate");
static_assert(sizeof(RH_SessionBrowserCache_GetTemplate) == 0x000230, "Wrong size on RH_SessionBrowserCache_GetTemplate");
static_assert(offsetof(RH_SessionBrowserCache_GetTemplate, Type) == 0x000000, "Member 'RH_SessionBrowserCache_GetTemplate::Type' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_GetTemplate, Template) == 0x000010, "Member 'RH_SessionBrowserCache_GetTemplate::Template' has a wrong offset!");
static_assert(offsetof(RH_SessionBrowserCache_GetTemplate, ReturnValue) == 0x000228, "Member 'RH_SessionBrowserCache_GetTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.BLUEPRINT_ForcePollForUpdate
// 0x0014 (0x0014 - 0x0000)
struct RH_SessionView_BLUEPRINT_ForcePollForUpdate final
{
public:
	bool                                          bClearETag;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_BLUEPRINT_ForcePollForUpdate) == 0x000004, "Wrong alignment on RH_SessionView_BLUEPRINT_ForcePollForUpdate");
static_assert(sizeof(RH_SessionView_BLUEPRINT_ForcePollForUpdate) == 0x000014, "Wrong size on RH_SessionView_BLUEPRINT_ForcePollForUpdate");
static_assert(offsetof(RH_SessionView_BLUEPRINT_ForcePollForUpdate, bClearETag) == 0x000000, "Member 'RH_SessionView_BLUEPRINT_ForcePollForUpdate::bClearETag' has a wrong offset!");
static_assert(offsetof(RH_SessionView_BLUEPRINT_ForcePollForUpdate, Delegate) == 0x000004, "Member 'RH_SessionView_BLUEPRINT_ForcePollForUpdate::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetPollTimeRemaining
// 0x0004 (0x0004 - 0x0000)
struct RH_SessionView_GetPollTimeRemaining final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetPollTimeRemaining) == 0x000004, "Wrong alignment on RH_SessionView_GetPollTimeRemaining");
static_assert(sizeof(RH_SessionView_GetPollTimeRemaining) == 0x000004, "Wrong size on RH_SessionView_GetPollTimeRemaining");
static_assert(offsetof(RH_SessionView_GetPollTimeRemaining, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetPollTimeRemaining::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetBrowserCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_SessionView_GetBrowserCustomData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetBrowserCustomData) == 0x000008, "Wrong alignment on RH_SessionView_GetBrowserCustomData");
static_assert(sizeof(RH_SessionView_GetBrowserCustomData) == 0x000050, "Wrong size on RH_SessionView_GetBrowserCustomData");
static_assert(offsetof(RH_SessionView_GetBrowserCustomData, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetBrowserCustomData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_SessionView_GetCustomData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetCustomData) == 0x000008, "Wrong alignment on RH_SessionView_GetCustomData");
static_assert(sizeof(RH_SessionView_GetCustomData) == 0x000050, "Wrong size on RH_SessionView_GetCustomData");
static_assert(offsetof(RH_SessionView_GetCustomData, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetCustomData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetCustomDataValue
// 0x0028 (0x0028 - 0x0000)
struct RH_SessionView_GetCustomDataValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionView_GetCustomDataValue) == 0x000008, "Wrong alignment on RH_SessionView_GetCustomDataValue");
static_assert(sizeof(RH_SessionView_GetCustomDataValue) == 0x000028, "Wrong size on RH_SessionView_GetCustomDataValue");
static_assert(offsetof(RH_SessionView_GetCustomDataValue, Key) == 0x000000, "Member 'RH_SessionView_GetCustomDataValue::Key' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetCustomDataValue, OutValue) == 0x000010, "Member 'RH_SessionView_GetCustomDataValue::OutValue' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetCustomDataValue, ReturnValue) == 0x000020, "Member 'RH_SessionView_GetCustomDataValue::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetETag
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionView_GetETag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetETag) == 0x000008, "Wrong alignment on RH_SessionView_GetETag");
static_assert(sizeof(RH_SessionView_GetETag) == 0x000010, "Wrong size on RH_SessionView_GetETag");
static_assert(offsetof(RH_SessionView_GetETag, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetETag::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetInstanceCustomData
// 0x0050 (0x0050 - 0x0000)
struct RH_SessionView_GetInstanceCustomData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetInstanceCustomData) == 0x000008, "Wrong alignment on RH_SessionView_GetInstanceCustomData");
static_assert(sizeof(RH_SessionView_GetInstanceCustomData) == 0x000050, "Wrong size on RH_SessionView_GetInstanceCustomData");
static_assert(offsetof(RH_SessionView_GetInstanceCustomData, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetInstanceCustomData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetInstanceCustomDataValue
// 0x0028 (0x0028 - 0x0000)
struct RH_SessionView_GetInstanceCustomDataValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionView_GetInstanceCustomDataValue) == 0x000008, "Wrong alignment on RH_SessionView_GetInstanceCustomDataValue");
static_assert(sizeof(RH_SessionView_GetInstanceCustomDataValue) == 0x000028, "Wrong size on RH_SessionView_GetInstanceCustomDataValue");
static_assert(offsetof(RH_SessionView_GetInstanceCustomDataValue, Key) == 0x000000, "Member 'RH_SessionView_GetInstanceCustomDataValue::Key' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetInstanceCustomDataValue, OutValue) == 0x000010, "Member 'RH_SessionView_GetInstanceCustomDataValue::OutValue' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetInstanceCustomDataValue, ReturnValue) == 0x000020, "Member 'RH_SessionView_GetInstanceCustomDataValue::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetPlatformSession
// 0x00A8 (0x00A8 - 0x0000)
struct RH_SessionView_GetPlatformSession final
{
public:
	ERHAPI_Platform                               Platform;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_PlatformSession                 OutPlatformSession;                                // 0x0008(0x0098)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionView_GetPlatformSession) == 0x000008, "Wrong alignment on RH_SessionView_GetPlatformSession");
static_assert(sizeof(RH_SessionView_GetPlatformSession) == 0x0000A8, "Wrong size on RH_SessionView_GetPlatformSession");
static_assert(offsetof(RH_SessionView_GetPlatformSession, Platform) == 0x000000, "Member 'RH_SessionView_GetPlatformSession::Platform' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetPlatformSession, OutPlatformSession) == 0x000008, "Member 'RH_SessionView_GetPlatformSession::OutPlatformSession' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetPlatformSession, ReturnValue) == 0x0000A0, "Member 'RH_SessionView_GetPlatformSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionData
// 0x0748 (0x0748 - 0x0000)
struct RH_SessionView_GetSessionData final
{
public:
	struct FRHAPI_Session                         ReturnValue;                                       // 0x0000(0x0748)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetSessionData) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionData");
static_assert(sizeof(RH_SessionView_GetSessionData) == 0x000748, "Wrong size on RH_SessionView_GetSessionData");
static_assert(offsetof(RH_SessionView_GetSessionData, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetSessionData::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionId
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionView_GetSessionId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetSessionId) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionId");
static_assert(sizeof(RH_SessionView_GetSessionId) == 0x000010, "Wrong size on RH_SessionView_GetSessionId");
static_assert(offsetof(RH_SessionView_GetSessionId, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionLeader
// 0x0170 (0x0170 - 0x0000)
struct RH_SessionView_GetSessionLeader final
{
public:
	struct FRHAPI_SessionPlayer                   OutPlayer;                                         // 0x0000(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionView_GetSessionLeader) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionLeader");
static_assert(sizeof(RH_SessionView_GetSessionLeader) == 0x000170, "Wrong size on RH_SessionView_GetSessionLeader");
static_assert(offsetof(RH_SessionView_GetSessionLeader, OutPlayer) == 0x000000, "Member 'RH_SessionView_GetSessionLeader::OutPlayer' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetSessionLeader, ReturnValue) == 0x000168, "Member 'RH_SessionView_GetSessionLeader::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionOwner
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionView_GetSessionOwner final
{
public:
	TScriptInterface<class IRH_SessionOwnerInterface> ReturnValue;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetSessionOwner) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionOwner");
static_assert(sizeof(RH_SessionView_GetSessionOwner) == 0x000010, "Wrong size on RH_SessionView_GetSessionOwner");
static_assert(offsetof(RH_SessionView_GetSessionOwner, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetSessionOwner::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionPlayer
// 0x0180 (0x0180 - 0x0000)
struct RH_SessionView_GetSessionPlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SessionPlayer                   OutPlayer;                                         // 0x0010(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0178(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionView_GetSessionPlayer) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionPlayer");
static_assert(sizeof(RH_SessionView_GetSessionPlayer) == 0x000180, "Wrong size on RH_SessionView_GetSessionPlayer");
static_assert(offsetof(RH_SessionView_GetSessionPlayer, PlayerUuid) == 0x000000, "Member 'RH_SessionView_GetSessionPlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetSessionPlayer, OutPlayer) == 0x000010, "Member 'RH_SessionView_GetSessionPlayer::OutPlayer' has a wrong offset!");
static_assert(offsetof(RH_SessionView_GetSessionPlayer, ReturnValue) == 0x000178, "Member 'RH_SessionView_GetSessionPlayer::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionPlayerCount
// 0x0004 (0x0004 - 0x0000)
struct RH_SessionView_GetSessionPlayerCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetSessionPlayerCount) == 0x000004, "Wrong alignment on RH_SessionView_GetSessionPlayerCount");
static_assert(sizeof(RH_SessionView_GetSessionPlayerCount) == 0x000004, "Wrong size on RH_SessionView_GetSessionPlayerCount");
static_assert(offsetof(RH_SessionView_GetSessionPlayerCount, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetSessionPlayerCount::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetSessionType
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionView_GetSessionType final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetSessionType) == 0x000008, "Wrong alignment on RH_SessionView_GetSessionType");
static_assert(sizeof(RH_SessionView_GetSessionType) == 0x000010, "Wrong size on RH_SessionView_GetSessionType");
static_assert(offsetof(RH_SessionView_GetSessionType, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetSessionType::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.GetTemplate
// 0x0218 (0x0218 - 0x0000)
struct RH_SessionView_GetTemplate final
{
public:
	struct FRHAPI_SessionTemplate                 ReturnValue;                                       // 0x0000(0x0218)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_GetTemplate) == 0x000008, "Wrong alignment on RH_SessionView_GetTemplate");
static_assert(sizeof(RH_SessionView_GetTemplate) == 0x000218, "Wrong size on RH_SessionView_GetTemplate");
static_assert(offsetof(RH_SessionView_GetTemplate, ReturnValue) == 0x000000, "Member 'RH_SessionView_GetTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.IsCreatedByMatchmaking
// 0x0001 (0x0001 - 0x0000)
struct RH_SessionView_IsCreatedByMatchmaking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_IsCreatedByMatchmaking) == 0x000001, "Wrong alignment on RH_SessionView_IsCreatedByMatchmaking");
static_assert(sizeof(RH_SessionView_IsCreatedByMatchmaking) == 0x000001, "Wrong size on RH_SessionView_IsCreatedByMatchmaking");
static_assert(offsetof(RH_SessionView_IsCreatedByMatchmaking, ReturnValue) == 0x000000, "Member 'RH_SessionView_IsCreatedByMatchmaking::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.IsInQueue
// 0x0001 (0x0001 - 0x0000)
struct RH_SessionView_IsInQueue final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_IsInQueue) == 0x000001, "Wrong alignment on RH_SessionView_IsInQueue");
static_assert(sizeof(RH_SessionView_IsInQueue) == 0x000001, "Wrong size on RH_SessionView_IsInQueue");
static_assert(offsetof(RH_SessionView_IsInQueue, ReturnValue) == 0x000000, "Member 'RH_SessionView_IsInQueue::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.IsJoined
// 0x0001 (0x0001 - 0x0000)
struct RH_SessionView_IsJoined final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_IsJoined) == 0x000001, "Wrong alignment on RH_SessionView_IsJoined");
static_assert(sizeof(RH_SessionView_IsJoined) == 0x000001, "Wrong size on RH_SessionView_IsJoined");
static_assert(offsetof(RH_SessionView_IsJoined, ReturnValue) == 0x000000, "Member 'RH_SessionView_IsJoined::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.IsOffline
// 0x0001 (0x0001 - 0x0000)
struct RH_SessionView_IsOffline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_IsOffline) == 0x000001, "Wrong alignment on RH_SessionView_IsOffline");
static_assert(sizeof(RH_SessionView_IsOffline) == 0x000001, "Wrong size on RH_SessionView_IsOffline");
static_assert(offsetof(RH_SessionView_IsOffline, ReturnValue) == 0x000000, "Member 'RH_SessionView_IsOffline::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionView.IsOnline
// 0x0001 (0x0001 - 0x0000)
struct RH_SessionView_IsOnline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionView_IsOnline) == 0x000001, "Wrong alignment on RH_SessionView_IsOnline");
static_assert(sizeof(RH_SessionView_IsOnline) == 0x000001, "Wrong size on RH_SessionView_IsOnline");
static_assert(offsetof(RH_SessionView_IsOnline, ReturnValue) == 0x000000, "Member 'RH_SessionView_IsOnline::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_InvitedSession.BLUEPRINT_Join
// 0x0010 (0x0010 - 0x0000)
struct RH_InvitedSession_BLUEPRINT_Join final
{
public:
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InvitedSession_BLUEPRINT_Join) == 0x000004, "Wrong alignment on RH_InvitedSession_BLUEPRINT_Join");
static_assert(sizeof(RH_InvitedSession_BLUEPRINT_Join) == 0x000010, "Wrong size on RH_InvitedSession_BLUEPRINT_Join");
static_assert(offsetof(RH_InvitedSession_BLUEPRINT_Join, Delegate) == 0x000000, "Member 'RH_InvitedSession_BLUEPRINT_Join::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_InvitedSession.BLUEPRINT_Leave
// 0x0020 (0x0020 - 0x0000)
struct RH_InvitedSession_BLUEPRINT_Leave final
{
public:
	class FString                                 LeaveReason;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InvitedSession_BLUEPRINT_Leave) == 0x000008, "Wrong alignment on RH_InvitedSession_BLUEPRINT_Leave");
static_assert(sizeof(RH_InvitedSession_BLUEPRINT_Leave) == 0x000020, "Wrong size on RH_InvitedSession_BLUEPRINT_Leave");
static_assert(offsetof(RH_InvitedSession_BLUEPRINT_Leave, LeaveReason) == 0x000000, "Member 'RH_InvitedSession_BLUEPRINT_Leave::LeaveReason' has a wrong offset!");
static_assert(offsetof(RH_InvitedSession_BLUEPRINT_Leave, Delegate) == 0x000010, "Member 'RH_InvitedSession_BLUEPRINT_Leave::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_InvitedSession.BLUEPRINT_QueryInviterBlockedOnPlatformAsync
// 0x0010 (0x0010 - 0x0000)
struct RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync final
{
public:
	TDelegate<void(bool bIsBlocked)>              Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync) == 0x000004, "Wrong alignment on RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync");
static_assert(sizeof(RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync) == 0x000010, "Wrong size on RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync");
static_assert(offsetof(RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync, Delegate) == 0x000000, "Member 'RH_InvitedSession_BLUEPRINT_QueryInviterBlockedOnPlatformAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.GetClientVersionForSession
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_GetClientVersionForSession final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_GetClientVersionForSession) == 0x000008, "Wrong alignment on RH_JoinedSession_GetClientVersionForSession");
static_assert(sizeof(RH_JoinedSession_GetClientVersionForSession) == 0x000010, "Wrong size on RH_JoinedSession_GetClientVersionForSession");
static_assert(offsetof(RH_JoinedSession_GetClientVersionForSession, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_GetClientVersionForSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_AcknowledgeBackfill
// 0x0014 (0x0014 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill) == 0x000014, "Wrong size on RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill, bEnable) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill::bEnable' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill, Delegate) == 0x000004, "Member 'RH_JoinedSession_BLUEPRINT_AcknowledgeBackfill::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_ChangePlayerTeam
// 0x0024 (0x0024 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_ChangePlayerTeam final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Team;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_ChangePlayerTeam) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_ChangePlayerTeam");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_ChangePlayerTeam) == 0x000024, "Wrong size on RH_JoinedSession_BLUEPRINT_ChangePlayerTeam");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_ChangePlayerTeam, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_ChangePlayerTeam::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_ChangePlayerTeam, Team) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_ChangePlayerTeam::Team' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_ChangePlayerTeam, Delegate) == 0x000014, "Member 'RH_JoinedSession_BLUEPRINT_ChangePlayerTeam::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_CreateBeacon
// 0x0018 (0x0018 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_CreateBeacon final
{
public:
	class ULocalPlayer*                           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOnlineBeaconClient>        BeaconClass;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOnlineBeaconClient*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_CreateBeacon) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_CreateBeacon");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_CreateBeacon) == 0x000018, "Wrong size on RH_JoinedSession_BLUEPRINT_CreateBeacon");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_CreateBeacon, Player) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_CreateBeacon::Player' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_CreateBeacon, BeaconClass) == 0x000008, "Member 'RH_JoinedSession_BLUEPRINT_CreateBeacon::BeaconClass' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_CreateBeacon, ReturnValue) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_CreateBeacon::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_DeleteBackfill
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_DeleteBackfill final
{
public:
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_DeleteBackfill) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_DeleteBackfill");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_DeleteBackfill) == 0x000010, "Wrong size on RH_JoinedSession_BLUEPRINT_DeleteBackfill");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_DeleteBackfill, Delegate) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_DeleteBackfill::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_DeleteSession
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_DeleteSession final
{
public:
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_DeleteSession) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_DeleteSession");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_DeleteSession) == 0x000010, "Wrong size on RH_JoinedSession_BLUEPRINT_DeleteSession");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_DeleteSession, Delegate) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_DeleteSession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_EndInstance
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_EndInstance final
{
public:
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_EndInstance) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_EndInstance");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_EndInstance) == 0x000010, "Wrong size on RH_JoinedSession_BLUEPRINT_EndInstance");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_EndInstance, Delegate) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_EndInstance::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_EnqueueUpdateInstanceInfo
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo final
{
public:
	TDelegate<void(class URH_JoinedSession* Session)> Delegate;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo) == 0x000010, "Wrong size on RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo, Delegate) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_EnqueueUpdateInstanceInfo::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_GenerateVoipActionToken
// 0x0014 (0x0014 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken final
{
public:
	ERHAPI_VivoxSessionActionSingle               VivoxAction;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_VoipSessionType                        VoipSessionType;                                   // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRHAPI_VoipTokenResponse& VoipToken, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken) == 0x000014, "Wrong size on RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken, VivoxAction) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken::VivoxAction' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken, VoipSessionType) == 0x000001, "Member 'RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken::VoipSessionType' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken, Delegate) == 0x000004, "Member 'RH_JoinedSession_BLUEPRINT_GenerateVoipActionToken::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_GenerateVoipLoginToken
// 0x0010 (0x0010 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken final
{
public:
	TDelegate<void(bool bSuccess, const struct FRHAPI_VoipTokenResponse& VoipToken, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken) == 0x000010, "Wrong size on RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken, Delegate) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_GenerateVoipLoginToken::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_GivePlayerPermission
// 0x0024 (0x0024 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_GivePlayerPermission final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_IntraSessionPermissions                Permission;                                        // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_GivePlayerPermission) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_GivePlayerPermission");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_GivePlayerPermission) == 0x000024, "Wrong size on RH_JoinedSession_BLUEPRINT_GivePlayerPermission");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GivePlayerPermission, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_GivePlayerPermission::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GivePlayerPermission, Permission) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_GivePlayerPermission::Permission' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_GivePlayerPermission, Delegate) == 0x000014, "Member 'RH_JoinedSession_BLUEPRINT_GivePlayerPermission::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_InviteOtherSession
// 0x0088 (0x0088 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_InviteOtherSession final
{
public:
	class FString                                 InvitedSessionId;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_PlayerInviteRequest             SessionInviteRequest;                              // 0x0010(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_InviteOtherSession) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_InviteOtherSession");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_InviteOtherSession) == 0x000088, "Wrong size on RH_JoinedSession_BLUEPRINT_InviteOtherSession");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InviteOtherSession, InvitedSessionId) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_InviteOtherSession::InvitedSessionId' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InviteOtherSession, SessionInviteRequest) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_InviteOtherSession::SessionInviteRequest' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InviteOtherSession, Delegate) == 0x000078, "Member 'RH_JoinedSession_BLUEPRINT_InviteOtherSession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_InvitePlayer
// 0x0078 (0x0078 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_InvitePlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Team;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            CustomData;                                        // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_InvitePlayer) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_InvitePlayer");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_InvitePlayer) == 0x000078, "Wrong size on RH_JoinedSession_BLUEPRINT_InvitePlayer");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InvitePlayer, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_InvitePlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InvitePlayer, Team) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_InvitePlayer::Team' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InvitePlayer, CustomData) == 0x000018, "Member 'RH_JoinedSession_BLUEPRINT_InvitePlayer::CustomData' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_InvitePlayer, Delegate) == 0x000068, "Member 'RH_JoinedSession_BLUEPRINT_InvitePlayer::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_JoinOtherSession
// 0x0088 (0x0088 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_JoinOtherSession final
{
public:
	class FString                                 TargetSessionId;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_PlayerInviteRequest             SessionInviteRequest;                              // 0x0010(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_JoinOtherSession) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_JoinOtherSession");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_JoinOtherSession) == 0x000088, "Wrong size on RH_JoinedSession_BLUEPRINT_JoinOtherSession");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_JoinOtherSession, TargetSessionId) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_JoinOtherSession::TargetSessionId' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_JoinOtherSession, SessionInviteRequest) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_JoinOtherSession::SessionInviteRequest' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_JoinOtherSession, Delegate) == 0x000078, "Member 'RH_JoinedSession_BLUEPRINT_JoinOtherSession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_KickOtherSession
// 0x0020 (0x0020 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_KickOtherSession final
{
public:
	class FString                                 KickedSessionId;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_KickOtherSession) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_KickOtherSession");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_KickOtherSession) == 0x000020, "Wrong size on RH_JoinedSession_BLUEPRINT_KickOtherSession");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_KickOtherSession, KickedSessionId) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_KickOtherSession::KickedSessionId' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_KickOtherSession, Delegate) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_KickOtherSession::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_KickPlayer
// 0x0020 (0x0020 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_KickPlayer final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_KickPlayer) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_KickPlayer");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_KickPlayer) == 0x000020, "Wrong size on RH_JoinedSession_BLUEPRINT_KickPlayer");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_KickPlayer, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_KickPlayer::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_KickPlayer, Delegate) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_KickPlayer::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_Leave
// 0x0020 (0x0020 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_Leave final
{
public:
	class FString                                 LeaveReason;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_Leave) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_Leave");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_Leave) == 0x000020, "Wrong size on RH_JoinedSession_BLUEPRINT_Leave");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_Leave, LeaveReason) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_Leave::LeaveReason' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_Leave, Delegate) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_Leave::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_QueryPlayerBlockedOnPlatformAsync
// 0x0020 (0x0020 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bIsBlocked)>              Delegate;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync) == 0x000020, "Wrong size on RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync, Delegate) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_QueryPlayerBlockedOnPlatformAsync::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_RemovePlayerPermission
// 0x0024 (0x0024 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_RemovePlayerPermission final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_IntraSessionPermissions                Permission;                                        // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_RemovePlayerPermission) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_RemovePlayerPermission");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_RemovePlayerPermission) == 0x000024, "Wrong size on RH_JoinedSession_BLUEPRINT_RemovePlayerPermission");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_RemovePlayerPermission, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_RemovePlayerPermission::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_RemovePlayerPermission, Permission) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_RemovePlayerPermission::Permission' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_RemovePlayerPermission, Delegate) == 0x000014, "Member 'RH_JoinedSession_BLUEPRINT_RemovePlayerPermission::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_RequestInstance
// 0x0150 (0x0150 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_RequestInstance final
{
public:
	struct FRHAPI_InstanceRequest                 InstanceRequest;                                   // 0x0000(0x0140)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0140(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_RequestInstance) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_RequestInstance");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_RequestInstance) == 0x000150, "Wrong size on RH_JoinedSession_BLUEPRINT_RequestInstance");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_RequestInstance, InstanceRequest) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_RequestInstance::InstanceRequest' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_RequestInstance, Delegate) == 0x000140, "Member 'RH_JoinedSession_BLUEPRINT_RequestInstance::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_SetLeader
// 0x0020 (0x0020 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_SetLeader final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_SetLeader) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_SetLeader");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_SetLeader) == 0x000020, "Wrong size on RH_JoinedSession_BLUEPRINT_SetLeader");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_SetLeader, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_SetLeader::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_SetLeader, Delegate) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_SetLeader::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_SwapPlayerTeams
// 0x0030 (0x0030 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_SwapPlayerTeams final
{
public:
	struct FGuid                                  PlayerUuidA;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerUuidB;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_SwapPlayerTeams) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_SwapPlayerTeams");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_SwapPlayerTeams) == 0x000030, "Wrong size on RH_JoinedSession_BLUEPRINT_SwapPlayerTeams");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_SwapPlayerTeams, PlayerUuidA) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_SwapPlayerTeams::PlayerUuidA' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_SwapPlayerTeams, PlayerUuidB) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_SwapPlayerTeams::PlayerUuidB' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_SwapPlayerTeams, Delegate) == 0x000020, "Member 'RH_JoinedSession_BLUEPRINT_SwapPlayerTeams::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_UpdateBrowserInfo
// 0x0068 (0x0068 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            CustomData;                                        // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo) == 0x000068, "Wrong size on RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo, bEnable) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo::bEnable' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo, CustomData) == 0x000008, "Member 'RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo::CustomData' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo, Delegate) == 0x000058, "Member 'RH_JoinedSession_BLUEPRINT_UpdateBrowserInfo::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_UpdateInstanceHealth
// 0x0014 (0x0014 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth final
{
public:
	ERHAPI_InstanceHealthStatus                   HealthStatus;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth) == 0x000004, "Wrong alignment on RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth) == 0x000014, "Wrong size on RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth, HealthStatus) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth::HealthStatus' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth, Delegate) == 0x000004, "Member 'RH_JoinedSession_BLUEPRINT_UpdateInstanceHealth::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_UpdateInstanceInfo
// 0x0140 (0x0140 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo final
{
public:
	struct FRHAPI_InstanceInfoUpdate              Update;                                            // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0130(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo) == 0x000140, "Wrong size on RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo, Update) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo::Update' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo, Delegate) == 0x000130, "Member 'RH_JoinedSession_BLUEPRINT_UpdateInstanceInfo::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_UpdatePlayerCustomData
// 0x0070 (0x0070 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData final
{
public:
	struct FGuid                                  PlayerUuid;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            CustomData;                                        // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData) == 0x000070, "Wrong size on RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData, PlayerUuid) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData::PlayerUuid' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData, CustomData) == 0x000010, "Member 'RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData::CustomData' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData, Delegate) == 0x000060, "Member 'RH_JoinedSession_BLUEPRINT_UpdatePlayerCustomData::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_UpdateSessionInfo
// 0x00B8 (0x00B8 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_UpdateSessionInfo final
{
public:
	struct FRHAPI_SessionUpdate                   Update;                                            // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_UpdateSessionInfo) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_UpdateSessionInfo");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_UpdateSessionInfo) == 0x0000B8, "Wrong size on RH_JoinedSession_BLUEPRINT_UpdateSessionInfo");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateSessionInfo, Update) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_UpdateSessionInfo::Update' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_UpdateSessionInfo, Delegate) == 0x0000A8, "Member 'RH_JoinedSession_BLUEPRINT_UpdateSessionInfo::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.GetInstanceUpdateInfo
// 0x0130 (0x0130 - 0x0000)
struct RH_JoinedSession_GetInstanceUpdateInfo final
{
public:
	struct FRHAPI_InstanceInfoUpdate              ReturnValue;                                       // 0x0000(0x0130)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_GetInstanceUpdateInfo) == 0x000008, "Wrong alignment on RH_JoinedSession_GetInstanceUpdateInfo");
static_assert(sizeof(RH_JoinedSession_GetInstanceUpdateInfo) == 0x000130, "Wrong size on RH_JoinedSession_GetInstanceUpdateInfo");
static_assert(offsetof(RH_JoinedSession_GetInstanceUpdateInfo, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_GetInstanceUpdateInfo::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.SetWatchingPlayers
// 0x0001 (0x0001 - 0x0000)
struct RH_JoinedSession_SetWatchingPlayers final
{
public:
	bool                                          bWatch;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_SetWatchingPlayers) == 0x000001, "Wrong alignment on RH_JoinedSession_SetWatchingPlayers");
static_assert(sizeof(RH_JoinedSession_SetWatchingPlayers) == 0x000001, "Wrong size on RH_JoinedSession_SetWatchingPlayers");
static_assert(offsetof(RH_JoinedSession_SetWatchingPlayers, bWatch) == 0x000000, "Member 'RH_JoinedSession_SetWatchingPlayers::bWatch' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.BLUEPRINT_EmitAuditEvent
// 0x0468 (0x0468 - 0x0000)
struct RH_JoinedSession_BLUEPRINT_EmitAuditEvent final
{
public:
	struct FRHAPI_CreateAuditRequest              AuditEvent;                                        // 0x0000(0x0458)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0458(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_BLUEPRINT_EmitAuditEvent) == 0x000008, "Wrong alignment on RH_JoinedSession_BLUEPRINT_EmitAuditEvent");
static_assert(sizeof(RH_JoinedSession_BLUEPRINT_EmitAuditEvent) == 0x000468, "Wrong size on RH_JoinedSession_BLUEPRINT_EmitAuditEvent");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_EmitAuditEvent, AuditEvent) == 0x000000, "Member 'RH_JoinedSession_BLUEPRINT_EmitAuditEvent::AuditEvent' has a wrong offset!");
static_assert(offsetof(RH_JoinedSession_BLUEPRINT_EmitAuditEvent, Delegate) == 0x000458, "Member 'RH_JoinedSession_BLUEPRINT_EmitAuditEvent::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.GetInstanceUpdateInfoDefaults
// 0x0130 (0x0130 - 0x0000)
struct RH_JoinedSession_GetInstanceUpdateInfoDefaults final
{
public:
	struct FRHAPI_InstanceInfoUpdate              ReturnValue;                                       // 0x0000(0x0130)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_GetInstanceUpdateInfoDefaults) == 0x000008, "Wrong alignment on RH_JoinedSession_GetInstanceUpdateInfoDefaults");
static_assert(sizeof(RH_JoinedSession_GetInstanceUpdateInfoDefaults) == 0x000130, "Wrong size on RH_JoinedSession_GetInstanceUpdateInfoDefaults");
static_assert(offsetof(RH_JoinedSession_GetInstanceUpdateInfoDefaults, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_GetInstanceUpdateInfoDefaults::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.GetPlatformSyncer
// 0x0008 (0x0008 - 0x0000)
struct RH_JoinedSession_GetPlatformSyncer final
{
public:
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_GetPlatformSyncer) == 0x000008, "Wrong alignment on RH_JoinedSession_GetPlatformSyncer");
static_assert(sizeof(RH_JoinedSession_GetPlatformSyncer) == 0x000008, "Wrong size on RH_JoinedSession_GetPlatformSyncer");
static_assert(offsetof(RH_JoinedSession_GetPlatformSyncer, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_GetPlatformSyncer::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.GetSessionUpdateInfoDefaults
// 0x00A8 (0x00A8 - 0x0000)
struct RH_JoinedSession_GetSessionUpdateInfoDefaults final
{
public:
	struct FRHAPI_SessionUpdate                   ReturnValue;                                       // 0x0000(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_GetSessionUpdateInfoDefaults) == 0x000008, "Wrong alignment on RH_JoinedSession_GetSessionUpdateInfoDefaults");
static_assert(sizeof(RH_JoinedSession_GetSessionUpdateInfoDefaults) == 0x0000A8, "Wrong size on RH_JoinedSession_GetSessionUpdateInfoDefaults");
static_assert(offsetof(RH_JoinedSession_GetSessionUpdateInfoDefaults, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_GetSessionUpdateInfoDefaults::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.IsActive
// 0x0001 (0x0001 - 0x0000)
struct RH_JoinedSession_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_IsActive) == 0x000001, "Wrong alignment on RH_JoinedSession_IsActive");
static_assert(sizeof(RH_JoinedSession_IsActive) == 0x000001, "Wrong size on RH_JoinedSession_IsActive");
static_assert(offsetof(RH_JoinedSession_IsActive, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_IsActive::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.IsBeaconSession
// 0x0001 (0x0001 - 0x0000)
struct RH_JoinedSession_IsBeaconSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_IsBeaconSession) == 0x000001, "Wrong alignment on RH_JoinedSession_IsBeaconSession");
static_assert(sizeof(RH_JoinedSession_IsBeaconSession) == 0x000001, "Wrong size on RH_JoinedSession_IsBeaconSession");
static_assert(offsetof(RH_JoinedSession_IsBeaconSession, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_IsBeaconSession::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.IsSyncedWithPlatform
// 0x0001 (0x0001 - 0x0000)
struct RH_JoinedSession_IsSyncedWithPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_IsSyncedWithPlatform) == 0x000001, "Wrong alignment on RH_JoinedSession_IsSyncedWithPlatform");
static_assert(sizeof(RH_JoinedSession_IsSyncedWithPlatform) == 0x000001, "Wrong size on RH_JoinedSession_IsSyncedWithPlatform");
static_assert(offsetof(RH_JoinedSession_IsSyncedWithPlatform, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_IsSyncedWithPlatform::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_JoinedSession.IsWatchingPlayers
// 0x0001 (0x0001 - 0x0000)
struct RH_JoinedSession_IsWatchingPlayers final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_JoinedSession_IsWatchingPlayers) == 0x000001, "Wrong alignment on RH_JoinedSession_IsWatchingPlayers");
static_assert(sizeof(RH_JoinedSession_IsWatchingPlayers) == 0x000001, "Wrong size on RH_JoinedSession_IsWatchingPlayers");
static_assert(offsetof(RH_JoinedSession_IsWatchingPlayers, ReturnValue) == 0x000000, "Member 'RH_JoinedSession_IsWatchingPlayers::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_CreateOrJoinByType
// 0x0168 (0x0168 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_CreateOrJoinByType final
{
public:
	struct FRHAPI_CreateOrJoinRequest             CreateParams;                                      // 0x0000(0x0148)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner;                                  // 0x0148(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0158(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_CreateOrJoinByType) == 0x000008, "Wrong alignment on RH_OnlineSession_BLUEPRINT_CreateOrJoinByType");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_CreateOrJoinByType) == 0x000168, "Wrong size on RH_OnlineSession_BLUEPRINT_CreateOrJoinByType");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_CreateOrJoinByType, CreateParams) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_CreateOrJoinByType::CreateParams' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_CreateOrJoinByType, SessionOwner) == 0x000148, "Member 'RH_OnlineSession_BLUEPRINT_CreateOrJoinByType::SessionOwner' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_CreateOrJoinByType, Delegate) == 0x000158, "Member 'RH_OnlineSession_BLUEPRINT_CreateOrJoinByType::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_JoinById
// 0x0030 (0x0030 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_JoinById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_JoinById) == 0x000008, "Wrong alignment on RH_OnlineSession_BLUEPRINT_JoinById");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_JoinById) == 0x000030, "Wrong size on RH_OnlineSession_BLUEPRINT_JoinById");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinById, SessionId) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_JoinById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinById, SessionOwner) == 0x000010, "Member 'RH_OnlineSession_BLUEPRINT_JoinById::SessionOwner' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinById, Delegate) == 0x000020, "Member 'RH_OnlineSession_BLUEPRINT_JoinById::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_JoinByIdEx
// 0x00F0 (0x00F0 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_JoinByIdEx final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SelfSessionPlayerUpdateRequest  JoinDetails;                                       // 0x0010(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner;                                  // 0x00D0(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_JoinByIdEx) == 0x000008, "Wrong alignment on RH_OnlineSession_BLUEPRINT_JoinByIdEx");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_JoinByIdEx) == 0x0000F0, "Wrong size on RH_OnlineSession_BLUEPRINT_JoinByIdEx");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinByIdEx, SessionId) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_JoinByIdEx::SessionId' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinByIdEx, JoinDetails) == 0x000010, "Member 'RH_OnlineSession_BLUEPRINT_JoinByIdEx::JoinDetails' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinByIdEx, SessionOwner) == 0x0000D0, "Member 'RH_OnlineSession_BLUEPRINT_JoinByIdEx::SessionOwner' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinByIdEx, Delegate) == 0x0000E0, "Member 'RH_OnlineSession_BLUEPRINT_JoinByIdEx::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.GetJoinDetailDefaults
// 0x00D0 (0x00D0 - 0x0000)
struct RH_OnlineSession_GetJoinDetailDefaults final
{
public:
	TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SelfSessionPlayerUpdateRequest  ReturnValue;                                       // 0x0010(0x00C0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_GetJoinDetailDefaults) == 0x000008, "Wrong alignment on RH_OnlineSession_GetJoinDetailDefaults");
static_assert(sizeof(RH_OnlineSession_GetJoinDetailDefaults) == 0x0000D0, "Wrong size on RH_OnlineSession_GetJoinDetailDefaults");
static_assert(offsetof(RH_OnlineSession_GetJoinDetailDefaults, SessionOwner) == 0x000000, "Member 'RH_OnlineSession_GetJoinDetailDefaults::SessionOwner' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_GetJoinDetailDefaults, ReturnValue) == 0x000010, "Member 'RH_OnlineSession_GetJoinDetailDefaults::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_JoinQueue
// 0x0030 (0x0030 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_JoinQueue final
{
public:
	class FString                                 QueueId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MatchmakingTags;                                   // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_JoinQueue) == 0x000008, "Wrong alignment on RH_OnlineSession_BLUEPRINT_JoinQueue");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_JoinQueue) == 0x000030, "Wrong size on RH_OnlineSession_BLUEPRINT_JoinQueue");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinQueue, QueueId) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_JoinQueue::QueueId' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinQueue, MatchmakingTags) == 0x000010, "Member 'RH_OnlineSession_BLUEPRINT_JoinQueue::MatchmakingTags' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinQueue, Delegate) == 0x000020, "Member 'RH_OnlineSession_BLUEPRINT_JoinQueue::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_JoinQueueEx
// 0x0178 (0x0178 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_JoinQueueEx final
{
public:
	struct FRHAPI_QueueJoinRequest                Request;                                           // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0168(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_JoinQueueEx) == 0x000008, "Wrong alignment on RH_OnlineSession_BLUEPRINT_JoinQueueEx");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_JoinQueueEx) == 0x000178, "Wrong size on RH_OnlineSession_BLUEPRINT_JoinQueueEx");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinQueueEx, Request) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_JoinQueueEx::Request' has a wrong offset!");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_JoinQueueEx, Delegate) == 0x000168, "Member 'RH_OnlineSession_BLUEPRINT_JoinQueueEx::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_OnlineSession.BLUEPRINT_LeaveQueue
// 0x0010 (0x0010 - 0x0000)
struct RH_OnlineSession_BLUEPRINT_LeaveQueue final
{
public:
	TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)> Delegate; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_OnlineSession_BLUEPRINT_LeaveQueue) == 0x000004, "Wrong alignment on RH_OnlineSession_BLUEPRINT_LeaveQueue");
static_assert(sizeof(RH_OnlineSession_BLUEPRINT_LeaveQueue) == 0x000010, "Wrong size on RH_OnlineSession_BLUEPRINT_LeaveQueue");
static_assert(offsetof(RH_OnlineSession_BLUEPRINT_LeaveQueue, Delegate) == 0x000000, "Member 'RH_OnlineSession_BLUEPRINT_LeaveQueue::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.RemoveSessionById
// 0x0010 (0x0010 - 0x0000)
struct RH_SessionOwnerInterface_RemoveSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_RemoveSessionById) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_RemoveSessionById");
static_assert(sizeof(RH_SessionOwnerInterface_RemoveSessionById) == 0x000010, "Wrong size on RH_SessionOwnerInterface_RemoveSessionById");
static_assert(offsetof(RH_SessionOwnerInterface_RemoveSessionById, SessionId) == 0x000000, "Member 'RH_SessionOwnerInterface_RemoveSessionById::SessionId' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetLocalPlayerSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_SessionOwnerInterface_GetLocalPlayerSubsystem final
{
public:
	class URH_LocalPlayerSubsystem*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_GetLocalPlayerSubsystem) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetLocalPlayerSubsystem");
static_assert(sizeof(RH_SessionOwnerInterface_GetLocalPlayerSubsystem) == 0x000008, "Wrong size on RH_SessionOwnerInterface_GetLocalPlayerSubsystem");
static_assert(offsetof(RH_SessionOwnerInterface_GetLocalPlayerSubsystem, ReturnValue) == 0x000000, "Member 'RH_SessionOwnerInterface_GetLocalPlayerSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetPlatformSyncerByPlatformSessionId
// 0x0038 (0x0038 - 0x0000)
struct RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId final
{
public:
	struct FUniqueNetIdRepl                       SessionId;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId");
static_assert(sizeof(RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId) == 0x000038, "Wrong size on RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId");
static_assert(offsetof(RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId, SessionId) == 0x000000, "Member 'RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId, ReturnValue) == 0x000030, "Member 'RH_SessionOwnerInterface_GetPlatformSyncerByPlatformSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetPlatformSyncerByRHSessionId
// 0x0018 (0x0018 - 0x0000)
struct RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PlatformSessionSyncer*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId");
static_assert(sizeof(RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId) == 0x000018, "Wrong size on RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId");
static_assert(offsetof(RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId, SessionId) == 0x000000, "Member 'RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId, ReturnValue) == 0x000010, "Member 'RH_SessionOwnerInterface_GetPlatformSyncerByRHSessionId::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetPlayerInfoSubsystem
// 0x0008 (0x0008 - 0x0000)
struct RH_SessionOwnerInterface_GetPlayerInfoSubsystem final
{
public:
	class URH_PlayerInfoSubsystem*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_GetPlayerInfoSubsystem) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetPlayerInfoSubsystem");
static_assert(sizeof(RH_SessionOwnerInterface_GetPlayerInfoSubsystem) == 0x000008, "Wrong size on RH_SessionOwnerInterface_GetPlayerInfoSubsystem");
static_assert(offsetof(RH_SessionOwnerInterface_GetPlayerInfoSubsystem, ReturnValue) == 0x000000, "Member 'RH_SessionOwnerInterface_GetPlayerInfoSubsystem::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetSessionById
// 0x0018 (0x0018 - 0x0000)
struct RH_SessionOwnerInterface_GetSessionById final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_SessionView*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SessionOwnerInterface_GetSessionById) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetSessionById");
static_assert(sizeof(RH_SessionOwnerInterface_GetSessionById) == 0x000018, "Wrong size on RH_SessionOwnerInterface_GetSessionById");
static_assert(offsetof(RH_SessionOwnerInterface_GetSessionById, SessionId) == 0x000000, "Member 'RH_SessionOwnerInterface_GetSessionById::SessionId' has a wrong offset!");
static_assert(offsetof(RH_SessionOwnerInterface_GetSessionById, ReturnValue) == 0x000010, "Member 'RH_SessionOwnerInterface_GetSessionById::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SessionOwnerInterface.GetTemplate
// 0x0230 (0x0230 - 0x0000)
struct RH_SessionOwnerInterface_GetTemplate final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_SessionTemplate                 Template;                                          // 0x0010(0x0218)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RH_SessionOwnerInterface_GetTemplate) == 0x000008, "Wrong alignment on RH_SessionOwnerInterface_GetTemplate");
static_assert(sizeof(RH_SessionOwnerInterface_GetTemplate) == 0x000230, "Wrong size on RH_SessionOwnerInterface_GetTemplate");
static_assert(offsetof(RH_SessionOwnerInterface_GetTemplate, Type) == 0x000000, "Member 'RH_SessionOwnerInterface_GetTemplate::Type' has a wrong offset!");
static_assert(offsetof(RH_SessionOwnerInterface_GetTemplate, Template) == 0x000010, "Member 'RH_SessionOwnerInterface_GetTemplate::Template' has a wrong offset!");
static_assert(offsetof(RH_SessionOwnerInterface_GetTemplate, ReturnValue) == 0x000228, "Member 'RH_SessionOwnerInterface_GetTemplate::ReturnValue' has a wrong offset!");

// Function RallyHereIntegration.RH_SettingsSubsystem.BLUEPRINT_GetSettingTypes
// 0x0010 (0x0010 - 0x0000)
struct RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes final
{
public:
	TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)> Delegate;                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes) == 0x000004, "Wrong alignment on RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes");
static_assert(sizeof(RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes) == 0x000010, "Wrong size on RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes");
static_assert(offsetof(RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes, Delegate) == 0x000000, "Member 'RH_SettingsSubsystem_BLUEPRINT_GetSettingTypes::Delegate' has a wrong offset!");

// Function RallyHereIntegration.RH_SettingsSubsystem.GetCachedSettingTypes
// 0x0050 (0x0050 - 0x0000)
struct RH_SettingsSubsystem_GetCachedSettingTypes final
{
public:
	TMap<class FString, struct FRHAPI_SettingType> ReturnValue;                                      // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RH_SettingsSubsystem_GetCachedSettingTypes) == 0x000008, "Wrong alignment on RH_SettingsSubsystem_GetCachedSettingTypes");
static_assert(sizeof(RH_SettingsSubsystem_GetCachedSettingTypes) == 0x000050, "Wrong size on RH_SettingsSubsystem_GetCachedSettingTypes");
static_assert(offsetof(RH_SettingsSubsystem_GetCachedSettingTypes, ReturnValue) == 0x000000, "Member 'RH_SettingsSubsystem_GetCachedSettingTypes::ReturnValue' has a wrong offset!");

}

