#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Graphic_Button

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Graphic_Button.WBP_Graphic_Button_C
// 0x00B8 (0x0670 - 0x05B8)
class UWBP_Graphic_Button_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Active;                                            // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 button_base;                                       // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ButtonContent;                                     // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HitTarget;                                         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               horizontalgradient;                                // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hover;                                             // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnGraphicBtnClicked;                               // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool IsGamepad)> OnGraphicBtnHovered;                              // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnGraphicBtnUnhovered;                             // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             NormalButtonImage;                                 // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           NormalButtonTint;                                  // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             HoverButtonImage;                                  // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           HoverButtonTint;                                   // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                ClickGraphicBtnSFX;                                // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                HoverGraphicBtnSFX;                                // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsDisable;                                        // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          BP_IsActive;                                       // 0x0669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void CallButtonHover();
	void CallButtonUnhover();
	void Construct();
	void DisableButton(bool bShouldDisable);
	void ExecuteUbergraph_WBP_Graphic_Button(int32 EntryPoint);
	void GamepadHover();
	void GamepadUnhover();
	bool NavigateConfirm();
	void OnGamepadConfirmed();
	void OnHoveredLogic(bool IsGamepad);
	void SetImage();
	void SetImageTint();
	void SetIsActiveState(bool bIsActive_0);

	void IsOnGamepad(bool* bGamepad) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Graphic_Button_C">();
	}
	static class UWBP_Graphic_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Graphic_Button_C>();
	}
};
static_assert(alignof(UWBP_Graphic_Button_C) == 0x000008, "Wrong alignment on UWBP_Graphic_Button_C");
static_assert(sizeof(UWBP_Graphic_Button_C) == 0x000670, "Wrong size on UWBP_Graphic_Button_C");
static_assert(offsetof(UWBP_Graphic_Button_C, UberGraphFrame) == 0x0005B8, "Member 'UWBP_Graphic_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, HoverAnim) == 0x0005C0, "Member 'UWBP_Graphic_Button_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, Active) == 0x0005C8, "Member 'UWBP_Graphic_Button_C::Active' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, button_base) == 0x0005D0, "Member 'UWBP_Graphic_Button_C::button_base' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, ButtonContent) == 0x0005D8, "Member 'UWBP_Graphic_Button_C::ButtonContent' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, HitTarget) == 0x0005E0, "Member 'UWBP_Graphic_Button_C::HitTarget' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, horizontalgradient) == 0x0005E8, "Member 'UWBP_Graphic_Button_C::horizontalgradient' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, Hover) == 0x0005F0, "Member 'UWBP_Graphic_Button_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, OnGraphicBtnClicked) == 0x0005F8, "Member 'UWBP_Graphic_Button_C::OnGraphicBtnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, OnGraphicBtnHovered) == 0x000608, "Member 'UWBP_Graphic_Button_C::OnGraphicBtnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, OnGraphicBtnUnhovered) == 0x000618, "Member 'UWBP_Graphic_Button_C::OnGraphicBtnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, NormalButtonImage) == 0x000628, "Member 'UWBP_Graphic_Button_C::NormalButtonImage' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, NormalButtonTint) == 0x000630, "Member 'UWBP_Graphic_Button_C::NormalButtonTint' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, HoverButtonImage) == 0x000640, "Member 'UWBP_Graphic_Button_C::HoverButtonImage' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, HoverButtonTint) == 0x000648, "Member 'UWBP_Graphic_Button_C::HoverButtonTint' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, ClickGraphicBtnSFX) == 0x000658, "Member 'UWBP_Graphic_Button_C::ClickGraphicBtnSFX' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, HoverGraphicBtnSFX) == 0x000660, "Member 'UWBP_Graphic_Button_C::HoverGraphicBtnSFX' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, bIsDisable) == 0x000668, "Member 'UWBP_Graphic_Button_C::bIsDisable' has a wrong offset!");
static_assert(offsetof(UWBP_Graphic_Button_C, BP_IsActive) == 0x000669, "Member 'UWBP_Graphic_Button_C::BP_IsActive' has a wrong offset!");

}

