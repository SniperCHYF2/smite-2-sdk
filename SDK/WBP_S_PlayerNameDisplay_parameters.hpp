#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_PlayerNameDisplay

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_PlayerNameDisplay.WBP_S_PlayerNameDisplay_C.ExecuteUbergraph_WBP_S_PlayerNameDisplay
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Name_1;                               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EHWVIPOwnershipLevel                          K2Node_Event_VIPOwnership;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWVIPOwnershipLevel                          Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	class FText                                   CallFunc_SanitizeRichText_ReturnValue;             // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x00A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B8(0x0018)()
	const class UHWCollectionItem*                K2Node_Event_NameItem;                             // 0x00D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Name;                                 // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0188(0x0018)()
	class FText                                   CallFunc_SanitizeRichText_ReturnValue_1;           // 0x01A0(0x0018)()
};
static_assert(alignof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay) == 0x000008, "Wrong alignment on WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay");
static_assert(sizeof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay) == 0x0001B8, "Wrong size on WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, EntryPoint) == 0x000000, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Event_Name_1) == 0x000008, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Event_Name_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Event_VIPOwnership) == 0x000018, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Event_VIPOwnership' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, Temp_byte_Variable) == 0x000019, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_SanitizeRichText_ReturnValue) == 0x000038, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_SanitizeRichText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_GetEmptyText_ReturnValue) == 0x0000A0, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B8, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Event_NameItem) == 0x0000D0, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Event_NameItem' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Select_Default) == 0x0000D8, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_MakeArray_Array) == 0x000148, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_Format_ReturnValue) == 0x000158, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x000170, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, K2Node_Event_Name) == 0x000178, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000188, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay, CallFunc_SanitizeRichText_ReturnValue_1) == 0x0001A0, "Member 'WBP_S_PlayerNameDisplay_C_ExecuteUbergraph_WBP_S_PlayerNameDisplay::CallFunc_SanitizeRichText_ReturnValue_1' has a wrong offset!");

// Function WBP_S_PlayerNameDisplay.WBP_S_PlayerNameDisplay_C.OnUpdatePlayerName
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName) == 0x000008, "Wrong alignment on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName");
static_assert(sizeof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName) == 0x000010, "Wrong size on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName, Name_0) == 0x000000, "Member 'WBP_S_PlayerNameDisplay_C_OnUpdatePlayerName::Name_0' has a wrong offset!");

// Function WBP_S_PlayerNameDisplay.WBP_S_PlayerNameDisplay_C.OnUpdatePlayerNameAndVIPOwnership
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EHWVIPOwnershipLevel                          VIPOwnership;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership) == 0x000008, "Wrong alignment on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership");
static_assert(sizeof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership) == 0x000018, "Wrong size on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership, Name_0) == 0x000000, "Member 'WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership, VIPOwnership) == 0x000010, "Member 'WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameAndVIPOwnership::VIPOwnership' has a wrong offset!");

// Function WBP_S_PlayerNameDisplay.WBP_S_PlayerNameDisplay_C.OnUpdatePlayerNameColorItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem final
{
public:
	const class UHWCollectionItem*                NameItem;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem) == 0x000008, "Wrong alignment on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem");
static_assert(sizeof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem) == 0x000008, "Wrong size on WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem, NameItem) == 0x000000, "Member 'WBP_S_PlayerNameDisplay_C_OnUpdatePlayerNameColorItem::NameItem' has a wrong offset!");

// Function WBP_S_PlayerNameDisplay.WBP_S_PlayerNameDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_PlayerNameDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerNameDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_PlayerNameDisplay_C_PreConstruct");
static_assert(sizeof(WBP_S_PlayerNameDisplay_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_PlayerNameDisplay_C_PreConstruct");
static_assert(offsetof(WBP_S_PlayerNameDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_PlayerNameDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

