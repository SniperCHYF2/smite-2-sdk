#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_ControlFlightAbility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BTTask_ControlFlightAbility.BTTask_ControlFlightAbility_C.ExecuteUbergraph_BTTask_ControlFlightAbility
// 0x0038 (0x0038 - 0x0000)
struct BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateControl_DeltaTime_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility) == 0x000008, "Wrong alignment on BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility");
static_assert(sizeof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility) == 0x000038, "Wrong size on BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, EntryPoint) == 0x000000, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, K2Node_Event_OwnerController) == 0x000008, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility, CallFunc_UpdateControl_DeltaTime_ImplicitCast) == 0x000030, "Member 'BTTask_ControlFlightAbility_C_ExecuteUbergraph_BTTask_ControlFlightAbility::CallFunc_UpdateControl_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BTTask_ControlFlightAbility.BTTask_ControlFlightAbility_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_ControlFlightAbility_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_ControlFlightAbility_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_ControlFlightAbility_C_ReceiveTickAI");
static_assert(sizeof(BTTask_ControlFlightAbility_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_ControlFlightAbility_C_ReceiveTickAI");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_ControlFlightAbility_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_ControlFlightAbility_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_ControlFlightAbility_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTTask_ControlFlightAbility.BTTask_ControlFlightAbility_C.UpdateControl
// 0x0288 (0x0288 - 0x0000)
struct BTTask_ControlFlightAbility_C_UpdateControl final
{
public:
	class AHWCharacter_Base*                      Bot;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinRange;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BotLocation;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayAbilitySpecHandle>     Abilities;                                         // 0x0048(0x0010)(Edit, BlueprintVisible)
	class UHWAbilitySystemComponent*              AbilitySystemComp;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_1;            // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_2;            // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue_1;  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue_2;  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x1];                                      // 0x022B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue_3;  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue_4;  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast; // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_ControlFlightAbility_C_UpdateControl) == 0x000008, "Wrong alignment on BTTask_ControlFlightAbility_C_UpdateControl");
static_assert(sizeof(BTTask_ControlFlightAbility_C_UpdateControl) == 0x000288, "Wrong size on BTTask_ControlFlightAbility_C_UpdateControl");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Bot) == 0x000000, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Bot' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, DeltaTime) == 0x000008, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::DeltaTime' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, MinRange) == 0x000010, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::MinRange' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, BotLocation) == 0x000018, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::BotLocation' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, TargetLocation) == 0x000030, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::TargetLocation' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Abilities) == 0x000048, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Abilities' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, AbilitySystemComp) == 0x000058, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::AbilitySystemComp' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Direction) == 0x000060, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Direction' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Distance) == 0x000078, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Distance' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Radius) == 0x000080, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Radius' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Range) == 0x000084, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Range' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, Target) == 0x000088, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::Target' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000B0, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_FClamp_ReturnValue) == 0x0000C8, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000D0, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E8, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000100, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Vector_Normal2D_ReturnValue_1) == 0x000130, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Vector_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_BreakVector_X) == 0x000148, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_BreakVector_Y) == 0x000150, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_BreakVector_Z) == 0x000158, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_MakeVector_ReturnValue) == 0x000160, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000178, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000198, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000199, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0001A0, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0001B8, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_VSizeXY_ReturnValue) == 0x0001D0, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Vector_Normal2D_ReturnValue_2) == 0x0001D8, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Vector_Normal2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001F0, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsFloat_ReturnValue_1) == 0x000208, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00020C, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsFloat_ReturnValue_2) == 0x000210, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000218, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000220, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000228, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000229, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_BooleanAND_ReturnValue) == 0x00022A, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsFloat_ReturnValue_3) == 0x00022C, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_BooleanAND_ReturnValue_1) == 0x000230, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsFloat_ReturnValue_4) == 0x000234, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000238, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000240, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_FClamp_Min_ImplicitCast) == 0x000248, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_FClamp_Max_ImplicitCast) == 0x000250, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000258, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000260, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000268, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast) == 0x000278, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTTask_ControlFlightAbility_C_UpdateControl, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000280, "Member 'BTTask_ControlFlightAbility_C_UpdateControl::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

