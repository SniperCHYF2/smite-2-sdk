#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_KillEvent_GodKill

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.HandleKilledDisplayNameReady
// 0x0060 (0x0060 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady final
{
public:
	struct FHWEventCharacter                      EventCharacter;                                    // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0040(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UHWCharacterItem*                 CharacterItem;                                     // 0x0058(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady) == 0x000060, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady, EventCharacter) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady::EventCharacter' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady, DisplayName) == 0x000040, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady::DisplayName' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady, CharacterItem) == 0x000058, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledDisplayNameReady::CharacterItem' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.HandleKilledNameColorReady
// 0x0058 (0x0058 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady final
{
public:
	struct FHWEventCharacter                      EventCharacter;                                    // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWCollectionItem*                NameColorItem;                                     // 0x0040(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady) == 0x000058, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady, EventCharacter) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady::EventCharacter' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady, NameColorItem) == 0x000040, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady::NameColorItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x00004C, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKilledNameColorReady::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.HandleKillerDisplayNameReady
// 0x0060 (0x0060 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady final
{
public:
	struct FHWEventCharacter                      EventCharacter;                                    // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0040(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UHWCharacterItem*                 CharacterItem;                                     // 0x0058(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady) == 0x000060, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady, EventCharacter) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady::EventCharacter' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady, DisplayName) == 0x000040, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady::DisplayName' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady, CharacterItem) == 0x000058, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerDisplayNameReady::CharacterItem' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.HandleKillerNameColorReady
// 0x0058 (0x0058 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady final
{
public:
	struct FHWEventCharacter                      EventCharacter;                                    // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWCollectionItem*                NameColorItem;                                     // 0x0040(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady) == 0x000058, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady, EventCharacter) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady::EventCharacter' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady, NameColorItem) == 0x000040, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady::NameColorItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x00004C, "Member 'WBP_G_V2_KillEvent_GodKill_C_HandleKillerNameColorReady::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.PreConstruct
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_G_V2_AccoladePortrait_C*           CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct) == 0x000038, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, K2Node_MakeStruct_Margin) == 0x000004, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, Temp_int_Variable) == 0x000014, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_PreConstruct, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000030, "Member 'WBP_G_V2_KillEvent_GodKill_C_PreConstruct::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.SetEventData
// 0x0180 (0x0180 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_SetEventData final
{
public:
	struct FHWEventContext                        EventContext;                                      // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable_2;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x008C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0094(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x009C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class UHWCollectionItem* NameColorItem)> K2Node_CreateDelegate_OutputDelegate; // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class UHWCollectionItem* NameColorItem)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable_5;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V2_AccoladePortrait_C*           K2Node_DynamicCast_AsWBP_G_V2_Accolade_Portrait;   // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x013C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class FText& DisplayName, const class UHWCharacterItem* CharacterItem)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue_1;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FHWEventCharacter& EventCharacter, const class FText& DisplayName, const class UHWCharacterItem* CharacterItem)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_3;                           // 0x0174(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_SetEventData) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_SetEventData");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_SetEventData) == 0x000180, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_SetEventData");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, EventContext) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::EventContext' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable) == 0x000088, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable_1) == 0x000089, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable_2) == 0x00008A, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable) == 0x00008C, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable_1) == 0x000094, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable_2) == 0x00009C, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_bool_Variable) == 0x0000B0, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable_3) == 0x0000D4, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable_4) == 0x0000D5, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_bool_Variable_1) == 0x0000D6, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable_3) == 0x0000D8, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable_4) == 0x0000E0, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_struct_Variable_5) == 0x0000E8, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, Temp_byte_Variable_5) == 0x0000F0, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_Select_Default) == 0x0000F9, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000FA, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_Select_Default_1) == 0x0000FB, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_GetAllChildren_ReturnValue) == 0x000100, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Array_Get_Item) == 0x000110, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_DynamicCast_AsWBP_G_V2_Accolade_Portrait) == 0x000120, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_DynamicCast_AsWBP_G_V2_Accolade_Portrait' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_Less_IntInt_ReturnValue) == 0x000129, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000130, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue) == 0x000138, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_Select_Default_2) == 0x00013C, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_CreateDelegate_OutputDelegate_2) == 0x000144, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_GetLocalHUDAsGame_ReturnValue_1) == 0x000158, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_GetLocalHUDAsGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_CreateDelegate_OutputDelegate_3) == 0x000160, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue_1) == 0x000170, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_SetEventData, K2Node_Select_Default_3) == 0x000174, "Member 'WBP_G_V2_KillEvent_GodKill_C_SetEventData::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.StartDisplay
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_StartDisplay final
{
public:
	float                                         FullDuration;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_StartDisplay) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_StartDisplay");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_StartDisplay) == 0x000018, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_StartDisplay");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_StartDisplay, FullDuration) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_StartDisplay::FullDuration' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_StartDisplay, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_G_V2_KillEvent_GodKill_C_StartDisplay::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_StartDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_G_V2_KillEvent_GodKill_C_StartDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.StartOutro
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_StartOutro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_StartOutro) == 0x000008, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_StartOutro");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_StartOutro) == 0x000008, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_StartOutro");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_StartOutro, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_StartOutro::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_KillEvent_GodKill.WBP_G_V2_KillEvent_GodKill_C.GetOutroDuration
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration) == 0x000004, "Wrong alignment on WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration");
static_assert(sizeof(WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration) == 0x000008, "Wrong size on WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration, ReturnValue) == 0x000000, "Member 'WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration, CallFunc_GetEndTime_ReturnValue) == 0x000004, "Member 'WBP_G_V2_KillEvent_GodKill_C_GetOutroDuration::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");

}

