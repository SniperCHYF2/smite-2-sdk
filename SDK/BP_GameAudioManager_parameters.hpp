#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameAudioManager

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "DataTableSkinsCommon_structs.hpp"
#include "Hemingway_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameAudioManager.BP_GameAudioManager_C.BindCharacterDiedEvent
// 0x0050 (0x0050 - 0x0000)
struct BP_GameAudioManager_C_BindCharacterDiedEvent final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHWCharacterAbilitySystemActor* CharacterAbilitySystemActor, float RespawnTimerDuration)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacterAbilitySystemActor*         CallFunc_GetCharacterAbilitySystemActor_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_BindCharacterDiedEvent) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_BindCharacterDiedEvent");
static_assert(sizeof(BP_GameAudioManager_C_BindCharacterDiedEvent) == 0x000050, "Wrong size on BP_GameAudioManager_C_BindCharacterDiedEvent");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000018, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000030, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_GetCharacterAbilitySystemActor_ReturnValue) == 0x000040, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_GetCharacterAbilitySystemActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindCharacterDiedEvent, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_GameAudioManager_C_BindCharacterDiedEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.BindNPCDestroyedEvent
// 0x00B8 (0x00B8 - 0x0000)
struct BP_GameAudioManager_C_BindNPCDestroyedEvent final
{
public:
	class AHWBotFactory*                          Bot_Factory;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x0008(0x0020)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      CallFunc_MakeGameplayTagQuery_ReturnValue;         // 0x0038(0x0048)()
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesContainerMatchTagQuery_ReturnValue;   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHWBotFactory* BotFactory, class AActor* Causer)> K2Node_CreateDelegate_OutputDelegate; // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWBotFactory*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0098(0x0010)(ReferenceParm)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_BindNPCDestroyedEvent) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_BindNPCDestroyedEvent");
static_assert(sizeof(BP_GameAudioManager_C_BindNPCDestroyedEvent) == 0x0000B8, "Wrong size on BP_GameAudioManager_C_BindNPCDestroyedEvent");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, Bot_Factory) == 0x000000, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::Bot_Factory' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_GetAssetTags_ReturnValue) == 0x000008, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_MakeGameplayTagQuery_ReturnValue) == 0x000038, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_MakeGameplayTagQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_HasAuthority_ReturnValue) == 0x000080, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_DoesContainerMatchTagQuery_ReturnValue) == 0x000081, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_DoesContainerMatchTagQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_GetAllActorsOfClass_OutActors) == 0x000098, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_BindNPCDestroyedEvent, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_GameAudioManager_C_BindNPCDestroyedEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.EndClimaxMusic
// 0x0058 (0x0058 - 0x0000)
struct BP_GameAudioManager_C_EndClimaxMusic final
{
public:
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0000(0x001C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0028(0x0024)(NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_EndClimaxMusic) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_EndClimaxMusic");
static_assert(sizeof(BP_GameAudioManager_C_EndClimaxMusic) == 0x000058, "Wrong size on BP_GameAudioManager_C_EndClimaxMusic");
static_assert(offsetof(BP_GameAudioManager_C_EndClimaxMusic, K2Node_MakeStruct_AssetRequestKey) == 0x000000, "Member 'BP_GameAudioManager_C_EndClimaxMusic::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_EndClimaxMusic, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_EndClimaxMusic::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_EndClimaxMusic, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000028, "Member 'BP_GameAudioManager_C_EndClimaxMusic::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_EndClimaxMusic, CallFunc_PlayMusicTrack_ReturnValue) == 0x000050, "Member 'BP_GameAudioManager_C_EndClimaxMusic::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.ExecuteUbergraph_BP_GameAudioManager
// 0x0190 (0x0190 - 0x0000)
struct BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         K2Node_CustomEvent_Team_Id_1;                      // 0x0020(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0024(0x001C)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0048(0x0024)(NoDestructor)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x006C(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FGenericTeamId_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         K2Node_CustomEvent_Team_Id;                        // 0x0079(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue_1;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue_1;           // 0x0098(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FGenericTeamId_ReturnValue_1;  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey_1;               // 0x009C(0x001C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHWAudioStingerPlayInfo                K2Node_MakeStruct_HWAudioStingerPlayInfo;          // 0x00BC(0x002C)(NoDestructor)
	class AController*                            K2Node_CustomEvent_KillerController;               // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue_2;   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayStinger_ReturnValue;                  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey_2;               // 0x011C(0x001C)(NoDestructor, HasGetValueTypeHash)
	struct FHWAudioStingerPlayInfo                K2Node_MakeStruct_HWAudioStingerPlayInfo_1;        // 0x0138(0x002C)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayStinger_ReturnValue_1;                // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager");
static_assert(sizeof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager) == 0x000190, "Wrong size on BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, EntryPoint) == 0x000000, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CustomEvent_Team_Id_1) == 0x000020, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CustomEvent_Team_Id_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_AssetRequestKey) == 0x000024, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000040, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000048, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetGenericTeamId_ReturnValue) == 0x00006C, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_PlayMusicTrack_ReturnValue) == 0x000070, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_EqualEqual_FGenericTeamId_ReturnValue) == 0x000078, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_EqualEqual_FGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CustomEvent_Team_Id) == 0x000079, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CustomEvent_Team_Id' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetLocalPlayerController_ReturnValue_1) == 0x000080, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetGenericTeamId_ReturnValue_1) == 0x000098, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetGenericTeamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x000099, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_EqualEqual_FGenericTeamId_ReturnValue_1) == 0x00009A, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_EqualEqual_FGenericTeamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_AssetRequestKey_1) == 0x00009C, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_AssetRequestKey_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000B8, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_HWAudioStingerPlayInfo) == 0x0000BC, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_HWAudioStingerPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CustomEvent_KillerController) == 0x0000E8, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CustomEvent_KillerController' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetLocalPlayerController_ReturnValue_2) == 0x0000F8, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetLocalPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000100, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000108, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_PlayStinger_ReturnValue) == 0x000110, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_PlayStinger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_AssetRequestKey_2) == 0x00011C, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_AssetRequestKey_2' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_MakeStruct_HWAudioStingerPlayInfo_1) == 0x000138, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_MakeStruct_HWAudioStingerPlayInfo_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_BooleanAND_ReturnValue) == 0x000164, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000168, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_PlayStinger_ReturnValue_1) == 0x000170, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_PlayStinger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000178, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, CallFunc_IsValid_ReturnValue_1) == 0x000179, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x00017C, "Member 'BP_GameAudioManager_C_ExecuteUbergraph_BP_GameAudioManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Multicast_PlayClimaxMusic
// 0x0001 (0x0001 - 0x0000)
struct BP_GameAudioManager_C_Multicast_PlayClimaxMusic final
{
public:
	struct FGenericTeamId                         Team_Id;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Multicast_PlayClimaxMusic) == 0x000001, "Wrong alignment on BP_GameAudioManager_C_Multicast_PlayClimaxMusic");
static_assert(sizeof(BP_GameAudioManager_C_Multicast_PlayClimaxMusic) == 0x000001, "Wrong size on BP_GameAudioManager_C_Multicast_PlayClimaxMusic");
static_assert(offsetof(BP_GameAudioManager_C_Multicast_PlayClimaxMusic, Team_Id) == 0x000000, "Member 'BP_GameAudioManager_C_Multicast_PlayClimaxMusic::Team_Id' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Multicast_PlayerKillStinger
// 0x0008 (0x0008 - 0x0000)
struct BP_GameAudioManager_C_Multicast_PlayerKillStinger final
{
public:
	class AController*                            KillerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Multicast_PlayerKillStinger) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_Multicast_PlayerKillStinger");
static_assert(sizeof(BP_GameAudioManager_C_Multicast_PlayerKillStinger) == 0x000008, "Wrong size on BP_GameAudioManager_C_Multicast_PlayerKillStinger");
static_assert(offsetof(BP_GameAudioManager_C_Multicast_PlayerKillStinger, KillerController) == 0x000000, "Member 'BP_GameAudioManager_C_Multicast_PlayerKillStinger::KillerController' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Multicast_PlayTowerStinger
// 0x0001 (0x0001 - 0x0000)
struct BP_GameAudioManager_C_Multicast_PlayTowerStinger final
{
public:
	struct FGenericTeamId                         Team_Id;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Multicast_PlayTowerStinger) == 0x000001, "Wrong alignment on BP_GameAudioManager_C_Multicast_PlayTowerStinger");
static_assert(sizeof(BP_GameAudioManager_C_Multicast_PlayTowerStinger) == 0x000001, "Wrong size on BP_GameAudioManager_C_Multicast_PlayTowerStinger");
static_assert(offsetof(BP_GameAudioManager_C_Multicast_PlayTowerStinger, Team_Id) == 0x000000, "Member 'BP_GameAudioManager_C_Multicast_PlayTowerStinger::Team_Id' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnGamePhaseChanged
// 0x0020 (0x0020 - 0x0000)
struct BP_GameAudioManager_C_OnGamePhaseChanged final
{
public:
	struct FGameplayTag                           NewPhase;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocalPlayerTeamPlacementOrder_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnGamePhaseChanged) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnGamePhaseChanged");
static_assert(sizeof(BP_GameAudioManager_C_OnGamePhaseChanged) == 0x000020, "Wrong size on BP_GameAudioManager_C_OnGamePhaseChanged");
static_assert(offsetof(BP_GameAudioManager_C_OnGamePhaseChanged, NewPhase) == 0x000000, "Member 'BP_GameAudioManager_C_OnGamePhaseChanged::NewPhase' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnGamePhaseChanged, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000008, "Member 'BP_GameAudioManager_C_OnGamePhaseChanged::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnGamePhaseChanged, CallFunc_GetHWGameState_ReturnValue) == 0x000010, "Member 'BP_GameAudioManager_C_OnGamePhaseChanged::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnGamePhaseChanged, CallFunc_GetLocalPlayerTeamPlacementOrder_ReturnValue) == 0x000018, "Member 'BP_GameAudioManager_C_OnGamePhaseChanged::CallFunc_GetLocalPlayerTeamPlacementOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnGamePhaseChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameAudioManager_C_OnGamePhaseChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnLocalCharacterDied
// 0x0028 (0x0028 - 0x0000)
struct BP_GameAudioManager_C_OnLocalCharacterDied final
{
public:
	class AHWCharacterAbilitySystemActor*         CharacterAbilitySystemActor;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         RespawnTimerDuration;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnLocalCharacterDied) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnLocalCharacterDied");
static_assert(sizeof(BP_GameAudioManager_C_OnLocalCharacterDied) == 0x000028, "Wrong size on BP_GameAudioManager_C_OnLocalCharacterDied");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalCharacterDied, CharacterAbilitySystemActor) == 0x000000, "Member 'BP_GameAudioManager_C_OnLocalCharacterDied::CharacterAbilitySystemActor' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalCharacterDied, RespawnTimerDuration) == 0x000008, "Member 'BP_GameAudioManager_C_OnLocalCharacterDied::RespawnTimerDuration' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalCharacterDied, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_GameAudioManager_C_OnLocalCharacterDied::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalCharacterDied, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_OnLocalCharacterDied::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnLocalTeamLoss
// 0x0058 (0x0058 - 0x0000)
struct BP_GameAudioManager_C_OnLocalTeamLoss final
{
public:
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0000(0x001C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0028(0x0024)(NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnLocalTeamLoss) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnLocalTeamLoss");
static_assert(sizeof(BP_GameAudioManager_C_OnLocalTeamLoss) == 0x000058, "Wrong size on BP_GameAudioManager_C_OnLocalTeamLoss");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamLoss, K2Node_MakeStruct_AssetRequestKey) == 0x000000, "Member 'BP_GameAudioManager_C_OnLocalTeamLoss::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamLoss, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_OnLocalTeamLoss::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamLoss, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000028, "Member 'BP_GameAudioManager_C_OnLocalTeamLoss::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamLoss, CallFunc_PlayMusicTrack_ReturnValue) == 0x000050, "Member 'BP_GameAudioManager_C_OnLocalTeamLoss::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnLocalTeamWon
// 0x0058 (0x0058 - 0x0000)
struct BP_GameAudioManager_C_OnLocalTeamWon final
{
public:
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0000(0x001C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0028(0x0024)(NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnLocalTeamWon) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnLocalTeamWon");
static_assert(sizeof(BP_GameAudioManager_C_OnLocalTeamWon) == 0x000058, "Wrong size on BP_GameAudioManager_C_OnLocalTeamWon");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamWon, K2Node_MakeStruct_AssetRequestKey) == 0x000000, "Member 'BP_GameAudioManager_C_OnLocalTeamWon::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamWon, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_OnLocalTeamWon::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamWon, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000028, "Member 'BP_GameAudioManager_C_OnLocalTeamWon::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnLocalTeamWon, CallFunc_PlayMusicTrack_ReturnValue) == 0x000050, "Member 'BP_GameAudioManager_C_OnLocalTeamWon::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnPlayerDied
// 0x0088 (0x0088 - 0x0000)
struct BP_GameAudioManager_C_OnPlayerDied final
{
public:
	struct FDamageEventData                       KillEventData;                                     // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnPlayerDied) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnPlayerDied");
static_assert(sizeof(BP_GameAudioManager_C_OnPlayerDied) == 0x000088, "Wrong size on BP_GameAudioManager_C_OnPlayerDied");
static_assert(offsetof(BP_GameAudioManager_C_OnPlayerDied, KillEventData) == 0x000000, "Member 'BP_GameAudioManager_C_OnPlayerDied::KillEventData' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnPlayerDied, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000070, "Member 'BP_GameAudioManager_C_OnPlayerDied::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnPlayerDied, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_GameAudioManager_C_OnPlayerDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnPlayerDied, CallFunc_GetController_ReturnValue) == 0x000080, "Member 'BP_GameAudioManager_C_OnPlayerDied::CallFunc_GetController_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.OnStructureDestroyed
// 0x0038 (0x0038 - 0x0000)
struct BP_GameAudioManager_C_OnStructureDestroyed final
{
public:
	class AHWBotFactory*                          BotFactory;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x0010(0x0020)()
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0030(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_OnStructureDestroyed) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_OnStructureDestroyed");
static_assert(sizeof(BP_GameAudioManager_C_OnStructureDestroyed) == 0x000038, "Wrong size on BP_GameAudioManager_C_OnStructureDestroyed");
static_assert(offsetof(BP_GameAudioManager_C_OnStructureDestroyed, BotFactory) == 0x000000, "Member 'BP_GameAudioManager_C_OnStructureDestroyed::BotFactory' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnStructureDestroyed, Causer) == 0x000008, "Member 'BP_GameAudioManager_C_OnStructureDestroyed::Causer' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnStructureDestroyed, CallFunc_GetAssetTags_ReturnValue) == 0x000010, "Member 'BP_GameAudioManager_C_OnStructureDestroyed::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnStructureDestroyed, CallFunc_GetGenericTeamId_ReturnValue) == 0x000030, "Member 'BP_GameAudioManager_C_OnStructureDestroyed::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_OnStructureDestroyed, CallFunc_HasTag_ReturnValue) == 0x000031, "Member 'BP_GameAudioManager_C_OnStructureDestroyed::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Play Death Stinger
// 0x0070 (0x0070 - 0x0000)
struct BP_GameAudioManager_C_Play_Death_Stinger final
{
public:
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0018(0x001C)(NoDestructor, HasGetValueTypeHash)
	struct FHWAudioStingerPlayInfo                K2Node_MakeStruct_HWAudioStingerPlayInfo;          // 0x0034(0x002C)(NoDestructor)
	class UAudioComponent*                        CallFunc_PlayStinger_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Play_Death_Stinger) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_Play_Death_Stinger");
static_assert(sizeof(BP_GameAudioManager_C_Play_Death_Stinger) == 0x000070, "Wrong size on BP_GameAudioManager_C_Play_Death_Stinger");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, K2Node_MakeStruct_AssetRequestKey) == 0x000018, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, K2Node_MakeStruct_HWAudioStingerPlayInfo) == 0x000034, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::K2Node_MakeStruct_HWAudioStingerPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, CallFunc_PlayStinger_ReturnValue) == 0x000060, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::CallFunc_PlayStinger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Death_Stinger, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_GameAudioManager_C_Play_Death_Stinger::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Play Match Loop Music
// 0x0058 (0x0058 - 0x0000)
struct BP_GameAudioManager_C_Play_Match_Loop_Music final
{
public:
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0000(0x001C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0028(0x0024)(NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Play_Match_Loop_Music) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_Play_Match_Loop_Music");
static_assert(sizeof(BP_GameAudioManager_C_Play_Match_Loop_Music) == 0x000058, "Wrong size on BP_GameAudioManager_C_Play_Match_Loop_Music");
static_assert(offsetof(BP_GameAudioManager_C_Play_Match_Loop_Music, K2Node_MakeStruct_AssetRequestKey) == 0x000000, "Member 'BP_GameAudioManager_C_Play_Match_Loop_Music::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Match_Loop_Music, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_GameAudioManager_C_Play_Match_Loop_Music::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Match_Loop_Music, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000028, "Member 'BP_GameAudioManager_C_Play_Match_Loop_Music::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Play_Match_Loop_Music, CallFunc_PlayMusicTrack_ReturnValue) == 0x000050, "Member 'BP_GameAudioManager_C_Play_Match_Loop_Music::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.PlayMatchIntroMusic
// 0x0070 (0x0070 - 0x0000)
struct BP_GameAudioManager_C_PlayMatchIntroMusic final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0004(0x001C)(NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0020(0x0024)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_PlayMatchIntroMusic) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_PlayMatchIntroMusic");
static_assert(sizeof(BP_GameAudioManager_C_PlayMatchIntroMusic) == 0x000070, "Wrong size on BP_GameAudioManager_C_PlayMatchIntroMusic");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, K2Node_MakeStruct_AssetRequestKey) == 0x000004, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000020, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000058, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, CallFunc_PlayMusicTrack_ReturnValue) == 0x000060, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayMatchIntroMusic, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_GameAudioManager_C_PlayMatchIntroMusic::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.PlayRecallStinger
// 0x0070 (0x0070 - 0x0000)
struct BP_GameAudioManager_C_PlayRecallStinger final
{
public:
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0018(0x001C)(NoDestructor, HasGetValueTypeHash)
	struct FHWAudioStingerPlayInfo                K2Node_MakeStruct_HWAudioStingerPlayInfo;          // 0x0034(0x002C)(NoDestructor)
	class UAudioComponent*                        CallFunc_PlayStinger_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_PlayRecallStinger) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_PlayRecallStinger");
static_assert(sizeof(BP_GameAudioManager_C_PlayRecallStinger) == 0x000070, "Wrong size on BP_GameAudioManager_C_PlayRecallStinger");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_GameAudioManager_C_PlayRecallStinger::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameAudioManager_C_PlayRecallStinger::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, K2Node_MakeStruct_AssetRequestKey) == 0x000018, "Member 'BP_GameAudioManager_C_PlayRecallStinger::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, K2Node_MakeStruct_HWAudioStingerPlayInfo) == 0x000034, "Member 'BP_GameAudioManager_C_PlayRecallStinger::K2Node_MakeStruct_HWAudioStingerPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, CallFunc_PlayStinger_ReturnValue) == 0x000060, "Member 'BP_GameAudioManager_C_PlayRecallStinger::CallFunc_PlayStinger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_PlayRecallStinger, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_GameAudioManager_C_PlayRecallStinger::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.ReceiveEndPlay
// 0x0058 (0x0058 - 0x0000)
struct BP_GameAudioManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0004(0x001C)(NoDestructor, HasGetValueTypeHash)
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0020(0x0024)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_ReceiveEndPlay) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_GameAudioManager_C_ReceiveEndPlay) == 0x000058, "Wrong size on BP_GameAudioManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_GameAudioManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GameAudioManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ReceiveEndPlay, K2Node_MakeStruct_AssetRequestKey) == 0x000004, "Member 'BP_GameAudioManager_C_ReceiveEndPlay::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ReceiveEndPlay, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000020, "Member 'BP_GameAudioManager_C_ReceiveEndPlay::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ReceiveEndPlay, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'BP_GameAudioManager_C_ReceiveEndPlay::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_ReceiveEndPlay, CallFunc_PlayMusicTrack_ReturnValue) == 0x000050, "Member 'BP_GameAudioManager_C_ReceiveEndPlay::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

// Function BP_GameAudioManager.BP_GameAudioManager_C.Setup Listeners
// 0x0048 (0x0048 - 0x0000)
struct BP_GameAudioManager_C_Setup_Listeners final
{
public:
	TDelegate<void(const struct FDamageEventData& KillEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NewPhase)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWGameMode*                            K2Node_DynamicCast_AsHWGame_Mode;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentGamePhaseTag_ReturnValue;       // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAudioManager_C_Setup_Listeners) == 0x000008, "Wrong alignment on BP_GameAudioManager_C_Setup_Listeners");
static_assert(sizeof(BP_GameAudioManager_C_Setup_Listeners) == 0x000048, "Wrong size on BP_GameAudioManager_C_Setup_Listeners");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_GameAudioManager_C_Setup_Listeners::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_GameAudioManager_C_Setup_Listeners::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_GameAudioManager_C_Setup_Listeners::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, K2Node_DynamicCast_AsHWGame_Mode) == 0x000028, "Member 'BP_GameAudioManager_C_Setup_Listeners::K2Node_DynamicCast_AsHWGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GameAudioManager_C_Setup_Listeners::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, CallFunc_GetHWGameState_ReturnValue) == 0x000038, "Member 'BP_GameAudioManager_C_Setup_Listeners::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAudioManager_C_Setup_Listeners, CallFunc_GetCurrentGamePhaseTag_ReturnValue) == 0x000040, "Member 'BP_GameAudioManager_C_Setup_Listeners::CallFunc_GetCurrentGamePhaseTag_ReturnValue' has a wrong offset!");

}

