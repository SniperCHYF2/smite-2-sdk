#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_Checkpoint

#include "Basic.hpp"

#include "BP_NPE_Checkpoint_classes.hpp"
#include "BP_NPE_Checkpoint_parameters.hpp"


namespace SDK
{

// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.DisableCheckpoint
// (BlueprintCallable, BlueprintEvent)

void ABP_NPE_Checkpoint_C::DisableCheckpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "DisableCheckpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.EnableCheckpoint
// (BlueprintCallable, BlueprintEvent)

void ABP_NPE_Checkpoint_C::EnableCheckpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "EnableCheckpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.ExecuteUbergraph_BP_NPE_Checkpoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::ExecuteUbergraph_BP_NPE_Checkpoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "ExecuteUbergraph_BP_NPE_Checkpoint");

	Params::BP_NPE_Checkpoint_C_ExecuteUbergraph_BP_NPE_Checkpoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetActiveNPEStage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    ActiveStageTag                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::GetActiveNPEStage(struct FGameplayTag* ActiveStageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetActiveNPEStage");

	Params::BP_NPE_Checkpoint_C_GetActiveNPEStage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveStageTag != nullptr)
		*ActiveStageTag = std::move(Parms.ActiveStageTag);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetAssociatedRoles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<ECharacterRole>*                 Roles                                                  (Parm, OutParm)

void ABP_NPE_Checkpoint_C::GetAssociatedRoles(TArray<ECharacterRole>* Roles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetAssociatedRoles");

	Params::BP_NPE_Checkpoint_C_GetAssociatedRoles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roles != nullptr)
		*Roles = std::move(Parms.Roles);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetNPEAIDirectives
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer*           AIDirectives                                           (Parm, OutParm)

void ABP_NPE_Checkpoint_C::GetNPEAIDirectives(struct FGameplayTagContainer* AIDirectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetNPEAIDirectives");

	Params::BP_NPE_Checkpoint_C_GetNPEAIDirectives Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AIDirectives != nullptr)
		*AIDirectives = std::move(Parms.AIDirectives);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetNPEGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NPE_Guide_C**                 GuideActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::GetNPEGuide(class ABP_NPE_Guide_C** GuideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetNPEGuide");

	Params::BP_NPE_Checkpoint_C_GetNPEGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GuideActor != nullptr)
		*GuideActor = Parms.GuideActor;
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetNPEStages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_NPE_Stage_C*>*         Stages                                                 (Parm, OutParm)

void ABP_NPE_Checkpoint_C::GetNPEStages(TArray<class ABP_NPE_Stage_C*>* Stages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetNPEStages");

	Params::BP_NPE_Checkpoint_C_GetNPEStages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stages != nullptr)
		*Stages = std::move(Parms.Stages);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.GetObjectiveTimeRemaining
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 TimeRemaining                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::GetObjectiveTimeRemaining(double* TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "GetObjectiveTimeRemaining");

	Params::BP_NPE_Checkpoint_C_GetObjectiveTimeRemaining Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TimeRemaining != nullptr)
		*TimeRemaining = Parms.TimeRemaining;
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.NPEGuideStageActivation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPE_Checkpoint_C::NPEGuideStageActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "NPEGuideStageActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.SetActiveNPEStage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              ActiveStage                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::SetActiveNPEStage(const struct FGameplayTag& ActiveStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "SetActiveNPEStage");

	Params::BP_NPE_Checkpoint_C_SetActiveNPEStage Parms{};

	Parms.ActiveStage = std::move(ActiveStage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPE_Checkpoint.BP_NPE_Checkpoint_C.SetNPEAIDirectives
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewAIDirective                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    ClearPreviousDirectives                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPE_Checkpoint_C::SetNPEAIDirectives(const struct FGameplayTag& NewAIDirective, bool ClearPreviousDirectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPE_Checkpoint_C", "SetNPEAIDirectives");

	Params::BP_NPE_Checkpoint_C_SetNPEAIDirectives Parms{};

	Parms.NewAIDirective = std::move(NewAIDirective);
	Parms.ClearPreviousDirectives = ClearPreviousDirectives;

	UObject::ProcessEvent(Func, &Parms);
}

}

