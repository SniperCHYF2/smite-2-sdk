#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ArenaTicketTracker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C
// 0x0038 (0x0640 - 0x0608)
class UWBP_G_V2_ArenaTicketTracker_C final : public UHWTicketTrackerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TicketAnim;                                        // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWImage*                               Main_BGTeamColor;                                  // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWProgressBar*                         TicketBar;                                         // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           TicketText;                                        // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AHWGameState_Arena*                     GameState;                                         // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TicketTimer;                                       // 0x0638(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DisplayTicketCount(int32 TicketCount);
	void ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker(int32 EntryPoint);
	void GameStateSet(class AGameStateBase* GameState_0);
	void GetGameState(bool* Return);
	struct FLinearColor GetTicketBarColor();
	void InitializeWidget();
	void RefreshTicketUI(int32 Count);
	void SFXPlayTicketReduction(int32 Ticket_Count, int32 Max_Ticket_Count);
	void SuddenDeathChanged(EHWArenaSuddenDeathState CurrentSuddenDeathState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_ArenaTicketTracker_C">();
	}
	static class UWBP_G_V2_ArenaTicketTracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_ArenaTicketTracker_C>();
	}
};
static_assert(alignof(UWBP_G_V2_ArenaTicketTracker_C) == 0x000008, "Wrong alignment on UWBP_G_V2_ArenaTicketTracker_C");
static_assert(sizeof(UWBP_G_V2_ArenaTicketTracker_C) == 0x000640, "Wrong size on UWBP_G_V2_ArenaTicketTracker_C");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, UberGraphFrame) == 0x000608, "Member 'UWBP_G_V2_ArenaTicketTracker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, TicketAnim) == 0x000610, "Member 'UWBP_G_V2_ArenaTicketTracker_C::TicketAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, Main_BGTeamColor) == 0x000618, "Member 'UWBP_G_V2_ArenaTicketTracker_C::Main_BGTeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, TicketBar) == 0x000620, "Member 'UWBP_G_V2_ArenaTicketTracker_C::TicketBar' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, TicketText) == 0x000628, "Member 'UWBP_G_V2_ArenaTicketTracker_C::TicketText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, GameState) == 0x000630, "Member 'UWBP_G_V2_ArenaTicketTracker_C::GameState' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ArenaTicketTracker_C, TicketTimer) == 0x000638, "Member 'UWBP_G_V2_ArenaTicketTracker_C::TicketTimer' has a wrong offset!");

}

