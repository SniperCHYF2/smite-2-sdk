#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_COM_ShiftingBuff

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.Attempt to Apply Shifting Buff
// 0x00B0 (0x00B0 - 0x0000)
struct GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff final
{
public:
	float                                         LockOutTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     AttributeToBuff;                                   // 0x0008(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     CallFunc_ShouldApplyShiftingBuff_AttributeToBuff;  // 0x0060(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff) == 0x000008, "Wrong alignment on GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff");
static_assert(sizeof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff) == 0x0000B0, "Wrong size on GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, LockOutTime) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::LockOutTime' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, AttributeToBuff) == 0x000008, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::AttributeToBuff' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, Temp_bool_Variable) == 0x000040, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x000041, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_ShouldApplyShiftingBuff_AttributeToBuff) == 0x000060, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_ShouldApplyShiftingBuff_AttributeToBuff' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_NotEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x000099, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_NotEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, K2Node_Select_Default) == 0x0000A0, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000A8, "Member 'GA_COM_ShiftingBuff_C_Attempt_to_Apply_Shifting_Buff::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.ExecuteUbergraph_GA_COM_ShiftingBuff
// 0x0068 (0x0068 - 0x0000)
struct GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                K2Node_CustomEvent_OwningAbilitySystem_1;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitAttributeChange*       CallFunc_WaitForAttributeChange_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                K2Node_CustomEvent_OwningAbilitySystem;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAbilitySystemComponent* OwningAbilitySystem)> K2Node_CreateDelegate_OutputDelegate; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitAttributeChange*       CallFunc_WaitForAttributeChange_ReturnValue_1;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAbilitySystemComponent* OwningAbilitySystem)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff) == 0x000008, "Wrong alignment on GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff");
static_assert(sizeof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff) == 0x000068, "Wrong size on GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, EntryPoint) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, K2Node_CustomEvent_OwningAbilitySystem_1) == 0x000008, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::K2Node_CustomEvent_OwningAbilitySystem_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, Temp_object_Variable) == 0x000010, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_WaitForAttributeChange_ReturnValue) == 0x000018, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_WaitForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, K2Node_CustomEvent_OwningAbilitySystem) == 0x000028, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::K2Node_CustomEvent_OwningAbilitySystem' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, Temp_object_Variable_1) == 0x000040, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_WaitForAttributeChange_ReturnValue_1) == 0x000048, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_WaitForAttributeChange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, CallFunc_IsValid_ReturnValue_3) == 0x000052, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'GA_COM_ShiftingBuff_C_ExecuteUbergraph_GA_COM_ShiftingBuff::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_COM_ShiftingBuff_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_COM_ShiftingBuff_C_K2_OnEndAbility");
static_assert(sizeof(GA_COM_ShiftingBuff_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_COM_ShiftingBuff_C_K2_OnEndAbility");
static_assert(offsetof(GA_COM_ShiftingBuff_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.OnChange_1F016181418FAB126BDA818B5416BAE2
// 0x0008 (0x0008 - 0x0000)
struct GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2 final
{
public:
	class UAbilitySystemComponent*                OwningAbilitySystem;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2) == 0x000008, "Wrong alignment on GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2");
static_assert(sizeof(GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2) == 0x000008, "Wrong size on GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2");
static_assert(offsetof(GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2, OwningAbilitySystem) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_OnChange_1F016181418FAB126BDA818B5416BAE2::OwningAbilitySystem' has a wrong offset!");

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.OnChange_B17BAD8648371818AEA3E8BC293ACC2D
// 0x0008 (0x0008 - 0x0000)
struct GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D final
{
public:
	class UAbilitySystemComponent*                OwningAbilitySystem;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D) == 0x000008, "Wrong alignment on GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D");
static_assert(sizeof(GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D) == 0x000008, "Wrong size on GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D");
static_assert(offsetof(GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D, OwningAbilitySystem) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_OnChange_B17BAD8648371818AEA3E8BC293ACC2D::OwningAbilitySystem' has a wrong offset!");

// Function GA_COM_ShiftingBuff.GA_COM_ShiftingBuff_C.ShouldApplyShiftingBuff
// 0x0218 (0x0218 - 0x0000)
struct GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff final
{
public:
	struct FGameplayAttribute                     AttributeToBuff;                                   // 0x0000(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	struct FGameplayAttribute                     DesiredAttributeToBuff;                            // 0x0038(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Magical_Item_Power;                                // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicalItemPower;                                 // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Avatar;                                            // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0088(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable_1;                            // 0x00C0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable_2;                            // 0x0100(0x0038)(HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_1; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_Select_Default;                             // 0x0148(0x0038)(HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_Select_Default_1;                           // 0x0180(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_2; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Magical_Item_Power_ImplicitCast; // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_PhysicalItemPower_ImplicitCast; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff) == 0x000008, "Wrong alignment on GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff");
static_assert(sizeof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff) == 0x000218, "Wrong size on GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, AttributeToBuff) == 0x000000, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::AttributeToBuff' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, DesiredAttributeToBuff) == 0x000038, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::DesiredAttributeToBuff' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Magical_Item_Power) == 0x000070, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Magical_Item_Power' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, PhysicalItemPower) == 0x000074, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::PhysicalItemPower' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Avatar) == 0x000078, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Avatar' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Temp_bool_Variable) == 0x000080, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Temp_struct_Variable) == 0x000088, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Temp_struct_Variable_1) == 0x0000C0, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x0000F8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Temp_struct_Variable_2) == 0x000100, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_SelectFloat_ReturnValue) == 0x000138, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_1) == 0x000140, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, Temp_bool_Variable_1) == 0x000141, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000142, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, K2Node_Select_Default) == 0x000148, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, K2Node_Select_Default_1) == 0x000180, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_2) == 0x0001B8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x0001B9, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GetFloatAttribute_ReturnValue) == 0x0001BC, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C0, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x0001D0, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x0001D4, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001D8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001E0, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0001E8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0001F0, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001F8, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, K2Node_VariableSet_Magical_Item_Power_ImplicitCast) == 0x000200, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::K2Node_VariableSet_Magical_Item_Power_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000208, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff, K2Node_VariableSet_PhysicalItemPower_ImplicitCast) == 0x000210, "Member 'GA_COM_ShiftingBuff_C_ShouldApplyShiftingBuff::K2Node_VariableSet_PhysicalItemPower_ImplicitCast' has a wrong offset!");

}

