#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetails_Label

#include "Basic.hpp"

#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_C_GodDetails_Label.WBP_C_GodDetails_Label_C
// 0x0060 (0x0658 - 0x05F8)
class UWBP_C_GodDetails_Label_C final : public UHWWidget
{
public:
	class UHWImage*                               Icon;                                              // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             Main_SizeBox;                                      // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           TextField;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   LabelText;                                         // 0x0610(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	TSoftObjectPtr<class UTexture2D>              LabelIcon;                                         // 0x0628(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        LabelWidth;                                        // 0x0650(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void SetIcon(TSoftObjectPtr<class UTexture2D> Icon_0);
	void SetText(const class FText& NewText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_C_GodDetails_Label_C">();
	}
	static class UWBP_C_GodDetails_Label_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_C_GodDetails_Label_C>();
	}
};
static_assert(alignof(UWBP_C_GodDetails_Label_C) == 0x000008, "Wrong alignment on UWBP_C_GodDetails_Label_C");
static_assert(sizeof(UWBP_C_GodDetails_Label_C) == 0x000658, "Wrong size on UWBP_C_GodDetails_Label_C");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, Icon) == 0x0005F8, "Member 'UWBP_C_GodDetails_Label_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, Main_SizeBox) == 0x000600, "Member 'UWBP_C_GodDetails_Label_C::Main_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, TextField) == 0x000608, "Member 'UWBP_C_GodDetails_Label_C::TextField' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, LabelText) == 0x000610, "Member 'UWBP_C_GodDetails_Label_C::LabelText' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, LabelIcon) == 0x000628, "Member 'UWBP_C_GodDetails_Label_C::LabelIcon' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetails_Label_C, LabelWidth) == 0x000650, "Member 'UWBP_C_GodDetails_Label_C::LabelWidth' has a wrong offset!");

}

