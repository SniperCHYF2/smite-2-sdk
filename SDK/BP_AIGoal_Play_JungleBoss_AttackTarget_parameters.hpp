#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Play_JungleBoss_AttackTarget

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Play_JungleBoss_AttackTarget.BP_AIGoal_Play_JungleBoss_AttackTarget_C.CheckPreconditionsBP
// 0x0030 (0x0030 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBossBeingTanked_IsTanked;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP) == 0x000030, "Wrong size on BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP, CallFunc_IsBossBeingTanked_IsTanked) == 0x000029, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_CheckPreconditionsBP::CallFunc_IsBossBeingTanked_IsTanked' has a wrong offset!");

// Function BP_AIGoal_Play_JungleBoss_AttackTarget.BP_AIGoal_Play_JungleBoss_AttackTarget_C.ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget
// 0x0004 (0x0004 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget) == 0x000004, "Wrong alignment on BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget) == 0x000004, "Wrong size on BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget, EntryPoint) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_AttackTarget::EntryPoint' has a wrong offset!");

// Function BP_AIGoal_Play_JungleBoss_AttackTarget.BP_AIGoal_Play_JungleBoss_AttackTarget_C.IsBossBeingTanked
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked final
{
public:
	class AActor*                                 InPlayActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      InCharacter;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTanked;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      Boss;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked) == 0x000008, "Wrong alignment on BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked) == 0x000058, "Wrong size on BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, InPlayActor) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::InPlayActor' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, InCharacter) == 0x000008, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::InCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, IsTanked) == 0x000010, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::IsTanked' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, Boss) == 0x000018, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::Boss' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, K2Node_DynamicCast_AsHWBot_Factory) == 0x000028, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000048, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_Greater_IntInt_ReturnValue) == 0x000055, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_IsValid_ReturnValue_3) == 0x000056, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked, CallFunc_BooleanAND_ReturnValue_1) == 0x000057, "Member 'BP_AIGoal_Play_JungleBoss_AttackTarget_C_IsBossBeingTanked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

