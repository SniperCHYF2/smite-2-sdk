#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ItemStore_GodItemDisplayEntry

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_ItemStore_GodItemDisplayEntry.WBP_G_V2_ItemStore_GodItemDisplayEntry_C
// 0x0118 (0x0868 - 0x0750)
class UWBP_G_V2_ItemStore_GodItemDisplayEntry_C final : public UHWItemStoreInventoryEntry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWTextBlock*                           AmmoText;                                          // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               CooldownDarken;                                    // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             Frame;                                             // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FXStroke_Selected;                                 // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FXWisps_Selected;                                  // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWBorder*                              HitArea_Border;                                    // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWButton*                              HitArea_Gamepad;                                   // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      HitAreaWidgetSwitcher;                             // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               ItemIcon;                                          // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             Main_SizeBox;                                      // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               MoveOverlay;                                       // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             Selected_Arrow;                                    // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             Stack_Overlay;                                     // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           StackText;                                         // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Stroke_Hover;                                      // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Stroke_Selected;                                   // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           TierText;                                          // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             TooltipRef;                                        // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             UpgradeIndicator;                                  // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USoundBase*                             SFXItemHover;                                      // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXItemClick;                                      // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ItemIconMaterial;                                  // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CurrentTextureIcon;                                // 0x0810(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector2D                              DragOffset;                                        // 0x0838(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                DraggedWidget;                                     // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryDragStart;                             // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryDragEnd;                               // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryHover;                                 // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AmmoEquipIconOverride(const TSoftObjectPtr<class UTexture2D>& OverrideTexture);
	void BndEvt__WBP_Dev_GodIItemDisplayEntry_Smite2_HitArea_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_Dev_GodIItemDisplayEntry_Smite2_HitArea_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_4_OnEffectsUntracked__DelegateSignature();
	void BndEvt__WBP_G_V2_ItemStore_GodItemDisplayEntry_HitArea_Gamepad_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature();
	void DisplayAbilityPhase_Aiming(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Fired(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Inactive(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_PreFire(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAmmo(const int32 AmmoCount, const bool bHasEnough, const int32 MaxCount);
	void DisplayCanEquipmentItemBeUpgraded(bool bCanBeUpgraded);
	void DisplayEquipment(const class UHWEquipmentItem* EquipmentInfo);
	void DisplayInputTag(const struct FGameplayTag& Tag);
	void DisplayIsEquipmentItemComplete(bool bIsComplete);
	void DisplayStackCount(const int32 StackCount, const int32 MaxStackCount);
	void ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry(int32 EntryPoint);
	void HandleCompleteSwapAction();
	void HandleInitializeSwapAction();
	void HandleMouseClick();
	void HandlePlayerInputTypeChanged(ERH_INPUT_STATE NewState);
	void InitializeWidget();
	void OnClicked();
	void OnHover();
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnUnhover();
	void PlayPhaseAnimation(EHWUIAbilityFlowPhase PreviousPhase, class UWidget* PhaseWidget, class UWidgetAnimation* PhaseAnim, bool bLoopAnimation);
	void PreConstruct(bool IsDesignTime);
	void SetDisplayOrientation(EHWOrientation InOrientation);
	void SFXPlayInventoryDragEnd();
	void SFXPlayInventoryDragStart();
	void StopPhaseAnimation(EHWUIAbilityFlowPhase PhaseAnimation);
	void UninitializeWidget();
	void Update_Grayscale();
	void Update_Item_Shop_Layout(bool IsSplit);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_ItemStore_GodItemDisplayEntry_C">();
	}
	static class UWBP_G_V2_ItemStore_GodItemDisplayEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_ItemStore_GodItemDisplayEntry_C>();
	}
};
static_assert(alignof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C) == 0x000008, "Wrong alignment on UWBP_G_V2_ItemStore_GodItemDisplayEntry_C");
static_assert(sizeof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C) == 0x000868, "Wrong size on UWBP_G_V2_ItemStore_GodItemDisplayEntry_C");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, UberGraphFrame) == 0x000750, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, HoverAnim) == 0x000758, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, AmmoText) == 0x000760, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::AmmoText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, CooldownDarken) == 0x000768, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::CooldownDarken' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Frame) == 0x000770, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Frame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, FXStroke_Selected) == 0x000778, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::FXStroke_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, FXWisps_Selected) == 0x000780, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::FXWisps_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, HitArea_Border) == 0x000788, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::HitArea_Border' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, HitArea_Gamepad) == 0x000790, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::HitArea_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, HitAreaWidgetSwitcher) == 0x000798, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::HitAreaWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, ItemIcon) == 0x0007A0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Main_SizeBox) == 0x0007A8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Main_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, MoveOverlay) == 0x0007B0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::MoveOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Selected_Arrow) == 0x0007B8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Selected_Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Stack_Overlay) == 0x0007C0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Stack_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, StackText) == 0x0007C8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::StackText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Stroke_Hover) == 0x0007D0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Stroke_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, Stroke_Selected) == 0x0007D8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::Stroke_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, TierText) == 0x0007E0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::TierText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, TooltipRef) == 0x0007E8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::TooltipRef' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, UpgradeIndicator) == 0x0007F0, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::UpgradeIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, SFXItemHover) == 0x0007F8, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::SFXItemHover' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, SFXItemClick) == 0x000800, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::SFXItemClick' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, ItemIconMaterial) == 0x000808, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::ItemIconMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, CurrentTextureIcon) == 0x000810, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::CurrentTextureIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, DragOffset) == 0x000838, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::DragOffset' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, DraggedWidget) == 0x000848, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::DraggedWidget' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, SFXInventoryDragStart) == 0x000850, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::SFXInventoryDragStart' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, SFXInventoryDragEnd) == 0x000858, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::SFXInventoryDragEnd' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ItemStore_GodItemDisplayEntry_C, SFXInventoryHover) == 0x000860, "Member 'UWBP_G_V2_ItemStore_GodItemDisplayEntry_C::SFXInventoryHover' has a wrong offset!");

}

