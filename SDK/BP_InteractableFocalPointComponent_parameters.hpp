#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableFocalPointComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_InteractableFocalPointComponent.BP_InteractableFocalPointComponent_C.ExecuteUbergraph_BP_InteractableFocalPointComponent
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bShow)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent) == 0x000008, "Wrong alignment on BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent");
static_assert(sizeof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent) == 0x000030, "Wrong size on BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, EntryPoint) == 0x000000, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_InteractableFocalPointComponent_C_ExecuteUbergraph_BP_InteractableFocalPointComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractableFocalPointComponent.BP_InteractableFocalPointComponent_C.OnInteractableUpdated
// 0x0020 (0x0020 - 0x0000)
struct BP_InteractableFocalPointComponent_C_OnInteractableUpdated final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInteractCompatibility_IsCompatible;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated) == 0x000008, "Wrong alignment on BP_InteractableFocalPointComponent_C_OnInteractableUpdated");
static_assert(sizeof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated) == 0x000020, "Wrong size on BP_InteractableFocalPointComponent_C_OnInteractableUpdated");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, bShow) == 0x000000, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::bShow' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_IsOverlappingActor_ReturnValue) == 0x000019, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_CheckInteractCompatibility_IsCompatible) == 0x00001B, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_CheckInteractCompatibility_IsCompatible' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_OnInteractableUpdated, CallFunc_BooleanAND_ReturnValue_2) == 0x00001F, "Member 'BP_InteractableFocalPointComponent_C_OnInteractableUpdated::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_InteractableFocalPointComponent.BP_InteractableFocalPointComponent_C.ShowOrHideFocalPointFX
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX) == 0x000001, "Wrong alignment on BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX");
static_assert(sizeof(BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX) == 0x000001, "Wrong size on BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX");
static_assert(offsetof(BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX, Show) == 0x000000, "Member 'BP_InteractableFocalPointComponent_C_ShowOrHideFocalPointFX::Show' has a wrong offset!");

}

