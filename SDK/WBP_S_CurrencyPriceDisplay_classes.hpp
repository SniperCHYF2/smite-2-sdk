#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_CurrencyPriceDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C
// 0x0068 (0x0698 - 0x0630)
class UWBP_S_CurrencyPriceDisplay_C final : public UHWCurrencyPriceDisplayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_S_CurrencyDisplay_C*               Currency1;                                         // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_CurrencyDisplay_C*               Currency2;                                         // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Divider1;                                          // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWHorizontalBox*                       SaleContainer;                                     // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_CurrencyDisplay_C*               SaleCurrency1;                                     // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_CurrencyDisplay_C*               SaleCurrency2;                                     // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           SaleDivider1;                                      // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SalePriceMulti;                                    // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             SalePriceSingle;                                   // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMargin                                TopDiscountPadding;                                // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPreviewSale;                                      // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_S_CurrencyPriceDisplay(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetPriceText(int32 Index_0);
	void UpdateSaleState(bool bIsOnSale, int32 NumCurrencies);

	TArray<class UHWCurrencyDisplayWidget*> GetCurrencyDisplaySaleWidgets() const;
	TArray<class UHWCurrencyDisplayWidget*> GetCurrencyDisplayWidgets() const;
	TArray<class UWidget*> GetDividerSaleWidgets() const;
	TArray<class UWidget*> GetDividerWidgets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_CurrencyPriceDisplay_C">();
	}
	static class UWBP_S_CurrencyPriceDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_CurrencyPriceDisplay_C>();
	}
};
static_assert(alignof(UWBP_S_CurrencyPriceDisplay_C) == 0x000008, "Wrong alignment on UWBP_S_CurrencyPriceDisplay_C");
static_assert(sizeof(UWBP_S_CurrencyPriceDisplay_C) == 0x000698, "Wrong size on UWBP_S_CurrencyPriceDisplay_C");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, UberGraphFrame) == 0x000630, "Member 'UWBP_S_CurrencyPriceDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, Currency1) == 0x000638, "Member 'UWBP_S_CurrencyPriceDisplay_C::Currency1' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, Currency2) == 0x000640, "Member 'UWBP_S_CurrencyPriceDisplay_C::Currency2' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, Divider1) == 0x000648, "Member 'UWBP_S_CurrencyPriceDisplay_C::Divider1' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SaleContainer) == 0x000650, "Member 'UWBP_S_CurrencyPriceDisplay_C::SaleContainer' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SaleCurrency1) == 0x000658, "Member 'UWBP_S_CurrencyPriceDisplay_C::SaleCurrency1' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SaleCurrency2) == 0x000660, "Member 'UWBP_S_CurrencyPriceDisplay_C::SaleCurrency2' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SaleDivider1) == 0x000668, "Member 'UWBP_S_CurrencyPriceDisplay_C::SaleDivider1' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SalePriceMulti) == 0x000670, "Member 'UWBP_S_CurrencyPriceDisplay_C::SalePriceMulti' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, SalePriceSingle) == 0x000678, "Member 'UWBP_S_CurrencyPriceDisplay_C::SalePriceSingle' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, TopDiscountPadding) == 0x000680, "Member 'UWBP_S_CurrencyPriceDisplay_C::TopDiscountPadding' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyPriceDisplay_C, bPreviewSale) == 0x000690, "Member 'UWBP_S_CurrencyPriceDisplay_C::bPreviewSale' has a wrong offset!");

}

