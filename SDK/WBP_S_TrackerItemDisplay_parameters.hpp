#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_TrackerItemDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleDisplayItemSet
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet final
{
public:
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0000(0x0018)()
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGodQuestEntry                         CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry; // 0x0028(0x00B0)()
	bool                                          CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText; // 0x00E0(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet) == 0x0000F8, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, CallFunc_GetItemName_ReturnValue) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, K2Node_DynamicCast_AsHWCollection_Item) == 0x000018, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry) == 0x000028, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue) == 0x0000D8, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet, CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText) == 0x0000E0, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleDisplayItemSet::CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleEntryButtonHovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered final
{
public:
	bool                                          CallFunc_GetIsSelected_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered) == 0x000010, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered, CallFunc_GetIsSelected_ReturnValue) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered::CallFunc_GetIsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonHovered::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleEntryButtonUnhovered
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered) == 0x000018, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_bool_Variable) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_GetIsSelected_ReturnValue) == 0x000003, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_GetIsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered, K2Node_Select_Default) == 0x000010, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleEntryButtonUnhovered::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetDisplayOwnershipIcons
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons final
{
public:
	bool                                          InDisplayOwnershipIcons;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons, InDisplayOwnershipIcons) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons::InDisplayOwnershipIcons' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsEquipped
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped final
{
public:
	bool                                          InIsEquipped;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped) == 0x000004, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped) == 0x000010, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped, InIsEquipped) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped::InIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped, Temp_int_Variable) == 0x000004, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped, Temp_int_Variable_1) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped, K2Node_Select_Default) == 0x00000C, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsInteractable
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable final
{
public:
	bool                                          InIsInteractable;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable) == 0x000005, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable, InIsInteractable) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable::InIsInteractable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsSelected
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected final
{
public:
	bool                                          InIsSelected;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected) == 0x000005, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected, InIsSelected) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected::InIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected, Temp_bool_Variable) == 0x000003, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetUseListView
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView final
{
public:
	bool                                          InUseListView;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView) == 0x000004, "Wrong alignment on WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView) == 0x000008, "Wrong size on WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView, InUseListView) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView::InUseListView' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.ExecuteUbergraph_WBP_S_TrackerItemDisplay
// 0x000C (0x000C - 0x0000)
struct WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsSelected;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsEquipped;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsInteractable;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInDisplayOwnershipIcons;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInUseListView;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay) == 0x000004, "Wrong alignment on WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay) == 0x00000C, "Wrong size on WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, EntryPoint) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, K2Node_Event_bInIsSelected) == 0x000004, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::K2Node_Event_bInIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, K2Node_Event_bInIsEquipped) == 0x000005, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::K2Node_Event_bInIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, K2Node_Event_bInIsInteractable) == 0x000006, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::K2Node_Event_bInIsInteractable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, K2Node_Event_bInDisplayOwnershipIcons) == 0x000007, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::K2Node_Event_bInDisplayOwnershipIcons' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay, K2Node_Event_bInUseListView) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay::K2Node_Event_bInUseListView' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatDistance
// 0x0408 (0x0408 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_FormatDistance final
{
public:
	int32                                         InTotalMeters;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters_2; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters_2; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters_2; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters_3; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters_3; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers_3; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters_3; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0100(0x0018)()
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters_4; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters_4; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers_4; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters_4; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0178(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0190(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01F8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x0248(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0270(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02C0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02E8(0x0018)()
	int32                                         CallFunc_ConvertDistanceToDistComponents_Gigameters_5; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Megameters_5; // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Kilometers_5; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDistanceToDistComponents_Meters_5; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x0310(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_6;             // 0x0328(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0340(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0390(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03F0(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_FormatDistance) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_FormatDistance");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_FormatDistance) == 0x000408, "Wrong size on WBP_S_TrackerItemDisplay_C_FormatDistance");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, InTotalMeters) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::InTotalMeters' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, Result) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters) == 0x000024, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers) == 0x000028, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters) == 0x00002C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters_1) == 0x000030, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters_1) == 0x000034, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers_1) == 0x000038, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters_1) == 0x00003C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000041, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters_2) == 0x000060, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters_2) == 0x000064, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers_2) == 0x000068, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters_2) == 0x00006C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000C0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters_3) == 0x0000F0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters_3) == 0x0000F4, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers_3) == 0x0000F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters_3) == 0x0000FC, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000100, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters_4) == 0x000118, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters_4) == 0x00011C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers_4) == 0x000120, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters_4) == 0x000124, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000178, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000190, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_4) == 0x000248, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeArray_Array_1) == 0x000260, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_4) == 0x000270, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Format_ReturnValue_1) == 0x0002C0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeArray_Array_2) == 0x0002D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Format_ReturnValue_2) == 0x0002E8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Gigameters_5) == 0x000300, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Gigameters_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Megameters_5) == 0x000304, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Megameters_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Kilometers_5) == 0x000308, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Kilometers_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_ConvertDistanceToDistComponents_Meters_5) == 0x00030C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_ConvertDistanceToDistComponents_Meters_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_5) == 0x000310, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Conv_IntToText_ReturnValue_6) == 0x000328, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Conv_IntToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_5) == 0x000340, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeStruct_FormatArgumentData_6) == 0x000390, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, K2Node_MakeArray_Array_3) == 0x0003E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDistance, CallFunc_Format_ReturnValue_3) == 0x0003F0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDistance::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatDuration
// 0x0558 (0x0558 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_FormatDuration final
{
public:
	int32                                         InTotalSeconds;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours;    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_1;  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_1;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_1;  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_1; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_1; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00E8(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_2;  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_2;   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_2;  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_2; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_2; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0118(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0168(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0180(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0198(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01E8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x0238(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0260(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02D8(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_3;  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_3;   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_3;  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_3; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_3; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x0308(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_4;  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_4;   // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_4;  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_4; // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_4; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0338(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_6;             // 0x0388(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_7;             // 0x03A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x03B8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0408(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_8;             // 0x0458(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0470(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0480(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x04D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x04E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x04F8(0x0018)()
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_5;  // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_5;   // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_5;  // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_5; // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_5; // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_6;  // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_6;   // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_6;  // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_6; // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_6; // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConvertDurationToTimeComponents_Years_7;  // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Days_7;   // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Hours_7;  // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Minutes_7; // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertDurationToTimeComponents_Seconds_7; // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_FormatDuration) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_FormatDuration");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_FormatDuration) == 0x000558, "Wrong size on WBP_S_TrackerItemDisplay_C_FormatDuration");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, InTotalSeconds) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::InTotalSeconds' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, Result) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years) == 0x000038, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days) == 0x00003C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours) == 0x000040, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes) == 0x000044, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds) == 0x000048, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_1) == 0x0000D0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_1) == 0x0000D4, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_1) == 0x0000D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_1) == 0x0000DC, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_1) == 0x0000E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000E8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_2) == 0x000100, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_2) == 0x000104, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_2) == 0x000108, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_2) == 0x00010C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_2) == 0x000110, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_1) == 0x000118, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000168, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000180, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_2) == 0x000198, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001E8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_4) == 0x000238, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeArray_Array_1) == 0x000250, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_4) == 0x000260, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeArray_Array_2) == 0x0002C8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Format_ReturnValue_2) == 0x0002D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_3) == 0x0002F0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_3) == 0x0002F4, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_3) == 0x0002F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_3) == 0x0002FC, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_3) == 0x000300, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_5) == 0x000308, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_4) == 0x000320, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_4) == 0x000324, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_4) == 0x000328, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_4) == 0x00032C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_4) == 0x000330, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_5) == 0x000338, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_6) == 0x000388, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_7) == 0x0003A0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_6) == 0x0003B8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_7) == 0x000408, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Conv_IntToText_ReturnValue_8) == 0x000458, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Conv_IntToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeArray_Array_3) == 0x000470, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeStruct_FormatArgumentData_8) == 0x000480, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Format_ReturnValue_3) == 0x0004D0, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, K2Node_MakeArray_Array_4) == 0x0004E8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Format_ReturnValue_4) == 0x0004F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_5) == 0x000510, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_5) == 0x000514, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_5) == 0x000518, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_5) == 0x00051C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_5) == 0x000520, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_5' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000524, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_6) == 0x000528, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_6) == 0x00052C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_6) == 0x000530, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_6) == 0x000534, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_6) == 0x000538, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_6' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00053C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Years_7) == 0x000540, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Years_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Days_7) == 0x000544, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Days_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Hours_7) == 0x000548, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Hours_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Minutes_7) == 0x00054C, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Minutes_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_ConvertDurationToTimeComponents_Seconds_7) == 0x000550, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_ConvertDurationToTimeComponents_Seconds_7' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatDuration, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000554, "Member 'WBP_S_TrackerItemDisplay_C_FormatDuration::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatQuantity
// 0x02F0 (0x02F0 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_FormatQuantity final
{
public:
	int32                                         InUnits;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	int32                                         OneMillion;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OneBillion;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Billions;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Millions;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Thousands;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Units;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Billions_1;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Millions_1;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Thousands_1;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Units_1;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	int32                                         CallFunc_ConvertQuantityToComponents_Billions_2;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Millions_2;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Thousands_2;  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Units_2;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00C8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0170(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_ConvertQuantityToComponents_Billions_3;   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Millions_3;   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Thousands_3;  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertQuantityToComponents_Units_3;      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01E0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x01F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0210(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x0260(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0278(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02D8(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_FormatQuantity) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_FormatQuantity");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_FormatQuantity) == 0x0002F0, "Wrong size on WBP_S_TrackerItemDisplay_C_FormatQuantity");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, InUnits) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::InUnits' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, Result) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, OneMillion) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::OneMillion' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, OneBillion) == 0x000024, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::OneBillion' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Billions) == 0x000028, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Billions' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Millions) == 0x00002C, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Millions' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Thousands) == 0x000030, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Thousands' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Units) == 0x000034, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Units' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Billions_1) == 0x000038, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Billions_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Millions_1) == 0x00003C, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Millions_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Thousands_1) == 0x000040, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Thousands_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Units_1) == 0x000044, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Units_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000049, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Billions_2) == 0x000068, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Billions_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Millions_2) == 0x00006C, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Millions_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Thousands_2) == 0x000070, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Thousands_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Units_2) == 0x000074, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Units_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000C8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Format_ReturnValue) == 0x000140, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000158, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeStruct_FormatArgumentData_2) == 0x000170, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Billions_3) == 0x0001D0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Billions_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Millions_3) == 0x0001D4, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Millions_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Thousands_3) == 0x0001D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Thousands_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_ConvertQuantityToComponents_Units_3) == 0x0001DC, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_ConvertQuantityToComponents_Units_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Format_ReturnValue_1) == 0x0001E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0001F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeStruct_FormatArgumentData_3) == 0x000210, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Conv_IntToText_ReturnValue_4) == 0x000260, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeStruct_FormatArgumentData_4) == 0x000278, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, K2Node_MakeArray_Array_2) == 0x0002C8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuantity, CallFunc_Format_ReturnValue_2) == 0x0002D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuantity::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatQuestProgressCountDisplayText
// 0x0150 (0x0150 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText final
{
public:
	struct FGodQuestEntry                         InQuestEntry;                                      // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bOverrideQuantity;                                 // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideQuantity;                                  // 0x00B4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutDisplayText;                                    // 0x00B8(0x0018)(Parm, OutParm)
	int32                                         QuestProgressCount;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWQuestTrackerAwardType                      CallFunc_GetTrackerAwardTypeFromQuestEntry_ReturnValue; // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetPlayerInfoContext_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCachedProgressCountFromQuestEntry_ReturnValue; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatSol_Result;                         // 0x00E8(0x0018)()
	int32                                         K2Node_Select_Default;                             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatQuantity_Result;                    // 0x0108(0x0018)()
	class FText                                   CallFunc_FormatDuration_Result;                    // 0x0120(0x0018)()
	class FText                                   CallFunc_FormatDistance_Result;                    // 0x0138(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText) == 0x000150, "Wrong size on WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, InQuestEntry) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::InQuestEntry' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, bOverrideQuantity) == 0x0000B0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::bOverrideQuantity' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, OverrideQuantity) == 0x0000B4, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::OverrideQuantity' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, OutDisplayText) == 0x0000B8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::OutDisplayText' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, QuestProgressCount) == 0x0000D0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::QuestProgressCount' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, Temp_bool_Variable) == 0x0000D4, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_GetTrackerAwardTypeFromQuestEntry_ReturnValue) == 0x0000D5, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_GetTrackerAwardTypeFromQuestEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, K2Node_SwitchEnum_CmpSuccess) == 0x0000D6, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_GetPlayerInfoContext_ReturnValue) == 0x0000D8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_GetPlayerInfoContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_GetCachedProgressCountFromQuestEntry_ReturnValue) == 0x0000E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_GetCachedProgressCountFromQuestEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_FormatSol_Result) == 0x0000E8, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_FormatSol_Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, K2Node_Select_Default) == 0x000100, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000104, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_FormatQuantity_Result) == 0x000108, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_FormatQuantity_Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_FormatDuration_Result) == 0x000120, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_FormatDuration_Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText, CallFunc_FormatDistance_Result) == 0x000138, "Member 'WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText::CallFunc_FormatDistance_Result' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatSol
// 0x0110 (0x0110 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_FormatSol final
{
public:
	int32                                         InTotalMeters;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	int32                                         DistancetoSun;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_FormatSol) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_FormatSol");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_FormatSol) == 0x000110, "Wrong size on WBP_S_TrackerItemDisplay_C_FormatSol");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, InTotalMeters) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::InTotalMeters' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, Result) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::Result' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, DistancetoSun) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::DistancetoSun' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, Distance) == 0x000024, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::Distance' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, Temp_text_Variable) == 0x000028, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, Temp_bool_Variable) == 0x000040, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000041, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Round64_ReturnValue) == 0x000058, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000060, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, K2Node_MakeArray_Array) == 0x0000D0, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_FormatSol, K2Node_Select_Default) == 0x0000F8, "Member 'WBP_S_TrackerItemDisplay_C_FormatSol::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetDisplayOwnershipIcons
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons final
{
public:
	bool                                          bInDisplayOwnershipIcons;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons, bInDisplayOwnershipIcons) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons::bInDisplayOwnershipIcons' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetIsEquipped final
{
public:
	bool                                          bInIsEquipped;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetIsEquipped) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetIsEquipped");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetIsEquipped) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_SetIsEquipped");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetIsEquipped, bInIsEquipped) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetIsEquipped::bInIsEquipped' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsInteractable
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetIsInteractable final
{
public:
	bool                                          bInIsInteractable;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetIsInteractable) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetIsInteractable");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetIsInteractable) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_SetIsInteractable");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetIsInteractable, bInIsInteractable) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetIsInteractable::bInIsInteractable' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetIsSelected final
{
public:
	bool                                          bInIsSelected;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetIsSelected) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetIsSelected");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetIsSelected) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_SetIsSelected");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetIsSelected, bInIsSelected) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetIsSelected::bInIsSelected' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetOverrideItemQuantity
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGodQuestEntry                         CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry; // 0x0018(0x00B0)()
	bool                                          CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText; // 0x00D0(0x0018)()
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity) == 0x0000E8, "Wrong size on WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, Quantity) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::Quantity' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, K2Node_DynamicCast_AsHWCollection_Item) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry) == 0x000018, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::CallFunc_GetGodQuestEntryByCollectionItem_OutQuestEntry' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue) == 0x0000C8, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::CallFunc_GetGodQuestEntryByCollectionItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity, CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText) == 0x0000D0, "Member 'WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity::CallFunc_FormatQuestProgressCountDisplayText_OutDisplayText' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetUseListView
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_SetUseListView final
{
public:
	bool                                          bInUseListView;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_SetUseListView) == 0x000001, "Wrong alignment on WBP_S_TrackerItemDisplay_C_SetUseListView");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_SetUseListView) == 0x000001, "Wrong size on WBP_S_TrackerItemDisplay_C_SetUseListView");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_SetUseListView, bInUseListView) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_SetUseListView::bInUseListView' has a wrong offset!");

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.UpdateOwnershipIcons
// 0x0028 (0x0028 - 0x0000)
struct WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemStatus                       CallFunc_GetCollectionItemStatus_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons) == 0x000008, "Wrong alignment on WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons");
static_assert(sizeof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons) == 0x000028, "Wrong size on WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, Temp_bool_Variable) == 0x000000, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_AsHWCollection_Item) == 0x000008, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000018, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetCollectionItemStatus_ReturnValue) == 0x000020, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetCollectionItemStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons, K2Node_Select_Default) == 0x000024, "Member 'WBP_S_TrackerItemDisplay_C_UpdateOwnershipIcons::K2Node_Select_Default' has a wrong offset!");

}

