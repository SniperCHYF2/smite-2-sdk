#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Checkbox

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Checkbox.Checkbox_C
// 0x0058 (0x0610 - 0x05B8)
class UCheckbox_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        background;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 check;                                             // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HitTarget;                                         // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hovered;                                           // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Unhovered;                                         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Checked;                                           // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool Checked)>  OnCheckChanged;                                    // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UObject*                                HoverCheckboxSFX;                                  // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                ClickCheckboxSFX;                                  // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetCheckedState(bool Checked_0);
	bool NavigateConfirm();
	void GamepadUnhover();
	void GamepadHover();
	void GamepadConfirm();
	void ExecuteUbergraph_Checkbox(int32 EntryPoint);
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Checkbox_C">();
	}
	static class UCheckbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheckbox_C>();
	}
};
static_assert(alignof(UCheckbox_C) == 0x000008, "Wrong alignment on UCheckbox_C");
static_assert(sizeof(UCheckbox_C) == 0x000610, "Wrong size on UCheckbox_C");
static_assert(offsetof(UCheckbox_C, UberGraphFrame) == 0x0005B8, "Member 'UCheckbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, background) == 0x0005C0, "Member 'UCheckbox_C::background' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, check) == 0x0005C8, "Member 'UCheckbox_C::check' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, HitTarget) == 0x0005D0, "Member 'UCheckbox_C::HitTarget' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, Hovered) == 0x0005D8, "Member 'UCheckbox_C::Hovered' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, Unhovered) == 0x0005E0, "Member 'UCheckbox_C::Unhovered' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, Checked) == 0x0005E8, "Member 'UCheckbox_C::Checked' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, OnCheckChanged) == 0x0005F0, "Member 'UCheckbox_C::OnCheckChanged' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, HoverCheckboxSFX) == 0x000600, "Member 'UCheckbox_C::HoverCheckboxSFX' has a wrong offset!");
static_assert(offsetof(UCheckbox_C, ClickCheckboxSFX) == 0x000608, "Member 'UCheckbox_C::ClickCheckboxSFX' has a wrong offset!");

}

