#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Starter_GildedArrow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Starter_GildedArrow.GA_Starter_GildedArrow_C
// 0x0040 (0x0F18 - 0x0ED8)
class UGA_Starter_GildedArrow_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         TargetingRadius;                                   // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxHealthPercentage;                               // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MarkedTarget_;                                     // 0x0F00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActorHealthPercentage;                             // 0x0F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighestHealthActor;                                // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyMarkAndCooldown(class AActor* TargetToMark);
	void AttemptSearchForTarget();
	void ExecuteUbergraph_GA_Starter_GildedArrow(int32 EntryPoint);
	TArray<class AActor*> FindActors(const struct FVector& AimLocation, class AActor* SourceActor, const struct FGameplayTagRequirements& ActorRequirements);
	void ResetVariables();
	void SetupListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Starter_GildedArrow_C">();
	}
	static class UGA_Starter_GildedArrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Starter_GildedArrow_C>();
	}
};
static_assert(alignof(UGA_Starter_GildedArrow_C) == 0x000008, "Wrong alignment on UGA_Starter_GildedArrow_C");
static_assert(sizeof(UGA_Starter_GildedArrow_C) == 0x000F18, "Wrong size on UGA_Starter_GildedArrow_C");
static_assert(offsetof(UGA_Starter_GildedArrow_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Starter_GildedArrow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, TargetingRadius) == 0x000EE0, "Member 'UGA_Starter_GildedArrow_C::TargetingRadius' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, MaxHealthPercentage) == 0x000EE8, "Member 'UGA_Starter_GildedArrow_C::MaxHealthPercentage' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, Owner) == 0x000EF0, "Member 'UGA_Starter_GildedArrow_C::Owner' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, Actor) == 0x000EF8, "Member 'UGA_Starter_GildedArrow_C::Actor' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, MarkedTarget_) == 0x000F00, "Member 'UGA_Starter_GildedArrow_C::MarkedTarget_' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, ActorHealthPercentage) == 0x000F08, "Member 'UGA_Starter_GildedArrow_C::ActorHealthPercentage' has a wrong offset!");
static_assert(offsetof(UGA_Starter_GildedArrow_C, HighestHealthActor) == 0x000F10, "Member 'UGA_Starter_GildedArrow_C::HighestHealthActor' has a wrong offset!");

}

