#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Common_DamageCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Common_DamageCharacter.GC_Common_DamageCharacter_C
// 0x0030 (0x0398 - 0x0368)
class AGC_Common_DamageCharacter_C final : public AHWGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DamageFeedbackDuration;                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ResetIntensityHandle;                              // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        IntensityResetTime;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentIntensity;                                  // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IntensityScalingPerHit;                            // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void IncreaseDamageMaterialIntensity();
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void PlayForceFeedback(class AHWCharacter_Smite_God* HWCharacter_Smite_God_Ref, bool isBigHit);
	void ResetDamageMaterialIntensity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Common_DamageCharacter_C">();
	}
	static class AGC_Common_DamageCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Common_DamageCharacter_C>();
	}
};
static_assert(alignof(AGC_Common_DamageCharacter_C) == 0x000008, "Wrong alignment on AGC_Common_DamageCharacter_C");
static_assert(sizeof(AGC_Common_DamageCharacter_C) == 0x000398, "Wrong size on AGC_Common_DamageCharacter_C");
static_assert(offsetof(AGC_Common_DamageCharacter_C, DefaultSceneRoot) == 0x000368, "Member 'AGC_Common_DamageCharacter_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_Common_DamageCharacter_C, DamageFeedbackDuration) == 0x000370, "Member 'AGC_Common_DamageCharacter_C::DamageFeedbackDuration' has a wrong offset!");
static_assert(offsetof(AGC_Common_DamageCharacter_C, ResetIntensityHandle) == 0x000378, "Member 'AGC_Common_DamageCharacter_C::ResetIntensityHandle' has a wrong offset!");
static_assert(offsetof(AGC_Common_DamageCharacter_C, IntensityResetTime) == 0x000380, "Member 'AGC_Common_DamageCharacter_C::IntensityResetTime' has a wrong offset!");
static_assert(offsetof(AGC_Common_DamageCharacter_C, CurrentIntensity) == 0x000388, "Member 'AGC_Common_DamageCharacter_C::CurrentIntensity' has a wrong offset!");
static_assert(offsetof(AGC_Common_DamageCharacter_C, IntensityScalingPerHit) == 0x000390, "Member 'AGC_Common_DamageCharacter_C::IntensityScalingPerHit' has a wrong offset!");

}

