#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_MinimapMinionBlip

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_MinimapMinionBlip.WBP_G_V2_MinimapMinionBlip_C
// 0x0010 (0x0610 - 0x0600)
class UWBP_G_V2_MinimapMinionBlip_C final : public UHWMinimapMinionBlipWidget
{
public:
	class USizeBox*                               MainSizeBox;                                       // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               MinionIcon;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetMinionBlipType(const EHWMinionBlipType& MinionType);
	void SetTeamColoration(const bool bFriendly);
	void ToggleFireStateDisplay(const bool bInIsFireMinion);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_MinimapMinionBlip_C">();
	}
	static class UWBP_G_V2_MinimapMinionBlip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_MinimapMinionBlip_C>();
	}
};
static_assert(alignof(UWBP_G_V2_MinimapMinionBlip_C) == 0x000008, "Wrong alignment on UWBP_G_V2_MinimapMinionBlip_C");
static_assert(sizeof(UWBP_G_V2_MinimapMinionBlip_C) == 0x000610, "Wrong size on UWBP_G_V2_MinimapMinionBlip_C");
static_assert(offsetof(UWBP_G_V2_MinimapMinionBlip_C, MainSizeBox) == 0x000600, "Member 'UWBP_G_V2_MinimapMinionBlip_C::MainSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_MinimapMinionBlip_C, MinionIcon) == 0x000608, "Member 'UWBP_G_V2_MinimapMinionBlip_C::MinionIcon' has a wrong offset!");

}

