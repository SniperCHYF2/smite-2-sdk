#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QueueTimer_v2

#include "Basic.hpp"

#include "WBP_QueueTimer_v2_classes.hpp"
#include "WBP_QueueTimer_v2_parameters.hpp"


namespace SDK
{

// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_QueueTimer_v2_C::BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_QueueTimer_v2_C::BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_QueueTimer_v2_C::BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "BndEvt__CancelQueueButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.CancelQueue
// (BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::CancelQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "CancelQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.ExecuteUbergraph_WBP_QueueTimer_v2
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::ExecuteUbergraph_WBP_QueueTimer_v2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "ExecuteUbergraph_WBP_QueueTimer_v2");

	Params::WBP_QueueTimer_v2_C_ExecuteUbergraph_WBP_QueueTimer_v2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.GetColorFromPalette
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::GetColorFromPalette(class FName RowName, struct FLinearColor* LinearColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "GetColorFromPalette");

	Params::WBP_QueueTimer_v2_C_GetColorFromPalette Parms{};

	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = std::move(Parms.LinearColor);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.InitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::InitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "InitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.InpActEvt_IA_UI_RightStickClick_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::InpActEvt_IA_UI_RightStickClick_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "InpActEvt_IA_UI_RightStickClick_K2Node_EnhancedInputActionEvent_0");

	Params::WBP_QueueTimer_v2_C_InpActEvt_IA_UI_RightStickClick_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.OnControlQueuePermissionUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    CanControl                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::OnControlQueuePermissionUpdate(bool CanControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "OnControlQueuePermissionUpdate");

	Params::WBP_QueueTimer_v2_C_OnControlQueuePermissionUpdate Parms{};

	Parms.CanControl = CanControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.OnUpdateQueueTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   TimeSecs                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::OnUpdateQueueTime(float TimeSecs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "OnUpdateQueueTime");

	Params::WBP_QueueTimer_v2_C_OnUpdateQueueTime Parms{};

	Parms.TimeSecs = TimeSecs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.OnUpdateQueueTimerState
// (Event, Public, BlueprintEvent)
// Parameters:
// EQueueTimerState                        State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::OnUpdateQueueTimerState(EQueueTimerState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "OnUpdateQueueTimerState");

	Params::WBP_QueueTimer_v2_C_OnUpdateQueueTimerState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.SetNeutralLabel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_QueueTimer_v2_C::SetNeutralLabel(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "SetNeutralLabel");

	Params::WBP_QueueTimer_v2_C_SetNeutralLabel Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.StartHideSequence
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              FromRoute                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              ToRoute                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::StartHideSequence(const struct FGameplayTag& FromRoute, const struct FGameplayTag& ToRoute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "StartHideSequence");

	Params::WBP_QueueTimer_v2_C_StartHideSequence Parms{};

	Parms.FromRoute = std::move(FromRoute);
	Parms.ToRoute = std::move(ToRoute);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.StartShowSequence
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              FromRoute                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              ToRoute                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::StartShowSequence(const struct FGameplayTag& FromRoute, const struct FGameplayTag& ToRoute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "StartShowSequence");

	Params::WBP_QueueTimer_v2_C_StartShowSequence Parms{};

	Parms.FromRoute = std::move(FromRoute);
	Parms.ToRoute = std::move(ToRoute);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UninitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UninitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UninitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateBackfillJoinTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdateBackfillJoinTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateBackfillJoinTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateBackfillPips
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdateBackfillPips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateBackfillPips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateCancelButton
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdateCancelButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateCancelButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdatePenaltyTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdatePenaltyTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdatePenaltyTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateQueueName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QueueTimer_v2_C::UpdateQueueName(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateQueueName");

	Params::WBP_QueueTimer_v2_C_UpdateQueueName Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateQueueTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdateQueueTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateQueueTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QueueTimer_v2.WBP_QueueTimer_v2_C.UpdateStatusLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QueueTimer_v2_C::UpdateStatusLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QueueTimer_v2_C", "UpdateStatusLabel");

	UObject::ProcessEvent(Func, nullptr);
}

}

