#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleStandard_Pickup

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.BallistaMarkClosestLaneObjective
// 0x0100 (0x0100 - 0x0000)
struct BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective final
{
public:
	EHWSmiteTeamId                                TeamToDamage;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageInstigator;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Joust_C*                   JoustGameMode;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AHWBotFactory*>                  CachedLaneFactories;                               // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AHWCharacter_Base*                      SelectedBot;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          SelectedFactory;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              LocalInstigatorASC;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ImmunityTags;                                      // 0x0040(0x0020)(Edit, BlueprintVisible)
	class UHWAbilitySystemComponent*              LocalTargetASC;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameMode*                            CallFunc_GetHWGameMode_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Joust_C*                   K2Node_DynamicCast_AsBP_Game_Mode_Joust;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective");
static_assert(sizeof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective) == 0x000100, "Wrong size on BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, TeamToDamage) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::TeamToDamage' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, DamageInstigator) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::DamageInstigator' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, JoustGameMode) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::JoustGameMode' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CachedLaneFactories) == 0x000018, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CachedLaneFactories' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, SelectedBot) == 0x000028, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::SelectedBot' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, SelectedFactory) == 0x000030, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::SelectedFactory' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, LocalInstigatorASC) == 0x000038, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::LocalInstigatorASC' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, ImmunityTags) == 0x000040, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::ImmunityTags' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, LocalTargetASC) == 0x000060, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::LocalTargetASC' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_byte_Variable) == 0x000068, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Variable) == 0x00006C, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Variable_1) == 0x000070, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Variable_2) == 0x000074, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Variable_3) == 0x000078, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Variable_4) == 0x00007C, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, K2Node_Select_Default) == 0x000080, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_GetHWGameMode_ReturnValue) == 0x0000B8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_GetHWGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, K2Node_DynamicCast_AsBP_Game_Mode_Joust) == 0x0000C8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::K2Node_DynamicCast_AsBP_Game_Mode_Joust' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x0000D1, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x0000D8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000E8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000F8, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Not_PreBool_ReturnValue) == 0x0000F9, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FA, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_BattleStandard_Pickup_C_BallistaMarkClosestLaneObjective::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.BindOnPickupEvents
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleStandard_Pickup_C_BindOnPickupEvents final
{
public:
	class UHWAbilitySystemComponent*              InstigatorASC;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FDamageEventData& DeathEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_BindOnPickupEvents) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_BindOnPickupEvents");
static_assert(sizeof(BP_BattleStandard_Pickup_C_BindOnPickupEvents) == 0x000018, "Wrong size on BP_BattleStandard_Pickup_C_BindOnPickupEvents");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BindOnPickupEvents, InstigatorASC) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_BindOnPickupEvents::InstigatorASC' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BindOnPickupEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_BindOnPickupEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature final
{
public:
	class UHWInteractableComponent*               Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractInstigator;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature");
static_assert(sizeof(BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature) == 0x000010, "Wrong size on BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature, Interactable) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature, InteractInstigator) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_BndEvt__BP_BattleStandard_Pickup_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature::InteractInstigator' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.ExecuteUbergraph_BP_BattleStandard_Pickup
// 0x0068 (0x0068 - 0x0000)
struct BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_CustomEvent_NewTarget;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWDisplayInfoComponent*                CallFunc_GetDisplayInfoComponent_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UHWInteractableComponent*               K2Node_ComponentBoundEvent_Interactable;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_InteractInstigator;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup");
static_assert(sizeof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup) == 0x000068, "Wrong size on BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, EntryPoint) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, K2Node_CustomEvent_NewTarget) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::K2Node_CustomEvent_NewTarget' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_byte_Variable) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, CallFunc_GetDisplayInfoComponent_ReturnValue) == 0x000018, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::CallFunc_GetDisplayInfoComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_int_Variable) == 0x000020, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_int_Variable_1) == 0x000024, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_int_Variable_2) == 0x000028, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_int_Variable_3) == 0x00002C, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, Temp_int_Variable_4) == 0x000030, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, CallFunc_IsDedicatedServer_ReturnValue) == 0x000034, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, K2Node_ComponentBoundEvent_Interactable) == 0x000050, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, K2Node_ComponentBoundEvent_InteractInstigator) == 0x000058, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::K2Node_ComponentBoundEvent_InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup, K2Node_Select_Default) == 0x000060, "Member 'BP_BattleStandard_Pickup_C_ExecuteUbergraph_BP_BattleStandard_Pickup::K2Node_Select_Default' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.Multicast_NewMarkedTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget final
{
public:
	class AHWCharacter_Base*                      NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget");
static_assert(sizeof(BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget) == 0x000008, "Wrong size on BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget");
static_assert(offsetof(BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget, NewTarget) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_Multicast_NewMarkedTarget::NewTarget' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.OnBattleStandardHolderDied
// 0x0088 (0x0088 - 0x0000)
struct BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied final
{
public:
	struct FDamageEventData                       DeathEventData;                                    // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFlagFromPlayer_WasRemoved;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied");
static_assert(sizeof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied) == 0x000088, "Wrong size on BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied, DeathEventData) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied::DeathEventData' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000070, "Member 'BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000078, "Member 'BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied, CallFunc_RemoveFlagFromPlayer_WasRemoved) == 0x000080, "Member 'BP_BattleStandard_Pickup_C_OnBattleStandardHolderDied::CallFunc_RemoveFlagFromPlayer_WasRemoved' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.OnEnteredFountainWithFlag
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFlagFromPlayer_WasRemoved;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag");
static_assert(sizeof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag) == 0x000030, "Wrong size on BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, OverlappedActor) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, OtherActor) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000019, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000020, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, CallFunc_RemoveFlagFromPlayer_WasRemoved) == 0x000028, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::CallFunc_RemoveFlagFromPlayer_WasRemoved' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_BattleStandard_Pickup_C_OnEnteredFountainWithFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.OnRep_IsPickedUp
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleStandard_Pickup_C_OnRep_IsPickedUp final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWDisplayInfoComponent*                CallFunc_GetDisplayInfoComponent_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_OnRep_IsPickedUp) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_OnRep_IsPickedUp");
static_assert(sizeof(BP_BattleStandard_Pickup_C_OnRep_IsPickedUp) == 0x000010, "Wrong size on BP_BattleStandard_Pickup_C_OnRep_IsPickedUp");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnRep_IsPickedUp, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_OnRep_IsPickedUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnRep_IsPickedUp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BattleStandard_Pickup_C_OnRep_IsPickedUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnRep_IsPickedUp, CallFunc_GetDisplayInfoComponent_ReturnValue) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_OnRep_IsPickedUp::CallFunc_GetDisplayInfoComponent_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.OnRep_MarkedTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleStandard_Pickup_C_OnRep_MarkedTarget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_OnRep_MarkedTarget) == 0x000001, "Wrong alignment on BP_BattleStandard_Pickup_C_OnRep_MarkedTarget");
static_assert(sizeof(BP_BattleStandard_Pickup_C_OnRep_MarkedTarget) == 0x000001, "Wrong size on BP_BattleStandard_Pickup_C_OnRep_MarkedTarget");
static_assert(offsetof(BP_BattleStandard_Pickup_C_OnRep_MarkedTarget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_OnRep_MarkedTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.PickupLogic
// 0x00F8 (0x00F8 - 0x0000)
struct BP_BattleStandard_Pickup_C_PickupLogic final
{
public:
	class AActor*                                 InstigatorActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                LocalInstigatorTeam;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                CallFunc_GetActorGameTeam_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_1;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_2;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_3;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_4;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_5;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_6;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable_7;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                K2Node_Select_Default;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Temp_delegate_Variable;                            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Temp_delegate_Variable_1;                          // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Temp_delegate_Variable_2;                          // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_Select_Default_1;                           // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_JoustGameState_C*                   K2Node_DynamicCast_AsBP_Joust_Game_State;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default_2;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x00C8(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x00D8(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_PickupLogic) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_PickupLogic");
static_assert(sizeof(BP_BattleStandard_Pickup_C_PickupLogic) == 0x0000F8, "Wrong size on BP_BattleStandard_Pickup_C_PickupLogic");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, InstigatorActor) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::InstigatorActor' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, LocalInstigatorTeam) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::LocalInstigatorTeam' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_GetActorGameTeam_ReturnValue) == 0x000009, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_GetActorGameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x00000A, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable) == 0x000019, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_class_Variable) == 0x000020, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_class_Variable_1) == 0x000028, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_class_Variable_2) == 0x000030, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_1) == 0x000038, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_2) == 0x000039, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_3) == 0x00003A, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_4) == 0x00003B, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_5) == 0x00003C, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_6) == 0x00003D, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_byte_Variable_7) == 0x00003E, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_Select_Default) == 0x00003F, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_delegate_Variable) == 0x000040, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_delegate_Variable_1) == 0x000050, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, Temp_delegate_Variable_2) == 0x000060, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_GetHWGameState_ReturnValue) == 0x000090, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_Select_Default_1) == 0x000098, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_DynamicCast_AsBP_Joust_Game_State) == 0x0000A8, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_DynamicCast_AsBP_Joust_Game_State' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, K2Node_Select_Default_2) == 0x0000C0, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0000C8, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x0000D8, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x0000E8, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0000F0, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_PickupLogic, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000F4, "Member 'BP_BattleStandard_Pickup_C_PickupLogic::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.RemoveFlagFromPlayer
// 0x0100 (0x0100 - 0x0000)
struct BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer final
{
public:
	class UHWAbilitySystemComponent*              PlayerASC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          WasRemoved;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Removed;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWSmiteTeamId                                Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0010(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0030(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_2;                            // 0x0050(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_3;                            // 0x0070(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_4;                            // 0x0090(0x0020)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x00C0(0x0020)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x00E0(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer");
static_assert(sizeof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer) == 0x000100, "Wrong size on BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, PlayerASC) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::PlayerASC' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, WasRemoved) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::WasRemoved' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Removed) == 0x000009, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Removed' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_byte_Variable) == 0x00000A, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_struct_Variable) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_struct_Variable_1) == 0x000030, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_struct_Variable_2) == 0x000050, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_struct_Variable_3) == 0x000070, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_struct_Variable_4) == 0x000090, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, K2Node_Select_Default) == 0x0000C0, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x0000E0, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0000FC, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0000FD, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000FE, "Member 'BP_BattleStandard_Pickup_C_RemoveFlagFromPlayer::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.RespawnFlag
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleStandard_Pickup_C_RespawnFlag final
{
public:
	float                                         RespawnTime_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_RespawnFlag) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_RespawnFlag");
static_assert(sizeof(BP_BattleStandard_Pickup_C_RespawnFlag) == 0x000028, "Wrong size on BP_BattleStandard_Pickup_C_RespawnFlag");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RespawnFlag, RespawnTime_0) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_RespawnFlag::RespawnTime_0' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RespawnFlag, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_BattleStandard_Pickup_C_RespawnFlag::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RespawnFlag, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_RespawnFlag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RespawnFlag, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_BattleStandard_Pickup_C_RespawnFlag::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_RespawnFlag, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_BattleStandard_Pickup_C_RespawnFlag::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.SetClientVisuals
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleStandard_Pickup_C_SetClientVisuals final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_SetClientVisuals) == 0x000001, "Wrong alignment on BP_BattleStandard_Pickup_C_SetClientVisuals");
static_assert(sizeof(BP_BattleStandard_Pickup_C_SetClientVisuals) == 0x000002, "Wrong size on BP_BattleStandard_Pickup_C_SetClientVisuals");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_SetClientVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_BattleStandard_Pickup_C_SetClientVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.SetClientVisualsFriendlyEnemyColors
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors");
static_assert(sizeof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors) == 0x000018, "Wrong size on BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'BP_BattleStandard_Pickup_C_SetClientVisualsFriendlyEnemyColors::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.ToggleInteract
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleStandard_Pickup_C_ToggleInteract final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_ToggleInteract) == 0x000001, "Wrong alignment on BP_BattleStandard_Pickup_C_ToggleInteract");
static_assert(sizeof(BP_BattleStandard_Pickup_C_ToggleInteract) == 0x000002, "Wrong size on BP_BattleStandard_Pickup_C_ToggleInteract");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ToggleInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_ToggleInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleStandard_Pickup_C_ToggleInteract, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_BattleStandard_Pickup_C_ToggleInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattleStandard_Pickup.BP_BattleStandard_Pickup_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleStandard_Pickup_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleStandard_Pickup_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BattleStandard_Pickup_C_UserConstructionScript");
static_assert(sizeof(BP_BattleStandard_Pickup_C_UserConstructionScript) == 0x000008, "Wrong size on BP_BattleStandard_Pickup_C_UserConstructionScript");
static_assert(offsetof(BP_BattleStandard_Pickup_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_BattleStandard_Pickup_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

