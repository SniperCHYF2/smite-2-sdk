#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TopNavButton

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TopNavButton.WBP_TopNavButton_C
// 0x0098 (0x0650 - 0x05B8)
class UWBP_TopNavButton_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_S_CTADisplay_C*                    CTADisplay;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_navtab_C*                          WBP_main_nav_tab;                                  // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Message;                                           // 0x05D0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(const struct FGameplayTag& TargetViewState)> OnClicked;            // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           TargetViewState;                                   // 0x0618(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   RelatedViewStates;                                 // 0x0620(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class URHWidget* ButtonClicked)> OnNonRouteClicked;                // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UsesBattlePassColoring;                            // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsFirstTab;                                       // 0x0641(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_642[0x2];                                      // 0x0642(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BattlePassCTAName;                                 // 0x0644(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesHolidayColoring;                               // 0x064C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsStoreButton;                                    // 0x064D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCallToActionAffixPath                      CTAAffix;                                          // 0x064E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void NavTabSelected(class URHNavTabWidget* SelectedNavTab);
	void IsDisabled(bool* Disabled);
	void IsActive(bool* Active);
	void InitializeWidget();
	void GamepadConfirm();
	void ExecuteUbergraph_WBP_TopNavButton(int32 EntryPoint);
	void DisableButton(bool IsDisabled_0);
	void Construct();
	void CheckEmptyStore(bool* bCanSelectButton);
	void SetMessage(const class FText& Message_0);
	void SetActive(bool IsActive_0);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TopNavButton_C">();
	}
	static class UWBP_TopNavButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TopNavButton_C>();
	}
};
static_assert(alignof(UWBP_TopNavButton_C) == 0x000008, "Wrong alignment on UWBP_TopNavButton_C");
static_assert(sizeof(UWBP_TopNavButton_C) == 0x000650, "Wrong size on UWBP_TopNavButton_C");
static_assert(offsetof(UWBP_TopNavButton_C, UberGraphFrame) == 0x0005B8, "Member 'UWBP_TopNavButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, CTADisplay) == 0x0005C0, "Member 'UWBP_TopNavButton_C::CTADisplay' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, WBP_main_nav_tab) == 0x0005C8, "Member 'UWBP_TopNavButton_C::WBP_main_nav_tab' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, Message) == 0x0005D0, "Member 'UWBP_TopNavButton_C::Message' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, OnClicked) == 0x0005E8, "Member 'UWBP_TopNavButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, OnHovered) == 0x0005F8, "Member 'UWBP_TopNavButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, OnUnhovered) == 0x000608, "Member 'UWBP_TopNavButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, TargetViewState) == 0x000618, "Member 'UWBP_TopNavButton_C::TargetViewState' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, RelatedViewStates) == 0x000620, "Member 'UWBP_TopNavButton_C::RelatedViewStates' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, OnNonRouteClicked) == 0x000630, "Member 'UWBP_TopNavButton_C::OnNonRouteClicked' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, UsesBattlePassColoring) == 0x000640, "Member 'UWBP_TopNavButton_C::UsesBattlePassColoring' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, bIsFirstTab) == 0x000641, "Member 'UWBP_TopNavButton_C::bIsFirstTab' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, BattlePassCTAName) == 0x000644, "Member 'UWBP_TopNavButton_C::BattlePassCTAName' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, UsesHolidayColoring) == 0x00064C, "Member 'UWBP_TopNavButton_C::UsesHolidayColoring' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, bIsStoreButton) == 0x00064D, "Member 'UWBP_TopNavButton_C::bIsStoreButton' has a wrong offset!");
static_assert(offsetof(UWBP_TopNavButton_C, CTAAffix) == 0x00064E, "Member 'UWBP_TopNavButton_C::CTAAffix' has a wrong offset!");

}

