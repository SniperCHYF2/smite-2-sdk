#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_ItemDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.DisplayAbilityDescription
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription) == 0x000018, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription, Description) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayAbilityDescription::Description' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.DisplayDescription
// 0x0020 (0x0020 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription) == 0x000020, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, Description) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::Description' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, Temp_bool_Variable) == 0x000018, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, Temp_byte_Variable) == 0x00001A, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription, K2Node_Select_Default) == 0x00001C, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayDescription::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.DisplayTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle) == 0x000018, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle, Title) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayTitle::Title' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.DisplayUniqueness
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness final
{
public:
	bool                                          bIsUnique;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness) == 0x000001, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness) == 0x000005, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness, bIsUnique) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness::bIsUnique' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_GodBuilder_ItemDisplay_C_DisplayUniqueness::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.Populate
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_Populate final
{
public:
	const class UHWEquipmentItem*                 EquipmentItem;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_Populate) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_Populate");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_Populate) == 0x000018, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_Populate");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, EquipmentItem) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::EquipmentItem' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, Temp_byte_Variable) == 0x000008, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, CallFunc_HasTag_ReturnValue) == 0x00000A, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, CallFunc_HasTag_ReturnValue_1) == 0x00000B, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, Temp_byte_Variable_1) == 0x00000C, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, Temp_bool_Variable) == 0x00000D, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, Temp_byte_Variable_2) == 0x00000E, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, Temp_bool_Variable_1) == 0x00000F, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, K2Node_Select_Default) == 0x000010, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_Populate, K2Node_Select_Default_1) == 0x000011, "Member 'WBP_S_GodBuilder_ItemDisplay_C_Populate::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.StatLineAdded
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded final
{
public:
	class UHWTooltipWidget_ItemStat*              Line;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded) == 0x000010, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded, Line) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded::Line' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'WBP_S_GodBuilder_ItemDisplay_C_StatLineAdded::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_S_GodBuilder_ItemDisplay.WBP_S_GodBuilder_ItemDisplay_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_S_GodBuilder_ItemDisplay_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

}

