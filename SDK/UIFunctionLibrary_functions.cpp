#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIFunctionLibrary

#include "Basic.hpp"

#include "UIFunctionLibrary_classes.hpp"
#include "UIFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function UIFunctionLibrary.UIFunctionLibrary_C.FormatSecondsToHighestTimerText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int64                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      WeekOverride                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      WeeksOverride                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      DayOverride                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      DaysOverride                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      HourOverride                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      HoursOverride                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    UseOverrides                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Timer_Text                                             (Parm, OutParm)

void UUIFunctionLibrary_C::FormatSecondsToHighestTimerText(int64 Seconds, const class FText& WeekOverride, const class FText& WeeksOverride, const class FText& DayOverride, const class FText& DaysOverride, const class FText& HourOverride, const class FText& HoursOverride, bool UseOverrides, class UObject* __WorldContext, class FText* Timer_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "FormatSecondsToHighestTimerText");

	Params::UIFunctionLibrary_C_FormatSecondsToHighestTimerText Parms{};

	Parms.Seconds = Seconds;
	Parms.WeekOverride = std::move(WeekOverride);
	Parms.WeeksOverride = std::move(WeeksOverride);
	Parms.DayOverride = std::move(DayOverride);
	Parms.DaysOverride = std::move(DaysOverride);
	Parms.HourOverride = std::move(HourOverride);
	Parms.HoursOverride = std::move(HoursOverride);
	Parms.UseOverrides = UseOverrides;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Timer_Text != nullptr)
		*Timer_Text = std::move(Parms.Timer_Text);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.FormatSecondsToTimerText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minute_Digits                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowTenths                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Timer_Text                                             (Parm, OutParm)

void UUIFunctionLibrary_C::FormatSecondsToTimerText(double Seconds, int32 Minute_Digits, bool ShowTenths, class UObject* __WorldContext, class FText* Timer_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "FormatSecondsToTimerText");

	Params::UIFunctionLibrary_C_FormatSecondsToTimerText Parms{};

	Parms.Seconds = Seconds;
	Parms.Minute_Digits = Minute_Digits;
	Parms.ShowTenths = ShowTenths;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Timer_Text != nullptr)
		*Timer_Text = std::move(Parms.Timer_Text);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleDescription
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterRole                          CharacterRole                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            SoftIcon                                               (Parm, OutParm)

void UUIFunctionLibrary_C::GetCharacterRoleDescription(ECharacterRole CharacterRole, class UObject* __WorldContext, class FText* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetCharacterRoleDescription");

	Params::UIFunctionLibrary_C_GetCharacterRoleDescription Parms{};

	Parms.CharacterRole = CharacterRole;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = std::move(Parms.SoftIcon);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleIcon
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterRole                          CharacterRole                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>*       SoftIcon                                               (Parm, OutParm, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetCharacterRoleIcon(ECharacterRole CharacterRole, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetCharacterRoleIcon");

	Params::UIFunctionLibrary_C_GetCharacterRoleIcon Parms{};

	Parms.CharacterRole = CharacterRole;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = Parms.SoftIcon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleIconSmall
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterRole                          CharacterRole                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>*       SoftIcon                                               (Parm, OutParm, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetCharacterRoleIconSmall(ECharacterRole CharacterRole, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetCharacterRoleIconSmall");

	Params::UIFunctionLibrary_C_GetCharacterRoleIconSmall Parms{};

	Parms.CharacterRole = CharacterRole;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = Parms.SoftIcon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterRole                          CharacterRole                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            SoftIcon                                               (Parm, OutParm)

void UUIFunctionLibrary_C::GetCharacterRoleName(ECharacterRole CharacterRole, class UObject* __WorldContext, class FText* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetCharacterRoleName");

	Params::UIFunctionLibrary_C_GetCharacterRoleName Parms{};

	Parms.CharacterRole = CharacterRole;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = std::move(Parms.SoftIcon);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetColorByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ColorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetColorByName(class FName ColorName, class UObject* __WorldContext, bool* HasFound, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetColorByName");

	Params::UIFunctionLibrary_C_GetColorByName Parms{};

	Parms.ColorName = ColorName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HasFound != nullptr)
		*HasFound = Parms.HasFound;

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetEnemyColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetEnemyColor(class UObject* __WorldContext, struct FLinearColor* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetEnemyColor");

	Params::UIFunctionLibrary_C_GetEnemyColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFontByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             FontName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo*                  FontInfo                                               (Parm, OutParm, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetFontByName(class FName FontName, class UObject* __WorldContext, bool* HasFound, struct FSlateFontInfo* FontInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetFontByName");

	Params::UIFunctionLibrary_C_GetFontByName Parms{};

	Parms.FontName = FontName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HasFound != nullptr)
		*HasFound = Parms.HasFound;

	if (FontInfo != nullptr)
		*FontInfo = std::move(Parms.FontInfo);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFormattedTimeSpan
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan&                       Timespan                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Shorthand                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Text                                                   (Parm, OutParm)

void UUIFunctionLibrary_C::GetFormattedTimeSpan(struct FTimespan& Timespan, bool Shorthand, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetFormattedTimeSpan");

	Params::UIFunctionLibrary_C_GetFormattedTimeSpan Parms{};

	Parms.Timespan = std::move(Timespan);
	Parms.Shorthand = Shorthand;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Timespan = std::move(Parms.Timespan);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFormattedTimeSpanFirstValue
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan&                       Timespan                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Shorthand                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Text                                                   (Parm, OutParm)

void UUIFunctionLibrary_C::GetFormattedTimeSpanFirstValue(struct FTimespan& Timespan, bool Shorthand, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetFormattedTimeSpanFirstValue");

	Params::UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue Parms{};

	Parms.Timespan = std::move(Timespan);
	Parms.Shorthand = Shorthand;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Timespan = std::move(Parms.Timespan);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFriendlyColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetFriendlyColor(class UObject* __WorldContext, struct FLinearColor* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetFriendlyColor");

	Params::UIFunctionLibrary_C_GetFriendlyColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeDescription
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              GameModeTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            GameModeDesc                                           (Parm, OutParm)

void UUIFunctionLibrary_C::GetGameModeDescription(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, class FText* GameModeDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetGameModeDescription");

	Params::UIFunctionLibrary_C_GetGameModeDescription Parms{};

	Parms.GameModeTag = std::move(GameModeTag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GameModeDesc != nullptr)
		*GameModeDesc = std::move(Parms.GameModeDesc);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              GameModeTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>*       SoftIcon                                               (Parm, OutParm, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetGameModeIcon(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetGameModeIcon");

	Params::UIFunctionLibrary_C_GetGameModeIcon Parms{};

	Parms.GameModeTag = std::move(GameModeTag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = Parms.SoftIcon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              GameModeTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            GameModeName                                           (Parm, OutParm)

void UUIFunctionLibrary_C::GetGameModeName(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, class FText* GameModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetGameModeName");

	Params::UIFunctionLibrary_C_GetGameModeName Parms{};

	Parms.GameModeTag = std::move(GameModeTag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GameModeName != nullptr)
		*GameModeName = std::move(Parms.GameModeName);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetHUDCommon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ARHHUDCommon**                    HUD_Common                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetHUDCommon(class UObject* __WorldContext, class ARHHUDCommon** HUD_Common)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetHUDCommon");

	Params::UIFunctionLibrary_C_GetHUDCommon Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HUD_Common != nullptr)
		*HUD_Common = Parms.HUD_Common;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetIconForGamepadButton
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      Icon                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetIconForGamepadButton(const struct FKey& Button, class UObject* __WorldContext, class UTexture2D** Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetIconForGamepadButton");

	Params::UIFunctionLibrary_C_GetIconForGamepadButton Parms{};

	Parms.Button = std::move(Button);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetInputTypeIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetInputTypeIcon(uint8 InputType, class UObject* __WorldContext, class UTexture2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetInputTypeIcon");

	Params::UIFunctionLibrary_C_GetInputTypeIcon Parms{};

	Parms.InputType = InputType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetItemType
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlatformInventoryItem*           InventoryItem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            ItemType                                               (Parm, OutParm)

void UUIFunctionLibrary_C::GetItemType(class UPlatformInventoryItem* InventoryItem, class UObject* __WorldContext, class FText* ItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetItemType");

	Params::UIFunctionLibrary_C_GetItemType Parms{};

	Parms.InventoryItem = InventoryItem;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemType != nullptr)
		*ItemType = std::move(Parms.ItemType);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetPlatformIconByDisplayType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ERHPlatformDisplayType                  Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      Icon                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetPlatformIconByDisplayType(ERHPlatformDisplayType Platform, class UObject* __WorldContext, class UTexture2D** Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetPlatformIconByDisplayType");

	Params::UIFunctionLibrary_C_GetPlatformIconByDisplayType Parms{};

	Parms.Platform = Platform;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetPlatformViewProfileText
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Return_Value                                           (Parm, OutParm)

void UUIFunctionLibrary_C::GetPlatformViewProfileText(class UObject* __WorldContext, class FText* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetPlatformViewProfileText");

	Params::UIFunctionLibrary_C_GetPlatformViewProfileText Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetS1MasteryNum
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MasteryRank                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>*       SoftIcon                                               (Parm, OutParm, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetS1MasteryNum(int32 MasteryRank, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetS1MasteryNum");

	Params::UIFunctionLibrary_C_GetS1MasteryNum Parms{};

	Parms.MasteryRank = MasteryRank;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SoftIcon != nullptr)
		*SoftIcon = Parms.SoftIcon;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetSettingsDataFactory
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class URHSettingsDataFactory**          SettingsDataFactory                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetSettingsDataFactory(class UObject* __WorldContext, class URHSettingsDataFactory** SettingsDataFactory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetSettingsDataFactory");

	Params::UIFunctionLibrary_C_GetSettingsDataFactory Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SettingsDataFactory != nullptr)
		*SettingsDataFactory = Parms.SettingsDataFactory;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TeamNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OwningPlayerNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Team_Color                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found_Color                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::GetTeamColor(int32 TeamNum, int32 OwningPlayerNum, class UObject* __WorldContext, struct FLinearColor* Team_Color, bool* Found_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetTeamColor");

	Params::UIFunctionLibrary_C_GetTeamColor Parms{};

	Parms.TeamNum = TeamNum;
	Parms.OwningPlayerNum = OwningPlayerNum;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Team_Color != nullptr)
		*Team_Color = std::move(Parms.Team_Color);

	if (Found_Color != nullptr)
		*Found_Color = Parms.Found_Color;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.GetTeamName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TeamNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Abbreviate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            TeamName                                               (Parm, OutParm)

void UUIFunctionLibrary_C::GetTeamName(int32 TeamNum, bool Abbreviate, class UObject* __WorldContext, class FText* TeamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "GetTeamName");

	Params::UIFunctionLibrary_C_GetTeamName Parms{};

	Parms.TeamNum = TeamNum;
	Parms.Abbreviate = Abbreviate;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TeamName != nullptr)
		*TeamName = std::move(Parms.TeamName);
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.IsLocalActionSaved
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   ActionSaved                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::IsLocalActionSaved(class FName ActionName, class UObject* __WorldContext, bool* ActionSaved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "IsLocalActionSaved");

	Params::UIFunctionLibrary_C_IsLocalActionSaved Parms{};

	Parms.ActionName = ActionName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActionSaved != nullptr)
		*ActionSaved = Parms.ActionSaved;
}


// Function UIFunctionLibrary.UIFunctionLibrary_C.SaveLocalAction
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIFunctionLibrary_C::SaveLocalAction(class FName ActionName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIFunctionLibrary_C", "SaveLocalAction");

	Params::UIFunctionLibrary_C_SaveLocalAction Parms{};

	Parms.ActionName = ActionName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

