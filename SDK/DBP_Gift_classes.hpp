#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_Gift

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DBP_Gift.DBP_Gift_C
// 0x0120 (0x05E8 - 0x04C8)
class ADBP_Gift_C final : public AHWDeployable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWAIPlayComponent*                     AIPlay;                                            // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HelpTipComponent_C*                 BP_HelpTipComponent;                               // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Timer;                                             // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWAudioComponent*                      FlightAudio;                                       // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWAudioComponent*                      AmbientAudio;                                      // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWNiagaraComponent*                    FlightNiagaraSystem;                               // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Flight;                                            // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWStaticMeshComponent*                 HWStaticMesh;                                      // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      AmbientNiagaraSystem;                              // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Bouquet;                                           // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWDisplayInfoComponent*                HWDisplayInfo;                                     // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableComponent_C*            BP_InteractableComponent;                          // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Alpha_7E4A932944988542BF7BDFB352A374E6;   // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rotation__Direction_7E4A932944988542BF7BDFB352A374E6; // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rotation;                                          // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Movement_AlphaZ_20D36D9A4E44F721002B2FBBD8B6164F;  // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Movement_Alpha_20D36D9A4E44F721002B2FBBD8B6164F;   // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Movement__Direction_20D36D9A4E44F721002B2FBBD8B6164F; // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Movement;                                          // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BasePower;                                         // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PowerScaling;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScalingInterval;                                   // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAnimate;                                     // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0588(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                StartingLocation;                                  // 0x05A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartingRotation;                                  // 0x05B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasLanded;                                         // 0x05D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LifeTimer;                                         // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LifeDuration;                                      // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimateGift(float ALPHA, double AlphaZ);
	void BndEvt__DBP_Favor_BP_InteractableComponent_K2Node_ComponentBoundEvent_0_OnInteractionEventDel__DelegateSignature(class UHWInteractableComponent* Interactable, class AActor* InteractInstigator);
	void DeployableLanded();
	void ExecuteUbergraph_DBP_Gift(int32 EntryPoint);
	void GiveGiftBuff(const class AActor* Actor);
	void LifeTimerComplete();
	void Movement__FinishedFunc();
	void Movement__UpdateFunc();
	void MulticastSpawnWarningVFX(const struct FVector& TargetLocation_0);
	void OnRep_HasLanded();
	void PlayRotation();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RotateGift(float ALPHA);
	void Rotation__FinishedFunc();
	void Rotation__UpdateFunc();
	void StartLifeTimer();
	void StoreStartingVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBP_Gift_C">();
	}
	static class ADBP_Gift_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADBP_Gift_C>();
	}
};
static_assert(alignof(ADBP_Gift_C) == 0x000008, "Wrong alignment on ADBP_Gift_C");
static_assert(sizeof(ADBP_Gift_C) == 0x0005E8, "Wrong size on ADBP_Gift_C");
static_assert(offsetof(ADBP_Gift_C, UberGraphFrame) == 0x0004C8, "Member 'ADBP_Gift_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, AIPlay) == 0x0004D0, "Member 'ADBP_Gift_C::AIPlay' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, BP_HelpTipComponent) == 0x0004D8, "Member 'ADBP_Gift_C::BP_HelpTipComponent' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Timer) == 0x0004E0, "Member 'ADBP_Gift_C::Timer' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, FlightAudio) == 0x0004E8, "Member 'ADBP_Gift_C::FlightAudio' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, AmbientAudio) == 0x0004F0, "Member 'ADBP_Gift_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, FlightNiagaraSystem) == 0x0004F8, "Member 'ADBP_Gift_C::FlightNiagaraSystem' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Flight) == 0x000500, "Member 'ADBP_Gift_C::Flight' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, HWStaticMesh) == 0x000508, "Member 'ADBP_Gift_C::HWStaticMesh' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Sphere) == 0x000510, "Member 'ADBP_Gift_C::Sphere' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, AmbientNiagaraSystem) == 0x000518, "Member 'ADBP_Gift_C::AmbientNiagaraSystem' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Bouquet) == 0x000520, "Member 'ADBP_Gift_C::Bouquet' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, HWDisplayInfo) == 0x000528, "Member 'ADBP_Gift_C::HWDisplayInfo' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, DefaultSceneRoot) == 0x000530, "Member 'ADBP_Gift_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, BP_InteractableComponent) == 0x000538, "Member 'ADBP_Gift_C::BP_InteractableComponent' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Rotation_Alpha_7E4A932944988542BF7BDFB352A374E6) == 0x000540, "Member 'ADBP_Gift_C::Rotation_Alpha_7E4A932944988542BF7BDFB352A374E6' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Rotation__Direction_7E4A932944988542BF7BDFB352A374E6) == 0x000544, "Member 'ADBP_Gift_C::Rotation__Direction_7E4A932944988542BF7BDFB352A374E6' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Rotation) == 0x000548, "Member 'ADBP_Gift_C::Rotation' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Movement_AlphaZ_20D36D9A4E44F721002B2FBBD8B6164F) == 0x000550, "Member 'ADBP_Gift_C::Movement_AlphaZ_20D36D9A4E44F721002B2FBBD8B6164F' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Movement_Alpha_20D36D9A4E44F721002B2FBBD8B6164F) == 0x000554, "Member 'ADBP_Gift_C::Movement_Alpha_20D36D9A4E44F721002B2FBBD8B6164F' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Movement__Direction_20D36D9A4E44F721002B2FBBD8B6164F) == 0x000558, "Member 'ADBP_Gift_C::Movement__Direction_20D36D9A4E44F721002B2FBBD8B6164F' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, Movement) == 0x000560, "Member 'ADBP_Gift_C::Movement' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, BasePower) == 0x000568, "Member 'ADBP_Gift_C::BasePower' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, PowerScaling) == 0x000570, "Member 'ADBP_Gift_C::PowerScaling' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, ScalingInterval) == 0x000578, "Member 'ADBP_Gift_C::ScalingInterval' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, ShouldAnimate) == 0x000580, "Member 'ADBP_Gift_C::ShouldAnimate' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, TargetLocation) == 0x000588, "Member 'ADBP_Gift_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, StartingLocation) == 0x0005A0, "Member 'ADBP_Gift_C::StartingLocation' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, StartingRotation) == 0x0005B8, "Member 'ADBP_Gift_C::StartingRotation' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, HasLanded) == 0x0005D0, "Member 'ADBP_Gift_C::HasLanded' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, LifeTimer) == 0x0005D8, "Member 'ADBP_Gift_C::LifeTimer' has a wrong offset!");
static_assert(offsetof(ADBP_Gift_C, LifeDuration) == 0x0005E0, "Member 'ADBP_Gift_C::LifeDuration' has a wrong offset!");

}

