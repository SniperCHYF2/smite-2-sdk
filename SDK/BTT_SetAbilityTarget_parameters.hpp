#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SetAbilityTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_SetAbilityTarget.BTT_SetAbilityTarget_C.ExecuteUbergraph_BTT_SetAbilityTarget
// 0x0110 (0x0110 - 0x0000)
struct BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget) == 0x000008, "Wrong alignment on BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget");
static_assert(sizeof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget) == 0x000110, "Wrong size on BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, EntryPoint) == 0x000000, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, Temp_bool_Variable) == 0x000004, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000030, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_BreakVector_X) == 0x0000C8, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget, K2Node_Select_Default) == 0x0000F8, "Member 'BTT_SetAbilityTarget_C_ExecuteUbergraph_BTT_SetAbilityTarget::K2Node_Select_Default' has a wrong offset!");

// Function BTT_SetAbilityTarget.BTT_SetAbilityTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_SetAbilityTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_SetAbilityTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_SetAbilityTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_SetAbilityTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_SetAbilityTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_SetAbilityTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_SetAbilityTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SetAbilityTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_SetAbilityTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

