#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodIItemDisplayEntry_Dep1

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.AmmoEquipIconOverride
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride final
{
public:
	TSoftObjectPtr<class UTexture2D>              OverrideTexture;                                   // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride) == 0x000028, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride, OverrideTexture) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_AmmoEquipIconOverride::OverrideTexture' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayAbilityPhase_Aiming
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming) == 0x000001, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming) == 0x000001, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Aiming::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayAbilityPhase_Fired
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAbilityTypeTag_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAbilityTypeTag_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAbilityTypeTag_ReturnValue_2;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired) == 0x000001, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired) == 0x000005, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired::PreviousPhase' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired, CallFunc_HasAbilityTypeTag_ReturnValue) == 0x000001, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired::CallFunc_HasAbilityTypeTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired, CallFunc_HasAbilityTypeTag_ReturnValue_1) == 0x000002, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired::CallFunc_HasAbilityTypeTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired, CallFunc_HasAbilityTypeTag_ReturnValue_2) == 0x000003, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired::CallFunc_HasAbilityTypeTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Fired::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayAbilityPhase_Inactive
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive) == 0x000001, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive) == 0x000001, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_Inactive::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayAbilityPhase_PreFire
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire) == 0x000001, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire) == 0x000001, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAbilityPhase_PreFire::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayAmmo
// 0x000C (0x000C - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasEnough;                                        // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCount;                                          // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo) == 0x000004, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo) == 0x00000C, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo, AmmoCount) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo::AmmoCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo, bHasEnough) == 0x000004, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo::bHasEnough' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo, MaxCount) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayAmmo::MaxCount' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayEquipment
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment final
{
public:
	const class UHWEquipmentItem*                 EquipmentInfo;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment) == 0x000018, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, EquipmentInfo) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::EquipmentInfo' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, Temp_byte_Variable) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, Temp_bool_Variable) == 0x00000A, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, CallFunc_HasTag_ReturnValue) == 0x00000B, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, CallFunc_HasTag_ReturnValue_1) == 0x00000C, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, K2Node_Select_Default) == 0x00000E, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayInputTag
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag) == 0x000004, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag) == 0x000008, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag, Tag) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayInputTag::Tag' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.DisplayStackCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount final
{
public:
	int32                                         StackCount;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackCount;                                     // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount) == 0x000004, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount) == 0x000008, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount, StackCount) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount::StackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount, MaxStackCount) == 0x000004, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_DisplayStackCount::MaxStackCount' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1
// 0x0EF8 (0x0EF8 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AmmoCount;                            // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasEnough;                           // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MaxCount;                             // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect_1;         // 0x0078(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData_1;           // 0x0478(0x0300)(ConstParm)
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect;           // 0x0778(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData;             // 0x0B78(0x0300)(ConstParm)
	int32                                         K2Node_Event_StackCount;                           // 0x0E78(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxStackCount;                        // 0x0E7C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0E81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E82[0x6];                                      // 0x0E82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0E88(0x0018)()
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_OverrideTexture;                      // 0x0EA0(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0EC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ECA[0x2];                                      // 0x0ECA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0ECC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0EDC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1) == 0x000EF8, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, EntryPoint) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_AmmoCount) == 0x000004, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_AmmoCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_bHasEnough) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_bHasEnough' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_MaxCount) == 0x00000C, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_MaxCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_IsDesignTime) == 0x000060, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_MakeStruct_LinearColor) == 0x000064, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_ComponentBoundEvent_ActiveEffect_1) == 0x000078, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_ComponentBoundEvent_ActiveEffect_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_ComponentBoundEvent_EffectData_1) == 0x000478, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_ComponentBoundEvent_EffectData_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_ComponentBoundEvent_ActiveEffect) == 0x000778, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_ComponentBoundEvent_ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_ComponentBoundEvent_EffectData) == 0x000B78, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_ComponentBoundEvent_EffectData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_StackCount) == 0x000E78, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_StackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_MaxStackCount) == 0x000E7C, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_MaxStackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000E80, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000E81, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000E88, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_Event_OverrideTexture) == 0x000EA0, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_Event_OverrideTexture' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000EC8, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000EC9, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_MakeStruct_LinearColor_1) == 0x000ECC, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_MakeStruct_LinearColor_2) == 0x000EDC, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_MakeStruct_G_ImplicitCast) == 0x000EEC, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1, K2Node_MakeStruct_R_ImplicitCast) == 0x000EF0, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Dep1::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.InitializeWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget) == 0x000008, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_InitializeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.PlayPhaseAnimation
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                PhaseWidget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PhaseAnim;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoopAnimation;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       PhaseAnim_0;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation) == 0x000038, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::PreviousPhase' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, PhaseWidget) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::PhaseWidget' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, PhaseAnim) == 0x000010, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::PhaseAnim' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, bLoopAnimation) == 0x000018, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::bLoopAnimation' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, PhaseAnim_0) == 0x000020, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::PhaseAnim_0' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PlayPhaseAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.SetDisplayOrientation
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation final
{
public:
	EHWOrientation                                InOrientation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWOrientation                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWOrientation                                Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWOrientation                                Temp_byte_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWOrientation                                Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWOrientation                                Temp_byte_Variable_4;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation) == 0x0000F0, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, InOrientation) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::InOrientation' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_byte_Variable) == 0x000028, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable_2) == 0x000030, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable_3) == 0x000040, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_byte_Variable_1) == 0x000050, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_real_Variable) == 0x000054, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_real_Variable_1) == 0x000058, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_byte_Variable_2) == 0x00005C, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_real_Variable_2) == 0x000060, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_real_Variable_3) == 0x000064, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_byte_Variable_3) == 0x000068, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable_4) == 0x000070, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_struct_Variable_5) == 0x000080, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, Temp_byte_Variable_4) == 0x000090, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_Select_Default) == 0x000098, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_Select_Default_1) == 0x0000A8, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_Select_Default_2) == 0x0000B8, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_Select_Default_3) == 0x0000C0, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_Select_Default_4) == 0x0000D0, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000D8, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation, K2Node_MakeStruct_Margin) == 0x0000E0, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_SetDisplayOrientation::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.StopPhaseAnimation
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation final
{
public:
	EHWUIAbilityFlowPhase                         PhaseAnimation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation) == 0x000010, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation, PhaseAnimation) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation::PhaseAnimation' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_StopPhaseAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.UpdateActiveSheen
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCooldownActive_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen) == 0x000018, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen, CallFunc_IsCooldownActive_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateActiveSheen::CallFunc_IsCooldownActive_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.UpdateGrayscale
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale final
{
public:
	bool                                          CallFunc_IsCooldownActive_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale) == 0x000018, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale, CallFunc_IsCooldownActive_ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale::CallFunc_IsCooldownActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_UpdateGrayscale::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodIItemDisplayEntry_Dep1.WBP_G_V2_GodIItemDisplayEntry_Dep1_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodIItemDisplayEntry_Dep1_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

