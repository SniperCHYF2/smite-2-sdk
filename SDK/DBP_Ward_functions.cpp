#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_Ward

#include "Basic.hpp"

#include "DBP_Ward_classes.hpp"
#include "DBP_Ward_parameters.hpp"


namespace SDK
{

// Function DBP_Ward.DBP_Ward_C.ExecuteUbergraph_DBP_Ward
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_Ward_C::ExecuteUbergraph_DBP_Ward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_Ward_C", "ExecuteUbergraph_DBP_Ward");

	Params::DBP_Ward_C_ExecuteUbergraph_DBP_Ward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_Ward.DBP_Ward_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADBP_Ward_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_Ward_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DBP_Ward.DBP_Ward_C.ReceiveDamageAsPip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             BaseDamageValue                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_Ward_C::ReceiveDamageAsPip(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_Ward_C", "ReceiveDamageAsPip");

	Params::DBP_Ward_C_ReceiveDamageAsPip Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamageValue = BaseDamageValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_Ward.DBP_Ward_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADBP_Ward_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_Ward_C", "ReceiveEndPlay");

	Params::DBP_Ward_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DBP_Ward.DBP_Ward_C.WardDied
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void ADBP_Ward_C::WardDied(const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DBP_Ward_C", "WardDied");

	Params::DBP_Ward_C_WardDied Parms{};

	Parms.DeathEventData = std::move(DeathEventData);

	UObject::ProcessEvent(Func, &Parms);
}

}

