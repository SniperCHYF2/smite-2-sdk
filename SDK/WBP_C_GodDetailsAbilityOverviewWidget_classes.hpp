#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetailsAbilityOverviewWidget

#include "Basic.hpp"

#include "HemingwayUI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_C_GodDetailsAbilityOverviewWidget.WBP_C_GodDetailsAbilityOverviewWidget_C
// 0x0028 (0x06E0 - 0x06B8)
class UWBP_C_GodDetailsAbilityOverviewWidget_C final : public UHWGodDetailsAbilityOverviewWidget
{
public:
	class UHWWidgetSwitcher*                      AspectSwitcher;                                    // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_GodDetailsGodAbility_Aspect_C*   GodAspectWidget;                                   // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Gameplay_Tags;                                     // 0x06C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           TagToSet;                                          // 0x06D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeWidget();
	class UWidget* NavigateToGodAspect(EUINavigation Navigation_0);
	void OnGodSet();
	void OnHide();
	void OnShown();
	void UninitializeWidget();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_C_GodDetailsAbilityOverviewWidget_C">();
	}
	static class UWBP_C_GodDetailsAbilityOverviewWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_C_GodDetailsAbilityOverviewWidget_C>();
	}
};
static_assert(alignof(UWBP_C_GodDetailsAbilityOverviewWidget_C) == 0x000008, "Wrong alignment on UWBP_C_GodDetailsAbilityOverviewWidget_C");
static_assert(sizeof(UWBP_C_GodDetailsAbilityOverviewWidget_C) == 0x0006E0, "Wrong size on UWBP_C_GodDetailsAbilityOverviewWidget_C");
static_assert(offsetof(UWBP_C_GodDetailsAbilityOverviewWidget_C, AspectSwitcher) == 0x0006B8, "Member 'UWBP_C_GodDetailsAbilityOverviewWidget_C::AspectSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetailsAbilityOverviewWidget_C, GodAspectWidget) == 0x0006C0, "Member 'UWBP_C_GodDetailsAbilityOverviewWidget_C::GodAspectWidget' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetailsAbilityOverviewWidget_C, Gameplay_Tags) == 0x0006C8, "Member 'UWBP_C_GodDetailsAbilityOverviewWidget_C::Gameplay_Tags' has a wrong offset!");
static_assert(offsetof(UWBP_C_GodDetailsAbilityOverviewWidget_C, TagToSet) == 0x0006D8, "Member 'UWBP_C_GodDetailsAbilityOverviewWidget_C::TagToSet' has a wrong offset!");

}

