#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CosmeticItemDisplay

#include "Basic.hpp"

#include "CosmeticSlotDetails_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.Event Display Equipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_Event_Display_Equipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_Event_Display_Equipped) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_Event_Display_Equipped");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_Event_Display_Equipped) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_Event_Display_Equipped");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_Event_Display_Equipped, IsEquipped) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_Event_Display_Equipped::IsEquipped' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.Event Display Selected
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_Event_Display_Selected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_Event_Display_Selected) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_Event_Display_Selected");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_Event_Display_Selected) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_Event_Display_Selected");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_Event_Display_Selected, IsSelected) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_Event_Display_Selected::IsSelected' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.ExecuteUbergraph_WBP_CosmeticItemDisplay
// 0x0140 (0x0140 - 0x0000)
struct WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformInventoryItem*                 K2Node_DynamicCast_AsPlatform_Inventory_Item;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPlatformInventoryItem>  CallFunc_GetInventoryItem_ReturnValue;             // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformInventoryItem*                 K2Node_CustomEvent_PlatformItem;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           K2Node_CustomEvent_StoreItem;                      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsGamepad;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsGamepad)>               K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPlatformInventoryItem>  CallFunc_GetInventoryItem_ReturnValue_1;           // 0x00C8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEquipped;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformInventoryItem*                 K2Node_DynamicCast_AsPlatform_Inventory_Item_1;    // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay) == 0x000140, "Wrong size on WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, EntryPoint) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, Temp_object_Variable) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_DynamicCast_AsPlatform_Inventory_Item) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_DynamicCast_AsPlatform_Inventory_Item' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_GetInventoryItem_ReturnValue) == 0x000028, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_GetInventoryItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, Temp_bool_Variable) == 0x000050, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_PlatformItem) == 0x000058, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_PlatformItem' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_StoreItem) == 0x000060, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_StoreItem' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_IsGamepad) == 0x000069, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_IsGamepad' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_Loaded) == 0x000070, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_Event_IsDesignTime) == 0x000078, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_GetColorByName_HasFound) == 0x0000AC, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_GetColorByName_Color) == 0x0000B0, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_Active) == 0x0000C0, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_IsSelected) == 0x0000C1, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_IsValid_ReturnValue_2) == 0x0000C2, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_GetInventoryItem_ReturnValue_1) == 0x0000C8, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_GetInventoryItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000F0, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CustomEvent_IsEquipped) == 0x0000F8, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CustomEvent_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_DynamicCast_AsPlatform_Inventory_Item_1) == 0x000100, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_DynamicCast_AsPlatform_Inventory_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, CallFunc_IsValid_ReturnValue_3) == 0x000109, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, Temp_struct_Variable) == 0x00010C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_CreateDelegate_OutputDelegate_3) == 0x00011C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay, K2Node_Select_Default) == 0x00012C, "Member 'WBP_CosmeticItemDisplay_C_ExecuteUbergraph_WBP_CosmeticItemDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.NavigateConfirm
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_NavigateConfirm final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_NavigateConfirm) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_NavigateConfirm");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_NavigateConfirm) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_NavigateConfirm");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_NavigateConfirm, ReturnValue) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_NavigateConfirm::ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.OnCanOwnMore
// 0x0002 (0x0002 - 0x0000)
struct WBP_CosmeticItemDisplay_C_OnCanOwnMore final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_OnCanOwnMore) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_OnCanOwnMore");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_OnCanOwnMore) == 0x000002, "Wrong size on WBP_CosmeticItemDisplay_C_OnCanOwnMore");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCanOwnMore, IsValid) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_OnCanOwnMore::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCanOwnMore, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_CosmeticItemDisplay_C_OnCanOwnMore::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.OnCompleteStorePriceSetup
// 0x0030 (0x0030 - 0x0000)
struct WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URHStoreItemPrice*>              CallFunc_GetPrices_ReturnValue;                    // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URHPortalOffer*>                 K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup) == 0x000030, "Wrong size on WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup, IsValid) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup, CallFunc_GetPrices_ReturnValue) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup::CallFunc_GetPrices_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_OnCompleteStorePriceSetup::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.OnGetOwnershipForLockedIcon
// 0x0002 (0x0002 - 0x0000)
struct WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon) == 0x000002, "Wrong size on WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon, IsValid) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_CosmeticItemDisplay_C_OnGetOwnershipForLockedIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.OnHovered
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_OnHovered final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_OnHovered) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_OnHovered");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_OnHovered) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_OnHovered");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnHovered, IsGamepad) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_OnHovered::IsGamepad' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B
// 0x0008 (0x0008 - 0x0000)
struct WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B) == 0x000008, "Wrong size on WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B, Loaded) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_OnLoaded_6F8DF84E4711713E8F3846BC3D94AC8B::Loaded' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.PopulateSlot
// 0x0010 (0x0010 - 0x0000)
struct WBP_CosmeticItemDisplay_C_PopulateSlot final
{
public:
	class UPlatformInventoryItem*                 PlatformItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           StoreItem_0;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_PopulateSlot) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_PopulateSlot");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_PopulateSlot) == 0x000010, "Wrong size on WBP_CosmeticItemDisplay_C_PopulateSlot");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_PopulateSlot, PlatformItem) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_PopulateSlot::PlatformItem' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_PopulateSlot, StoreItem_0) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_PopulateSlot::StoreItem_0' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_PreConstruct");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_PreConstruct) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_PreConstruct");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.ResetSlot
// 0x0030 (0x0030 - 0x0000)
struct WBP_CosmeticItemDisplay_C_ResetSlot final
{
public:
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0000(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FCosmeticSlotDetails                   K2Node_MakeStruct_CosmeticSlotDetails;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_ResetSlot) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_ResetSlot");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_ResetSlot) == 0x000030, "Wrong size on WBP_CosmeticItemDisplay_C_ResetSlot");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ResetSlot, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_ResetSlot::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_ResetSlot, K2Node_MakeStruct_CosmeticSlotDetails) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_ResetSlot::K2Node_MakeStruct_CosmeticSlotDetails' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetCornerIcon
// 0x0058 (0x0058 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetCornerIcon final
{
public:
	bool                                          bShowIcon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Soft_Image_Path;                                   // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetCornerIcon) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetCornerIcon");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetCornerIcon) == 0x000058, "Wrong size on WBP_CosmeticItemDisplay_C_SetCornerIcon");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetCornerIcon, bShowIcon) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetCornerIcon::bShowIcon' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetCornerIcon, Soft_Image_Path) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetCornerIcon::Soft_Image_Path' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetCornerIcon, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000028, "Member 'WBP_CosmeticItemDisplay_C_SetCornerIcon::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetCornerIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'WBP_CosmeticItemDisplay_C_SetCornerIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetHeaderSlot
// 0x0004 (0x0004 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetHeaderSlot final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetHeaderSlot) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetHeaderSlot");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetHeaderSlot) == 0x000004, "Wrong size on WBP_CosmeticItemDisplay_C_SetHeaderSlot");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetHeaderSlot, Temp_bool_Variable) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetHeaderSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetHeaderSlot, Temp_byte_Variable) == 0x000001, "Member 'WBP_CosmeticItemDisplay_C_SetHeaderSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetHeaderSlot, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_CosmeticItemDisplay_C_SetHeaderSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetHeaderSlot, K2Node_Select_Default) == 0x000003, "Member 'WBP_CosmeticItemDisplay_C_SetHeaderSlot::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetIsOwned
// 0x0005 (0x0005 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetIsOwned final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetIsOwned) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetIsOwned");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetIsOwned) == 0x000005, "Wrong size on WBP_CosmeticItemDisplay_C_SetIsOwned");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetIsOwned, IsOwned) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetIsOwned::IsOwned' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetIsOwned, Temp_bool_Variable) == 0x000001, "Member 'WBP_CosmeticItemDisplay_C_SetIsOwned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetIsOwned, Temp_byte_Variable) == 0x000002, "Member 'WBP_CosmeticItemDisplay_C_SetIsOwned::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetIsOwned, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CosmeticItemDisplay_C_SetIsOwned::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetIsOwned, K2Node_Select_Default) == 0x000004, "Member 'WBP_CosmeticItemDisplay_C_SetIsOwned::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetItemOwned
// 0x0030 (0x0030 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetItemOwned final
{
public:
	class URHStoreItem*                           StoreItem_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsValid)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHHUDCommon*                           CallFunc_GetHUDCommon_HUD_Common;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetItemOwned) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetItemOwned");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetItemOwned) == 0x000030, "Wrong size on WBP_CosmeticItemDisplay_C_SetItemOwned");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetItemOwned, StoreItem_0) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetItemOwned::StoreItem_0' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetItemOwned, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetItemOwned::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetItemOwned, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_SetItemOwned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetItemOwned, CallFunc_GetHUDCommon_HUD_Common) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_SetItemOwned::CallFunc_GetHUDCommon_HUD_Common' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetItemOwned, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000028, "Member 'WBP_CosmeticItemDisplay_C_SetItemOwned::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetMaterialUnderlay
// 0x0018 (0x0018 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetMaterialUnderlay final
{
public:
	class UPlatformInventoryItem*                 InventoryItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetMaterialUnderlay) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetMaterialUnderlay");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetMaterialUnderlay) == 0x000018, "Wrong size on WBP_CosmeticItemDisplay_C_SetMaterialUnderlay");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetMaterialUnderlay, InventoryItem) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetMaterialUnderlay::InventoryItem' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetMaterialUnderlay, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetMaterialUnderlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetMaterialUnderlay, CallFunc_GetItemIconInfo_ReturnValue) == 0x000010, "Member 'WBP_CosmeticItemDisplay_C_SetMaterialUnderlay::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetOwnershipViaCanOwnMore
// 0x0020 (0x0020 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore final
{
public:
	class ARHHUDCommon*                           CallFunc_GetHUDCommon_HUD_Common;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsValid)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore) == 0x000020, "Wrong size on WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore, CallFunc_GetHUDCommon_HUD_Common) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore::CallFunc_GetHUDCommon_HUD_Common' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_SetOwnershipViaCanOwnMore::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetQuantityText
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetQuantityText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLootQuantity_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetQuantityText) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetQuantityText");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetQuantityText) == 0x0000A0, "Wrong size on WBP_CosmeticItemDisplay_C_SetQuantityText");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, CallFunc_GetLootQuantity_ReturnValue) == 0x000004, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::CallFunc_GetLootQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetQuantityText, CallFunc_Format_ReturnValue) == 0x000088, "Member 'WBP_CosmeticItemDisplay_C_SetQuantityText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetSlotActive
// 0x0001 (0x0001 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetSlotActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetSlotActive) == 0x000001, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetSlotActive");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetSlotActive) == 0x000001, "Wrong size on WBP_CosmeticItemDisplay_C_SetSlotActive");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetSlotActive, Active) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetSlotActive::Active' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetupItemDisplay
// 0x0070 (0x0070 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetupItemDisplay final
{
public:
	class UPlatformInventoryItem*                 PlatformInventoryItem;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHCurrency*                            K2Node_DynamicCast_AsRHCurrency;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCosmeticSlotDetails                   K2Node_MakeStruct_CosmeticSlotDetails;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FCosmeticSlotDetails                   K2Node_MakeStruct_CosmeticSlotDetails_1;           // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetupItemDisplay) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetupItemDisplay");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetupItemDisplay) == 0x000070, "Wrong size on WBP_CosmeticItemDisplay_C_SetupItemDisplay");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, PlatformInventoryItem) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::PlatformInventoryItem' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_DynamicCast_AsRHCurrency) == 0x000008, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_DynamicCast_AsRHCurrency' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_DynamicCast_AsHWCollection_Item) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_MakeStruct_CosmeticSlotDetails) == 0x000028, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_MakeStruct_CosmeticSlotDetails' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, Temp_bool_Variable) == 0x000038, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, CallFunc_GetItemIconInfo_ReturnValue) == 0x000040, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_MakeStruct_CosmeticSlotDetails_1) == 0x000048, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_MakeStruct_CosmeticSlotDetails_1' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, CallFunc_GetIconInfoByTag_OutIcon) == 0x000058, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000060, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupItemDisplay, K2Node_Select_Default) == 0x000068, "Member 'WBP_CosmeticItemDisplay_C_SetupItemDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CosmeticItemDisplay.WBP_CosmeticItemDisplay_C.SetupPriceData
// 0x0028 (0x0028 - 0x0000)
struct WBP_CosmeticItemDisplay_C_SetupPriceData final
{
public:
	TDelegate<void(bool IsValid)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHHUDCommon*                           CallFunc_GetHUDCommon_HUD_Common;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CosmeticItemDisplay_C_SetupPriceData) == 0x000008, "Wrong alignment on WBP_CosmeticItemDisplay_C_SetupPriceData");
static_assert(sizeof(WBP_CosmeticItemDisplay_C_SetupPriceData) == 0x000028, "Wrong size on WBP_CosmeticItemDisplay_C_SetupPriceData");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupPriceData, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_CosmeticItemDisplay_C_SetupPriceData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupPriceData, CallFunc_GetHUDCommon_HUD_Common) == 0x000010, "Member 'WBP_CosmeticItemDisplay_C_SetupPriceData::CallFunc_GetHUDCommon_HUD_Common' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupPriceData, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000018, "Member 'WBP_CosmeticItemDisplay_C_SetupPriceData::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CosmeticItemDisplay_C_SetupPriceData, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_CosmeticItemDisplay_C_SetupPriceData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

