#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_Bastion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Deployable_Bastion.BP_Deployable_Bastion_C
// 0x0050 (0x0518 - 0x04C8)
class ABP_Deployable_Bastion_C final : public AHWDeployable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        LoopingSFX;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HelpTipComponent_C*                 BP_HelpTipComponent;                               // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWDisplayInfoComponent*                HWDisplayInfo;                                     // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHWStaticMeshComponent*                 HWStaticMesh;                                      // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DamageToOwnerMultiplier;                           // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DeathFX;                                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         HitFX;                                             // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCore;                                            // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyDamageToStructures(const struct FDamageEventData& DamageEventData);
	void Die(const struct FDamageEventData& DeathDamageReceivedEvent);
	void ExecuteUbergraph_BP_Deployable_Bastion(int32 EntryPoint);
	void MulticastPlayDeathFX();
	void MulticastPlayHitFX();
	void OnDamageTaken(const struct FDamageEventData& DamageEvent);
	void ReceiveBeginPlay();
	void RegisterWithOwner(bool* Return);
	void SendSignalToOwner();
	void ToggleBackdoorProtection(bool ShouldEnable);

	float GetLifeStealEffectiveness() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Deployable_Bastion_C">();
	}
	static class ABP_Deployable_Bastion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Deployable_Bastion_C>();
	}
};
static_assert(alignof(ABP_Deployable_Bastion_C) == 0x000008, "Wrong alignment on ABP_Deployable_Bastion_C");
static_assert(sizeof(ABP_Deployable_Bastion_C) == 0x000518, "Wrong size on ABP_Deployable_Bastion_C");
static_assert(offsetof(ABP_Deployable_Bastion_C, UberGraphFrame) == 0x0004C8, "Member 'ABP_Deployable_Bastion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, LoopingSFX) == 0x0004D0, "Member 'ABP_Deployable_Bastion_C::LoopingSFX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, BP_HelpTipComponent) == 0x0004D8, "Member 'ABP_Deployable_Bastion_C::BP_HelpTipComponent' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, Scene) == 0x0004E0, "Member 'ABP_Deployable_Bastion_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, HWDisplayInfo) == 0x0004E8, "Member 'ABP_Deployable_Bastion_C::HWDisplayInfo' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, HWStaticMesh) == 0x0004F0, "Member 'ABP_Deployable_Bastion_C::HWStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, DamageToOwnerMultiplier) == 0x0004F8, "Member 'ABP_Deployable_Bastion_C::DamageToOwnerMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, DeathFX) == 0x000500, "Member 'ABP_Deployable_Bastion_C::DeathFX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, HitFX) == 0x000508, "Member 'ABP_Deployable_Bastion_C::HitFX' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Bastion_C, IsCore) == 0x000510, "Member 'ABP_Deployable_Bastion_C::IsCore' has a wrong offset!");

}

