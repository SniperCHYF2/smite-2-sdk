#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodHealthBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_3_OnEffectTrackStarted__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_GodHealthBar_C_BndEvt__WBP_G_V2_GodHealthBar_DamageImmunityListener_K2Node_ComponentBoundEvent_4_OnEffectTrackEnded__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	float                                         ShieldHealthValue;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0, ShieldHealthValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0::ShieldHealthValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0, CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_0::CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000018, "Wrong size on WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1, CurrentHealth) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1::CurrentHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1, MaxHealth) == 0x000004, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1::MaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1, CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1::CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1, CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_CREATEDELEGATE_PROXYFUNCTION_1::CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.ExecuteUbergraph_WBP_G_V2_GodHealthBar
// 0x1C10 (0x1C10 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect_3;         // 0x0008(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData_3;           // 0x0408(0x0300)(ConstParm)
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect_2;         // 0x0708(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData_2;           // 0x0B08(0x0300)(ConstParm)
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect_1;         // 0x0E08(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData_1;           // 0x1208(0x0300)(ConstParm)
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect;           // 0x1508(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData;             // 0x1908(0x0300)(ConstParm)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x1C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar) == 0x001C10, "Wrong size on WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, EntryPoint) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_ActiveEffect_3) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_ActiveEffect_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_EffectData_3) == 0x000408, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_EffectData_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_ActiveEffect_2) == 0x000708, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_ActiveEffect_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_EffectData_2) == 0x000B08, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_EffectData_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_ActiveEffect_1) == 0x000E08, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_ActiveEffect_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_EffectData_1) == 0x001208, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_EffectData_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_ActiveEffect) == 0x001508, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, K2Node_ComponentBoundEvent_EffectData) == 0x001908, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::K2Node_ComponentBoundEvent_EffectData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x001C08, "Member 'WBP_G_V2_GodHealthBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthBar::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.Handle Health Values Updated
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Health_Text_Shield_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated) == 0x000018, "Wrong size on WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated, Health) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated::Health' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated, MaxHealth) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated::MaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated, CallFunc_Update_Health_Text_Shield_ImplicitCast) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Health_Values_Updated::CallFunc_Update_Health_Text_Shield_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.Handle Shield Value Updated
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated final
{
public:
	double                                        ShieldValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Health_Text_MaxHealth_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Health_Text_Health_ImplicitCast;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated) == 0x000020, "Wrong size on WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated, ShieldValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated::ShieldValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated, CallFunc_GetMaxHealth_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated, CallFunc_GetCurrentHealth_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated, CallFunc_Update_Health_Text_MaxHealth_ImplicitCast) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated::CallFunc_Update_Health_Text_MaxHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated, CallFunc_Update_Health_Text_Health_ImplicitCast) == 0x000018, "Member 'WBP_G_V2_GodHealthBar_C_Handle_Shield_Value_Updated::CallFunc_Update_Health_Text_Health_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.InitializeWidget
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_InitializeWidget final
{
public:
	TDelegate<void(float CurrentHealth, float MaxHealth)> K2Node_CreateDelegate_OutputDelegate;      // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float ShieldHealthValue)>      K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_InitializeWidget");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_InitializeWidget) == 0x000048, "Wrong size on WBP_G_V2_GodHealthBar_C_InitializeWidget");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_GetCurrentHealth_ReturnValue) == 0x000020, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_GetMaxHealth_ReturnValue) == 0x000024, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast) == 0x000028, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_Handle_Shield_Value_Updated_ShieldValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast) == 0x000030, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_Handle_Health_Values_Updated_Health_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast) == 0x000038, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_Handle_Health_Values_Updated_MaxHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_InitializeWidget, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000040, "Member 'WBP_G_V2_GodHealthBar_C_InitializeWidget::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_GodHealthBar_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_GodHealthBar_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.Update Health Text
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_Update_Health_Text final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shield;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0190(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01A8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_Update_Health_Text) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_Update_Health_Text");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_Update_Health_Text) == 0x0001C8, "Wrong size on WBP_G_V2_GodHealthBar_C_Update_Health_Text");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, Health) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::Health' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, Shield) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::Shield' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, MaxHealth) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::MaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, Temp_bool_Variable) == 0x000018, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000020, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000038, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, Temp_byte_Variable) == 0x0000F0, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_MakeArray_Array) == 0x0000F8, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Format_ReturnValue) == 0x000108, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, Temp_byte_Variable_1) == 0x000120, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000128, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_MakeArray_Array_1) == 0x000190, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, CallFunc_Format_ReturnValue_1) == 0x0001A8, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_Update_Health_Text, K2Node_Select_Default) == 0x0001C0, "Member 'WBP_G_V2_GodHealthBar_C_Update_Health_Text::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.UpdateCCImmunityDisplay
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay final
{
public:
	class AHWSpectatorHUD*                        CallFunc_GetLocalHUDAsSpectator_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveEffectsCount_ReturnValue;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay) == 0x000040, "Wrong size on WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_GetLocalHUDAsSpectator_ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_GetLocalHUDAsSpectator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_GetEndTime_ReturnValue) == 0x00001C, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000030, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_GetActiveEffectsCount_ReturnValue) == 0x000038, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_GetActiveEffectsCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00003D, "Member 'WBP_G_V2_GodHealthBar_C_UpdateCCImmunityDisplay::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.UpdateDamageImmunityDisplay
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay final
{
public:
	class AHWSpectatorHUD*                        CallFunc_GetLocalHUDAsSpectator_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveEffectsCount_ReturnValue;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay) == 0x000048, "Wrong size on WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_GetLocalHUDAsSpectator_ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_GetLocalHUDAsSpectator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_GetEndTime_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_GetActiveEffectsCount_ReturnValue) == 0x000030, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_GetActiveEffectsCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000041, "Member 'WBP_G_V2_GodHealthBar_C_UpdateDamageImmunityDisplay::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.GetAttributeWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_GetAttributeWidgets final
{
public:
	TArray<class UHWGameplayAttributeWidget*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayAttributeWidget*>     K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_GetAttributeWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_GetAttributeWidgets");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_GetAttributeWidgets) == 0x000020, "Wrong size on WBP_G_V2_GodHealthBar_C_GetAttributeWidgets");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetAttributeWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_GetAttributeWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetAttributeWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_GetAttributeWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.GetCharacterWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_GetCharacterWidgets final
{
public:
	TArray<class UHWCharacterWidget*>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWCharacterWidget*>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_GetCharacterWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_GetCharacterWidgets");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_GetCharacterWidgets) == 0x000020, "Wrong size on WBP_G_V2_GodHealthBar_C_GetCharacterWidgets");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetCharacterWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_GetCharacterWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetCharacterWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_GetCharacterWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_G_V2_GodHealthBar.WBP_G_V2_GodHealthBar_C.GetEffectWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_GodHealthBar_C_GetEffectWidgets final
{
public:
	TArray<class UHWGameplayEffectWidget*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayEffectWidget*>        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_GodHealthBar_C_GetEffectWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthBar_C_GetEffectWidgets");
static_assert(sizeof(WBP_G_V2_GodHealthBar_C_GetEffectWidgets) == 0x000020, "Wrong size on WBP_G_V2_GodHealthBar_C_GetEffectWidgets");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetEffectWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GodHealthBar_C_GetEffectWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthBar_C_GetEffectWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_GodHealthBar_C_GetEffectWidgets::K2Node_MakeArray_Array' has a wrong offset!");

}

