#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Engine_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.AmmoEquipIconOverride
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride final
{
public:
	TSoftObjectPtr<class UTexture2D>              OverrideTexture;                                   // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride) == 0x000028, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride, OverrideTexture) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_AmmoEquipIconOverride::OverrideTexture' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature
// 0x0700 (0x0700 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature final
{
public:
	struct FActiveGameplayEffect                  ActiveEffect;                                      // 0x0000(0x0400)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWTrackedEffectData                   EffectData;                                        // 0x0400(0x0300)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature) == 0x000700, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature, ActiveEffect) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature::ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature, EffectData) == 0x000400, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BndEvt__WBP_G_V2_GodIItemDisplayEntry_Utility_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature::EffectData' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayAbilityPhase_Aiming
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Aiming::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayAbilityPhase_Fired
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Fired::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayAbilityPhase_Inactive
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_Inactive::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayAbilityPhase_PreFire
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAbilityPhase_PreFire::PreviousPhase' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayAmmo
// 0x000C (0x000C - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasEnough;                                        // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCount;                                          // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo) == 0x000004, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo) == 0x00000C, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo, AmmoCount) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo::AmmoCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo, bHasEnough) == 0x000004, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo::bHasEnough' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo, MaxCount) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayAmmo::MaxCount' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayCanEquipmentItemBeUpgraded
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded final
{
public:
	bool                                          bCanBeUpgraded;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded, bCanBeUpgraded) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayCanEquipmentItemBeUpgraded::bCanBeUpgraded' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayEquipment
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment final
{
public:
	const class UHWEquipmentItem*                 EquipmentInfo;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment, EquipmentInfo) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment::EquipmentInfo' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayInputTag
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag) == 0x000004, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag, Tag) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayInputTag::Tag' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayIsEquipmentItemComplete
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete final
{
public:
	bool                                          bIsComplete;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete, bIsComplete) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayIsEquipmentItemComplete::bIsComplete' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.DisplayStackCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount final
{
public:
	int32                                         StackCount;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackCount;                                     // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount) == 0x000004, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount, StackCount) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount::StackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount, MaxStackCount) == 0x000004, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_DisplayStackCount::MaxStackCount' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility
// 0x1030 (0x1030 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect_1;         // 0x0008(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData_1;           // 0x0408(0x0300)(ConstParm)
	struct FActiveGameplayEffect                  K2Node_ComponentBoundEvent_ActiveEffect;           // 0x0708(0x0400)(ConstParm)
	struct FHWTrackedEffectData                   K2Node_ComponentBoundEvent_EffectData;             // 0x0B08(0x0300)(ConstParm)
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_OverrideTexture;                      // 0x0E08(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0E31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E32[0x2];                                      // 0x0E32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_StackCount;                           // 0x0E34(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxStackCount;                        // 0x0E38(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0E3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3D[0x3];                                      // 0x0E3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0E40(0x0018)()
	int32                                         K2Node_Event_AmmoCount;                            // 0x0E58(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasEnough;                           // 0x0E5C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5D[0x3];                                      // 0x0E5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MaxCount;                             // 0x0E60(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0E64(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9C[0x4];                                      // 0x0E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0EA0(0x0078)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F19[0x7];                                      // 0x0F19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0F20(0x0018)()
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0F38(0x0078)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0FB0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x1000(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1010(0x0018)()
	bool                                          CallFunc_GetIsSwappingActive_ReturnValue;          // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility) == 0x001030, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, EntryPoint) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_ComponentBoundEvent_ActiveEffect_1) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_ComponentBoundEvent_ActiveEffect_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_ComponentBoundEvent_EffectData_1) == 0x000408, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_ComponentBoundEvent_EffectData_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_ComponentBoundEvent_ActiveEffect) == 0x000708, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_ComponentBoundEvent_ActiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_ComponentBoundEvent_EffectData) == 0x000B08, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_ComponentBoundEvent_EffectData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_OverrideTexture) == 0x000E08, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_OverrideTexture' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000E30, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000E31, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_StackCount) == 0x000E34, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_StackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_MaxStackCount) == 0x000E38, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_MaxStackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_Greater_IntInt_ReturnValue) == 0x000E3C, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_Conv_IntToText_ReturnValue) == 0x000E40, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_AmmoCount) == 0x000E58, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_AmmoCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_bHasEnough) == 0x000E5C, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_bHasEnough' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_MaxCount) == 0x000E60, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_MaxCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_MyGeometry) == 0x000E64, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_MouseEvent_1) == 0x000EA0, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000F18, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000F20, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_Event_MouseEvent) == 0x000F38, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_MakeStruct_FormatArgumentData) == 0x000FB0, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, K2Node_MakeArray_Array) == 0x001000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_Format_ReturnValue) == 0x001010, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility, CallFunc_GetIsSwappingActive_ReturnValue) == 0x001028, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_ExecuteUbergraph_WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility::CallFunc_GetIsSwappingActive_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.HandleMouseClick
// 0x0088 (0x0088 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick final
{
public:
	struct FHWInventorySlot                       CallFunc_GetEquipmentSlot_ReturnValue;             // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentInstance*                   CallFunc_GetEquipmentInstance_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWEquipmentItem*                 CallFunc_GetEquipmentItem_ReturnValue;             // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWInventorySlot                       CallFunc_GetEquipmentSlot_ReturnValue_1;           // 0x0028(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentInstance*                   CallFunc_GetEquipmentInstance_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWEquipmentItem*                 CallFunc_GetEquipmentItem_ReturnValue_1;           // 0x0058(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWItemStoreManagerComponent*           CallFunc_GetItemStoreManagerComponent_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick) == 0x000088, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentSlot_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentInstance_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentItem_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentSlot_ReturnValue_1) == 0x000028, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetCurrentInputState_ReturnValue) == 0x000041, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, K2Node_SwitchEnum_CmpSuccess) == 0x000042, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentInstance_ReturnValue_1) == 0x000048, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetEquipmentItem_ReturnValue_1) == 0x000058, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetEquipmentItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_IsValid_ReturnValue_3) == 0x000068, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000070, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick, CallFunc_GetItemStoreManagerComponent_ReturnValue) == 0x000080, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandleMouseClick::CallFunc_GetItemStoreManagerComponent_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.HandlePlayerInputTypeChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged final
{
public:
	ERH_INPUT_STATE                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged) == 0x000002, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged, NewState) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged::NewState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_HandlePlayerInputTypeChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.InitializeWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_InitializeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnClicked
// 0x0068 (0x0068 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked final
{
public:
	struct FHWInventorySlot                       CallFunc_GetEquipmentSlot_ReturnValue;             // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FHWInventorySlot                       CallFunc_GetEquipmentSlot_ReturnValue_1;           // 0x000C(0x000C)(NoDestructor, HasGetValueTypeHash)
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentInstance*                   CallFunc_GetEquipmentInstance_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWEquipmentItem*                 CallFunc_GetEquipmentItem_ReturnValue;             // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWItemStoreManagerComponent*           CallFunc_GetItemStoreManagerComponent_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked) == 0x000068, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetEquipmentSlot_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetEquipmentSlot_ReturnValue_1) == 0x00000C, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetEquipmentSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetCurrentInputState_ReturnValue) == 0x000021, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetEquipmentInstance_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetEquipmentInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetEquipmentItem_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetEquipmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000050, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked, CallFunc_GetItemStoreManagerComponent_ReturnValue) == 0x000060, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnClicked::CallFunc_GetItemStoreManagerComponent_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnHover
// 0x0058 (0x0058 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover final
{
public:
	class UHWEquipmentInstance*                   CallFunc_GetEquipmentInstance_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWInventorySlot                       CallFunc_GetEquipmentSlot_ReturnValue;             // 0x0008(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWEquipmentItem*                 CallFunc_GetEquipmentItem_ReturnValue;             // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWItemStoreManagerComponent*           CallFunc_GetItemStoreManagerComponent_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSwappingActive_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover) == 0x000058, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetEquipmentInstance_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetEquipmentInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetEquipmentSlot_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetEquipmentItem_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetEquipmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000028, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetItemStoreManagerComponent_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetItemStoreManagerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000048, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetCurrentInputState_ReturnValue) == 0x000051, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, CallFunc_GetIsSwappingActive_ReturnValue) == 0x000052, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::CallFunc_GetIsSwappingActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover, K2Node_SwitchEnum_CmpSuccess) == 0x000053, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnHover::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnMouseButtonDown_0
// 0x0220 (0x0220 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0) == 0x000220, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0, MyGeometry) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0, MouseEvent) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0, ReturnValue) == 0x0000B0, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnMouseButtonUp_0
// 0x0220 (0x0220 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0) == 0x000220, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0, MyGeometry) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0, MouseEvent) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0, ReturnValue) == 0x0000B0, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseButtonUp_0::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.OnUnhover
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover final
{
public:
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover) == 0x000018, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover, CallFunc_GetCurrentInputState_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_OnUnhover::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.PlayPhaseAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation final
{
public:
	EHWUIAbilityFlowPhase                         PreviousPhase;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                PhaseWidget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PhaseAnim;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoopAnimation;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation) == 0x000020, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation, PreviousPhase) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation::PreviousPhase' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation, PhaseWidget) == 0x000008, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation::PhaseWidget' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation, PhaseAnim) == 0x000010, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation::PhaseAnim' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation, bLoopAnimation) == 0x000018, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PlayPhaseAnimation::bLoopAnimation' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.SetDisplayOrientation
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation final
{
public:
	EHWOrientation                                InOrientation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation, InOrientation) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_SetDisplayOrientation::InOrientation' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.StopPhaseAnimation
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation final
{
public:
	EHWUIAbilityFlowPhase                         PhaseAnimation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation, PhaseAnimation) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_StopPhaseAnimation::PhaseAnimation' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.Update Grayscale
// 0x0003 (0x0003 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale final
{
public:
	bool                                          CallFunc_IsCooldownActive_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale) == 0x000003, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale, CallFunc_IsCooldownActive_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale::CallFunc_IsCooldownActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_Update_Grayscale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility.WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_GodItemDisplayEntry_Utility_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

