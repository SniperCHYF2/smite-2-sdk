#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_GloriousPridwen

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Items_GloriousPridwen.GA_Items_GloriousPridwen_C.ExecuteUbergraph_GA_Items_GloriousPridwen
// 0x00C0 (0x00C0 - 0x0000)
struct GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_FireAttack*              K2Node_Event_AttackTask;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAbilityAttackInstance               K2Node_Event_Attack;                               // 0x0010(0x0080)(ConstParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_Event_TargetListHandle;                     // 0x0090(0x0028)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen) == 0x000008, "Wrong alignment on GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen");
static_assert(sizeof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen) == 0x0000C0, "Wrong size on GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen");
static_assert(offsetof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen, EntryPoint) == 0x000000, "Member 'GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen, K2Node_Event_AttackTask) == 0x000008, "Member 'GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen::K2Node_Event_AttackTask' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen, K2Node_Event_Attack) == 0x000010, "Member 'GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen::K2Node_Event_Attack' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen, K2Node_Event_TargetListHandle) == 0x000090, "Member 'GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen::K2Node_Event_TargetListHandle' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000B8, "Member 'GA_Items_GloriousPridwen_C_ExecuteUbergraph_GA_Items_GloriousPridwen::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Items_GloriousPridwen.GA_Items_GloriousPridwen_C.OnAttackFired
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Items_GloriousPridwen_C_OnAttackFired final
{
public:
	class UHWAbilityTask_FireAttack*              AttackTask;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHWAbilityAttackInstance               Attack;                                            // 0x0008(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayAbilityTargetDataHandle       TargetListHandle;                                  // 0x0088(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Items_GloriousPridwen_C_OnAttackFired) == 0x000008, "Wrong alignment on GA_Items_GloriousPridwen_C_OnAttackFired");
static_assert(sizeof(GA_Items_GloriousPridwen_C_OnAttackFired) == 0x0000B0, "Wrong size on GA_Items_GloriousPridwen_C_OnAttackFired");
static_assert(offsetof(GA_Items_GloriousPridwen_C_OnAttackFired, AttackTask) == 0x000000, "Member 'GA_Items_GloriousPridwen_C_OnAttackFired::AttackTask' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_OnAttackFired, Attack) == 0x000008, "Member 'GA_Items_GloriousPridwen_C_OnAttackFired::Attack' has a wrong offset!");
static_assert(offsetof(GA_Items_GloriousPridwen_C_OnAttackFired, TargetListHandle) == 0x000088, "Member 'GA_Items_GloriousPridwen_C_OnAttackFired::TargetListHandle' has a wrong offset!");

}

