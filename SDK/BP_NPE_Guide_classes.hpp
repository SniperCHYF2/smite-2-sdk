#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_Guide

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Hemingway_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPE_Guide.BP_NPE_Guide_C
// 0x0188 (0x0420 - 0x0298)
class ABP_NPE_Guide_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_NPE_GuideComponent_C*               BP_NPE_GuideComponent;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HelpTipComponent_C*                 BP_HelpTipComponent;                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerState*                         PlayerState;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ECharacterRole                                PlayerRole;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      PlayerPawn;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentStage;                                      // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NPESettingName;                                    // 0x02D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NPE_Waypoint_C*>             Waypoints;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          AbortOnRoleChange;                                 // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowTractsToChangeRole;                           // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterRole                                DefaultTract;                                      // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GuideInProgress;                                   // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_NPE_Checkpoint_C>    TEMP_Order;                                        // 0x02F8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_NPE_Checkpoint_C>    TEMP_Chaos;                                        // 0x0320(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ECharacterRole                                DEBUGROLE;                                         // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bShow, const struct FGameplayTagContainer& HUDElementTags)> OnNPEHUDEvent; // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<ECharacterRole, struct FGameplayTag>     RoleTracts;                                        // 0x0360(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UBP_NPE_Guide_Tract_C*> TractsMap;                               // 0x03B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnNPEGuideStageTrigger;                            // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnNPEGuideStageEnd;                                // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_NPE_Guide(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPE_Guide_C">();
	}
	static class ABP_NPE_Guide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPE_Guide_C>();
	}
};
static_assert(alignof(ABP_NPE_Guide_C) == 0x000008, "Wrong alignment on ABP_NPE_Guide_C");
static_assert(sizeof(ABP_NPE_Guide_C) == 0x000420, "Wrong size on ABP_NPE_Guide_C");
static_assert(offsetof(ABP_NPE_Guide_C, UberGraphFrame) == 0x000298, "Member 'ABP_NPE_Guide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, BP_NPE_GuideComponent) == 0x0002A0, "Member 'ABP_NPE_Guide_C::BP_NPE_GuideComponent' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, Billboard) == 0x0002A8, "Member 'ABP_NPE_Guide_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, BP_HelpTipComponent) == 0x0002B0, "Member 'ABP_NPE_Guide_C::BP_HelpTipComponent' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, PlayerState) == 0x0002B8, "Member 'ABP_NPE_Guide_C::PlayerState' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, PlayerRole) == 0x0002C0, "Member 'ABP_NPE_Guide_C::PlayerRole' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, PlayerPawn) == 0x0002C8, "Member 'ABP_NPE_Guide_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, CurrentStage) == 0x0002D0, "Member 'ABP_NPE_Guide_C::CurrentStage' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, NPESettingName) == 0x0002D4, "Member 'ABP_NPE_Guide_C::NPESettingName' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, Waypoints) == 0x0002E0, "Member 'ABP_NPE_Guide_C::Waypoints' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, AbortOnRoleChange) == 0x0002F0, "Member 'ABP_NPE_Guide_C::AbortOnRoleChange' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, AllowTractsToChangeRole) == 0x0002F1, "Member 'ABP_NPE_Guide_C::AllowTractsToChangeRole' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, DefaultTract) == 0x0002F2, "Member 'ABP_NPE_Guide_C::DefaultTract' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, GuideInProgress) == 0x0002F3, "Member 'ABP_NPE_Guide_C::GuideInProgress' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, TEMP_Order) == 0x0002F8, "Member 'ABP_NPE_Guide_C::TEMP_Order' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, TEMP_Chaos) == 0x000320, "Member 'ABP_NPE_Guide_C::TEMP_Chaos' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, DEBUGROLE) == 0x000348, "Member 'ABP_NPE_Guide_C::DEBUGROLE' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, Debug) == 0x000349, "Member 'ABP_NPE_Guide_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, OnNPEHUDEvent) == 0x000350, "Member 'ABP_NPE_Guide_C::OnNPEHUDEvent' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, RoleTracts) == 0x000360, "Member 'ABP_NPE_Guide_C::RoleTracts' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, TractsMap) == 0x0003B0, "Member 'ABP_NPE_Guide_C::TractsMap' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, OnNPEGuideStageTrigger) == 0x000400, "Member 'ABP_NPE_Guide_C::OnNPEGuideStageTrigger' has a wrong offset!");
static_assert(offsetof(ABP_NPE_Guide_C, OnNPEGuideStageEnd) == 0x000410, "Member 'ABP_NPE_Guide_C::OnNPEGuideStageEnd' has a wrong offset!");

}

