#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetailsAbilityOverviewWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_GodDetailsAbilityOverviewWidget.WBP_C_GodDetailsAbilityOverviewWidget_C.NavigateToGodAspect
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect) == 0x000008, "Wrong alignment on WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect");
static_assert(sizeof(WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect) == 0x000018, "Wrong size on WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect, Navigation_0) == 0x000000, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect, ReturnValue) == 0x000008, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_NavigateToGodAspect::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetailsAbilityOverviewWidget.WBP_C_GodDetailsAbilityOverviewWidget_C.OnHide
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide final
{
public:
	class UHWStoreSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide) == 0x000008, "Wrong alignment on WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide");
static_assert(sizeof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide) == 0x000008, "Wrong size on WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_OnHide::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetailsAbilityOverviewWidget.WBP_C_GodDetailsAbilityOverviewWidget_C.OnShown
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown final
{
public:
	class UHWStoreSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWPlayerInfo*                          CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWFoundersOwnershipLevel                     CallFunc_GetPlayerFoundersOwnershipLevel_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown) == 0x000008, "Wrong alignment on WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown");
static_assert(sizeof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown) == 0x000018, "Wrong size on WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000008, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown, CallFunc_GetPlayerFoundersOwnershipLevel_ReturnValue) == 0x000010, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown::CallFunc_GetPlayerFoundersOwnershipLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_OnShown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetailsAbilityOverviewWidget.WBP_C_GodDetailsAbilityOverviewWidget_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_C_GodDetailsAbilityOverviewWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

}

