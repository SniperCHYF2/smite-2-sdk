#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Play_Seige_AttackTower

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Play_Seige_AttackTower.BP_AIGoal_Play_Seige_AttackTower_C.CheckPreconditionsBP
// 0x0068 (0x0068 - 0x0000)
struct BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPercentage_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTowerBeingTankedByOtherCharacter_IsTankedByOtherCharacter; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentPlayStateEqualTo_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP) == 0x000068, "Wrong size on BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_GetHealthPercentage_ReturnValue) == 0x00002C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_GetHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_IsTowerBeingTankedByOtherCharacter_IsTankedByOtherCharacter) == 0x000030, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_IsTowerBeingTankedByOtherCharacter_IsTankedByOtherCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000031, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x000034, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable) == 0x000038, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue) == 0x00003C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000040, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_IsCurrentPlayStateEqualTo_ReturnValue) == 0x000049, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_IsCurrentPlayStateEqualTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x00004B, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00004D, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00004E, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000060, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_AttackTower.BP_AIGoal_Play_Seige_AttackTower_C.IsATank
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_Play_Seige_AttackTower_C_IsATank final
{
public:
	const class AHWCharacter_Base*                Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bMustBeHealthy;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsATankAndHealthy;                                // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSoloRole_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSupportRole_ReturnValue;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_AttackTower_C_IsATank");
static_assert(sizeof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank) == 0x000010, "Wrong size on BP_AIGoal_Play_Seige_AttackTower_C_IsATank");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, Character) == 0x000000, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::Character' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, bMustBeHealthy) == 0x000008, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::bMustBeHealthy' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, bIsATankAndHealthy) == 0x000009, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::bIsATankAndHealthy' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, CallFunc_IsCharacterSoloRole_ReturnValue) == 0x00000A, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::CallFunc_IsCharacterSoloRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, CallFunc_IsCharacterSupportRole_ReturnValue) == 0x00000B, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::CallFunc_IsCharacterSupportRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsATank, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsATank::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_AttackTower.BP_AIGoal_Play_Seige_AttackTower_C.IsPlayActorDamageable
// 0x0050 (0x0050 - 0x0000)
struct BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable final
{
public:
	class AActor*                                 PlayActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayActorDamageable;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageable;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable");
static_assert(sizeof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable) == 0x000050, "Wrong size on BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, PlayActor) == 0x000000, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::PlayActor' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, bIsPlayActorDamageable) == 0x000008, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::bIsPlayActorDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, bDamageable) == 0x000009, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::bDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, K2Node_DynamicCast_AsHWBot_Factory) == 0x000010, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsPlayActorDamageable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_AttackTower.BP_AIGoal_Play_Seige_AttackTower_C.IsTowerBeingTankedByOtherCharacter
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter final
{
public:
	class AActor*                                 InPlayActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      InCharacter;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTankedByOtherCharacter;                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      Tower;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter");
static_assert(sizeof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter) == 0x000058, "Wrong size on BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, InPlayActor) == 0x000000, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::InPlayActor' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, InCharacter) == 0x000008, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::InCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, IsTankedByOtherCharacter) == 0x000010, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::IsTankedByOtherCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, Tower) == 0x000018, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::Tower' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000023, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, K2Node_DynamicCast_AsHWBot_Factory) == 0x000038, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_IsValid_ReturnValue_3) == 0x000041, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_AIGoal_Play_Seige_AttackTower_C_IsTowerBeingTankedByOtherCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

