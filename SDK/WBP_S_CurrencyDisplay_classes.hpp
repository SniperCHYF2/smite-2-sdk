#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_CurrencyDisplay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_CurrencyDisplay.WBP_S_CurrencyDisplay_C
// 0x0068 (0x0680 - 0x0618)
class UWBP_S_CurrencyDisplay_C final : public UHWCurrencyDisplayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0618(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWSizeBox*                             Amount_SizeBox;                                    // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           CurrencyAmount;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URHAsyncImage*                          CurrencyIcon;                                      // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             IconLoadingThrobber_SizeBox;                       // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             LoadingThrobber_SizeBox;                           // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      Pricing;                                           // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Strikethrough;                                     // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LoadingThrobber_C*                 WBP_LoadingThrobber;                               // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LoadingThrobber_C*                 WBP_LoadingThrobber_2;                             // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBoxContainer;                                  // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EOrientation                                  Orientation;                                       // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayDiscounted;                                // 0x0671(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672[0x2];                                      // 0x0672(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrencyLimit;                                     // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGameplayTag                           FontColorTag;                                      // 0x0678(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void DisplayCurrency(const class URHCurrency* CURRENCY, bool bIsLoading);
	void DisplayCurrencyAmount(int32 NewAmount, bool bIsLessThanOwned);
	void ExecuteUbergraph_WBP_S_CurrencyDisplay(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetOrientation(EOrientation InOrientation);
	void SetTextforPricing(int32 Index_0);
	void UpdateIsCurrencyDisplayEnabled(bool bIsCurrencyEnabled);
	void UpdateSaleDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_CurrencyDisplay_C">();
	}
	static class UWBP_S_CurrencyDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_CurrencyDisplay_C>();
	}
};
static_assert(alignof(UWBP_S_CurrencyDisplay_C) == 0x000008, "Wrong alignment on UWBP_S_CurrencyDisplay_C");
static_assert(sizeof(UWBP_S_CurrencyDisplay_C) == 0x000680, "Wrong size on UWBP_S_CurrencyDisplay_C");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, UberGraphFrame) == 0x000618, "Member 'UWBP_S_CurrencyDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, Amount_SizeBox) == 0x000620, "Member 'UWBP_S_CurrencyDisplay_C::Amount_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, CurrencyAmount) == 0x000628, "Member 'UWBP_S_CurrencyDisplay_C::CurrencyAmount' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, CurrencyIcon) == 0x000630, "Member 'UWBP_S_CurrencyDisplay_C::CurrencyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, IconLoadingThrobber_SizeBox) == 0x000638, "Member 'UWBP_S_CurrencyDisplay_C::IconLoadingThrobber_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, LoadingThrobber_SizeBox) == 0x000640, "Member 'UWBP_S_CurrencyDisplay_C::LoadingThrobber_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, Pricing) == 0x000648, "Member 'UWBP_S_CurrencyDisplay_C::Pricing' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, Strikethrough) == 0x000650, "Member 'UWBP_S_CurrencyDisplay_C::Strikethrough' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, WBP_LoadingThrobber) == 0x000658, "Member 'UWBP_S_CurrencyDisplay_C::WBP_LoadingThrobber' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, WBP_LoadingThrobber_2) == 0x000660, "Member 'UWBP_S_CurrencyDisplay_C::WBP_LoadingThrobber_2' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, WrapBoxContainer) == 0x000668, "Member 'UWBP_S_CurrencyDisplay_C::WrapBoxContainer' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, Orientation) == 0x000670, "Member 'UWBP_S_CurrencyDisplay_C::Orientation' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, bDisplayDiscounted) == 0x000671, "Member 'UWBP_S_CurrencyDisplay_C::bDisplayDiscounted' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, CurrencyLimit) == 0x000674, "Member 'UWBP_S_CurrencyDisplay_C::CurrencyLimit' has a wrong offset!");
static_assert(offsetof(UWBP_S_CurrencyDisplay_C, FontColorTag) == 0x000678, "Member 'UWBP_S_CurrencyDisplay_C::FontColorTag' has a wrong offset!");

}

