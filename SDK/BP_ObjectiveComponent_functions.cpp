#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ObjectiveComponent

#include "Basic.hpp"

#include "BP_ObjectiveComponent_classes.hpp"
#include "BP_ObjectiveComponent_parameters.hpp"


namespace SDK
{

// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.EndPhase
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_ObjectiveComponent_C::EndPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "EndPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.ExecuteUbergraph_BP_ObjectiveComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::ExecuteUbergraph_BP_ObjectiveComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "ExecuteUbergraph_BP_ObjectiveComponent");

	Params::BP_ObjectiveComponent_C_ExecuteUbergraph_BP_ObjectiveComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.GoToPhase
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NextPhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  DurationOverride                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::GoToPhase(const struct FGameplayTag& NextPhase, double DurationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "GoToPhase");

	Params::BP_ObjectiveComponent_C_GoToPhase Parms{};

	Parms.NextPhase = std::move(NextPhase);
	Parms.DurationOverride = DurationOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.MulticastObjectivePhaseEnd
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PrevPhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              NextPhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::MulticastObjectivePhaseEnd(const struct FGameplayTag& PrevPhase, const struct FGameplayTag& NextPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "MulticastObjectivePhaseEnd");

	Params::BP_ObjectiveComponent_C_MulticastObjectivePhaseEnd Parms{};

	Parms.PrevPhase = std::move(PrevPhase);
	Parms.NextPhase = std::move(NextPhase);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.MulticastObjectivePhaseStart
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CurrentPhase                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  PhaseDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::MulticastObjectivePhaseStart(const struct FGameplayTag& CurrentPhase, double PhaseDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "MulticastObjectivePhaseStart");

	Params::BP_ObjectiveComponent_C_MulticastObjectivePhaseStart Parms{};

	Parms.CurrentPhase = std::move(CurrentPhase);
	Parms.PhaseDuration = PhaseDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.PauseCurrentPhase
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ObjectiveComponent_C::PauseCurrentPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "PauseCurrentPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.ResumeCurrentPhase
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ObjectiveComponent_C::ResumeCurrentPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "ResumeCurrentPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.StartPhase
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DurationOverride                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::StartPhase(double DurationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "StartPhase");

	Params::BP_ObjectiveComponent_C_StartPhase Parms{};

	Parms.DurationOverride = DurationOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.GetCurrentObjectivePhaseDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// double*                                 PhaseDuration                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::GetCurrentObjectivePhaseDuration(double* PhaseDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "GetCurrentObjectivePhaseDuration");

	Params::BP_ObjectiveComponent_C_GetCurrentObjectivePhaseDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PhaseDuration != nullptr)
		*PhaseDuration = Parms.PhaseDuration;
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.GetCurrentObjectivePhaseElapsedTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// double*                                 ElapsedTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::GetCurrentObjectivePhaseElapsedTime(double* ElapsedTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "GetCurrentObjectivePhaseElapsedTime");

	Params::BP_ObjectiveComponent_C_GetCurrentObjectivePhaseElapsedTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.GetCurrentObjectivePhaseRemainingTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// double*                                 RemainingTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::GetCurrentObjectivePhaseRemainingTime(double* RemainingTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "GetCurrentObjectivePhaseRemainingTime");

	Params::BP_ObjectiveComponent_C_GetCurrentObjectivePhaseRemainingTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime != nullptr)
		*RemainingTime = Parms.RemainingTime;
}


// Function BP_ObjectiveComponent.BP_ObjectiveComponent_C.GetCurrentPhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*                    CurrentPhase                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_ObjectiveComponent_C::GetCurrentPhase(struct FGameplayTag* CurrentPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ObjectiveComponent_C", "GetCurrentPhase");

	Params::BP_ObjectiveComponent_C_GetCurrentPhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentPhase != nullptr)
		*CurrentPhase = std::move(Parms.CurrentPhase);
}

}

