#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_GS_UILibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "HemingwayUI_structs.hpp"
#include "Hemingway_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_GS_UILibrary.BPL_GS_UILibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_GS_UILibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void CheckToPlayCanNotFireSound(bool Can_Activate, bool HasRefireTimeRemaining, bool IsOnCooldown, bool DoesNotMeetCost, struct FGameplayTag& BlockTagReason, class UObject* World_Context, class UObject* __WorldContext);
	static void Format_Timer_Duration_Display(class AHWGameHUD* GameHUD, double TimerAsSeconds, bool DisplayFractional, class UObject* __WorldContext, class FText* OutText);
	static void GetFloatingNumberAsText(class UHWFloatingTextWidget* InWidget, struct FGameplayCueParameters& InParameters, int32& InNumber, class UObject* __WorldContext, class FText* OutText);
	static void GetKillstreakTextFromKillstreakTag(const struct FGameplayTag& KillstreakTag, class UObject* __WorldContext, bool* bFound, class FText* KillstreakText);
	static void GetMultikillTextFromMultikillTag(const struct FGameplayTag& MultikillTag, class UObject* __WorldContext, bool* bFound, class FText* MultikillText);
	static void UILibrary_GetSmiteTeamColorTag(EHWSmiteTeamId SmiteTeamId, class UObject* __WorldContext, struct FGameplayTag* ColorTag);
	static void UILibrary_GetTeamAttitudeColorTag(ETeamAttitude Attitude, class UObject* __WorldContext, struct FGameplayTag* ColorTag);
	static void UILibrary_GetTeamColorTag(struct FGenericTeamId& InTeamId, class UObject* __WorldContext, struct FGameplayTag* ColorTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_GS_UILibrary_C">();
	}
	static class UBPL_GS_UILibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_GS_UILibrary_C>();
	}
};
static_assert(alignof(UBPL_GS_UILibrary_C) == 0x000008, "Wrong alignment on UBPL_GS_UILibrary_C");
static_assert(sizeof(UBPL_GS_UILibrary_C) == 0x000028, "Wrong size on UBPL_GS_UILibrary_C");

}

