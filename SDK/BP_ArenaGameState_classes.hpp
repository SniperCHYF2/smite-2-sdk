#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArenaGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArenaGameState.BP_ArenaGameState_C
// 0x0020 (0x09F8 - 0x09D8)
class ABP_ArenaGameState_C : public AHWGameState_Arena
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         OrderDefeat;                                       // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         ChaosDefeat;                                       // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArenaGameState(int32 EntryPoint);
	void PlayEndSequence(const struct FGenericTeamId& Team);
	void PlayFireworkVFX(class AActor* fireworkActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArenaGameState_C">();
	}
	static class ABP_ArenaGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ArenaGameState_C>();
	}
};
static_assert(alignof(ABP_ArenaGameState_C) == 0x000008, "Wrong alignment on ABP_ArenaGameState_C");
static_assert(sizeof(ABP_ArenaGameState_C) == 0x0009F8, "Wrong size on ABP_ArenaGameState_C");
static_assert(offsetof(ABP_ArenaGameState_C, UberGraphFrame) == 0x0009D8, "Member 'ABP_ArenaGameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ArenaGameState_C, DefaultSceneRoot) == 0x0009E0, "Member 'ABP_ArenaGameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ArenaGameState_C, OrderDefeat) == 0x0009E8, "Member 'ABP_ArenaGameState_C::OrderDefeat' has a wrong offset!");
static_assert(offsetof(ABP_ArenaGameState_C, ChaosDefeat) == 0x0009F0, "Member 'ABP_ArenaGameState_C::ChaosDefeat' has a wrong offset!");

}

