#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SettingsSlider

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Value To Slider
// 0x0040 (0x0040 - 0x0000)
struct WBP_SettingsSlider_C_Value_To_Slider final
{
public:
	double                                        Slider_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxSliderValue_Max_Value;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Dirty_Value_Value;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Value_To_Slider) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Value_To_Slider");
static_assert(sizeof(WBP_SettingsSlider_C_Value_To_Slider) == 0x000040, "Wrong size on WBP_SettingsSlider_C_Value_To_Slider");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, Slider_Value) == 0x000000, "Member 'WBP_SettingsSlider_C_Value_To_Slider::Slider_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_GetMinSliderValue_Min_Value) == 0x000008, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_GetMinSliderValue_Min_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_GetMinSliderValue_Min_Value_1) == 0x000010, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_GetMinSliderValue_Min_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_GetMaxSliderValue_Max_Value) == 0x000018, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_GetMaxSliderValue_Max_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_Get_Dirty_Value_Value) == 0x000020, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_Get_Dirty_Value_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Value_To_Slider, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SettingsSlider_C_Value_To_Slider::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SettingsSlider_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Tick) == 0x000004, "Wrong alignment on WBP_SettingsSlider_C_Tick");
static_assert(sizeof(WBP_SettingsSlider_C_Tick) == 0x00003C, "Wrong size on WBP_SettingsSlider_C_Tick");
static_assert(offsetof(WBP_SettingsSlider_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SettingsSlider_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SettingsSlider_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step Right
// 0x0018 (0x0018 - 0x0000)
struct WBP_SettingsSlider_C_Step_Right final
{
public:
	float                                         CallFunc_GetRoundToNearest_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Step_Right) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Step_Right");
static_assert(sizeof(WBP_SettingsSlider_C_Step_Right) == 0x000018, "Wrong size on WBP_SettingsSlider_C_Step_Right");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Right, CallFunc_GetRoundToNearest_ReturnValue) == 0x000000, "Member 'WBP_SettingsSlider_C_Step_Right::CallFunc_GetRoundToNearest_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Right, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_Step_Right::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Right, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'WBP_SettingsSlider_C_Step_Right::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step Left
// 0x0020 (0x0020 - 0x0000)
struct WBP_SettingsSlider_C_Step_Left final
{
public:
	float                                         CallFunc_GetRoundToNearest_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Step_Left) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Step_Left");
static_assert(sizeof(WBP_SettingsSlider_C_Step_Left) == 0x000020, "Wrong size on WBP_SettingsSlider_C_Step_Left");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Left, CallFunc_GetRoundToNearest_ReturnValue) == 0x000000, "Member 'WBP_SettingsSlider_C_Step_Left::CallFunc_GetRoundToNearest_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Left, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_Step_Left::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Left, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'WBP_SettingsSlider_C_Step_Left::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step_Left, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'WBP_SettingsSlider_C_Step_Left::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step
// 0x0070 (0x0070 - 0x0000)
struct WBP_SettingsSlider_C_Step final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxSliderValue_Max_Value;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Slider_To_Value_Value;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value_2;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxSliderValue_Max_Value_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Step) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Step");
static_assert(sizeof(WBP_SettingsSlider_C_Step) == 0x000070, "Wrong size on WBP_SettingsSlider_C_Step");
static_assert(offsetof(WBP_SettingsSlider_C_Step, Multiplier) == 0x000000, "Member 'WBP_SettingsSlider_C_Step::Multiplier' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_GetMinSliderValue_Min_Value) == 0x000008, "Member 'WBP_SettingsSlider_C_Step::CallFunc_GetMinSliderValue_Min_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_GetMaxSliderValue_Max_Value) == 0x000010, "Member 'WBP_SettingsSlider_C_Step::CallFunc_GetMaxSliderValue_Max_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_Slider_To_Value_Value) == 0x000018, "Member 'WBP_SettingsSlider_C_Step::CallFunc_Slider_To_Value_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_GetMinSliderValue_Min_Value_1) == 0x000020, "Member 'WBP_SettingsSlider_C_Step::CallFunc_GetMinSliderValue_Min_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_GetMinSliderValue_Min_Value_2) == 0x000028, "Member 'WBP_SettingsSlider_C_Step::CallFunc_GetMinSliderValue_Min_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_GetMaxSliderValue_Max_Value_1) == 0x000030, "Member 'WBP_SettingsSlider_C_Step::CallFunc_GetMaxSliderValue_Max_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SettingsSlider_C_Step::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_SettingsSlider_C_Step::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'WBP_SettingsSlider_C_Step::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_SettingsSlider_C_Step::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WBP_SettingsSlider_C_Step::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_SettingsSlider_C_Step::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000068, "Member 'WBP_SettingsSlider_C_Step::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Step, CallFunc_SetValue_InValue_ImplicitCast) == 0x00006C, "Member 'WBP_SettingsSlider_C_Step::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Slider To Value
// 0x0048 (0x0048 - 0x0000)
struct WBP_SettingsSlider_C_Slider_To_Value final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSliderValue_Min_Value_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxSliderValue_Max_Value;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Slider_To_Value) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Slider_To_Value");
static_assert(sizeof(WBP_SettingsSlider_C_Slider_To_Value) == 0x000048, "Wrong size on WBP_SettingsSlider_C_Slider_To_Value");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, Value) == 0x000000, "Member 'WBP_SettingsSlider_C_Slider_To_Value::Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_GetMinSliderValue_Min_Value) == 0x000008, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_GetMinSliderValue_Min_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_GetMinSliderValue_Min_Value_1) == 0x000010, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_GetMinSliderValue_Min_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_GetMaxSliderValue_Max_Value) == 0x000020, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_GetMaxSliderValue_Max_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Slider_To_Value, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_SettingsSlider_C_Slider_To_Value::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Set Display Text
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_SettingsSlider_C_Set_Display_Text final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Dirty_Value_Value;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxDisplay_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPercent_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinDisplay_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMax_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMin_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPercent_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRound_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPercent_ReturnValue_2;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RoundToNearestValueFloat_ReturnValue;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0168(0x0018)()
	double                                        CallFunc_MapRangeUnclamped_OutRangeB_ImplicitCast; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_OutRangeA_ImplicitCast; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_InRangeB_ImplicitCast;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_InRangeA_ImplicitCast;  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Set_Display_Text) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Set_Display_Text");
static_assert(sizeof(WBP_SettingsSlider_C_Set_Display_Text) == 0x0001B8, "Wrong size on WBP_SettingsSlider_C_Set_Display_Text");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, Temp_bool_Variable) == 0x000000, "Member 'WBP_SettingsSlider_C_Set_Display_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_SettingsSlider_C_Set_Display_Text::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, Temp_real_Variable) == 0x000008, "Member 'WBP_SettingsSlider_C_Set_Display_Text::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, Temp_real_Variable_1) == 0x000010, "Member 'WBP_SettingsSlider_C_Set_Display_Text::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Get_Dirty_Value_Value) == 0x000018, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Get_Dirty_Value_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetMaxDisplay_ReturnValue) == 0x000020, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetMaxDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetIsPercent_ReturnValue) == 0x000024, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetIsPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetMinDisplay_ReturnValue) == 0x000028, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetMinDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetMax_ReturnValue) == 0x00002C, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetMin_ReturnValue) == 0x000030, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000038, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetIsPercent_ReturnValue_1) == 0x000040, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetIsPercent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetRound_ReturnValue) == 0x000041, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetRound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_GetIsPercent_ReturnValue_2) == 0x000042, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_GetIsPercent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_Select_Default) == 0x000048, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_RoundToNearestValueFloat_ReturnValue) == 0x000058, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_RoundToNearestValueFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Round_ReturnValue) == 0x00005C, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_MakeArray_Array) == 0x000118, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_MakeArray_Array_1) == 0x000128, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Format_ReturnValue) == 0x000138, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, K2Node_Select_Default_1) == 0x000168, "Member 'WBP_SettingsSlider_C_Set_Display_Text::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_MapRangeUnclamped_OutRangeB_ImplicitCast) == 0x000180, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_MapRangeUnclamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_MapRangeUnclamped_OutRangeA_ImplicitCast) == 0x000188, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_MapRangeUnclamped_OutRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_MapRangeUnclamped_InRangeB_ImplicitCast) == 0x000190, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_MapRangeUnclamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_MapRangeUnclamped_InRangeA_ImplicitCast) == 0x000198, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_MapRangeUnclamped_InRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast) == 0x0001A0, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_SelectFloat_B_ImplicitCast) == 0x0001A8, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Display_Text, CallFunc_Round_A_ImplicitCast) == 0x0001B0, "Member 'WBP_SettingsSlider_C_Set_Display_Text::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Set Desired Value
// 0x0028 (0x0028 - 0x0000)
struct WBP_SettingsSlider_C_Set_Desired_Value final
{
public:
	double                                        CallFunc_Value_To_Slider_Slider_Value;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Slider_To_Value_Value;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RoundToNearestValueFloat_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDesiredValueFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Set_Desired_Value) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Set_Desired_Value");
static_assert(sizeof(WBP_SettingsSlider_C_Set_Desired_Value) == 0x000028, "Wrong size on WBP_SettingsSlider_C_Set_Desired_Value");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_Value_To_Slider_Slider_Value) == 0x000000, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_Value_To_Slider_Slider_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_GetValue_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_Slider_To_Value_Value) == 0x000010, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_Slider_To_Value_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_RoundToNearestValueFloat_ReturnValue) == 0x000018, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_RoundToNearestValueFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_SetDesiredValueFloat_ReturnValue) == 0x00001C, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_SetDesiredValueFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_SetValue_InValue_ImplicitCast) == 0x000020, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Set_Desired_Value, CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast) == 0x000024, "Member 'WBP_SettingsSlider_C_Set_Desired_Value::CallFunc_RoundToNearestValueFloat_ValueToRound_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Position Slider To Value
// 0x0010 (0x0010 - 0x0000)
struct WBP_SettingsSlider_C_Position_Slider_To_Value final
{
public:
	double                                        CallFunc_Value_To_Slider_Slider_Value;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Position_Slider_To_Value) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Position_Slider_To_Value");
static_assert(sizeof(WBP_SettingsSlider_C_Position_Slider_To_Value) == 0x000010, "Wrong size on WBP_SettingsSlider_C_Position_Slider_To_Value");
static_assert(offsetof(WBP_SettingsSlider_C_Position_Slider_To_Value, CallFunc_Value_To_Slider_Slider_Value) == 0x000000, "Member 'WBP_SettingsSlider_C_Position_Slider_To_Value::CallFunc_Value_To_Slider_Slider_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Position_Slider_To_Value, CallFunc_SetValue_InValue_ImplicitCast) == 0x000008, "Member 'WBP_SettingsSlider_C_Position_Slider_To_Value::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Position_Slider_To_Value, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x00000C, "Member 'WBP_SettingsSlider_C_Position_Slider_To_Value::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnSettingsInfoValueChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_SettingsSlider_C_OnSettingsInfoValueChanged final
{
public:
	bool                                          bChangedExternally;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_OnSettingsInfoValueChanged) == 0x000001, "Wrong alignment on WBP_SettingsSlider_C_OnSettingsInfoValueChanged");
static_assert(sizeof(WBP_SettingsSlider_C_OnSettingsInfoValueChanged) == 0x000001, "Wrong size on WBP_SettingsSlider_C_OnSettingsInfoValueChanged");
static_assert(offsetof(WBP_SettingsSlider_C_OnSettingsInfoValueChanged, bChangedExternally) == 0x000000, "Member 'WBP_SettingsSlider_C_OnSettingsInfoValueChanged::bChangedExternally' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_SettingsSlider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_SettingsSlider_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_OnMouseLeave");
static_assert(sizeof(WBP_SettingsSlider_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_SettingsSlider_C_OnMouseLeave");
static_assert(offsetof(WBP_SettingsSlider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_SettingsSlider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_SettingsSlider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_SettingsSlider_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_OnMouseEnter");
static_assert(sizeof(WBP_SettingsSlider_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_SettingsSlider_C_OnMouseEnter");
static_assert(offsetof(WBP_SettingsSlider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_SettingsSlider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_SettingsSlider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnKeyUp
// 0x0208 (0x0208 - 0x0000)
struct WBP_SettingsSlider_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0148(0x00B8)()
	bool                                          CallFunc_IsSliderKey_IsKey;                        // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_OnKeyUp");
static_assert(sizeof(WBP_SettingsSlider_C_OnKeyUp) == 0x000208, "Wrong size on WBP_SettingsSlider_C_OnKeyUp");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_SettingsSlider_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_SettingsSlider_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_SettingsSlider_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_SettingsSlider_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000148, "Member 'WBP_SettingsSlider_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyUp, CallFunc_IsSliderKey_IsKey) == 0x000200, "Member 'WBP_SettingsSlider_C_OnKeyUp::CallFunc_IsSliderKey_IsKey' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnKeyDown
// 0x0230 (0x0230 - 0x0000)
struct WBP_SettingsSlider_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSliderKey_IsKey;                        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputEvent                            CallFunc_GetInputEventFromKeyEvent_ReturnValue;    // 0x0150(0x0020)()
	bool                                          CallFunc_InputEvent_IsRepeat_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0178(0x00B8)()
};
static_assert(alignof(WBP_SettingsSlider_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_OnKeyDown");
static_assert(sizeof(WBP_SettingsSlider_C_OnKeyDown) == 0x000230, "Wrong size on WBP_SettingsSlider_C_OnKeyDown");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_SettingsSlider_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_SettingsSlider_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_SettingsSlider_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_SettingsSlider_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, CallFunc_IsSliderKey_IsKey) == 0x000148, "Member 'WBP_SettingsSlider_C_OnKeyDown::CallFunc_IsSliderKey_IsKey' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, CallFunc_GetInputEventFromKeyEvent_ReturnValue) == 0x000150, "Member 'WBP_SettingsSlider_C_OnKeyDown::CallFunc_GetInputEventFromKeyEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, CallFunc_InputEvent_IsRepeat_ReturnValue) == 0x000170, "Member 'WBP_SettingsSlider_C_OnKeyDown::CallFunc_InputEvent_IsRepeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000178, "Member 'WBP_SettingsSlider_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.IsSliderKey
// 0x0040 (0x0040 - 0x0000)
struct WBP_SettingsSlider_C_IsSliderKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsKey;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewLocalVar_0;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_IsSliderKey) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_IsSliderKey");
static_assert(sizeof(WBP_SettingsSlider_C_IsSliderKey) == 0x000040, "Wrong size on WBP_SettingsSlider_C_IsSliderKey");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, InKey) == 0x000000, "Member 'WBP_SettingsSlider_C_IsSliderKey::InKey' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, IsKey) == 0x000018, "Member 'WBP_SettingsSlider_C_IsSliderKey::IsKey' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, NewLocalVar_0) == 0x000020, "Member 'WBP_SettingsSlider_C_IsSliderKey::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000038, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000039, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00003A, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00003B, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_BooleanOR_ReturnValue_1) == 0x00003D, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IsSliderKey, CallFunc_BooleanOR_ReturnValue_2) == 0x00003E, "Member 'WBP_SettingsSlider_C_IsSliderKey::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.IncreaseCurrentAcceleration
// 0x0010 (0x0010 - 0x0000)
struct WBP_SettingsSlider_C_IncreaseCurrentAcceleration final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_IncreaseCurrentAcceleration) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_IncreaseCurrentAcceleration");
static_assert(sizeof(WBP_SettingsSlider_C_IncreaseCurrentAcceleration) == 0x000010, "Wrong size on WBP_SettingsSlider_C_IncreaseCurrentAcceleration");
static_assert(offsetof(WBP_SettingsSlider_C_IncreaseCurrentAcceleration, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'WBP_SettingsSlider_C_IncreaseCurrentAcceleration::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_IncreaseCurrentAcceleration, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_IncreaseCurrentAcceleration::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GetMinSliderValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_SettingsSlider_C_GetMinSliderValue final
{
public:
	double                                        Min_Value;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMin_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Min_Value_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_GetMinSliderValue) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_GetMinSliderValue");
static_assert(sizeof(WBP_SettingsSlider_C_GetMinSliderValue) == 0x000018, "Wrong size on WBP_SettingsSlider_C_GetMinSliderValue");
static_assert(offsetof(WBP_SettingsSlider_C_GetMinSliderValue, Min_Value) == 0x000000, "Member 'WBP_SettingsSlider_C_GetMinSliderValue::Min_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_GetMinSliderValue, CallFunc_GetMin_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_GetMinSliderValue::CallFunc_GetMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_GetMinSliderValue, K2Node_FunctionResult_Min_Value_ImplicitCast) == 0x000010, "Member 'WBP_SettingsSlider_C_GetMinSliderValue::K2Node_FunctionResult_Min_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GetMaxSliderValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_SettingsSlider_C_GetMaxSliderValue final
{
public:
	double                                        Max_Value;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMax_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Max_Value_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_GetMaxSliderValue) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_GetMaxSliderValue");
static_assert(sizeof(WBP_SettingsSlider_C_GetMaxSliderValue) == 0x000018, "Wrong size on WBP_SettingsSlider_C_GetMaxSliderValue");
static_assert(offsetof(WBP_SettingsSlider_C_GetMaxSliderValue, Max_Value) == 0x000000, "Member 'WBP_SettingsSlider_C_GetMaxSliderValue::Max_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_GetMaxSliderValue, CallFunc_GetMax_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_GetMaxSliderValue::CallFunc_GetMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_GetMaxSliderValue, K2Node_FunctionResult_Max_Value_ImplicitCast) == 0x000010, "Member 'WBP_SettingsSlider_C_GetMaxSliderValue::K2Node_FunctionResult_Max_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Get Dirty Value
// 0x0018 (0x0018 - 0x0000)
struct WBP_SettingsSlider_C_Get_Dirty_Value final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirtyValueFloat_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Value_ImplicitCast;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_Get_Dirty_Value) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_Get_Dirty_Value");
static_assert(sizeof(WBP_SettingsSlider_C_Get_Dirty_Value) == 0x000018, "Wrong size on WBP_SettingsSlider_C_Get_Dirty_Value");
static_assert(offsetof(WBP_SettingsSlider_C_Get_Dirty_Value, Value) == 0x000000, "Member 'WBP_SettingsSlider_C_Get_Dirty_Value::Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Get_Dirty_Value, CallFunc_GetDirtyValueFloat_ReturnValue) == 0x000008, "Member 'WBP_SettingsSlider_C_Get_Dirty_Value::CallFunc_GetDirtyValueFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_Get_Dirty_Value, K2Node_FunctionResult_Value_ImplicitCast) == 0x000010, "Member 'WBP_SettingsSlider_C_Get_Dirty_Value::K2Node_FunctionResult_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.ExecuteUbergraph_WBP_SettingsSlider
// 0x0180 (0x0180 - 0x0000)
struct WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bChangedExternally;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0090(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0108(0x0078)(ConstParm)
};
static_assert(alignof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider) == 0x000008, "Wrong alignment on WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider");
static_assert(sizeof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider) == 0x000180, "Wrong size on WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, EntryPoint) == 0x000000, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_bChangedExternally) == 0x000004, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_bChangedExternally' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_MyGeometry_1) == 0x000008, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_ComponentBoundEvent_Value) == 0x000044, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000048, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_MyGeometry) == 0x000058, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_MouseEvent_1) == 0x000090, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider, K2Node_Event_MouseEvent) == 0x000108, "Member 'WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider::K2Node_Event_MouseEvent' has a wrong offset!");

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

}

