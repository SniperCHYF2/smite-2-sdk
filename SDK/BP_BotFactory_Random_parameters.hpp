#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory_Random

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "EJungleTribes_structs.hpp"
#include "S_TribeRenown_structs.hpp"


namespace SDK::Params
{

// Function BP_BotFactory_Random.BP_BotFactory_Random_C.ExecuteUbergraph_BP_BotFactory_Random
// 0x0014 (0x0014 - 0x0000)
struct BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_SpawnTableTag;                        // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindHighestTribeLevel_Return;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random) == 0x000004, "Wrong alignment on BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random");
static_assert(sizeof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random) == 0x000014, "Wrong size on BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random");
static_assert(offsetof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random, EntryPoint) == 0x000000, "Member 'BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random, K2Node_Event_SpawnTableTag) == 0x000008, "Member 'BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random::K2Node_Event_SpawnTableTag' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random, CallFunc_FindHighestTribeLevel_Return) == 0x000010, "Member 'BP_BotFactory_Random_C_ExecuteUbergraph_BP_BotFactory_Random::CallFunc_FindHighestTribeLevel_Return' has a wrong offset!");

// Function BP_BotFactory_Random.BP_BotFactory_Random_C.FindHighestTribeLevel
// 0x0068 (0x0068 - 0x0000)
struct BP_BotFactory_Random_C_FindHighestTribeLevel final
{
public:
	struct FGameplayTag                           SpawnTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJungleTribes                                 Tribe;                                             // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ConquestGameState_C*                K2Node_DynamicCast_AsBP_Conquest_Game_State;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TribeRenown                         CallFunc_GetTeamRenown_Renown;                     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_TribeRenown                         CallFunc_GetTeamRenown_Renown_1;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_3;                 // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_4;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Random_C_FindHighestTribeLevel) == 0x000008, "Wrong alignment on BP_BotFactory_Random_C_FindHighestTribeLevel");
static_assert(sizeof(BP_BotFactory_Random_C_FindHighestTribeLevel) == 0x000068, "Wrong size on BP_BotFactory_Random_C_FindHighestTribeLevel");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, SpawnTag) == 0x000000, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::SpawnTag' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, Return) == 0x000008, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::Return' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, Tribe) == 0x000009, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::Tribe' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_GetHWGameState_ReturnValue) == 0x000010, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, K2Node_DynamicCast_AsBP_Conquest_Game_State) == 0x000018, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::K2Node_DynamicCast_AsBP_Conquest_Game_State' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_GetTeamRenown_Renown) == 0x000028, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_GetTeamRenown_Renown' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_GetTeamRenown_Renown_1) == 0x000040, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_GetTeamRenown_Renown_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_Max_ReturnValue) == 0x000058, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_MatchesTag_ReturnValue) == 0x00005C, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_MatchesTag_ReturnValue_1) == 0x00005D, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_MatchesTag_ReturnValue_2) == 0x00005E, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_MatchesTag_ReturnValue_3) == 0x00005F, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_MatchesTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Random_C_FindHighestTribeLevel, CallFunc_MatchesTag_ReturnValue_4) == 0x000060, "Member 'BP_BotFactory_Random_C_FindHighestTribeLevel::CallFunc_MatchesTag_ReturnValue_4' has a wrong offset!");

// Function BP_BotFactory_Random.BP_BotFactory_Random_C.MulticastSpawnTableUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_Random_C_MulticastSpawnTableUpdated final
{
public:
	struct FGameplayTag                           SpawnTableTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Random_C_MulticastSpawnTableUpdated) == 0x000004, "Wrong alignment on BP_BotFactory_Random_C_MulticastSpawnTableUpdated");
static_assert(sizeof(BP_BotFactory_Random_C_MulticastSpawnTableUpdated) == 0x000008, "Wrong size on BP_BotFactory_Random_C_MulticastSpawnTableUpdated");
static_assert(offsetof(BP_BotFactory_Random_C_MulticastSpawnTableUpdated, SpawnTableTag) == 0x000000, "Member 'BP_BotFactory_Random_C_MulticastSpawnTableUpdated::SpawnTableTag' has a wrong offset!");

}

