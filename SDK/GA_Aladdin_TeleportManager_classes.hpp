#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Aladdin_TeleportManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_AladdinArenaManager_ActorVariables_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Aladdin_TeleportManager.GA_Aladdin_TeleportManager_C
// 0x01C0 (0x0F30 - 0x0D70)
class UGA_Aladdin_TeleportManager_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FActiveGameplayEffectHandle            Stasis;                                            // 0x0D78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            DamageImmunity;                                    // 0x0D80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Aladdin_ArenaManagerSingleton_C*    AladdinArenaManager;                               // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewVar;                                            // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      Avatar_Actor_as_Character_Base;                    // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeUntilTeleportation;                            // 0x0DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimePostTeleportationToRemoveStasis;               // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerForTeleporting;                               // 0x0DB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     TeleportationPayload;                              // 0x0DB8(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           TimerForRemoveStasis;                              // 0x0E68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         New_Rotation_X__Roll_;                             // 0x0E70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ultimate_Level;                                    // 0x0E74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturning_;                                       // 0x0E78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E79[0x7];                                      // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnHealthValue;                                 // 0x0E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            TimerHandle;                                       // 0x0E88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ActorWasFound;                                     // 0x0E90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E91[0x3];                                      // 0x0E91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_Found;                                       // 0x0E94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AladdinArenaManager_ActorVariables AladdinManagerInfoStruct;                      // 0x0E98(0x0088)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            InLampVisualsHandle;                               // 0x0F20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Aladdin_Non_Fighter_Debuff_Effect_Handle;          // 0x0F28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyLampVisuals();
	void EndMovementAndAbilities();
	void EventReceived_08DF534140A7159A2DA9EC99512E08AB(const struct FGameplayEventData& Payload);
	void EventReceived_5922ED8342026DE7BA7FE2B7753FA8E1(const struct FGameplayEventData& Payload);
	void EventReceived_D86CC93D483703A61B8CDEBFAF2A87A4(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Aladdin_TeleportManager(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void KickOffTeleportation(const struct FGameplayEventData& Payload);
	void RemoveLampVisuals();
	void RemoveStasis();
	void SetClientControllerRotation(bool bSend);
	void SetupListeners();
	void TeleportToLocation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Aladdin_TeleportManager_C">();
	}
	static class UGA_Aladdin_TeleportManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Aladdin_TeleportManager_C>();
	}
};
static_assert(alignof(UGA_Aladdin_TeleportManager_C) == 0x000008, "Wrong alignment on UGA_Aladdin_TeleportManager_C");
static_assert(sizeof(UGA_Aladdin_TeleportManager_C) == 0x000F30, "Wrong size on UGA_Aladdin_TeleportManager_C");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, UberGraphFrame) == 0x000D70, "Member 'UGA_Aladdin_TeleportManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, Stasis) == 0x000D78, "Member 'UGA_Aladdin_TeleportManager_C::Stasis' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, DamageImmunity) == 0x000D80, "Member 'UGA_Aladdin_TeleportManager_C::DamageImmunity' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, AladdinArenaManager) == 0x000D88, "Member 'UGA_Aladdin_TeleportManager_C::AladdinArenaManager' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, NewVar) == 0x000D90, "Member 'UGA_Aladdin_TeleportManager_C::NewVar' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, Avatar_Actor_as_Character_Base) == 0x000D98, "Member 'UGA_Aladdin_TeleportManager_C::Avatar_Actor_as_Character_Base' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TimeUntilTeleportation) == 0x000DA0, "Member 'UGA_Aladdin_TeleportManager_C::TimeUntilTeleportation' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TimePostTeleportationToRemoveStasis) == 0x000DA8, "Member 'UGA_Aladdin_TeleportManager_C::TimePostTeleportationToRemoveStasis' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TimerForTeleporting) == 0x000DB0, "Member 'UGA_Aladdin_TeleportManager_C::TimerForTeleporting' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TeleportationPayload) == 0x000DB8, "Member 'UGA_Aladdin_TeleportManager_C::TeleportationPayload' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TimerForRemoveStasis) == 0x000E68, "Member 'UGA_Aladdin_TeleportManager_C::TimerForRemoveStasis' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, New_Rotation_X__Roll_) == 0x000E70, "Member 'UGA_Aladdin_TeleportManager_C::New_Rotation_X__Roll_' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, Ultimate_Level) == 0x000E74, "Member 'UGA_Aladdin_TeleportManager_C::Ultimate_Level' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, bReturning_) == 0x000E78, "Member 'UGA_Aladdin_TeleportManager_C::bReturning_' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, ReturnHealthValue) == 0x000E80, "Member 'UGA_Aladdin_TeleportManager_C::ReturnHealthValue' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, TimerHandle) == 0x000E88, "Member 'UGA_Aladdin_TeleportManager_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, ActorWasFound) == 0x000E90, "Member 'UGA_Aladdin_TeleportManager_C::ActorWasFound' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, Index_Found) == 0x000E94, "Member 'UGA_Aladdin_TeleportManager_C::Index_Found' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, AladdinManagerInfoStruct) == 0x000E98, "Member 'UGA_Aladdin_TeleportManager_C::AladdinManagerInfoStruct' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, InLampVisualsHandle) == 0x000F20, "Member 'UGA_Aladdin_TeleportManager_C::InLampVisualsHandle' has a wrong offset!");
static_assert(offsetof(UGA_Aladdin_TeleportManager_C, Aladdin_Non_Fighter_Debuff_Effect_Handle) == 0x000F28, "Member 'UGA_Aladdin_TeleportManager_C::Aladdin_Non_Fighter_Debuff_Effect_Handle' has a wrong offset!");

}

