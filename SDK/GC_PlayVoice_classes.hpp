#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_PlayVoice

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_PlayVoice.GC_PlayVoice_C
// 0x0068 (0x03D0 - 0x0368)
class AGC_PlayVoice_C final : public AHWGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Smite_God*                 CachedGod;                                         // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CachedAudienceTag;                                 // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CachedSkinKeywordTag;                              // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BaseSkinKeywordTag;                                // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BaseAudienceTag;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BaseBehaviorTag;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CachedBehaviorTag;                                 // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CachedAttachmentType;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BaseAttachmentTypeTag;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BaseEventType;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CachedEventType;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Chance_to_Play;                                    // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AttemptPlayVoice();
	void OnActiveVoiceEventChanged(const struct FHWVoiceOverQueue& VoiceEvent);
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void ParseTags(const struct FGameplayTagContainer& TagContainer);
	void ShouldPlayVoice(const struct FGameplayTag& AudienceTag, bool* ShouldPlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_PlayVoice_C">();
	}
	static class AGC_PlayVoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_PlayVoice_C>();
	}
};
static_assert(alignof(AGC_PlayVoice_C) == 0x000008, "Wrong alignment on AGC_PlayVoice_C");
static_assert(sizeof(AGC_PlayVoice_C) == 0x0003D0, "Wrong size on AGC_PlayVoice_C");
static_assert(offsetof(AGC_PlayVoice_C, DefaultSceneRoot) == 0x000368, "Member 'AGC_PlayVoice_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedGod) == 0x000370, "Member 'AGC_PlayVoice_C::CachedGod' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedAudienceTag) == 0x000378, "Member 'AGC_PlayVoice_C::CachedAudienceTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedSkinKeywordTag) == 0x000380, "Member 'AGC_PlayVoice_C::CachedSkinKeywordTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, BaseSkinKeywordTag) == 0x000388, "Member 'AGC_PlayVoice_C::BaseSkinKeywordTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, BaseAudienceTag) == 0x000390, "Member 'AGC_PlayVoice_C::BaseAudienceTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, BaseBehaviorTag) == 0x000398, "Member 'AGC_PlayVoice_C::BaseBehaviorTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedBehaviorTag) == 0x0003A0, "Member 'AGC_PlayVoice_C::CachedBehaviorTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedAttachmentType) == 0x0003A8, "Member 'AGC_PlayVoice_C::CachedAttachmentType' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, BaseAttachmentTypeTag) == 0x0003B0, "Member 'AGC_PlayVoice_C::BaseAttachmentTypeTag' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, BaseEventType) == 0x0003B8, "Member 'AGC_PlayVoice_C::BaseEventType' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, CachedEventType) == 0x0003C0, "Member 'AGC_PlayVoice_C::CachedEventType' has a wrong offset!");
static_assert(offsetof(AGC_PlayVoice_C, Chance_to_Play) == 0x0003C8, "Member 'AGC_PlayVoice_C::Chance_to_Play' has a wrong offset!");

}

