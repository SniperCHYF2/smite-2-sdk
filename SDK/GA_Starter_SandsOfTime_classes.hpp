#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Starter_SandsOfTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Starter_SandsOfTime.GA_Starter_SandsOfTime_C
// 0x00C0 (0x0F98 - 0x0ED8)
class UGA_Starter_SandsOfTime_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         ExpectedStackCount;                                // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentComponent_FiringInstanceTracker* FiringInstanceTrackerComponent;               // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           IncomingEffectContext;                             // 0x0EF0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FHWAbilityFiringInstanceId             OffhandInstanceID;                                 // 0x0F08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDamageEventData                       DamageEventData;                                   // 0x0F10(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FHWAbilityFiringInstanceId>     OffhandInstanceIDs;                                // 0x0F80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Damage_Event_Data_Target;                          // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Changed_7541769E498C96AEEEC66D981D71A4ED(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem);
	void ExecuteUbergraph_GA_Starter_SandsOfTime(int32 EntryPoint);
	void K2_ActivateAbility();
	void ManaChanged(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem);
	void OnOwnerDealtDamage(const struct FDamageEventData& DamageEventData_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Starter_SandsOfTime_C">();
	}
	static class UGA_Starter_SandsOfTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Starter_SandsOfTime_C>();
	}
};
static_assert(alignof(UGA_Starter_SandsOfTime_C) == 0x000008, "Wrong alignment on UGA_Starter_SandsOfTime_C");
static_assert(sizeof(UGA_Starter_SandsOfTime_C) == 0x000F98, "Wrong size on UGA_Starter_SandsOfTime_C");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Starter_SandsOfTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, ExpectedStackCount) == 0x000EE0, "Member 'UGA_Starter_SandsOfTime_C::ExpectedStackCount' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, FiringInstanceTrackerComponent) == 0x000EE8, "Member 'UGA_Starter_SandsOfTime_C::FiringInstanceTrackerComponent' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, IncomingEffectContext) == 0x000EF0, "Member 'UGA_Starter_SandsOfTime_C::IncomingEffectContext' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, OffhandInstanceID) == 0x000F08, "Member 'UGA_Starter_SandsOfTime_C::OffhandInstanceID' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, DamageEventData) == 0x000F10, "Member 'UGA_Starter_SandsOfTime_C::DamageEventData' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, OffhandInstanceIDs) == 0x000F80, "Member 'UGA_Starter_SandsOfTime_C::OffhandInstanceIDs' has a wrong offset!");
static_assert(offsetof(UGA_Starter_SandsOfTime_C, Damage_Event_Data_Target) == 0x000F90, "Member 'UGA_Starter_SandsOfTime_C::Damage_Event_Data_Target' has a wrong offset!");

}

