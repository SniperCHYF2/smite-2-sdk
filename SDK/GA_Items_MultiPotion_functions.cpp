#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_MultiPotion

#include "Basic.hpp"

#include "GA_Items_MultiPotion_classes.hpp"
#include "GA_Items_MultiPotion_parameters.hpp"


namespace SDK
{

// Function GA_Items_MultiPotion.GA_Items_MultiPotion_C.ExecuteUbergraph_GA_Items_MultiPotion
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Items_MultiPotion_C::ExecuteUbergraph_GA_Items_MultiPotion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_MultiPotion_C", "ExecuteUbergraph_GA_Items_MultiPotion");

	Params::GA_Items_MultiPotion_C_ExecuteUbergraph_GA_Items_MultiPotion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Items_MultiPotion.GA_Items_MultiPotion_C.OnAttackFired
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHWAbilityTask_FireAttack*        AttackTask                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FHWAbilityAttackInstance&  Attack                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayAbilityTargetDataHandle&TargetListHandle                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_Items_MultiPotion_C::OnAttackFired(class UHWAbilityTask_FireAttack* AttackTask, const struct FHWAbilityAttackInstance& Attack, struct FGameplayAbilityTargetDataHandle& TargetListHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Items_MultiPotion_C", "OnAttackFired");

	Params::GA_Items_MultiPotion_C_OnAttackFired Parms{};

	Parms.AttackTask = AttackTask;
	Parms.Attack = std::move(Attack);
	Parms.TargetListHandle = std::move(TargetListHandle);

	UObject::ProcessEvent(Func, &Parms);

	TargetListHandle = std::move(Parms.TargetListHandle);
}

}

