#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Debug_GodHUB_DialogText

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "EGodDebugDialogTextOptions_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.ExecuteUbergraph_WBP_Debug_GodHUB_DialogText
// 0x0078 (0x0078 - 0x0000)
struct WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText) == 0x000008, "Wrong alignment on WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText");
static_assert(sizeof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText) == 0x000078, "Wrong size on WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, EntryPoint) == 0x000000, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000050, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_FInterpTo_ReturnValue) == 0x000058, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.Get_Timer_Visibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility) == 0x000001, "Wrong alignment on WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility");
static_assert(sizeof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility) == 0x000005, "Wrong size on WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility, ReturnValue) == 0x000000, "Member 'WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.GetColorAndOpacity
// 0x0068 (0x0068 - 0x0000)
struct WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	EGodDebugDialogTextOptions                    Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x002C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0040(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0054(0x0014)()
};
static_assert(alignof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity) == 0x000004, "Wrong alignment on WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity");
static_assert(sizeof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity) == 0x000068, "Wrong size on WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, ReturnValue) == 0x000000, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, Temp_byte_Variable) == 0x000014, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, K2Node_MakeStruct_SlateColor_1) == 0x00002C, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, K2Node_MakeStruct_SlateColor_2) == 0x000040, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity, K2Node_Select_Default) == 0x000054, "Member 'WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Debug_GodHUB_DialogText_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_GodHUB_DialogText_C_Tick) == 0x000004, "Wrong alignment on WBP_Debug_GodHUB_DialogText_C_Tick");
static_assert(sizeof(WBP_Debug_GodHUB_DialogText_C_Tick) == 0x00003C, "Wrong size on WBP_Debug_GodHUB_DialogText_C_Tick");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Debug_GodHUB_DialogText_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Debug_GodHUB_DialogText_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Debug_GodHUB_DialogText_C_Tick::InDeltaTime' has a wrong offset!");

}

