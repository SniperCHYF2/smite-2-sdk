#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AutoAttackCurrentTarget

#include "Basic.hpp"

#include "BTS_AutoAttackCurrentTarget_classes.hpp"
#include "BTS_AutoAttackCurrentTarget_parameters.hpp"


namespace SDK
{

// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.CanFireAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanFire                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::CanFireAbility(class APawn* Pawn, bool* CanFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "CanFireAbility");

	Params::BTS_AutoAttackCurrentTarget_C_CanFireAbility Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (CanFire != nullptr)
		*CanFire = Parms.CanFire;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.ExecuteUbergraph_BTS_AutoAttackCurrentTarget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::ExecuteUbergraph_BTS_AutoAttackCurrentTarget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "ExecuteUbergraph_BTS_AutoAttackCurrentTarget");

	Params::BTS_AutoAttackCurrentTarget_C_ExecuteUbergraph_BTS_AutoAttackCurrentTarget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.IsFiring
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Firing                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::IsFiring(class APawn* Pawn, bool* Firing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "IsFiring");

	Params::BTS_AutoAttackCurrentTarget_C_IsFiring Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Firing != nullptr)
		*Firing = Parms.Firing;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.IsTargetInAbilityRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInRange                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::IsTargetInAbilityRange(class APawn* ControlledPawn, class AActor* TargetActor, bool* IsInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "IsTargetInAbilityRange");

	Params::BTS_AutoAttackCurrentTarget_C_IsTargetInAbilityRange Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInRange != nullptr)
		*IsInRange = Parms.IsInRange;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.PressFireButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::PressFireButton(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "PressFireButton");

	Params::BTS_AutoAttackCurrentTarget_C_PressFireButton Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.ReceiveDeactivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "ReceiveDeactivationAI");

	Params::BTS_AutoAttackCurrentTarget_C_ReceiveDeactivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "ReceiveTickAI");

	Params::BTS_AutoAttackCurrentTarget_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.ReleaseFireButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::ReleaseFireButton(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "ReleaseFireButton");

	Params::BTS_AutoAttackCurrentTarget_C_ReleaseFireButton Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.RetrieveEquipmentFromTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              EquipSlot                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayAbilitySpecHandle*      GrantedAbilityHandle                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

bool UBTS_AutoAttackCurrentTarget_C::RetrieveEquipmentFromTag(class AHWCharacter_Base* Character, const struct FGameplayTag& EquipSlot, int32 SlotId, struct FGameplayAbilitySpecHandle* GrantedAbilityHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "RetrieveEquipmentFromTag");

	Params::BTS_AutoAttackCurrentTarget_C_RetrieveEquipmentFromTag Parms{};

	Parms.Character = Character;
	Parms.EquipSlot = std::move(EquipSlot);
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);

	if (GrantedAbilityHandle != nullptr)
		*GrantedAbilityHandle = std::move(Parms.GrantedAbilityHandle);

	return Parms.ReturnValue;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.ShouldFireAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShoudFire                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::ShouldFireAbility(class APawn* Pawn, bool* ShoudFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "ShouldFireAbility");

	Params::BTS_AutoAttackCurrentTarget_C_ShouldFireAbility Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (ShoudFire != nullptr)
		*ShoudFire = Parms.ShoudFire;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.StartFire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::StartFire(class AAIController* Controller, class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "StartFire");

	Params::BTS_AutoAttackCurrentTarget_C_StartFire Parms{};

	Parms.Controller = Controller;
	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.TryFireAbility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::TryFireAbility(class APawn* Pawn, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "TryFireAbility");

	Params::BTS_AutoAttackCurrentTarget_C_TryFireAbility Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BTS_AutoAttackCurrentTarget.BTS_AutoAttackCurrentTarget_C.UpdateAim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_AutoAttackCurrentTarget_C::UpdateAim(class AAIController* Controller, class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AutoAttackCurrentTarget_C", "UpdateAim");

	Params::BTS_AutoAttackCurrentTarget_C_UpdateAim Parms{};

	Parms.Controller = Controller;
	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}

}

