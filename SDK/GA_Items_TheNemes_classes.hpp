#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_TheNemes

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Items_TheNemes.GA_Items_TheNemes_C
// 0x0030 (0x0F08 - 0x0ED8)
class UGA_Items_TheNemes_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Stack_Count_to_Evolve;                             // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentComponent_Stacks*           Stacks_Component;                                  // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Evolved_Handle;                                    // 0x0EF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          hasEvolved;                                        // 0x0EF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF9[0x3];                                      // 0x0EF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StacksToAdd;                                       // 0x0EFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinionStacks;                                      // 0x0F00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GodStacks;                                         // 0x0F04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddStacksFromAssists(class AHWTeamState* Team, class AHWPlayerState* TeamMember, const struct FAssistEventData& AssistEventData);
	void AddStacksFromKills(const struct FDamageEventData& KillEventData);
	void ExecuteUbergraph_GA_Items_TheNemes(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void SetupListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Items_TheNemes_C">();
	}
	static class UGA_Items_TheNemes_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Items_TheNemes_C>();
	}
};
static_assert(alignof(UGA_Items_TheNemes_C) == 0x000008, "Wrong alignment on UGA_Items_TheNemes_C");
static_assert(sizeof(UGA_Items_TheNemes_C) == 0x000F08, "Wrong size on UGA_Items_TheNemes_C");
static_assert(offsetof(UGA_Items_TheNemes_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Items_TheNemes_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, Stack_Count_to_Evolve) == 0x000EE0, "Member 'UGA_Items_TheNemes_C::Stack_Count_to_Evolve' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, Stacks_Component) == 0x000EE8, "Member 'UGA_Items_TheNemes_C::Stacks_Component' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, Evolved_Handle) == 0x000EF0, "Member 'UGA_Items_TheNemes_C::Evolved_Handle' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, hasEvolved) == 0x000EF8, "Member 'UGA_Items_TheNemes_C::hasEvolved' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, StacksToAdd) == 0x000EFC, "Member 'UGA_Items_TheNemes_C::StacksToAdd' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, MinionStacks) == 0x000F00, "Member 'UGA_Items_TheNemes_C::MinionStacks' has a wrong offset!");
static_assert(offsetof(UGA_Items_TheNemes_C, GodStacks) == 0x000F04, "Member 'UGA_Items_TheNemes_C::GodStacks' has a wrong offset!");

}

