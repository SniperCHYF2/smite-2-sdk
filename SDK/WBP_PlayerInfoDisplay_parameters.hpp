#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerInfoDisplay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "RallyHereIntegration_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "ColorEntry_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.BindDelegates
// 0x0030 (0x0030 - 0x0000)
struct WBP_PlayerInfoDisplay_C_BindDelegates final
{
public:
	TDelegate<void(const TArray<int32>& ItemIds, class URH_PlayerInfo* PlayerInfo)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHProgression*                         CallFunc_GetPlayerXpProgression_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInventory*                    CallFunc_GetPlayerInventory_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_BindDelegates) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_BindDelegates");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_BindDelegates) == 0x000030, "Wrong size on WBP_PlayerInfoDisplay_C_BindDelegates");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_BindDelegates, CallFunc_GetPlayerXpProgression_ReturnValue) == 0x000010, "Member 'WBP_PlayerInfoDisplay_C_BindDelegates::CallFunc_GetPlayerXpProgression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_BindDelegates, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_BindDelegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_BindDelegates, CallFunc_GetPlayerInventory_ReturnValue) == 0x000020, "Member 'WBP_PlayerInfoDisplay_C_BindDelegates::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_BindDelegates, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_PlayerInfoDisplay_C_BindDelegates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.ExecuteUbergraph_WBP_PlayerInfoDisplay
// 0x0040 (0x0040 - 0x0000)
struct WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InstanceCount)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfoSubobject*                K2Node_Event_PlayerPresence;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVoiceChannel;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTalking;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMuted;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay) == 0x000040, "Wrong size on WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, EntryPoint) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_Event_PlayerPresence) == 0x000030, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_Event_PlayerPresence' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_Event_bInVoiceChannel) == 0x000038, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_Event_bInVoiceChannel' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_Event_bIsTalking) == 0x000039, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_Event_bIsTalking' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_Event_bIsMuted) == 0x00003A, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_Event_bIsMuted' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay, K2Node_Event_IsDesignTime) == 0x00003B, "Member 'WBP_PlayerInfoDisplay_C_ExecuteUbergraph_WBP_PlayerInfoDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.GetStatusColor
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_PlayerInfoDisplay_C_GetStatusColor final
{
public:
	ERHPlayerOnlineStatus                         OnlineStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            StatusColor;                                       // 0x0004(0x0014)(Parm, OutParm)
	ERHPlayerOnlineStatus                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x007C(0x0014)()
	class FName                                   K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColorEntry                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0014)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_GetStatusColor) == 0x000004, "Wrong alignment on WBP_PlayerInfoDisplay_C_GetStatusColor");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_GetStatusColor) == 0x0000B0, "Wrong size on WBP_PlayerInfoDisplay_C_GetStatusColor");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, OnlineStatus) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::OnlineStatus' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, StatusColor) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::StatusColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_byte_Variable) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable) == 0x00001C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_1) == 0x000024, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_2) == 0x00002C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_3) == 0x000034, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_4) == 0x00003C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_5) == 0x000044, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_6) == 0x00004C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_7) == 0x000054, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_8) == 0x00005C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_9) == 0x000064, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_10) == 0x00006C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, Temp_name_Variable_11) == 0x000074, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, K2Node_MakeStruct_SlateColor) == 0x00007C, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, K2Node_Select_Default) == 0x000090, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_GetStatusColor, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000AC, "Member 'WBP_PlayerInfoDisplay_C_GetStatusColor::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.OnGetPlatform
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerInfoDisplay_C_OnGetPlatform final
{
public:
	ERHPlatformDisplayType                        PlatformType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_OnGetPlatform) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_OnGetPlatform");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_OnGetPlatform) == 0x000001, "Wrong size on WBP_PlayerInfoDisplay_C_OnGetPlatform");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnGetPlatform, PlatformType) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_OnGetPlatform::PlatformType' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.OnGetPlayerLevelResponse
// 0x0020 (0x0020 - 0x0000)
struct WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse final
{
public:
	int32                                         InstanceCount;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse) == 0x000020, "Wrong size on WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse, InstanceCount) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse::InstanceCount' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_PlayerInfoDisplay_C_OnGetPlayerLevelResponse::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.OnPlayerAvatarLoaded
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded final
{
public:
	struct FRHEquippedLoadoutItemWrapper          ItemWrapper;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded) == 0x000008, "Wrong size on WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded, ItemWrapper) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerAvatarLoaded::ItemWrapper' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.OnPlayerInventoryCacheUpdated
// 0x0048 (0x0048 - 0x0000)
struct WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated final
{
public:
	TArray<int32>                                 ItemIds;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHProgression*                         CallFunc_GetPlayerXpProgression_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InstanceCount)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRH_ItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0030(0x0014)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated) == 0x000048, "Wrong size on WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, ItemIds) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::ItemIds' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, PlayerInfo) == 0x000010, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::PlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, CallFunc_GetPlayerXpProgression_ReturnValue) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::CallFunc_GetPlayerXpProgression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, CallFunc_GetItemId_ReturnValue) == 0x000030, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated, CallFunc_Array_Contains_ReturnValue) == 0x000044, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerInventoryCacheUpdated::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.OnPlayerPresenceUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated final
{
public:
	class URH_PlayerInfoSubobject*                PlayerPresence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated) == 0x000008, "Wrong size on WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated, PlayerPresence) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_OnPlayerPresenceUpdated::PlayerPresence' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerInfoDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_PreConstruct");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_PreConstruct) == 0x000001, "Wrong size on WBP_PlayerInfoDisplay_C_PreConstruct");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetFriend
// 0x0048 (0x0048 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetFriend final
{
public:
	class URH_RHFriendAndPlatformFriend*          Friend;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERHPlatformDisplayType PlatformType)> K2Node_CreateDelegate_OutputDelegate;       // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_GameInstanceSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfoSubsystem*                CallFunc_GetPlayerInfoSubsystem_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetRHPlayerUuid_ReturnValue;              // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfo*                         CallFunc_GetPlayerInfo_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetFriend) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetFriend");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetFriend) == 0x000048, "Wrong size on WBP_PlayerInfoDisplay_C_SetFriend");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, Friend) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::Friend' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, CallFunc_GetPlayerInfoSubsystem_ReturnValue) == 0x000020, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::CallFunc_GetPlayerInfoSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, CallFunc_GetRHPlayerUuid_ReturnValue) == 0x000028, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::CallFunc_GetRHPlayerUuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, CallFunc_GetPlayerInfo_ReturnValue) == 0x000038, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::CallFunc_GetPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetFriend, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_PlayerInfoDisplay_C_SetFriend::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetRHPlayerInfo
// 0x0028 (0x0028 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetRHPlayerInfo final
{
public:
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 InstanceCount)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERHPlatformDisplayType PlatformType)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetRHPlayerInfo) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetRHPlayerInfo");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetRHPlayerInfo) == 0x000028, "Wrong size on WBP_PlayerInfoDisplay_C_SetRHPlayerInfo");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetRHPlayerInfo, PlayerInfo) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetRHPlayerInfo::PlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetRHPlayerInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_PlayerInfoDisplay_C_SetRHPlayerInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetRHPlayerInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_SetRHPlayerInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetVoiceActive
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetVoiceActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetVoiceActive) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetVoiceActive");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetVoiceActive) == 0x000001, "Wrong size on WBP_PlayerInfoDisplay_C_SetVoiceActive");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceActive, IsActive) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceActive::IsActive' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetVoiceMuted
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetVoiceMuted final
{
public:
	bool                                          Muted;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetVoiceMuted) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetVoiceMuted");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetVoiceMuted) == 0x000001, "Wrong size on WBP_PlayerInfoDisplay_C_SetVoiceMuted");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceMuted, Muted) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceMuted::Muted' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetVoiceState
// 0x0003 (0x0003 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetVoiceState final
{
public:
	bool                                          ShouldShow;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTalking_0;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMuted_0;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetVoiceState) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetVoiceState");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetVoiceState) == 0x000003, "Wrong size on WBP_PlayerInfoDisplay_C_SetVoiceState");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceState, ShouldShow) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceState::ShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceState, IsTalking_0) == 0x000001, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceState::IsTalking_0' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceState, IsMuted_0) == 0x000002, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceState::IsMuted_0' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.SetVoiceTalking
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerInfoDisplay_C_SetVoiceTalking final
{
public:
	bool                                          Talking;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_SetVoiceTalking) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_SetVoiceTalking");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_SetVoiceTalking) == 0x000001, "Wrong size on WBP_PlayerInfoDisplay_C_SetVoiceTalking");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_SetVoiceTalking, Talking) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_SetVoiceTalking::Talking' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.TogglePartyLeaderIcon
// 0x0005 (0x0005 - 0x0000)
struct WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon final
{
public:
	bool                                          ShowLeaderIcon;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon) == 0x000005, "Wrong size on WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon, ShowLeaderIcon) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon::ShowLeaderIcon' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon, Temp_bool_Variable) == 0x000001, "Member 'WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon, Temp_byte_Variable) == 0x000002, "Member 'WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon, K2Node_Select_Default) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_TogglePartyLeaderIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.ToggleStatusDisplay
// 0x0005 (0x0005 - 0x0000)
struct WBP_PlayerInfoDisplay_C_ToggleStatusDisplay final
{
public:
	bool                                          ShowStatus_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_ToggleStatusDisplay");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay) == 0x000005, "Wrong size on WBP_PlayerInfoDisplay_C_ToggleStatusDisplay");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay, ShowStatus_0) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_ToggleStatusDisplay::ShowStatus_0' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay, Temp_bool_Variable) == 0x000001, "Member 'WBP_PlayerInfoDisplay_C_ToggleStatusDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay, Temp_byte_Variable) == 0x000002, "Member 'WBP_PlayerInfoDisplay_C_ToggleStatusDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_PlayerInfoDisplay_C_ToggleStatusDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_ToggleStatusDisplay, K2Node_Select_Default) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_ToggleStatusDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.UnbindDelegates
// 0x0020 (0x0020 - 0x0000)
struct WBP_PlayerInfoDisplay_C_UnbindDelegates final
{
public:
	TDelegate<void(const TArray<int32>& ItemIds, class URH_PlayerInfo* PlayerInfo)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInventory*                    CallFunc_GetPlayerInventory_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_UnbindDelegates) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_UnbindDelegates");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_UnbindDelegates) == 0x000020, "Wrong size on WBP_PlayerInfoDisplay_C_UnbindDelegates");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UnbindDelegates, CallFunc_GetPlayerInventory_ReturnValue) == 0x000010, "Member 'WBP_PlayerInfoDisplay_C_UnbindDelegates::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UnbindDelegates, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PlayerInfoDisplay_C_UnbindDelegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.UpdateStatus
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_PlayerInfoDisplay_C_UpdateStatus final
{
public:
	ERHPlayerOnlineStatus                         PlayerOnlineStatus;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERHPlayerOnlineStatus                         Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_LocalPlayerSubsystem*               CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERHPlayerOnlineStatus                         CallFunc_GetFriendOnlineStatus_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorEntry                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x007C(0x0014)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetStatusColor_StatusColor;               // 0x0094(0x0014)()
	class FText                                   CallFunc_GetStatusMessage_ReturnValue;             // 0x00A8(0x0018)()
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_UpdateStatus) == 0x000008, "Wrong alignment on WBP_PlayerInfoDisplay_C_UpdateStatus");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_UpdateStatus) == 0x0000C0, "Wrong size on WBP_PlayerInfoDisplay_C_UpdateStatus");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, PlayerOnlineStatus) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::PlayerOnlineStatus' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable) == 0x000004, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_1) == 0x00000C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_2) == 0x000014, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_3) == 0x00001C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_4) == 0x000024, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_5) == 0x00002C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_6) == 0x000034, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_7) == 0x00003C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_8) == 0x000044, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_9) == 0x00004C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_10) == 0x000054, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_name_Variable_11) == 0x00005C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, Temp_byte_Variable) == 0x000064, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000068, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, K2Node_Select_Default) == 0x000070, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetFriendOnlineStatus_ReturnValue) == 0x000078, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetFriendOnlineStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetDataTableRowFromName_OutRow) == 0x00007C, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetStatusColor_StatusColor) == 0x000094, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetStatusColor_StatusColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateStatus, CallFunc_GetStatusMessage_ReturnValue) == 0x0000A8, "Member 'WBP_PlayerInfoDisplay_C_UpdateStatus::CallFunc_GetStatusMessage_ReturnValue' has a wrong offset!");

// Function WBP_PlayerInfoDisplay.WBP_PlayerInfoDisplay_C.UpdateVoiceChatDisplay
// 0x0003 (0x0003 - 0x0000)
struct WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay final
{
public:
	bool                                          bInVoiceChannel;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTalking;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMuted;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay) == 0x000001, "Wrong alignment on WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay");
static_assert(sizeof(WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay) == 0x000003, "Wrong size on WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay, bInVoiceChannel) == 0x000000, "Member 'WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay::bInVoiceChannel' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay, bIsTalking) == 0x000001, "Member 'WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay::bIsTalking' has a wrong offset!");
static_assert(offsetof(WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay, bIsMuted) == 0x000002, "Member 'WBP_PlayerInfoDisplay_C_UpdateVoiceChatDisplay::bIsMuted' has a wrong offset!");

}

