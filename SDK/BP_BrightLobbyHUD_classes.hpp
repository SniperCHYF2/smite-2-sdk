#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrightLobbyHUD

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_BrightLobbyHUDMinimal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BrightLobbyHUD.BP_BrightLobbyHUD_C
// 0x0048 (0x0678 - 0x0630)
class ABP_BrightLobbyHUD_C final : public ABP_BrightLobbyHUDMinimal_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBrightLobbyWidget_C*                   LobbyWidget;                                       // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERHLoadoutSlotTypes                           Loadout_Slot_Edit;                                 // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(ERHLoadoutSlotTypes Loadout_Slot_Edit)> Loadout_Slot_Change;       // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           MatchLoadingRouteTag;                              // 0x0658(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   ClearPendingRouteDataOnSwap;                       // 0x0660(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SFXMatchFound;                                     // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void TempBootstrapFunctionality();
	void SwapViewRoute(const struct FGameplayTag& RouteTag, const struct FGameplayTag& SwapTargetRouteTag, bool ForceTransition);
	void SFXPlayMatchFound();
	void SetupQueueEvents();
	void SafeFrameSettingApplied();
	void Remove_Top_View_Route(bool ForceTransition, bool* ViewChanged);
	void ReceiveBeginPlay();
	void OnCustomQueueJoin();
	void OnCustomLobbyLeft();
	bool Is_in_EOM_View_State();
	void InternalAddViewRoute(const struct FGameplayTag& RouteTag, bool ClearRouteStack, bool ForceTransition, class UObject* Data, bool* ViewChanged);
	void HandleOrderReadyToDisplay(class URHOrder* Order);
	void HandleMatchStatusUpdated(ERH_MatchStatus MatchStatus);
	void Handle_Party_Invite_Received(class URH_PlayerInfo* Inviter);
	void Handle_Login_State_Change(ERHLoginState Login_State);
	class URHPopupManager* GetPopupManager();
	class URHWidget* GetLobbyWidget();
	TArray<class UPanelWidget*> GetFocusableWidgetContainers();
	void GetCurrentTransitionRoute(struct FGameplayTag* Current_Route);
	void Get_Current_View_Route(struct FGameplayTag* Current_Route);
	void Get_Current_Loadout_Slot(ERHLoadoutSlotTypes* Current_Loadout_Slot);
	void Focus_Sticky_Loadout_Panel();
	void Focus_Home_Screen();
	void FinishPartyInvite(bool bSuccess, const class FString& DisplayName);
	void FallbackLogoutCleanup();
	void ExecuteUbergraph_BP_BrightLobbyHUD(int32 EntryPoint);
	void EvaluateFocus();
	void CallRemoveTopViewRoute(bool ForceTransition, bool* ViewChanged);
	void Call_Add_View_Route(const struct FGameplayTag& RouteTag, bool ClearRouteStack, bool ForceTransition, bool* ViewChanged);
	void Cache_Current_Loadout_Slot(ERHLoadoutSlotTypes Loadout_Slot_Edit_0);
	void BP_HandleOrderReadyToDisplay(class URHOrder* Order);
	void BindSettingCallbacks();
	void ApplySafeFrameScale(float SafeFrameScale);
	void Add_View_Route(const struct FGameplayTag& RouteTag, bool ClearRouteStack, bool ForceTransition, bool* ViewChanged);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BrightLobbyHUD_C">();
	}
	static class ABP_BrightLobbyHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BrightLobbyHUD_C>();
	}
};
static_assert(alignof(ABP_BrightLobbyHUD_C) == 0x000008, "Wrong alignment on ABP_BrightLobbyHUD_C");
static_assert(sizeof(ABP_BrightLobbyHUD_C) == 0x000678, "Wrong size on ABP_BrightLobbyHUD_C");
static_assert(offsetof(ABP_BrightLobbyHUD_C, UberGraphFrame) == 0x000630, "Member 'ABP_BrightLobbyHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, LobbyWidget) == 0x000638, "Member 'ABP_BrightLobbyHUD_C::LobbyWidget' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, Loadout_Slot_Edit) == 0x000640, "Member 'ABP_BrightLobbyHUD_C::Loadout_Slot_Edit' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, Loadout_Slot_Change) == 0x000648, "Member 'ABP_BrightLobbyHUD_C::Loadout_Slot_Change' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, MatchLoadingRouteTag) == 0x000658, "Member 'ABP_BrightLobbyHUD_C::MatchLoadingRouteTag' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, ClearPendingRouteDataOnSwap) == 0x000660, "Member 'ABP_BrightLobbyHUD_C::ClearPendingRouteDataOnSwap' has a wrong offset!");
static_assert(offsetof(ABP_BrightLobbyHUD_C, SFXMatchFound) == 0x000670, "Member 'ABP_BrightLobbyHUD_C::SFXMatchFound' has a wrong offset!");

}

