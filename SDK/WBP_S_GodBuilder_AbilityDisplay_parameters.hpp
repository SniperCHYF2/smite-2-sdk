#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_AbilityDisplay

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_GodBuilder_AbilityDisplay.WBP_S_GodBuilder_AbilityDisplay_C.DisplayType
// 0x000C (0x000C - 0x0000)
struct WBP_S_GodBuilder_AbilityDisplay_C_DisplayType final
{
public:
	struct FGameplayTag                           TypeTag;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType) == 0x000004, "Wrong alignment on WBP_S_GodBuilder_AbilityDisplay_C_DisplayType");
static_assert(sizeof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType) == 0x00000C, "Wrong size on WBP_S_GodBuilder_AbilityDisplay_C_DisplayType");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType, TypeTag) == 0x000000, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayType::TypeTag' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType, CallFunc_MatchesTag_ReturnValue) == 0x000008, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayType::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType, CallFunc_MatchesTag_ReturnValue_1) == 0x000009, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayType::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayType, CallFunc_MatchesTag_ReturnValue_2) == 0x00000A, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayType::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");

// Function WBP_S_GodBuilder_AbilityDisplay.WBP_S_GodBuilder_AbilityDisplay_C.DisplayTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle");
static_assert(sizeof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle) == 0x000018, "Wrong size on WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle, Title) == 0x000000, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayTitle::Title' has a wrong offset!");

// Function WBP_S_GodBuilder_AbilityDisplay.WBP_S_GodBuilder_AbilityDisplay_C.DisplayEquipmentItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem final
{
public:
	const class UHWEquipmentItem*                 EquipmentItem;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem");
static_assert(sizeof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem) == 0x000008, "Wrong size on WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem, EquipmentItem) == 0x000000, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_DisplayEquipmentItem::EquipmentItem' has a wrong offset!");

// Function WBP_S_GodBuilder_AbilityDisplay.WBP_S_GodBuilder_AbilityDisplay_C.AddedDividerLine
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine final
{
public:
	class UHWWidget*                              AddedLine;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine");
static_assert(sizeof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine) == 0x000010, "Wrong size on WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine, AddedLine) == 0x000000, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine::AddedLine' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_AddedDividerLine::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_S_GodBuilder_AbilityDisplay.WBP_S_GodBuilder_AbilityDisplay_C.AddedDetailLine
// 0x0020 (0x0020 - 0x0000)
struct WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine final
{
public:
	class UHWTooltipWidget_AbilityDetail*         AddedLine;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine");
static_assert(sizeof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine) == 0x000020, "Wrong size on WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine, AddedLine) == 0x000000, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine::AddedLine' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine, K2Node_MakeStruct_Margin) == 0x000008, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'WBP_S_GodBuilder_AbilityDisplay_C_AddedDetailLine::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

}

