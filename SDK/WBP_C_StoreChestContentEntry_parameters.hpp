#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_StoreChestContentEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_C_StoreChestContentEntry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.OnInventoryUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_OnInventoryUpdated final
{
public:
	TArray<int32>                                 UpdatedInventoryIds;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_OnInventoryUpdated) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_OnInventoryUpdated");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_OnInventoryUpdated) == 0x000018, "Wrong size on WBP_C_StoreChestContentEntry_C_OnInventoryUpdated");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnInventoryUpdated, UpdatedInventoryIds) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_OnInventoryUpdated::UpdatedInventoryIds' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnInventoryUpdated, PlayerInfo) == 0x000010, "Member 'WBP_C_StoreChestContentEntry_C_OnInventoryUpdated::PlayerInfo' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.OnDisplaySelectedBundleContentItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem final
{
public:
	const class URHStoreItem*                     BundleContentItem;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem) == 0x000008, "Wrong size on WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem, BundleContentItem) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplaySelectedBundleContentItem::BundleContentItem' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.OnDisplayItem
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_OnDisplayItem final
{
public:
	class UHWInventoryItem*                       Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisplayedItemOwned_ReturnValue;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_OnDisplayItem) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_OnDisplayItem");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_OnDisplayItem) == 0x000020, "Wrong size on WBP_C_StoreChestContentEntry_C_OnDisplayItem");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, Item) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, Temp_bool_Variable) == 0x000008, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, CallFunc_GetItemIconInfo_ReturnValue) == 0x000010, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, Temp_byte_Variable) == 0x000018, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, Temp_byte_Variable_1) == 0x000019, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, CallFunc_IsDisplayedItemOwned_ReturnValue) == 0x00001A, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::CallFunc_IsDisplayedItemOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayItem, K2Node_Select_Default) == 0x00001B, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayItem::K2Node_Select_Default' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.OnDisplayBundleContents
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents final
{
public:
	TArray<class URHStoreItem*>                   BundleContents;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents) == 0x000010, "Wrong size on WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents, BundleContents) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_OnDisplayBundleContents::BundleContents' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.Hover
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_Hover final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_Hover) == 0x000001, "Wrong alignment on WBP_C_StoreChestContentEntry_C_Hover");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_Hover) == 0x000001, "Wrong size on WBP_C_StoreChestContentEntry_C_Hover");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_Hover, Index_0) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_Hover::Index_0' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.ExecuteUbergraph_WBP_C_StoreChestContentEntry
// 0x0050 (0x0050 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Event_UpdatedInventoryIds;                  // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class URH_PlayerInfo*                         K2Node_Event_PlayerInfo;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           K2Node_DynamicCast_AsRHStore_Item;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Index;                          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWStoreItemDisplayWidget*              K2Node_ComponentBoundEvent_PipWidget;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           CallFunc_GetDisplayedStoreItem_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry) == 0x000050, "Wrong size on WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, EntryPoint) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_byte_Variable) == 0x000004, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_bool_Variable) == 0x000006, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_byte_Variable_3) == 0x000008, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Event_bIsExpanded) == 0x000009, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Event_UpdatedInventoryIds) == 0x000010, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Event_UpdatedInventoryIds' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Event_PlayerInfo) == 0x000020, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Event_ListItemObject) == 0x000028, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_DynamicCast_AsRHStore_Item) == 0x000030, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_DynamicCast_AsRHStore_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Event_bIsSelected) == 0x000039, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_CustomEvent_Index) == 0x00003A, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Select_Default) == 0x00003B, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, Temp_bool_Variable_1) == 0x00003C, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_Select_Default_1) == 0x00003D, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, K2Node_ComponentBoundEvent_PipWidget) == 0x000040, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::K2Node_ComponentBoundEvent_PipWidget' has a wrong offset!");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry, CallFunc_GetDisplayedStoreItem_ReturnValue) == 0x000048, "Member 'WBP_C_StoreChestContentEntry_C_ExecuteUbergraph_WBP_C_StoreChestContentEntry::CallFunc_GetDisplayedStoreItem_ReturnValue' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_C_StoreChestContentEntry.WBP_C_StoreChestContentEntry_C.BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature final
{
public:
	class UHWStoreItemDisplayWidget*              PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(sizeof(WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(offsetof(WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature, PipWidget) == 0x000000, "Member 'WBP_C_StoreChestContentEntry_C_BndEvt__WBP_C_StoreChestContentEntry_PipContainer_K2Node_ComponentBoundEvent_1_HWOnStorePipRequestSelect__DelegateSignature::PipWidget' has a wrong offset!");

}

