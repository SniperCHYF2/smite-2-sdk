#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GoldFury_KillCounter_Pip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_GoldFury_KillCounter_Pip.WBP_G_V2_GoldFury_KillCounter_Pip_C.ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip) == 0x000004, "Wrong alignment on WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip");
static_assert(sizeof(WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip) == 0x000008, "Wrong size on WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip, EntryPoint) == 0x000000, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_ExecuteUbergraph_WBP_G_V2_GoldFury_KillCounter_Pip::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_GoldFury_KillCounter_Pip.WBP_G_V2_GoldFury_KillCounter_Pip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_GoldFury_KillCounter_Pip.WBP_G_V2_GoldFury_KillCounter_Pip_C.Set Filled
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled final
{
public:
	bool                                          Filled;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayAnim;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeSecondsForUIMaterial_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled) == 0x000008, "Wrong alignment on WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled");
static_assert(sizeof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled) == 0x000028, "Wrong size on WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Filled) == 0x000000, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Filled' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, bPlayAnim) == 0x000001, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::bPlayAnim' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_bool_Variable) == 0x000002, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_byte_Variable) == 0x000003, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, K2Node_Select_Default) == 0x000008, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, K2Node_Select_Default_1) == 0x000009, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, CallFunc_GetRealTimeSecondsForUIMaterial_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::CallFunc_GetRealTimeSecondsForUIMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000024, "Member 'WBP_G_V2_GoldFury_KillCounter_Pip_C_Set_Filled::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

