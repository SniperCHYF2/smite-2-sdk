#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Item_GemOfIsolation

#include "Basic.hpp"

#include "GA_Item_GemOfIsolation_classes.hpp"
#include "GA_Item_GemOfIsolation_parameters.hpp"


namespace SDK
{

// Function GA_Item_GemOfIsolation.GA_Item_GemOfIsolation_C.ExecuteUbergraph_GA_Item_GemOfIsolation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Item_GemOfIsolation_C::ExecuteUbergraph_GA_Item_GemOfIsolation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Item_GemOfIsolation_C", "ExecuteUbergraph_GA_Item_GemOfIsolation");

	Params::GA_Item_GemOfIsolation_C_ExecuteUbergraph_GA_Item_GemOfIsolation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Item_GemOfIsolation.GA_Item_GemOfIsolation_C.OnDamageEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Item_GemOfIsolation_C::OnDamageEvent(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Item_GemOfIsolation_C", "OnDamageEvent");

	Params::GA_Item_GemOfIsolation_C_OnDamageEvent Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Item_GemOfIsolation.GA_Item_GemOfIsolation_C.SetupListeners
// (Event, Protected, BlueprintEvent)

void UGA_Item_GemOfIsolation_C::SetupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Item_GemOfIsolation_C", "SetupListeners");

	UObject::ProcessEvent(Func, nullptr);
}

}

