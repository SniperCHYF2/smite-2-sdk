#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_EventTextEntry

#include "Basic.hpp"

#include "WBP_G_V2_EventTextEntry_classes.hpp"
#include "WBP_G_V2_EventTextEntry_parameters.hpp"


namespace SDK
{

// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.BP_StartDisplay
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UWBP_G_V2_EventTextEntry_C::BP_StartDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "BP_StartDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.BP_StartOutro
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UWBP_G_V2_EventTextEntry_C::BP_StartOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "BP_StartOutro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.HandleNameColorReady
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHWEventCharacter&         EventCharacter                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// const class UHWCollectionItem*          NameColorItem                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_G_V2_EventTextEntry_C::HandleNameColorReady(const struct FHWEventCharacter& EventCharacter, const class UHWCollectionItem* NameColorItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "HandleNameColorReady");

	Params::WBP_G_V2_EventTextEntry_C_HandleNameColorReady Parms{};

	Parms.EventCharacter = std::move(EventCharacter);
	Parms.NameColorItem = NameColorItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.LoadEventContext
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHWEventContext&           EventContext                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_G_V2_EventTextEntry_C::LoadEventContext(const struct FHWEventContext& EventContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "LoadEventContext");

	Params::WBP_G_V2_EventTextEntry_C_LoadEventContext Parms{};

	Parms.EventContext = std::move(EventContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.SetDisplayText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_G_V2_EventTextEntry_C::SetDisplayText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "SetDisplayText");

	Params::WBP_G_V2_EventTextEntry_C_SetDisplayText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_G_V2_EventTextEntry.WBP_G_V2_EventTextEntry_C.GetOutroDuration
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWBP_G_V2_EventTextEntry_C::GetOutroDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_G_V2_EventTextEntry_C", "GetOutroDuration");

	Params::WBP_G_V2_EventTextEntry_C_GetOutroDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

