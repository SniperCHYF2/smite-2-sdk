#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ItemStore_AllItemListWidget

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BndEvt__WBP_G_V2_ItemStore_AllItemListWidget_SearchTextBox_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.BP_OnActivated
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWGodBuilderSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseGodBuilder_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated) == 0x000028, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_bool_Variable) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, CallFunc_ShouldUseGodBuilder_ReturnValue) == 0x000011, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::CallFunc_ShouldUseGodBuilder_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, K2Node_Select_Default) == 0x000013, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, Temp_byte_Variable_3) == 0x000014, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, CallFunc_GetCurrentInputState_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated, K2Node_Select_Default_1) == 0x000021, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnActivated::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.BP_OnDeactivated
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated final
{
public:
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_OnDeactivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.DisplayInvertCategoriesButton
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton) == 0x000005, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton, bShouldShow) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton::bShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_DisplayInvertCategoriesButton::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWBaseHUD*                             CallFunc_GetLocalHUDAsBase_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget) == 0x000040, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, EntryPoint) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, CallFunc_GetLocalHUDAsBase_ReturnValue) == 0x000030, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::CallFunc_GetLocalHUDAsBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, CallFunc_GetCurrentInputState_ReturnValue) == 0x000039, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ExecuteUbergraph_WBP_G_V2_ItemStore_AllItemListWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.HandleBackFromFilterWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget final
{
public:
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget) == 0x000008, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandleBackFromFilterWidget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.HandlePlayerInputTypeChanged
// 0x0013 (0x0013 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged final
{
public:
	ERH_INPUT_STATE                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_11;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_12;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_13;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_14;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       K2Node_Select_Default_2;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged) == 0x000013, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, NewState) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::NewState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_4) == 0x000005, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_5) == 0x000006, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_6) == 0x000007, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_7) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_8) == 0x000009, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_9) == 0x00000A, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_10) == 0x00000B, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_11) == 0x00000C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_12) == 0x00000D, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_13) == 0x00000E, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, Temp_byte_Variable_14) == 0x00000F, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, K2Node_Select_Default) == 0x000010, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, K2Node_Select_Default_1) == 0x000011, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged, K2Node_Select_Default_2) == 0x000012, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_HandlePlayerInputTypeChanged::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.OnInvertCategoryOrderActionPressed
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed final
{
public:
	class UHWItemStoreItemEntry*                  CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnInvertCategoryOrderActionPressed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.OnNextRoleFilterActionPressed
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed final
{
public:
	class UHWItemStoreItemEntry*                  CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnNextRoleFilterActionPressed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.OnOpenGodBuilderActionPressed
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed final
{
public:
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed, CallFunc_AddViewRoute_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnOpenGodBuilderActionPressed::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.OnPreviousRoleFilterActionPressed
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed final
{
public:
	class UHWItemStoreItemEntry*                  CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed) == 0x000010, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed, CallFunc_Array_Get_Item) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_OnPreviousRoleFilterActionPressed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.ScrollToEdge
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge final
{
public:
	bool                                          bScrollToTop;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge) == 0x000001, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge, bScrollToTop) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_ScrollToEdge::bScrollToTop' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.Update Active Display State
// 0x000D (0x000D - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State) == 0x000001, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State) == 0x00000D, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, InputState) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::InputState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_4) == 0x000005, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_5) == 0x000006, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_6) == 0x000007, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_7) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_8) == 0x000009, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, Temp_byte_Variable_9) == 0x00000A, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, K2Node_Select_Default) == 0x00000B, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State, K2Node_Select_Default_1) == 0x00000C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_Update_Active_Display_State::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.UpdateItemListHeader
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader final
{
public:
	class FText                                   HeaderText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader) == 0x000018, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader, HeaderText) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateItemListHeader::HeaderText' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.UpdateLayout
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout final
{
public:
	EHWItemStoreLayoutType                        Layout;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_8;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_12;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_14;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_15;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_4;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_16;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_17;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_18;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_19;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_4;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout) == 0x0000C8, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Layout) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Layout' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable) == 0x000004, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_1) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_2) == 0x00000C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_3) == 0x000010, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_byte_Variable_1) == 0x000014, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_4) == 0x000018, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_5) == 0x00001C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_6) == 0x000020, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_7) == 0x000024, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_byte_Variable_2) == 0x000028, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_8) == 0x00002C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_9) == 0x000030, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_10) == 0x000034, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_11) == 0x000038, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_byte_Variable_3) == 0x00003C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_12) == 0x000040, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_13) == 0x000044, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_14) == 0x000048, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_15) == 0x00004C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_byte_Variable_4) == 0x000050, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_16) == 0x000054, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_17) == 0x000058, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_18) == 0x00005C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, Temp_real_Variable_19) == 0x000060, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000068, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_Select_Default) == 0x000070, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_Select_Default_1) == 0x000074, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_Select_Default_2) == 0x000078, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_MakeStruct_Margin) == 0x00007C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_MakeStruct_Margin_1) == 0x00008C, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0000A0, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x0000A8, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_Select_Default_3) == 0x0000B0, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_MakeStruct_Margin_2) == 0x0000B4, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout, K2Node_Select_Default_4) == 0x0000C4, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_UpdateLayout::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_G_V2_ItemStore_AllItemListWidget.WBP_G_V2_ItemStore_AllItemListWidget_C.BP_GetDesiredFocusTarget
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWItemStoreItemCategoryWidget*         CallFunc_GetFirstVisibleItemCategory_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWItemStoreItemEntry*                  CallFunc_GetItemToFocus_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWItemStoreItemEntry*                  K2Node_DynamicCast_AsHWItem_Store_Item_Entry;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget) == 0x000048, "Wrong size on WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetFirstVisibleItemCategory_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetFirstVisibleItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetItemToFocus_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetItemToFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsHWItem_Store_Item_Entry) == 0x000038, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsHWItem_Store_Item_Entry' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_G_V2_ItemStore_AllItemListWidget_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

