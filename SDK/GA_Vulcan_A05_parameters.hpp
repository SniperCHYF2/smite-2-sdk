#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Vulcan_A05

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function GA_Vulcan_A05.GA_Vulcan_A05_C.ExecuteUbergraph_GA_Vulcan_A05
// 0x00C8 (0x00C8 - 0x0000)
struct GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityFlowPhase                             K2Node_Event_PrevPhase;                            // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityFlowPhase                             K2Node_Event_NextPhase;                            // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& PhaseTag, float PhaseDuration, class UHWAbilityTask_PhasedMontage* Task)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PhaseTag_2;                     // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PhaseDuration_2;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHWAbilityTask_PhasedMontage*           K2Node_CustomEvent_Task_2;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PhaseTag_1;                     // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PhaseDuration_1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           K2Node_CustomEvent_Task_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& PhaseTag, float PhaseDuration, class UHWAbilityTask_PhasedMontage* Task)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PhaseTag;                       // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PhaseDuration;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           K2Node_CustomEvent_Task;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& PhaseTag, float PhaseDuration, class UHWAbilityTask_PhasedMontage* Task)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilityTask_PhasedMontage*           Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x008C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           CallFunc_PlayPhasedMontage_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05) == 0x000008, "Wrong alignment on GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05");
static_assert(sizeof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05) == 0x0000C8, "Wrong size on GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, EntryPoint) == 0x000000, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_Event_PrevPhase) == 0x000004, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_Event_PrevPhase' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_Event_NextPhase) == 0x000005, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_Event_NextPhase' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseTag_2) == 0x00001C, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseTag_2' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseDuration_2) == 0x000024, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseDuration_2' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_Task_2) == 0x000028, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_Task_2' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseTag_1) == 0x000030, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseTag_1' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseDuration_1) == 0x000038, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseDuration_1' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_Task_1) == 0x000040, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_Task_1' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseTag) == 0x000058, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseTag' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_PhaseDuration) == 0x000060, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_PhaseDuration' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CustomEvent_Task) == 0x000068, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CustomEvent_Task' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_CreateDelegate_OutputDelegate_2) == 0x000070, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, Temp_object_Variable) == 0x000080, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, Temp_real_Variable) == 0x000088, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, Temp_struct_Variable) == 0x00008C, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, CallFunc_PlayPhasedMontage_ReturnValue) == 0x000098, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::CallFunc_PlayPhasedMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, Temp_bool_Variable) == 0x0000A1, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000A8, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000B0, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000C1, "Member 'GA_Vulcan_A05_C_ExecuteUbergraph_GA_Vulcan_A05::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_Vulcan_A05.GA_Vulcan_A05_C.OnAbilityPhaseChangeStarted
// 0x0002 (0x0002 - 0x0000)
struct GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted final
{
public:
	EAbilityFlowPhase                             PrevPhase;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityFlowPhase                             NextPhase;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted) == 0x000001, "Wrong alignment on GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted");
static_assert(sizeof(GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted) == 0x000002, "Wrong size on GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted");
static_assert(offsetof(GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted, PrevPhase) == 0x000000, "Member 'GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted::PrevPhase' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted, NextPhase) == 0x000001, "Member 'GA_Vulcan_A05_C_OnAbilityPhaseChangeStarted::NextPhase' has a wrong offset!");

// Function GA_Vulcan_A05.GA_Vulcan_A05_C.OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F
// 0x0018 (0x0018 - 0x0000)
struct GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F final
{
public:
	struct FGameplayTag                           PhaseTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           Task;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F) == 0x000008, "Wrong alignment on GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(sizeof(GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F) == 0x000018, "Wrong size on GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(offsetof(GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F, PhaseTag) == 0x000000, "Member 'GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F::PhaseTag' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F, PhaseDuration) == 0x000008, "Member 'GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F::PhaseDuration' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F, Task) == 0x000010, "Member 'GA_Vulcan_A05_C_OnMontageEnded_83DDC1874F3CD89B065C989739D2DA8F::Task' has a wrong offset!");

// Function GA_Vulcan_A05.GA_Vulcan_A05_C.OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F
// 0x0018 (0x0018 - 0x0000)
struct GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F final
{
public:
	struct FGameplayTag                           PhaseTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           Task;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F) == 0x000008, "Wrong alignment on GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(sizeof(GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F) == 0x000018, "Wrong size on GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F, PhaseTag) == 0x000000, "Member 'GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F::PhaseTag' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F, PhaseDuration) == 0x000008, "Member 'GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F::PhaseDuration' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F, Task) == 0x000010, "Member 'GA_Vulcan_A05_C_OnPhaseEnded_83DDC1874F3CD89B065C989739D2DA8F::Task' has a wrong offset!");

// Function GA_Vulcan_A05.GA_Vulcan_A05_C.OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F
// 0x0018 (0x0018 - 0x0000)
struct GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F final
{
public:
	struct FGameplayTag                           PhaseTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilityTask_PhasedMontage*           Task;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F) == 0x000008, "Wrong alignment on GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(sizeof(GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F) == 0x000018, "Wrong size on GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F, PhaseTag) == 0x000000, "Member 'GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F::PhaseTag' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F, PhaseDuration) == 0x000008, "Member 'GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F::PhaseDuration' has a wrong offset!");
static_assert(offsetof(GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F, Task) == 0x000010, "Member 'GA_Vulcan_A05_C_OnPhaseStarted_83DDC1874F3CD89B065C989739D2DA8F::Task' has a wrong offset!");

}

