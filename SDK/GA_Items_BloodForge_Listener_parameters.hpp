#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_BloodForge_Listener

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function GA_Items_BloodForge_Listener.GA_Items_BloodForge_Listener_C.ExecuteUbergraph_GA_Items_BloodForge_Listener
// 0x0118 (0x0118 - 0x0000)
struct GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AHWTeamState* Team, class AHWPlayerState* TeamMember, const struct FDamageEventData& KillEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0028(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWTeamState*                           K2Node_CustomEvent_Team;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerState*                         K2Node_CustomEvent_TeamMember;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageEventData                       K2Node_CustomEvent_KillEventData;                  // 0x0040(0x0070)(ConstParm)
	class AHWTeamState*                           CallFunc_GetTeamState_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacterBase_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00E8(0x0020)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener) == 0x000008, "Wrong alignment on GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener");
static_assert(sizeof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener) == 0x000118, "Wrong size on GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, EntryPoint) == 0x000000, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, Temp_bool_Variable) == 0x00000C, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_GetGenericTeamId_ReturnValue) == 0x000028, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_CustomEvent_Team) == 0x000030, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_CustomEvent_TeamMember) == 0x000038, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_CustomEvent_TeamMember' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_CustomEvent_KillEventData) == 0x000040, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_CustomEvent_KillEventData' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_GetTeamState_ReturnValue) == 0x0000B0, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_GetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x0000B8, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x0000C0, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_GetCharacterBase_ReturnValue) == 0x0000C8, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_GetCharacterBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000D0, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000E8, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000108, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000110, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000111, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener, CallFunc_BooleanAND_ReturnValue) == 0x000112, "Member 'GA_Items_BloodForge_Listener_C_ExecuteUbergraph_GA_Items_BloodForge_Listener::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Items_BloodForge_Listener.GA_Items_BloodForge_Listener_C.OnKillEvent
// 0x0080 (0x0080 - 0x0000)
struct GA_Items_BloodForge_Listener_C_OnKillEvent final
{
public:
	class AHWTeamState*                           Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerState*                         TeamMember;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageEventData                       KillEventData;                                     // 0x0010(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Items_BloodForge_Listener_C_OnKillEvent) == 0x000008, "Wrong alignment on GA_Items_BloodForge_Listener_C_OnKillEvent");
static_assert(sizeof(GA_Items_BloodForge_Listener_C_OnKillEvent) == 0x000080, "Wrong size on GA_Items_BloodForge_Listener_C_OnKillEvent");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_OnKillEvent, Team) == 0x000000, "Member 'GA_Items_BloodForge_Listener_C_OnKillEvent::Team' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_OnKillEvent, TeamMember) == 0x000008, "Member 'GA_Items_BloodForge_Listener_C_OnKillEvent::TeamMember' has a wrong offset!");
static_assert(offsetof(GA_Items_BloodForge_Listener_C_OnKillEvent, KillEventData) == 0x000010, "Member 'GA_Items_BloodForge_Listener_C_OnKillEvent::KillEventData' has a wrong offset!");

}

