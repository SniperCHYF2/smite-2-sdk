#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ObjectiveHealthbar_Health

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_ObjectiveHealthbar_Health.WBP_G_V2_ObjectiveHealthbar_Health_C
// 0x0028 (0x0650 - 0x0628)
class UWBP_G_V2_ObjectiveHealthbar_Health_C final : public UHWCharacterHealthWidget
{
public:
	class UWBP_G_V2_GodHealthGainLossBar_C*       GainLossBar;                                       // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FHWGainLossBarPercentRangeConfig> FriendlyPercentRangeConfig;                      // 0x0630(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FHWGainLossBarPercentRangeConfig> EnemyPercentRangeConfig;                         // 0x0640(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

public:
	void AttributeTrackStarted(const struct FGameplayAttribute& Attribute, float InitialValue);
	void UpdateCurrentHealth(float OldHealth, float NewHealth, bool bShouldAnimate);
	void UpdateMaxHealth(float OldMaxHealth, float NewMaxHealth, bool bShouldAnimate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_ObjectiveHealthbar_Health_C">();
	}
	static class UWBP_G_V2_ObjectiveHealthbar_Health_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_ObjectiveHealthbar_Health_C>();
	}
};
static_assert(alignof(UWBP_G_V2_ObjectiveHealthbar_Health_C) == 0x000008, "Wrong alignment on UWBP_G_V2_ObjectiveHealthbar_Health_C");
static_assert(sizeof(UWBP_G_V2_ObjectiveHealthbar_Health_C) == 0x000650, "Wrong size on UWBP_G_V2_ObjectiveHealthbar_Health_C");
static_assert(offsetof(UWBP_G_V2_ObjectiveHealthbar_Health_C, GainLossBar) == 0x000628, "Member 'UWBP_G_V2_ObjectiveHealthbar_Health_C::GainLossBar' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ObjectiveHealthbar_Health_C, FriendlyPercentRangeConfig) == 0x000630, "Member 'UWBP_G_V2_ObjectiveHealthbar_Health_C::FriendlyPercentRangeConfig' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_ObjectiveHealthbar_Health_C, EnemyPercentRangeConfig) == 0x000640, "Member 'UWBP_G_V2_ObjectiveHealthbar_Health_C::EnemyPercentRangeConfig' has a wrong offset!");

}

