#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodAbilityOverviewWidget

#include "Basic.hpp"

#include "WBP_C_GodAbilityOverviewWidget_classes.hpp"
#include "WBP_C_GodAbilityOverviewWidget_parameters.hpp"


namespace SDK
{

// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.AddedDescriptionLine
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWTooltipWidget_AbilityDescription*AddedLine                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::AddedDescriptionLine(class UHWTooltipWidget_AbilityDescription* AddedLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "AddedDescriptionLine");

	Params::WBP_C_GodAbilityOverviewWidget_C_AddedDescriptionLine Parms{};

	Parms.AddedLine = AddedLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.AddedDetailLine
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWTooltipWidget_AbilityDetail*   AddedLine                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::AddedDetailLine(class UHWTooltipWidget_AbilityDetail* AddedLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "AddedDetailLine");

	Params::WBP_C_GodAbilityOverviewWidget_C_AddedDetailLine Parms{};

	Parms.AddedLine = AddedLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.AddedDividerLine
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWWidget*                        AddedLine                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::AddedDividerLine(class UHWWidget* AddedLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "AddedDividerLine");

	Params::WBP_C_GodAbilityOverviewWidget_C_AddedDividerLine Parms{};

	Parms.AddedLine = AddedLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.AddedUpgradeLine
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWTooltipWidget_AbilityDetail*   AddedLine                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::AddedUpgradeLine(class UHWTooltipWidget_AbilityDetail* AddedLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "AddedUpgradeLine");

	Params::WBP_C_GodAbilityOverviewWidget_C_AddedUpgradeLine Parms{};

	Parms.AddedLine = AddedLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayAsNextAutoSkillLevelUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShould                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayAsNextAutoSkillLevelUp(bool bShould)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayAsNextAutoSkillLevelUp");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayAsNextAutoSkillLevelUp Parms{};

	Parms.bShould = bShould;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayCanLevelUpAndUse
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCanLevelUp                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanUse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayCanLevelUpAndUse(bool bCanLevelUp, bool bCanUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayCanLevelUpAndUse");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayCanLevelUpAndUse Parms{};

	Parms.bCanLevelUp = bCanLevelUp;
	Parms.bCanUse = bCanUse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayCooldown
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Cooldown                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayCooldown(float Cooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayCooldown");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayCooldown Parms{};

	Parms.Cooldown = Cooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayCost
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Cost                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayCost(float Cost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayCost");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayCost Parms{};

	Parms.Cost = Cost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayCurrentLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayCurrentLevel(int32 CurrentLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayCurrentLevel");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayCurrentLevel Parms{};

	Parms.CurrentLevel = CurrentLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayIcon
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>& Icon                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayIcon(const TSoftObjectPtr<class UTexture2D>& Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayIcon");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayIcon Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayLevelLock
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LevelLock                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsAbilityUnlocked                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayLevelLock(int32 LevelLock, bool bIsAbilityUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayLevelLock");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayLevelLock Parms{};

	Parms.LevelLock = LevelLock;
	Parms.bIsAbilityUnlocked = bIsAbilityUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayTitle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Title                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayTitle");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayTitle Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.DisplayType
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              TypeTag                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::DisplayType(const struct FGameplayTag& TypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "DisplayType");

	Params::WBP_C_GodAbilityOverviewWidget_C_DisplayType Parms{};

	Parms.TypeTag = std::move(TypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.ExecuteUbergraph_WBP_C_GodAbilityOverviewWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_C_GodAbilityOverviewWidget_C::ExecuteUbergraph_WBP_C_GodAbilityOverviewWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "ExecuteUbergraph_WBP_C_GodAbilityOverviewWidget");

	Params::WBP_C_GodAbilityOverviewWidget_C_ExecuteUbergraph_WBP_C_GodAbilityOverviewWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.InitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_C_GodAbilityOverviewWidget_C::InitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "InitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.OnEquipmentInstanceAdded
// (Event, Public, BlueprintEvent)

void UWBP_C_GodAbilityOverviewWidget_C::OnEquipmentInstanceAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "OnEquipmentInstanceAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.SetAbilityType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      AbilityTypeText                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_C_GodAbilityOverviewWidget_C::SetAbilityType(const class FText& AbilityTypeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "SetAbilityType");

	Params::WBP_C_GodAbilityOverviewWidget_C_SetAbilityType Parms{};

	Parms.AbilityTypeText = std::move(AbilityTypeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_C_GodAbilityOverviewWidget.WBP_C_GodAbilityOverviewWidget_C.UninitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_C_GodAbilityOverviewWidget_C::UninitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_C_GodAbilityOverviewWidget_C", "UninitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}

}

