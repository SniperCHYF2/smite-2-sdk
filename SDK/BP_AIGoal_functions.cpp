#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal

#include "Basic.hpp"

#include "BP_AIGoal_classes.hpp"
#include "BP_AIGoal_parameters.hpp"


namespace SDK
{

// Function BP_AIGoal.BP_AIGoal_C.AddBonus
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AdditiveBonus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::AddBonus(double AdditiveBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "AddBonus");

	Params::BP_AIGoal_C_AddBonus Parms{};

	Parms.AdditiveBonus = AdditiveBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.ApplyBonus
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FinalScore                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::ApplyBonus(double Score, double* FinalScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "ApplyBonus");

	Params::BP_AIGoal_C_ApplyBonus Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);

	if (FinalScore != nullptr)
		*FinalScore = Parms.FinalScore;
}


// Function BP_AIGoal.BP_AIGoal_C.ApplyCompensation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AIGoal_C::ApplyCompensation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "ApplyCompensation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIGoal.BP_AIGoal_C.ApplyCompensationFactor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  RawWeight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumWeights                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_AIGoal_C::ApplyCompensationFactor(double RawWeight, int32 NumWeights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "ApplyCompensationFactor");

	Params::BP_AIGoal_C_ApplyCompensationFactor Parms{};

	Parms.RawWeight = RawWeight;
	Parms.NumWeights = NumWeights;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AIGoal.BP_AIGoal_C.BonusClosestTargetIsEnemyGod
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ClosestEnemyIsGodBonus                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::BonusClosestTargetIsEnemyGod(class AHWAIController* InController, double ClosestEnemyIsGodBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "BonusClosestTargetIsEnemyGod");

	Params::BP_AIGoal_C_BonusClosestTargetIsEnemyGod Parms{};

	Parms.InController = InController;
	Parms.ClosestEnemyIsGodBonus = ClosestEnemyIsGodBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.BonusIsInProgress
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InProgressBonus                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::BonusIsInProgress(double InProgressBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "BonusIsInProgress");

	Params::BP_AIGoal_C_BonusIsInProgress Parms{};

	Parms.InProgressBonus = InProgressBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.BonusRecentDamage
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  RecentDamageBonus                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PctMaxHealthDmgThreshold                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::BonusRecentDamage(class AHWAIController* InController, double RecentDamageBonus, double PctMaxHealthDmgThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "BonusRecentDamage");

	Params::BP_AIGoal_C_BonusRecentDamage Parms{};

	Parms.InController = InController;
	Parms.RecentDamageBonus = RecentDamageBonus;
	Parms.PctMaxHealthDmgThreshold = PctMaxHealthDmgThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.BonusTargetTag
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TagBonus                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              TagToCheck                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::BonusTargetTag(class AHWAIController* InController, double TagBonus, const struct FGameplayTag& TagToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "BonusTargetTag");

	Params::BP_AIGoal_C_BonusTargetTag Parms{};

	Parms.InController = InController;
	Parms.TagBonus = TagBonus;
	Parms.TagToCheck = std::move(TagToCheck);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.BonusUltimateReady
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  UltimateReadyBonus                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::BonusUltimateReady(class AHWAIController* InController, double UltimateReadyBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "BonusUltimateReady");

	Params::BP_AIGoal_C_BonusUltimateReady Parms{};

	Parms.InController = InController;
	Parms.UltimateReadyBonus = UltimateReadyBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.CalculateWeight
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AIGoal_C::CalculateWeight(class AHWAIController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "CalculateWeight");

	Params::BP_AIGoal_C_CalculateWeight Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AIGoal.BP_AIGoal_C.CheckPreconditionsBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AIGoal_C::CheckPreconditionsBP(class AHWAIController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "CheckPreconditionsBP");

	Params::BP_AIGoal_C_CheckPreconditionsBP Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AIGoal.BP_AIGoal_C.ConstructDebugWeightString
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_AIGoal_C::ConstructDebugWeightString(class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "ConstructDebugWeightString");

	Params::BP_AIGoal_C_ConstructDebugWeightString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function BP_AIGoal.BP_AIGoal_C.ExecuteUbergraph_BP_AIGoal
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::ExecuteUbergraph_BP_AIGoal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "ExecuteUbergraph_BP_AIGoal");

	Params::BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.GetDifficultyWeight
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 RoleWeight_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::GetDifficultyWeight(class AHWAIController* InController, double* RoleWeight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "GetDifficultyWeight");

	Params::BP_AIGoal_C_GetDifficultyWeight Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	if (RoleWeight_0 != nullptr)
		*RoleWeight_0 = Parms.RoleWeight_0;
}


// Function BP_AIGoal.BP_AIGoal_C.GetDispositionWeight
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 DispositionWeight                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::GetDispositionWeight(double* DispositionWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "GetDispositionWeight");

	Params::BP_AIGoal_C_GetDispositionWeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DispositionWeight != nullptr)
		*DispositionWeight = Parms.DispositionWeight;
}


// Function BP_AIGoal.BP_AIGoal_C.GetJitterAdd
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 JitterWeight                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::GetJitterAdd(double* JitterWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "GetJitterAdd");

	Params::BP_AIGoal_C_GetJitterAdd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (JitterWeight != nullptr)
		*JitterWeight = Parms.JitterWeight;
}


// Function BP_AIGoal.BP_AIGoal_C.GetRoleWeight
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 RoleWeight_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::GetRoleWeight(class AHWAIController* InController, double* RoleWeight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "GetRoleWeight");

	Params::BP_AIGoal_C_GetRoleWeight Parms{};

	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);

	if (RoleWeight_0 != nullptr)
		*RoleWeight_0 = Parms.RoleWeight_0;
}


// Function BP_AIGoal.BP_AIGoal_C.MultiplyFinalModfierWeights
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 WeightedScore                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::MultiplyFinalModfierWeights(class AHWAIController* InController, double Score, double* WeightedScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "MultiplyFinalModfierWeights");

	Params::BP_AIGoal_C_MultiplyFinalModfierWeights Parms{};

	Parms.InController = InController;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);

	if (WeightedScore != nullptr)
		*WeightedScore = Parms.WeightedScore;
}


// Function BP_AIGoal.BP_AIGoal_C.Print Weight
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::Print_Weight(double Weight, class AHWAIController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "Print Weight");

	Params::BP_AIGoal_C_Print_Weight Parms{};

	Parms.Weight = Weight;
	Parms.InController = InController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackAbilities
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  AbilitiesReadyMin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AbilitiesReadyMax                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackAbilities(class AHWAIController* InController, class UCurveFloat* CurveFunction, double AbilitiesReadyMin, double AbilitiesReadyMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackAbilities");

	Params::BP_AIGoal_C_TrackAbilities Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.AbilitiesReadyMin = AbilitiesReadyMin;
	Parms.AbilitiesReadyMax = AbilitiesReadyMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackAllyGodCount
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  MaxRange                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GodCountMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GodCountMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackAllyGodCount(class AHWAIController* InController, class UCurveFloat* CurveFunction, double MaxRange, double GodCountMin, double GodCountMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackAllyGodCount");

	Params::BP_AIGoal_C_TrackAllyGodCount Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.MaxRange = MaxRange;
	Parms.GodCountMin = GodCountMin;
	Parms.GodCountMax = GodCountMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackAllyVsEnemyGodDelta
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackAllyVsEnemyGodDelta(class AHWAIController* InController, class UCurveFloat* CurveFunction, double Range, double DeltaMin, double DeltaMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackAllyVsEnemyGodDelta");

	Params::BP_AIGoal_C_TrackAllyVsEnemyGodDelta Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.Range = Range;
	Parms.DeltaMin = DeltaMin;
	Parms.DeltaMax = DeltaMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackAllyVsEnemyMinionDelta
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackAllyVsEnemyMinionDelta(class AHWAIController* InController, class UCurveFloat* CurveFunction, double Range, double DeltaMin, double DeltaMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackAllyVsEnemyMinionDelta");

	Params::BP_AIGoal_C_TrackAllyVsEnemyMinionDelta Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.Range = Range;
	Parms.DeltaMin = DeltaMin;
	Parms.DeltaMax = DeltaMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackAvgEnemyGodHealth
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HealthPctMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HealthPctMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackAvgEnemyGodHealth(class AHWAIController* InController, class UCurveFloat* CurveFunction, double Range, double HealthPctMin, double HealthPctMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackAvgEnemyGodHealth");

	Params::BP_AIGoal_C_TrackAvgEnemyGodHealth Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.Range = Range;
	Parms.HealthPctMin = HealthPctMin;
	Parms.HealthPctMax = HealthPctMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackContribution
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackContribution(class FName Key, double Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackContribution");

	Params::BP_AIGoal_C_TrackContribution Parms{};

	Parms.Key = Key;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackContributionEnhanced
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackContributionEnhanced(class FName Key, class UCurveFloat* CurveFunction, double Input, double Min, double Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackContributionEnhanced");

	Params::BP_AIGoal_C_TrackContributionEnhanced Parms{};

	Parms.Key = Key;
	Parms.CurveFunction = CurveFunction;
	Parms.Input = Input;
	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackEnemyGodCount
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GodCountMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GodCountMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackEnemyGodCount(class AHWAIController* InController, class UCurveFloat* CurveFunction, double Range, double GodCountMin, double GodCountMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackEnemyGodCount");

	Params::BP_AIGoal_C_TrackEnemyGodCount Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.Range = Range;
	Parms.GodCountMin = GodCountMin;
	Parms.GodCountMax = GodCountMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackGold
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  GoldMin                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GoldMax                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackGold(class AHWAIController* InController, class UCurveFloat* CurveFunction, double GoldMin, double GoldMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackGold");

	Params::BP_AIGoal_C_TrackGold Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.GoldMin = GoldMin;
	Parms.GoldMax = GoldMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackLevel
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  MinLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackLevel(class AHWAIController* InController, class UCurveFloat* CurveFunction, double MinLevel, double MaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackLevel");

	Params::BP_AIGoal_C_TrackLevel Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackNearestEnemyGodDistance
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DistanceMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DistanceMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackNearestEnemyGodDistance(class AHWAIController* InController, class UCurveFloat* CurveFunction, double DistanceMin, double DistanceMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackNearestEnemyGodDistance");

	Params::BP_AIGoal_C_TrackNearestEnemyGodDistance Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.DistanceMin = DistanceMin;
	Parms.DistanceMax = DistanceMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackSelfHealth
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  HealthPctMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HealthPctMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackSelfHealth(class AHWAIController* InController, class UCurveFloat* CurveFunction, double HealthPctMin, double HealthPctMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackSelfHealth");

	Params::BP_AIGoal_C_TrackSelfHealth Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.HealthPctMin = HealthPctMin;
	Parms.HealthPctMax = HealthPctMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackSelfMana
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ManaPctMin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ManaPctMax                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackSelfMana(class AHWAIController* InController, class UCurveFloat* CurveFunction, double ManaPctMin, double ManaPctMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackSelfMana");

	Params::BP_AIGoal_C_TrackSelfMana Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.ManaPctMin = ManaPctMin;
	Parms.ManaPctMax = ManaPctMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackSelfVsTargetHealthDelta
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaPctMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaPctMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackSelfVsTargetHealthDelta(class AHWAIController* InController, class UCurveFloat* CurveFunction, double DeltaPctMin, double DeltaPctMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackSelfVsTargetHealthDelta");

	Params::BP_AIGoal_C_TrackSelfVsTargetHealthDelta Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.DeltaPctMin = DeltaPctMin;
	Parms.DeltaPctMax = DeltaPctMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackTargetDistance
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DistanceMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DistanceMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackTargetDistance(class AHWAIController* InController, class UCurveFloat* CurveFunction, double DistanceMin, double DistanceMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackTargetDistance");

	Params::BP_AIGoal_C_TrackTargetDistance Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;
	Parms.DistanceMin = DistanceMin;
	Parms.DistanceMax = DistanceMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.TrackTargetHealth
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWAIController*                  InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      CurveFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::TrackTargetHealth(class AHWAIController* InController, class UCurveFloat* CurveFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "TrackTargetHealth");

	Params::BP_AIGoal_C_TrackTargetHealth Parms{};

	Parms.InController = InController;
	Parms.CurveFunction = CurveFunction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIGoal.BP_AIGoal_C.UpdateDebugText
// (Event, Protected, BlueprintEvent)

void UBP_AIGoal_C::UpdateDebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "UpdateDebugText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIGoal.BP_AIGoal_C.MultiplyContributions
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TMap<class FName, double>&              Contributions                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double*                                 Score                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIGoal_C::MultiplyContributions(TMap<class FName, double>& Contributions, double* Score) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIGoal_C", "MultiplyContributions");

	Params::BP_AIGoal_C_MultiplyContributions Parms{};

	Parms.Contributions = std::move(Contributions);

	UObject::ProcessEvent(Func, &Parms);

	Contributions = std::move(Parms.Contributions);

	if (Score != nullptr)
		*Score = Parms.Score;
}

}

