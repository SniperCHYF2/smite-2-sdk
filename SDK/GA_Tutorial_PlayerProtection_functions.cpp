#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Tutorial_PlayerProtection

#include "Basic.hpp"

#include "GA_Tutorial_PlayerProtection_classes.hpp"
#include "GA_Tutorial_PlayerProtection_parameters.hpp"


namespace SDK
{

// Function GA_Tutorial_PlayerProtection.GA_Tutorial_PlayerProtection_C.ExecuteUbergraph_GA_Tutorial_PlayerProtection
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Tutorial_PlayerProtection_C::ExecuteUbergraph_GA_Tutorial_PlayerProtection(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Tutorial_PlayerProtection_C", "ExecuteUbergraph_GA_Tutorial_PlayerProtection");

	Params::GA_Tutorial_PlayerProtection_C_ExecuteUbergraph_GA_Tutorial_PlayerProtection Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Tutorial_PlayerProtection.GA_Tutorial_PlayerProtection_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Tutorial_PlayerProtection_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Tutorial_PlayerProtection_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Tutorial_PlayerProtection.GA_Tutorial_PlayerProtection_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Tutorial_PlayerProtection_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Tutorial_PlayerProtection_C", "K2_OnEndAbility");

	Params::GA_Tutorial_PlayerProtection_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Tutorial_PlayerProtection.GA_Tutorial_PlayerProtection_C.OnAdjustDamageReceived
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     EffectTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FDamageCalcInfo&           DamageCalcInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UHWAbilitySystemComponent*        BroadcastingAbilitySystemComponent                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const EHWAdjustAttributeEventType       AdjustAttributeEventType                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             BaseDamageValue                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Tutorial_PlayerProtection_C::OnAdjustDamageReceived(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Tutorial_PlayerProtection_C", "OnAdjustDamageReceived");

	Params::GA_Tutorial_PlayerProtection_C_OnAdjustDamageReceived Parms{};

	Parms.EffectTags = std::move(EffectTags);
	Parms.DamageCalcInfo = std::move(DamageCalcInfo);
	Parms.BroadcastingAbilitySystemComponent = BroadcastingAbilitySystemComponent;
	Parms.AdjustAttributeEventType = AdjustAttributeEventType;
	Parms.BaseDamageValue = BaseDamageValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

