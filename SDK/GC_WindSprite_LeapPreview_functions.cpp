#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_WindSprite_LeapPreview

#include "Basic.hpp"

#include "GC_WindSprite_LeapPreview_classes.hpp"
#include "GC_WindSprite_LeapPreview_parameters.hpp"


namespace SDK
{

// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.CheckEndPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_WindSprite_LeapPreview_C::CheckEndPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "CheckEndPoint");

	Params::GC_WindSprite_LeapPreview_C_CheckEndPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.DisableCue
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_WindSprite_LeapPreview_C::DisableCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "DisableCue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.ExecuteUbergraph_GC_WindSprite_LeapPreview
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_WindSprite_LeapPreview_C::ExecuteUbergraph_GC_WindSprite_LeapPreview(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "ExecuteUbergraph_GC_WindSprite_LeapPreview");

	Params::GC_WindSprite_LeapPreview_C_ExecuteUbergraph_GC_WindSprite_LeapPreview Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.GetEndLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHWCharacter_Base*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AGC_WindSprite_LeapPreview_C::GetEndLocation(class AHWCharacter_Base* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "GetEndLocation");

	Params::GC_WindSprite_LeapPreview_C_GetEndLocation Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_WindSprite_LeapPreview_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "OnActive");

	Params::GC_WindSprite_LeapPreview_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters_0 = std::move(Parameters_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_WindSprite_LeapPreview_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "OnRemove");

	Params::GC_WindSprite_LeapPreview_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters_0 = std::move(Parameters_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_WindSprite_LeapPreview_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "ReceiveTick");

	Params::GC_WindSprite_LeapPreview_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_WindSprite_LeapPreview.GC_WindSprite_LeapPreview_C.SetTargeterToEndPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGC_WindSprite_LeapPreview_C::SetTargeterToEndPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_WindSprite_LeapPreview_C", "SetTargeterToEndPoint");

	UObject::ProcessEvent(Func, nullptr);
}

}

