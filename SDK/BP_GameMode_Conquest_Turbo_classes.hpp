#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Conquest_Turbo

#include "Basic.hpp"

#include "BP_GameMode_Conquest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameMode_Conquest_Turbo.BP_GameMode_Conquest_Turbo_C
// 0x0068 (0x0FA8 - 0x0F40)
class ABP_GameMode_Conquest_Turbo_C : public ABP_GameMode_Conquest_C
{
public:
	int32                                         TurboMaxNPCRewardScalingStacks;                    // 0x0F40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F44[0x4];                                      // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurboNPCRewardScalingInterval;                     // 0x0F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentNPCXPRewardModifierBase;               // 0x0F50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentNPCXPRewardModifierScaling;            // 0x0F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentNPCGoldRewardModifierBase;             // 0x0F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentNPCGoldRewardModifierScaling;          // 0x0F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentPlayerKillXPRewardModifier;            // 0x0F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurboPercentPlayerKillGoldRewardModifier;          // 0x0F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AHWBotFactory*>                  LaneObjectiveFactories;                            // 0x0F80(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSubclassOf<class UGameplayEffect>            TurboTitanModifier;                                // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            TurboStructureModifier;                            // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bTurboModifySpawns;                                // 0x0FA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float ApplyNpcAssistGoldFormula(const float BaseValue, const int32 ContributorCount) const;
	float ApplyNpcAssistXpFormula(const float BaseValue, const int32 ContributorCount) const;
	float ApplyNpcKillGoldFormula(const float BaseValue, const int32 ContributorCount) const;
	float ApplyNpcKillXpFormula(const float BaseValue, const int32 ContributorCount) const;
	float CalcPlayerAssistGoldReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* AssistingPlayer, const int32 AssisterCount) const;
	float CalcPlayerAssistXpReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* AssistingPlayer, const int32 AssisterCount) const;
	float CalcPlayerKillGoldReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* KillerPlayer, const bool bApplyFirstBloodBonus) const;
	float CalcPlayerKillXpReward(class AHWCharacter_PlayableCharacter* VictimPlayer, class AHWCharacter_Base* KillerPlayer) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameMode_Conquest_Turbo_C">();
	}
	static class ABP_GameMode_Conquest_Turbo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameMode_Conquest_Turbo_C>();
	}
};
static_assert(alignof(ABP_GameMode_Conquest_Turbo_C) == 0x000008, "Wrong alignment on ABP_GameMode_Conquest_Turbo_C");
static_assert(sizeof(ABP_GameMode_Conquest_Turbo_C) == 0x000FA8, "Wrong size on ABP_GameMode_Conquest_Turbo_C");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboMaxNPCRewardScalingStacks) == 0x000F40, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboMaxNPCRewardScalingStacks' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboNPCRewardScalingInterval) == 0x000F48, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboNPCRewardScalingInterval' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentNPCXPRewardModifierBase) == 0x000F50, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentNPCXPRewardModifierBase' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentNPCXPRewardModifierScaling) == 0x000F58, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentNPCXPRewardModifierScaling' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentNPCGoldRewardModifierBase) == 0x000F60, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentNPCGoldRewardModifierBase' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentNPCGoldRewardModifierScaling) == 0x000F68, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentNPCGoldRewardModifierScaling' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentPlayerKillXPRewardModifier) == 0x000F70, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentPlayerKillXPRewardModifier' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboPercentPlayerKillGoldRewardModifier) == 0x000F78, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboPercentPlayerKillGoldRewardModifier' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, LaneObjectiveFactories) == 0x000F80, "Member 'ABP_GameMode_Conquest_Turbo_C::LaneObjectiveFactories' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboTitanModifier) == 0x000F90, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboTitanModifier' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, TurboStructureModifier) == 0x000F98, "Member 'ABP_GameMode_Conquest_Turbo_C::TurboStructureModifier' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Conquest_Turbo_C, bTurboModifySpawns) == 0x000FA0, "Member 'ABP_GameMode_Conquest_Turbo_C::bTurboModifySpawns' has a wrong offset!");

}

