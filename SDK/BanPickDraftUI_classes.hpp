#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BanPickDraftUI

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "BanPickDraftCommon_structs.hpp"


namespace SDK
{

// Class BanPickDraftUI.DraftActorWidget
// 0x0030 (0x05E8 - 0x05B8)
class UDraftActorWidget : public URHWidget
{
public:
	bool                                          bAutoBindDraftActor;                               // 0x05B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWaitForPlayerToBecomeRelevant;                    // 0x05B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5BA[0x2];                                      // 0x05BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AutoBindDraftName;                                 // 0x05BC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToTasksChangedEvent;                          // 0x05C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToPendingTasksChangedEvent;                   // 0x05C5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToPersonalTaskChangedEvent;                   // 0x05C6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToChoicesChangedEvent;                        // 0x05C7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToTaskCompletedEvent;                         // 0x05C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToAllPersonalTasksCompletedEvent;             // 0x05C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindToEndDraftEvent;                              // 0x05CA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5CB[0x1];                                      // 0x05CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADraftReplicatedActor>   DraftActor;                                        // 0x05CC(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5D4[0x14];                                     // 0x05D4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AllPersonalTasksCompleted();
	void ChoicesChanged(const TArray<class UObject*>& RemovedChoices, const TArray<class UObject*>& AddedOrUpdatedChoices);
	void DraftActorAddedToOwner(class ADraftReplicatedActor* NewDraftActor);
	void EndDraft();
	void OnBoundDraftActorDestroyed(class AActor* DestroyedActor);
	void PendingTasksChanged();
	void PersonalTaskChanged();
	void PostSetDraftActor();
	void PreClearDraftActor();
	void SetBindToAllPersonalTasksCompleted(bool bEnable);
	void SetBindToChoicesChanged(bool bEnable);
	void SetBindToEndDraft(bool bEnable);
	void SetBindToPendingTasksChanged(bool bEnable);
	void SetBindToPersonalTaskChanged(bool bEnable);
	void SetBindToTaskCompleted(bool bEnable);
	void SetBindToTasksChanged(bool bEnable);
	void SetDraftActor(class ADraftReplicatedActor* InNewDraftActor);
	void TaskCompleted(const struct FDraftTask& CompletedTask);
	void TasksChanged();

	class ADraftReplicatedActor* GetDraftActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DraftActorWidget">();
	}
	static class UDraftActorWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDraftActorWidget>();
	}
};
static_assert(alignof(UDraftActorWidget) == 0x000008, "Wrong alignment on UDraftActorWidget");
static_assert(sizeof(UDraftActorWidget) == 0x0005E8, "Wrong size on UDraftActorWidget");
static_assert(offsetof(UDraftActorWidget, bAutoBindDraftActor) == 0x0005B8, "Member 'UDraftActorWidget::bAutoBindDraftActor' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bWaitForPlayerToBecomeRelevant) == 0x0005B9, "Member 'UDraftActorWidget::bWaitForPlayerToBecomeRelevant' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, AutoBindDraftName) == 0x0005BC, "Member 'UDraftActorWidget::AutoBindDraftName' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToTasksChangedEvent) == 0x0005C4, "Member 'UDraftActorWidget::bBindToTasksChangedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToPendingTasksChangedEvent) == 0x0005C5, "Member 'UDraftActorWidget::bBindToPendingTasksChangedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToPersonalTaskChangedEvent) == 0x0005C6, "Member 'UDraftActorWidget::bBindToPersonalTaskChangedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToChoicesChangedEvent) == 0x0005C7, "Member 'UDraftActorWidget::bBindToChoicesChangedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToTaskCompletedEvent) == 0x0005C8, "Member 'UDraftActorWidget::bBindToTaskCompletedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToAllPersonalTasksCompletedEvent) == 0x0005C9, "Member 'UDraftActorWidget::bBindToAllPersonalTasksCompletedEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, bBindToEndDraftEvent) == 0x0005CA, "Member 'UDraftActorWidget::bBindToEndDraftEvent' has a wrong offset!");
static_assert(offsetof(UDraftActorWidget, DraftActor) == 0x0005CC, "Member 'UDraftActorWidget::DraftActor' has a wrong offset!");

// Class BanPickDraftUI.DraftChoiceGridWidget
// 0x0070 (0x0658 - 0x05E8)
class UDraftChoiceGridWidget : public UDraftActorWidget
{
public:
	class UGridPanel*                             GridPanel;                                         // 0x05E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDraftChoiceWidget>         ChoiceWidgetClass;                                 // 0x05F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                PaddingWidgetClass;                                // 0x05F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         GridWidth;                                         // 0x0600(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDraftChoiceWidget*>             ActiveChoiceWidgets;                               // 0x0608(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                    ActivePaddingWidgets;                              // 0x0618(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class UDraftChoiceWidget* Choice)> OnChoiceWidgetHovered;          // 0x0628(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UDraftChoiceWidget* Choice)> OnChoiceWidgetUnhovered;        // 0x0638(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnChoiceGridRebuilt;                               // 0x0648(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void SetChoiceWidgetClass(TSubclassOf<class UDraftChoiceWidget> InChoiceWidgetClass);
	void SetGridPanel(class UGridPanel* InGridPanel);

	bool SortActiveChoiceWidgets(const class UDraftChoiceWidget* LHS, const class UDraftChoiceWidget* RHS) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DraftChoiceGridWidget">();
	}
	static class UDraftChoiceGridWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDraftChoiceGridWidget>();
	}
};
static_assert(alignof(UDraftChoiceGridWidget) == 0x000008, "Wrong alignment on UDraftChoiceGridWidget");
static_assert(sizeof(UDraftChoiceGridWidget) == 0x000658, "Wrong size on UDraftChoiceGridWidget");
static_assert(offsetof(UDraftChoiceGridWidget, GridPanel) == 0x0005E8, "Member 'UDraftChoiceGridWidget::GridPanel' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, ChoiceWidgetClass) == 0x0005F0, "Member 'UDraftChoiceGridWidget::ChoiceWidgetClass' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, PaddingWidgetClass) == 0x0005F8, "Member 'UDraftChoiceGridWidget::PaddingWidgetClass' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, GridWidth) == 0x000600, "Member 'UDraftChoiceGridWidget::GridWidth' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, ActiveChoiceWidgets) == 0x000608, "Member 'UDraftChoiceGridWidget::ActiveChoiceWidgets' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, ActivePaddingWidgets) == 0x000618, "Member 'UDraftChoiceGridWidget::ActivePaddingWidgets' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, OnChoiceWidgetHovered) == 0x000628, "Member 'UDraftChoiceGridWidget::OnChoiceWidgetHovered' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, OnChoiceWidgetUnhovered) == 0x000638, "Member 'UDraftChoiceGridWidget::OnChoiceWidgetUnhovered' has a wrong offset!");
static_assert(offsetof(UDraftChoiceGridWidget, OnChoiceGridRebuilt) == 0x000648, "Member 'UDraftChoiceGridWidget::OnChoiceGridRebuilt' has a wrong offset!");

// Class BanPickDraftUI.DraftChoiceWidget
// 0x0040 (0x0628 - 0x05E8)
class UDraftChoiceWidget : public UDraftActorWidget
{
public:
	uint8                                         Pad_5E8[0x20];                                     // 0x05E8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UButton*>                        HitTargets;                                        // 0x0608(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UObject*                                LocalChoiceObject;                                 // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_620[0x8];                                      // 0x0620(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddCombinedHitTarget(class UButton* InButton);
	void ChoiceObjectChanged();
	void CombinedHover();
	void CombinedUnhover();
	void RemoveCombinedHitTarget(class UButton* InButton);
	ECanCompleteDraftTaskResult RequestSelect();
	void SetChoiceObject(class UObject* ChoiceObject);

	struct FDraftChoice GetChoiceData() const;
	class UObject* GetChoiceObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DraftChoiceWidget">();
	}
	static class UDraftChoiceWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDraftChoiceWidget>();
	}
};
static_assert(alignof(UDraftChoiceWidget) == 0x000008, "Wrong alignment on UDraftChoiceWidget");
static_assert(sizeof(UDraftChoiceWidget) == 0x000628, "Wrong size on UDraftChoiceWidget");
static_assert(offsetof(UDraftChoiceWidget, HitTargets) == 0x000608, "Member 'UDraftChoiceWidget::HitTargets' has a wrong offset!");
static_assert(offsetof(UDraftChoiceWidget, LocalChoiceObject) == 0x000618, "Member 'UDraftChoiceWidget::LocalChoiceObject' has a wrong offset!");

// Class BanPickDraftUI.DraftOverallStatusWidget
// 0x0080 (0x0668 - 0x05E8)
class UDraftOverallStatusWidget : public UDraftActorWidget
{
public:
	class FText                                   CachedDisplayText;                                 // 0x05E8(0x0018)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimerId               CachedDisplayTimerId;                              // 0x0600(0x0001)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimerId               LastDisplayTimerId;                                // 0x0601(0x0001)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPGame_ReplicateTimerState                    CachedTimerState;                                  // 0x0602(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_603[0x5];                                      // 0x0603(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDraftTask                             CachedPrimaryTask;                                 // 0x0608(0x0048)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	float                                         TimerUpdatePeriod;                                 // 0x0650(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_654[0x14];                                     // 0x0654(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisplayTextChanged();
	void DisplayTimerChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DraftOverallStatusWidget">();
	}
	static class UDraftOverallStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDraftOverallStatusWidget>();
	}
};
static_assert(alignof(UDraftOverallStatusWidget) == 0x000008, "Wrong alignment on UDraftOverallStatusWidget");
static_assert(sizeof(UDraftOverallStatusWidget) == 0x000668, "Wrong size on UDraftOverallStatusWidget");
static_assert(offsetof(UDraftOverallStatusWidget, CachedDisplayText) == 0x0005E8, "Member 'UDraftOverallStatusWidget::CachedDisplayText' has a wrong offset!");
static_assert(offsetof(UDraftOverallStatusWidget, CachedDisplayTimerId) == 0x000600, "Member 'UDraftOverallStatusWidget::CachedDisplayTimerId' has a wrong offset!");
static_assert(offsetof(UDraftOverallStatusWidget, LastDisplayTimerId) == 0x000601, "Member 'UDraftOverallStatusWidget::LastDisplayTimerId' has a wrong offset!");
static_assert(offsetof(UDraftOverallStatusWidget, CachedTimerState) == 0x000602, "Member 'UDraftOverallStatusWidget::CachedTimerState' has a wrong offset!");
static_assert(offsetof(UDraftOverallStatusWidget, CachedPrimaryTask) == 0x000608, "Member 'UDraftOverallStatusWidget::CachedPrimaryTask' has a wrong offset!");
static_assert(offsetof(UDraftOverallStatusWidget, TimerUpdatePeriod) == 0x000650, "Member 'UDraftOverallStatusWidget::TimerUpdatePeriod' has a wrong offset!");

// Class BanPickDraftUI.DraftPlayerStatusWidget
// 0x0070 (0x0658 - 0x05E8)
class UDraftPlayerStatusWidget : public UDraftActorWidget
{
public:
	TArray<struct FDraftTask>                     CachedCompletedTasks;                              // 0x05E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FDraftTask                             CachedActiveTask;                                  // 0x05F8(0x0048)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bCachedActiveTaskPendingComplete;                  // 0x0640(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDraftPlayerIdHandle                   PlayerId;                                          // 0x0648(0x0010)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void PlayerTasksChanged();
	void PostSetPlayerId();
	void PreClearPlayerId();
	void SetPlayerById(const struct FDraftPlayerIdHandle& InPlayerId);

	struct FDraftPlayerIdHandle GetPlayerId() const;
	bool HasActiveTask() const;
	bool HasLockedInAChoice(class UObject** OutChoice) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DraftPlayerStatusWidget">();
	}
	static class UDraftPlayerStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDraftPlayerStatusWidget>();
	}
};
static_assert(alignof(UDraftPlayerStatusWidget) == 0x000008, "Wrong alignment on UDraftPlayerStatusWidget");
static_assert(sizeof(UDraftPlayerStatusWidget) == 0x000658, "Wrong size on UDraftPlayerStatusWidget");
static_assert(offsetof(UDraftPlayerStatusWidget, CachedCompletedTasks) == 0x0005E8, "Member 'UDraftPlayerStatusWidget::CachedCompletedTasks' has a wrong offset!");
static_assert(offsetof(UDraftPlayerStatusWidget, CachedActiveTask) == 0x0005F8, "Member 'UDraftPlayerStatusWidget::CachedActiveTask' has a wrong offset!");
static_assert(offsetof(UDraftPlayerStatusWidget, bCachedActiveTaskPendingComplete) == 0x000640, "Member 'UDraftPlayerStatusWidget::bCachedActiveTaskPendingComplete' has a wrong offset!");
static_assert(offsetof(UDraftPlayerStatusWidget, PlayerId) == 0x000648, "Member 'UDraftPlayerStatusWidget::PlayerId' has a wrong offset!");

}

