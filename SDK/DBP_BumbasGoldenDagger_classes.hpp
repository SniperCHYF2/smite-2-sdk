#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_BumbasGoldenDagger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DBP_BumbasGoldenDagger.DBP_BumbasGoldenDagger_C
// 0x0018 (0x04E0 - 0x04C8)
class ADBP_BumbasGoldenDagger_C final : public AHWDeployable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorToIgnore;                                     // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DBP_BumbasGoldenDagger(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBP_BumbasGoldenDagger_C">();
	}
	static class ADBP_BumbasGoldenDagger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADBP_BumbasGoldenDagger_C>();
	}
};
static_assert(alignof(ADBP_BumbasGoldenDagger_C) == 0x000008, "Wrong alignment on ADBP_BumbasGoldenDagger_C");
static_assert(sizeof(ADBP_BumbasGoldenDagger_C) == 0x0004E0, "Wrong size on ADBP_BumbasGoldenDagger_C");
static_assert(offsetof(ADBP_BumbasGoldenDagger_C, UberGraphFrame) == 0x0004C8, "Member 'ADBP_BumbasGoldenDagger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADBP_BumbasGoldenDagger_C, DefaultSceneRoot) == 0x0004D0, "Member 'ADBP_BumbasGoldenDagger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADBP_BumbasGoldenDagger_C, ActorToIgnore) == 0x0004D8, "Member 'ADBP_BumbasGoldenDagger_C::ActorToIgnore' has a wrong offset!");

}

