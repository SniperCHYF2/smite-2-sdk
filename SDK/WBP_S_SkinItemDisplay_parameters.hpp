#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_SkinItemDisplay

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleEntryButtonUnhovered
// 0x0030 (0x0030 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue;             // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemStatus                       CallFunc_GetCollectionItemStatus_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered) == 0x000030, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_byte_Variable) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, Temp_bool_Variable) == 0x000002, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_GetDisplayedItem_ReturnValue) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_GetDisplayedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, K2Node_DynamicCast_AsHWSkin_Item) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_GetIsSelected_ReturnValue) == 0x000021, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_GetIsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_GetCollectionItemStatus_ReturnValue) == 0x000022, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_GetCollectionItemStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000024, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000025, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, CallFunc_BooleanOR_ReturnValue_1) == 0x000027, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered, K2Node_Select_Default) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleEntryButtonUnhovered::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleOnDisplayItemSet
// 0x0070 (0x0070 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet final
{
public:
	bool                                          NewLocalVar;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0038(0x0010)(ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0048(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet) == 0x000070, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, NewLocalVar) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, K2Node_DynamicCast_AsHWSkin_Item) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000038, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000048, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, CallFunc_HasAnyTags_ReturnValue) == 0x000068, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet, K2Node_Select_Default) == 0x000069, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleOnDisplayItemSet::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleSetDisplayOwnershipIcons
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons final
{
public:
	bool                                          InDisplayOwnershipIcons;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons) == 0x000001, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons, InDisplayOwnershipIcons) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetDisplayOwnershipIcons::InDisplayOwnershipIcons' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleSetIsEquipped
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped final
{
public:
	bool                                          InIsEquipped;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped) == 0x000004, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped) == 0x000010, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped, InIsEquipped) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped::InIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped, Temp_int_Variable) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped, Temp_int_Variable_1) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped, K2Node_Select_Default) == 0x00000C, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsEquipped::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleSetIsInteractable
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable final
{
public:
	bool                                          InIsInteractable;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable) == 0x000005, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable, InIsInteractable) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable::InIsInteractable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsInteractable::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_HandleSetIsSelected
// 0x0030 (0x0030 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected final
{
public:
	bool                                          InIsSelected;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue;             // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemStatus                       CallFunc_GetCollectionItemStatus_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected) == 0x000030, "Wrong size on WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, InIsSelected) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::InIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_bool_Variable) == 0x000002, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_GetDisplayedItem_ReturnValue) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_GetDisplayedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, K2Node_DynamicCast_AsHWSkin_Item) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_byte_Variable_3) == 0x000019, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, Temp_bool_Variable_1) == 0x00001A, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000020, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, K2Node_Select_Default) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_GetCollectionItemStatus_ReturnValue) == 0x000029, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_GetCollectionItemStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002B, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002C, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_BooleanOR_ReturnValue) == 0x00002D, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, CallFunc_BooleanOR_ReturnValue_1) == 0x00002E, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected, K2Node_Select_Default_1) == 0x00002F, "Member 'WBP_S_SkinItemDisplay_C_BP_HandleSetIsSelected::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.DisplayPrice
// 0x0038 (0x0038 - 0x0000)
struct WBP_S_SkinItemDisplay_C_DisplayPrice final
{
public:
	class URHStoreItemPrice*                      PriceItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWCurrencyType                               CurrencyType;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_S_CurrencyPriceDisplay_C*          Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_S_CurrencyPriceDisplay_C*          Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHWCurrencyType                               Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_S_CurrencyPriceDisplay_C*          K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_DisplayPrice) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_DisplayPrice");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_DisplayPrice) == 0x000038, "Wrong size on WBP_S_SkinItemDisplay_C_DisplayPrice");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, PriceItem) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::PriceItem' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, CurrencyType) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::CurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, Temp_object_Variable) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, Temp_object_Variable_1) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, Temp_byte_Variable) == 0x000020, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, K2Node_Select_Default) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_DisplayPrice, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_S_SkinItemDisplay_C_DisplayPrice::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.ExecuteUbergraph_WBP_S_SkinItemDisplay
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsSelected;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsEquipped;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsInteractable;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInDisplayOwnershipIcons;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay) == 0x000004, "Wrong alignment on WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay) == 0x000008, "Wrong size on WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay, EntryPoint) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay, K2Node_Event_bInIsSelected) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay::K2Node_Event_bInIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay, K2Node_Event_bInIsEquipped) == 0x000005, "Member 'WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay::K2Node_Event_bInIsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay, K2Node_Event_bInIsInteractable) == 0x000006, "Member 'WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay::K2Node_Event_bInIsInteractable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay, K2Node_Event_bInDisplayOwnershipIcons) == 0x000007, "Member 'WBP_S_SkinItemDisplay_C_ExecuteUbergraph_WBP_S_SkinItemDisplay::K2Node_Event_bInDisplayOwnershipIcons' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.HandleSkinVariantRequestSelect
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect final
{
public:
	class UHWStoreItemDisplayWidget*              PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect) == 0x000008, "Wrong size on WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect, PipWidget) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_HandleSkinVariantRequestSelect::PipWidget' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.OnSelectVariantItem
// 0x0038 (0x0038 - 0x0000)
struct WBP_S_SkinItemDisplay_C_OnSelectVariantItem final
{
public:
	TSoftObjectPtr<class UHWInventoryItem>        InVariantItem;                                     // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	const class URHStoreItem*                     InStoreItem;                                       // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_OnSelectVariantItem) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_OnSelectVariantItem");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_OnSelectVariantItem) == 0x000038, "Wrong size on WBP_S_SkinItemDisplay_C_OnSelectVariantItem");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_OnSelectVariantItem, InVariantItem) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_OnSelectVariantItem::InVariantItem' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_OnSelectVariantItem, InStoreItem) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_OnSelectVariantItem::InStoreItem' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_OnSelectVariantItem, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'WBP_S_SkinItemDisplay_C_OnSelectVariantItem::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.Set Display Rarity
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_SkinItemDisplay_C_Set_Display_Rarity final
{
public:
	struct FGameplayTag                           RarityTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetRarityColorTag_OutColorTag;            // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_Set_Display_Rarity) == 0x000004, "Wrong alignment on WBP_S_SkinItemDisplay_C_Set_Display_Rarity");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_Set_Display_Rarity) == 0x000010, "Wrong size on WBP_S_SkinItemDisplay_C_Set_Display_Rarity");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_Set_Display_Rarity, RarityTag) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_Set_Display_Rarity::RarityTag' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_Set_Display_Rarity, CallFunc_GetRarityColorTag_OutColorTag) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_Set_Display_Rarity::CallFunc_GetRarityColorTag_OutColorTag' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetDisplayOwnershipIcons
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons final
{
public:
	bool                                          bInDisplayOwnershipIcons;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons) == 0x000001, "Wrong size on WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons, bInDisplayOwnershipIcons) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetDisplayOwnershipIcons::bInDisplayOwnershipIcons' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetIsEquipped final
{
public:
	bool                                          bInIsEquipped;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetIsEquipped) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetIsEquipped");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetIsEquipped) == 0x000001, "Wrong size on WBP_S_SkinItemDisplay_C_SetIsEquipped");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetIsEquipped, bInIsEquipped) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetIsEquipped::bInIsEquipped' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetIsInteractable
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetIsInteractable final
{
public:
	bool                                          bInIsInteractable;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetIsInteractable) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetIsInteractable");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetIsInteractable) == 0x000001, "Wrong size on WBP_S_SkinItemDisplay_C_SetIsInteractable");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetIsInteractable, bInIsInteractable) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetIsInteractable::bInIsInteractable' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetIsSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetIsSelected final
{
public:
	bool                                          bInIsSelected;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetIsSelected) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetIsSelected");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetIsSelected) == 0x000001, "Wrong size on WBP_S_SkinItemDisplay_C_SetIsSelected");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetIsSelected, bInIsSelected) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetIsSelected::bInIsSelected' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetShowSkinVariants
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetShowSkinVariants final
{
public:
	bool                                          bInShowSkinVariants;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants) == 0x000001, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetShowSkinVariants");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants) == 0x000005, "Wrong size on WBP_S_SkinItemDisplay_C_SetShowSkinVariants");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants, bInShowSkinVariants) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetShowSkinVariants::bInShowSkinVariants' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_SetShowSkinVariants::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_SkinItemDisplay_C_SetShowSkinVariants::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_SkinItemDisplay_C_SetShowSkinVariants::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetShowSkinVariants, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_SetShowSkinVariants::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.SetSkinVariants
// 0x0098 (0x0098 - 0x0000)
struct WBP_S_SkinItemDisplay_C_SetSkinVariants final
{
public:
	TArray<class URHStoreItem*>                   VariantSkins;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UHWInventoryItem>        CallFunc_GetInitialSelectedVariantItem_ReturnValue; // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWInventoryItem*                       K2Node_DynamicCast_AsHWInventory_Item;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UHWStoreItemDisplayWidget* PipWidget)> K2Node_CreateDelegate_OutputDelegate; // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWInventoryItem*                 CallFunc_GetDisplayItem_ReturnValue;               // 0x0080(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item_1;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_SetSkinVariants) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_SetSkinVariants");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_SetSkinVariants) == 0x000098, "Wrong size on WBP_S_SkinItemDisplay_C_SetSkinVariants");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, VariantSkins) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::VariantSkins' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, Temp_byte_Variable) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, Temp_bool_Variable) == 0x000012, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, CallFunc_GetInitialSelectedVariantItem_ReturnValue) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::CallFunc_GetInitialSelectedVariantItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_Select_Default) == 0x000048, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_AsHWInventory_Item) == 0x000050, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_AsHWInventory_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_AsHWSkin_Item) == 0x000060, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, CallFunc_GetDisplayItem_ReturnValue) == 0x000080, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::CallFunc_GetDisplayItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_AsHWSkin_Item_1) == 0x000088, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_AsHWSkin_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_SetSkinVariants, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'WBP_S_SkinItemDisplay_C_SetSkinVariants::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.UpdateItemDisplay
// 0x0030 (0x0030 - 0x0000)
struct WBP_S_SkinItemDisplay_C_UpdateItemDisplay final
{
public:
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue;             // 0x0000(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0018(0x0018)()
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_UpdateItemDisplay");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay) == 0x000030, "Wrong size on WBP_S_SkinItemDisplay_C_UpdateItemDisplay");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay, CallFunc_GetDisplayedItem_ReturnValue) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_UpdateItemDisplay::CallFunc_GetDisplayedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay, CallFunc_GetIconInfoByTag_OutIcon) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_UpdateItemDisplay::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_UpdateItemDisplay::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateItemDisplay, CallFunc_GetItemName_ReturnValue) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_UpdateItemDisplay::CallFunc_GetItemName_ReturnValue' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.UpdateMasteryMaterials
// 0x0040 (0x0040 - 0x0000)
struct WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials final
{
public:
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue;             // 0x0000(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue_1;           // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon_1;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue_1;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials) == 0x000040, "Wrong size on WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetDisplayedItem_ReturnValue) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetDisplayedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetDisplayedItem_ReturnValue_1) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetDisplayedItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, K2Node_DynamicCast_AsHWCollection_Item) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetIconInfoByTag_OutIcon) == 0x000020, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetIconInfoByTag_OutIcon_1) == 0x000030, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetIconInfoByTag_OutIcon_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_GetIconInfoByTag_ReturnValue_1) == 0x000038, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_GetIconInfoByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials, CallFunc_HasTag_ReturnValue) == 0x000039, "Member 'WBP_S_SkinItemDisplay_C_UpdateMasteryMaterials::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.UpdateOwnershipIcons
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHWPlayerInfo*                          CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue;             // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnedCached_ReturnValue;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_ReturnValue_1;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue_1;           // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item_1;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue_2;           // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWInventoryItem*                 CallFunc_GetDisplayedItem_ReturnValue_3;           // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0068(0x0010)(ReferenceParm)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item_1;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue_1;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemStatus                       CallFunc_GetCollectionItemStatus_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnedCachedOrDefault_ReturnValue;       // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons) == 0x0000B0, "Wrong size on WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000010, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetDisplayedItem_ReturnValue) == 0x000018, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetDisplayedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_AsHWCollection_Item) == 0x000020, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetIsSelected_ReturnValue) == 0x000029, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetIsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_IsOwnedCached_ReturnValue) == 0x00002A, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_IsOwnedCached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetIsSelected_ReturnValue_1) == 0x00002B, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetIsSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetDisplayedItem_ReturnValue_1) == 0x000030, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetDisplayedItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_AsHWCollection_Item_1) == 0x000038, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_AsHWCollection_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetDisplayedItem_ReturnValue_2) == 0x000048, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetDisplayedItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_AsHWSkin_Item) == 0x000050, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetDisplayedItem_ReturnValue_3) == 0x000060, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetDisplayedItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000068, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_AsHWSkin_Item_1) == 0x000078, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_AsHWSkin_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_Array_Get_Item) == 0x000084, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000090, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000092, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_MatchesTag_ReturnValue) == 0x000093, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_MatchesTag_ReturnValue_1) == 0x000094, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_bool_Variable) == 0x000095, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_2) == 0x000096, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_3) == 0x000097, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_bool_Variable_1) == 0x000098, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_4) == 0x000099, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_byte_Variable_5) == 0x00009A, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, Temp_bool_Variable_2) == 0x00009B, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetLocalPlayerInfo_ReturnValue_1) == 0x0000A0, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetLocalPlayerInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_GetCollectionItemStatus_ReturnValue) == 0x0000A8, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_GetCollectionItemStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AA, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_IsOwnedCachedOrDefault_ReturnValue) == 0x0000AB, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_IsOwnedCachedOrDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_Select_Default) == 0x0000AC, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_Select_Default_1) == 0x0000AD, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, CallFunc_BooleanOR_ReturnValue) == 0x0000AE, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons, K2Node_Select_Default_2) == 0x0000AF, "Member 'WBP_S_SkinItemDisplay_C_UpdateOwnershipIcons::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_S_SkinItemDisplay.WBP_S_SkinItemDisplay_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_SkinItemDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

