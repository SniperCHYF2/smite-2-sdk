#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_DamageFeedback

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_DamageFeedback.WBP_G_V2_DamageFeedback_C.DisplayDamageFeedback
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback final
{
public:
	EHWDamageFeedbackSide                         side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Opacity;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWDamageFeedbackSide                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback) == 0x000008, "Wrong alignment on WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback");
static_assert(sizeof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback) == 0x000018, "Wrong size on WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback, side) == 0x000000, "Member 'WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback::side' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback, Opacity) == 0x000004, "Member 'WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback::Opacity' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback, Temp_byte_Variable) == 0x000008, "Member 'WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback, K2Node_Select_Default) == 0x000010, "Member 'WBP_G_V2_DamageFeedback_C_DisplayDamageFeedback::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_DamageFeedback.WBP_G_V2_DamageFeedback_C.ExecuteUbergraph_WBP_G_V2_DamageFeedback
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Opacity;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback) == 0x000004, "Wrong alignment on WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback");
static_assert(sizeof(WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback) == 0x000008, "Wrong size on WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback, EntryPoint) == 0x000000, "Member 'WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback, K2Node_Event_Opacity) == 0x000004, "Member 'WBP_G_V2_DamageFeedback_C_ExecuteUbergraph_WBP_G_V2_DamageFeedback::K2Node_Event_Opacity' has a wrong offset!");

// Function WBP_G_V2_DamageFeedback.WBP_G_V2_DamageFeedback_C.UpdateHealthFeedback
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback) == 0x000004, "Wrong alignment on WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback");
static_assert(sizeof(WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback) == 0x000004, "Wrong size on WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback");
static_assert(offsetof(WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback, Opacity) == 0x000000, "Member 'WBP_G_V2_DamageFeedback_C_UpdateHealthFeedback::Opacity' has a wrong offset!");

}

