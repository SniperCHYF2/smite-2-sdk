#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_CancelAbility_Cabrakan_A03

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_CancelAbility_Cabrakan_A03.BP_AIGoal_CancelAbility_Cabrakan_A03_C
// 0x0038 (0x0120 - 0x00E8)
class UBP_AIGoal_CancelAbility_Cabrakan_A03_C final : public UHWAIGoal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        InitialCancelDelay;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EquipTag;                                          // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         EquipSlot;                                         // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CabrakanA03AbilityRadius;                          // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstTargetAGod;                                 // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealthCancelThreshold;                             // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ManaCancelThreshold;                               // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedStartingHealthValue;                         // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedStartingManaValue;                           // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckCancelInterval;                               // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AreEnemiesInsideAbilityRange(bool* bEnemiesNearby);
	void CacheStartingHealthAndMana(class AHWAIController* InController);
	void CheckCancel();
	bool CheckPreconditionsBP(class AHWAIController* InController);
	void EndGoalBP();
	void ExecuteUbergraph_BP_AIGoal_CancelAbility_Cabrakan_A03(int32 EntryPoint);
	void IsHealthAndManaOK(class AHWAIController* InController, bool* bHealthAndManaOK);
	void StartGoalBP();
	void TickGoalBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_CancelAbility_Cabrakan_A03_C">();
	}
	static class UBP_AIGoal_CancelAbility_Cabrakan_A03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_CancelAbility_Cabrakan_A03_C>();
	}
};
static_assert(alignof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C) == 0x000008, "Wrong alignment on UBP_AIGoal_CancelAbility_Cabrakan_A03_C");
static_assert(sizeof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C) == 0x000120, "Wrong size on UBP_AIGoal_CancelAbility_Cabrakan_A03_C");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, UberGraphFrame) == 0x0000E8, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, InitialCancelDelay) == 0x0000F0, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::InitialCancelDelay' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, EquipTag) == 0x0000F8, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::EquipTag' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, EquipSlot) == 0x000100, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::EquipSlot' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, CabrakanA03AbilityRadius) == 0x000104, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::CabrakanA03AbilityRadius' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, IsFirstTargetAGod) == 0x000108, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::IsFirstTargetAGod' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, HealthCancelThreshold) == 0x00010C, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::HealthCancelThreshold' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, ManaCancelThreshold) == 0x000110, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::ManaCancelThreshold' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, CachedStartingHealthValue) == 0x000114, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::CachedStartingHealthValue' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, CachedStartingManaValue) == 0x000118, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::CachedStartingManaValue' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_CancelAbility_Cabrakan_A03_C, CheckCancelInterval) == 0x00011C, "Member 'UBP_AIGoal_CancelAbility_Cabrakan_A03_C::CheckCancelInterval' has a wrong offset!");

}

