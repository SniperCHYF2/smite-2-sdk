#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GlobalEmoteEquipEntry

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry
// 0x0068 (0x0068 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWGlobalEmoteSlotData*                 K2Node_DynamicCast_AsHWGlobal_Emote_Slot_Data;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0048(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry) == 0x000008, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry) == 0x000068, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, EntryPoint) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, Temp_bool_Variable) == 0x000004, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, CallFunc_GetCurrentInputState_ReturnValue) == 0x000018, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_Event_ListItemObject) == 0x000020, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_Event_bIsSelected) == 0x000028, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_DynamicCast_AsHWGlobal_Emote_Slot_Data) == 0x000030, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_DynamicCast_AsHWGlobal_Emote_Slot_Data' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_Event_bIsExpanded) == 0x000039, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, CallFunc_GetItemIconInfo_ReturnValue) == 0x000040, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, CallFunc_GetItemName_ReturnValue) == 0x000048, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, Temp_byte_Variable) == 0x000061, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, Temp_byte_Variable_1) == 0x000062, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry, K2Node_Select_Default) == 0x000063, "Member 'WBP_C_GlobalEmoteEquipEntry_C_ExecuteUbergraph_WBP_C_GlobalEmoteEquipEntry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.OnInputChange
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_OnInputChange final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_S_MultiPromptWidget_C*             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_S_MultiPromptWidget_C*             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_S_MultiPromptWidget_C*             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange) == 0x000008, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_OnInputChange");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange) == 0x000020, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_OnInputChange");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange, InputState) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnInputChange::InputState' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange, Temp_byte_Variable) == 0x000001, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnInputChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange, Temp_object_Variable) == 0x000008, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnInputChange::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange, Temp_object_Variable_1) == 0x000010, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnInputChange::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnInputChange, K2Node_Select_Default) == 0x000018, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnInputChange::K2Node_Select_Default' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.SetHover
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_SetHover final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_SetHover) == 0x000001, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_SetHover");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_SetHover) == 0x000001, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_SetHover");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_SetHover, IsHovered_0) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_SetHover::IsHovered_0' has a wrong offset!");

// Function WBP_C_GlobalEmoteEquipEntry.WBP_C_GlobalEmoteEquipEntry_C.UpdateKeybinds
// 0x0118 (0x0118 - 0x0000)
struct WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   GPBindTags;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   KBMBindTags;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0030(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0038(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x0054(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x005C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0078(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_2;     // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_3;     // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_4;     // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_5;     // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_6;     // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_7;     // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_8;     // 0x00D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_9;     // 0x00DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_10;    // 0x00E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_11;    // 0x00EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_12;    // 0x00F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_13;    // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x0104(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds) == 0x000008, "Wrong alignment on WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds");
static_assert(sizeof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds) == 0x000118, "Wrong size on WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, SlotIndex) == 0x000000, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::SlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, GPBindTags) == 0x000008, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::GPBindTags' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, KBMBindTags) == 0x000018, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::KBMBindTags' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_bool_Variable) == 0x000028, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_int_Variable) == 0x00002C, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable) == 0x000030, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable_1) == 0x000038, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable_2) == 0x000040, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable_3) == 0x000048, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_int_Variable_1) == 0x000050, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable_4) == 0x000054, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, Temp_struct_Variable_5) == 0x00005C, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000064, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x00006C, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000074, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, K2Node_Select_Default) == 0x000078, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_2) == 0x000080, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_3) == 0x000088, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_4) == 0x000090, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_5) == 0x000098, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_6) == 0x0000A0, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_7) == 0x0000A8, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, K2Node_Select_Default_1) == 0x0000B0, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_1) == 0x0000BC, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_2) == 0x0000C0, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_3) == 0x0000C4, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_4) == 0x0000C8, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_5) == 0x0000CC, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_6) == 0x0000D0, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_8) == 0x0000D4, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_9) == 0x0000DC, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_10) == 0x0000E4, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_11) == 0x0000EC, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_12) == 0x0000F4, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_MakeLiteralGameplayTag_ReturnValue_13) == 0x0000FC, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_MakeLiteralGameplayTag_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, K2Node_Select_Default_2) == 0x000104, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_7) == 0x00010C, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds, CallFunc_Array_Add_ReturnValue_8) == 0x000110, "Member 'WBP_C_GlobalEmoteEquipEntry_C_UpdateKeybinds::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");

}

