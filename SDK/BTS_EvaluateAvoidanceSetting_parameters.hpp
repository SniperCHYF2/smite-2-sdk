#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_EvaluateAvoidanceSetting

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTS_EvaluateAvoidanceSetting.BTS_EvaluateAvoidanceSetting_C.ExecuteUbergraph_BTS_EvaluateAvoidanceSetting
// 0x0038 (0x0038 - 0x0000)
struct BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting) == 0x000008, "Wrong alignment on BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting");
static_assert(sizeof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting) == 0x000038, "Wrong size on BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, EntryPoint) == 0x000000, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_Event_OwnerController) == 0x000018, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTS_EvaluateAvoidanceSetting_C_ExecuteUbergraph_BTS_EvaluateAvoidanceSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTS_EvaluateAvoidanceSetting.BTS_EvaluateAvoidanceSetting_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI");
static_assert(sizeof(BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_EvaluateAvoidanceSetting_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_EvaluateAvoidanceSetting.BTS_EvaluateAvoidanceSetting_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_EvaluateAvoidanceSetting_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_EvaluateAvoidanceSetting.BTS_EvaluateAvoidanceSetting_C.UpdateAvoidance
// 0x0020 (0x0020 - 0x0000)
struct BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance final
{
public:
	class AHWCharacter_Base*                      Bot;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0009(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNavAvoidanceMask                      K2Node_MakeStruct_NavAvoidanceMask;                // 0x000C(0x0004)(NoDestructor)
	struct FNavAvoidanceMask                      K2Node_MakeStruct_NavAvoidanceMask_1;              // 0x0010(0x0004)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNavAvoidanceMask                      K2Node_Select_Default;                             // 0x0018(0x0004)(ConstParm, NoDestructor)
};
static_assert(alignof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance) == 0x000008, "Wrong alignment on BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance");
static_assert(sizeof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance) == 0x000020, "Wrong size on BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, Bot) == 0x000000, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::Bot' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, Temp_bool_Variable) == 0x000008, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, CallFunc_GetGenericTeamId_ReturnValue) == 0x000009, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, K2Node_MakeStruct_NavAvoidanceMask) == 0x00000C, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::K2Node_MakeStruct_NavAvoidanceMask' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, K2Node_MakeStruct_NavAvoidanceMask_1) == 0x000010, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::K2Node_MakeStruct_NavAvoidanceMask_1' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance, K2Node_Select_Default) == 0x000018, "Member 'BTS_EvaluateAvoidanceSetting_C_UpdateAvoidance::K2Node_Select_Default' has a wrong offset!");

}

