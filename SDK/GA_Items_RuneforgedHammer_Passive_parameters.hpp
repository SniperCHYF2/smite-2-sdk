#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_RuneforgedHammer_Passive

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function GA_Items_RuneforgedHammer_Passive.GA_Items_RuneforgedHammer_Passive_C.BP_OnGameplayEffectAppliedToTarget
// 0x00C0 (0x00C0 - 0x0000)
struct GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget final
{
public:
	const class AActor*                           Target;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ActiveHandle;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  EffectAssetTags;                                   // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayEffectSpecHandle              EffectSpecHandle;                                  // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInternalCooldownActive_ReturnValue;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitudeTowards_ReturnValue;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BP_MakeEffectContext_ReturnValue;         // 0x0058(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget) == 0x000008, "Wrong alignment on GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget");
static_assert(sizeof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget) == 0x0000C0, "Wrong size on GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, Target) == 0x000000, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::Target' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, ActiveHandle) == 0x000008, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::ActiveHandle' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, EffectAssetTags) == 0x000010, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::EffectAssetTags' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, EffectSpecHandle) == 0x000030, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::EffectSpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x000040, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_IsInternalCooldownActive_ReturnValue) == 0x000041, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_IsInternalCooldownActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_GetTeamAttitudeTowards_ReturnValue) == 0x000051, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_GetTeamAttitudeTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BP_MakeEffectContext_ReturnValue) == 0x000058, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BP_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000078, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000080, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000088, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000090, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000A8, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B0, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_HasTag_ReturnValue) == 0x0000B8, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'GA_Items_RuneforgedHammer_Passive_C_BP_OnGameplayEffectAppliedToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Items_RuneforgedHammer_Passive.GA_Items_RuneforgedHammer_Passive_C.ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive
// 0x0004 (0x0004 - 0x0000)
struct GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive) == 0x000004, "Wrong alignment on GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive");
static_assert(sizeof(GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive) == 0x000004, "Wrong size on GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive, EntryPoint) == 0x000000, "Member 'GA_Items_RuneforgedHammer_Passive_C_ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive::EntryPoint' has a wrong offset!");

// Function GA_Items_RuneforgedHammer_Passive.GA_Items_RuneforgedHammer_Passive_C.OnDamageReceived
// 0x0110 (0x0110 - 0x0000)
struct GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived final
{
public:
	struct FDamageEventData                       DamageEventData;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue; // 0x0078(0x0028)()
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x00A0(0x0010)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x00C8(0x0010)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x00D8(0x0010)(ReferenceParm)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived) == 0x000008, "Wrong alignment on GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived");
static_assert(sizeof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived) == 0x000110, "Wrong size on GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, DamageEventData) == 0x000000, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::DamageEventData' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, Temp_bool_Variable) == 0x000070, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue) == 0x000078, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x0000A0, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_HasTag_ReturnValue) == 0x0000B0, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x0000C8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x0000D8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000E8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000F9, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000108, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnDamageReceived::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function GA_Items_RuneforgedHammer_Passive.GA_Items_RuneforgedHammer_Passive_C.OnOwnerDealtDamage
// 0x00D0 (0x00D0 - 0x0000)
struct GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage final
{
public:
	struct FDamageEventData                       DamageEventData;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 CurrentActor;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CurrentHandle;                                     // 0x0078(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue; // 0x0088(0x0028)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00B0(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Map_Find_Value;                           // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEffectProcInhandItems_Success;         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage) == 0x000008, "Wrong alignment on GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage");
static_assert(sizeof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage) == 0x0000D0, "Wrong size on GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, DamageEventData) == 0x000000, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::DamageEventData' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CurrentActor) == 0x000070, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CurrentActor' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CurrentHandle) == 0x000078, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CurrentHandle' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_Map_Remove_ReturnValue) == 0x000080, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue) == 0x000088, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_CreateSingleHitTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000B0, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage, CallFunc_CanEffectProcInhandItems_Success) == 0x0000C9, "Member 'GA_Items_RuneforgedHammer_Passive_C_OnOwnerDealtDamage::CallFunc_CanEffectProcInhandItems_Success' has a wrong offset!");

}

