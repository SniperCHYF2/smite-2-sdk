#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_AmISafe

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_AmISafe.BTD_AmISafe_C
// 0x0048 (0x00E8 - 0x00A0)
class UBTD_AmISafe_C final : public UBTDecorator_BlueprintBase
{
public:
	double                                        MaxThreatRange;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckGodThreatsOnly;                               // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreThreatsAlways;                               // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreThreatsIfRanged;                             // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckHealthThreshold;                              // 0x00AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        healthThreshold;                                   // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCheckAdvantage;                                   // 0x00B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 CombatAdvantageBlackboardKey;                      // 0x00C0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_AmISafe_C">();
	}
	static class UBTD_AmISafe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_AmISafe_C>();
	}
};
static_assert(alignof(UBTD_AmISafe_C) == 0x000008, "Wrong alignment on UBTD_AmISafe_C");
static_assert(sizeof(UBTD_AmISafe_C) == 0x0000E8, "Wrong size on UBTD_AmISafe_C");
static_assert(offsetof(UBTD_AmISafe_C, MaxThreatRange) == 0x0000A0, "Member 'UBTD_AmISafe_C::MaxThreatRange' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, CheckGodThreatsOnly) == 0x0000A8, "Member 'UBTD_AmISafe_C::CheckGodThreatsOnly' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, IgnoreThreatsAlways) == 0x0000A9, "Member 'UBTD_AmISafe_C::IgnoreThreatsAlways' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, IgnoreThreatsIfRanged) == 0x0000AA, "Member 'UBTD_AmISafe_C::IgnoreThreatsIfRanged' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, CheckHealthThreshold) == 0x0000AB, "Member 'UBTD_AmISafe_C::CheckHealthThreshold' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, healthThreshold) == 0x0000B0, "Member 'UBTD_AmISafe_C::healthThreshold' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, bCheckAdvantage) == 0x0000B8, "Member 'UBTD_AmISafe_C::bCheckAdvantage' has a wrong offset!");
static_assert(offsetof(UBTD_AmISafe_C, CombatAdvantageBlackboardKey) == 0x0000C0, "Member 'UBTD_AmISafe_C::CombatAdvantageBlackboardKey' has a wrong offset!");

}

