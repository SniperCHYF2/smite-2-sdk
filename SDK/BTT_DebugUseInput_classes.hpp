#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_DebugUseInput

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_DebugUseInput.BTT_DebugUseInput_C
// 0x0048 (0x00F0 - 0x00A8)
class UBTT_DebugUseInput_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 InputTagBlackboardKey;                             // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FGameplayAbilitySpecHandle>     Abilities;                                         // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UHWAbilitySystemComponent*              AbilitySystemComp;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_DebugUseInput(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_DebugUseInput_C">();
	}
	static class UBTT_DebugUseInput_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_DebugUseInput_C>();
	}
};
static_assert(alignof(UBTT_DebugUseInput_C) == 0x000008, "Wrong alignment on UBTT_DebugUseInput_C");
static_assert(sizeof(UBTT_DebugUseInput_C) == 0x0000F0, "Wrong size on UBTT_DebugUseInput_C");
static_assert(offsetof(UBTT_DebugUseInput_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_DebugUseInput_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_DebugUseInput_C, InputTagBlackboardKey) == 0x0000B0, "Member 'UBTT_DebugUseInput_C::InputTagBlackboardKey' has a wrong offset!");
static_assert(offsetof(UBTT_DebugUseInput_C, Abilities) == 0x0000D8, "Member 'UBTT_DebugUseInput_C::Abilities' has a wrong offset!");
static_assert(offsetof(UBTT_DebugUseInput_C, AbilitySystemComp) == 0x0000E8, "Member 'UBTT_DebugUseInput_C::AbilitySystemComp' has a wrong offset!");

}

