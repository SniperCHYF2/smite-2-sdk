#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ButtonSlot_Cosmetic

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.DisableButton
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_DisableButton final
{
public:
	bool                                          bShouldDisable;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_DisableButton) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_DisableButton");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_DisableButton) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_DisableButton");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_DisableButton, bShouldDisable) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_DisableButton::bShouldDisable' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.Event Display Equipped
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped, IsEquipped) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_Event_Display_Equipped::IsEquipped' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.Event Display Selected
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected, IsSelected) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_Event_Display_Selected::IsSelected' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.ExecuteUbergraph_WBP_ButtonSlot_Cosmetic
// 0x0070 (0x0070 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldDisable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsActive;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEquipped;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic) == 0x000008, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic) == 0x000070, "Wrong size on WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, EntryPoint) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_bool_Variable) == 0x000004, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_byte_Variable) == 0x000005, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_real_Variable) == 0x000008, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, Temp_real_Variable_1) == 0x000010, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_CustomEvent_bShouldDisable) == 0x000018, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_CustomEvent_bShouldDisable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_Select_Default) == 0x000029, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_CustomEvent_bIsActive) == 0x00002A, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_CustomEvent_bIsActive' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00002C, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_CustomEvent_IsSelected) == 0x000048, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_Select_Default_1) == 0x000050, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, K2Node_CustomEvent_IsEquipped) == 0x000058, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::K2Node_CustomEvent_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_PlayAnimation_ReturnValue_2) == 0x000060, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000068, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00006C, "Member 'WBP_ButtonSlot_Cosmetic_C_ExecuteUbergraph_WBP_ButtonSlot_Cosmetic::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.NavigateConfirm
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_NavigateConfirm final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_NavigateConfirm) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_NavigateConfirm");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_NavigateConfirm) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_NavigateConfirm");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_NavigateConfirm, ReturnValue) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_NavigateConfirm::ReturnValue' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.OnHoveredLogic
// 0x0018 (0x0018 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic) == 0x000008, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic) == 0x000018, "Wrong size on WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic, IsGamepad) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic::IsGamepad' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_ButtonSlot_Cosmetic_C_OnHoveredLogic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.OverrideColor
// 0x0020 (0x0020 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_OverrideColor final
{
public:
	struct FLinearColor                           New_Base_Color;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           New_Highlight_Color;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_OverrideColor) == 0x000004, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_OverrideColor");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_OverrideColor) == 0x000020, "Wrong size on WBP_ButtonSlot_Cosmetic_C_OverrideColor");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_OverrideColor, New_Base_Color) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_OverrideColor::New_Base_Color' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_OverrideColor, New_Highlight_Color) == 0x000010, "Member 'WBP_ButtonSlot_Cosmetic_C_OverrideColor::New_Highlight_Color' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.PlayHoverNoZoom
// 0x0010 (0x0010 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom final
{
public:
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom) == 0x000008, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom) == 0x000010, "Wrong size on WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ButtonSlot_Cosmetic_C_PlayHoverNoZoom::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_PreConstruct");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_PreConstruct) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_PreConstruct");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.ReverseHoverNoZoom
// 0x0010 (0x0010 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom final
{
public:
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom) == 0x000008, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom) == 0x000010, "Wrong size on WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ButtonSlot_Cosmetic_C_ReverseHoverNoZoom::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.Set Tint
// 0x0020 (0x0020 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_Set_Tint final
{
public:
	struct FLinearColor                           BaseColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_Set_Tint) == 0x000004, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_Set_Tint");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_Set_Tint) == 0x000020, "Wrong size on WBP_ButtonSlot_Cosmetic_C_Set_Tint");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_Set_Tint, BaseColor) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_Set_Tint::BaseColor' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_Set_Tint, HighlightColor) == 0x000010, "Member 'WBP_ButtonSlot_Cosmetic_C_Set_Tint::HighlightColor' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.SetIsActiveState
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_SetIsActiveState final
{
public:
	bool                                          bIsActive_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_SetIsActiveState) == 0x000001, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_SetIsActiveState");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_SetIsActiveState) == 0x000001, "Wrong size on WBP_ButtonSlot_Cosmetic_C_SetIsActiveState");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsActiveState, bIsActive_0) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsActiveState::bIsActive_0' has a wrong offset!");

// Function WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C.SetIsLocked
// 0x0010 (0x0010 - 0x0000)
struct WBP_ButtonSlot_Cosmetic_C_SetIsLocked final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked) == 0x000008, "Wrong alignment on WBP_ButtonSlot_Cosmetic_C_SetIsLocked");
static_assert(sizeof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked) == 0x000010, "Wrong size on WBP_ButtonSlot_Cosmetic_C_SetIsLocked");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, IsLocked) == 0x000000, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::IsLocked' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, Temp_byte_Variable) == 0x000001, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, Temp_bool_Variable) == 0x000003, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, K2Node_Select_Default) == 0x000005, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonSlot_Cosmetic_C_SetIsLocked, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_ButtonSlot_Cosmetic_C_SetIsLocked::K2Node_Select_Default_1' has a wrong offset!");

}

