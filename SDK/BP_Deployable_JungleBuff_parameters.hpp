#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_JungleBuff

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "EJungleBuffType_structs.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature final
{
public:
	class UHWInteractableComponent*               Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractInstigator;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature");
static_assert(sizeof(BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature) == 0x000010, "Wrong size on BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature");
static_assert(offsetof(BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature, Interactable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature, InteractInstigator) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_BndEvt__BP_Deployable_JungleBuff_BP_InteractableComponent_K2Node_ComponentBoundEvent_1_OnInteractionEventDel__DelegateSignature::InteractInstigator' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.CanCharacterPickupBuff
// 0x0060 (0x0060 - 0x0000)
struct BP_Deployable_JungleBuff_C_CanCharacterPickupBuff final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BuffLevelFound;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LocalTagContainer;                                 // 0x0010(0x0020)(Edit, BlueprintVisible)
	class AHWCharacter_Base*                      LocalCharacter;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              LocalASC;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0059(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAGod_ReturnValue;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_CanCharacterPickupBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff) == 0x000060, "Wrong size on BP_Deployable_JungleBuff_C_CanCharacterPickupBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, Object) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::Object' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, ReturnValue) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, BuffLevelFound) == 0x000009, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::BuffLevelFound' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, LocalIndex) == 0x00000C, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, LocalTagContainer) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::LocalTagContainer' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, LocalCharacter) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::LocalCharacter' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, LocalASC) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::LocalASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000040, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_Conv_IntToByte_ReturnValue) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_GetGenericTeamId_ReturnValue) == 0x000059, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_IsValid_ReturnValue) == 0x00005A, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005B, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_IsAGod_ReturnValue) == 0x00005C, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_IsAGod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_CanCharacterPickupBuff, CallFunc_BooleanAND_ReturnValue_1) == 0x00005E, "Member 'BP_Deployable_JungleBuff_C_CanCharacterPickupBuff::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.DestroyBuff
// 0x0001 (0x0001 - 0x0000)
struct BP_Deployable_JungleBuff_C_DestroyBuff final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_DestroyBuff) == 0x000001, "Wrong alignment on BP_Deployable_JungleBuff_C_DestroyBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_DestroyBuff) == 0x000001, "Wrong size on BP_Deployable_JungleBuff_C_DestroyBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DestroyBuff, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_DestroyBuff::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.Does Player Have Higher Or Equal Buff Level
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level final
{
public:
	class UHWAbilitySystemComponent*              ASC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HeldBuffLevel;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BuffTagContainer;                                  // 0x0010(0x0020)(Parm, OutParm)
	int32                                         CurrentBuffLevel;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Level3Tag;                                         // 0x0038(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  Level2Tag;                                         // 0x0058(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  Level1Tag;                                         // 0x0078(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  Level0Tag;                                         // 0x0098(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00B8(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x00F0(0x0020)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0118(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0150(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0188(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level");
static_assert(sizeof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level) == 0x0001C0, "Wrong size on BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, ASC) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::ASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Return) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Return' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, HeldBuffLevel) == 0x00000C, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::HeldBuffLevel' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, BuffTagContainer) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::BuffTagContainer' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CurrentBuffLevel) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CurrentBuffLevel' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Level3Tag) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Level3Tag' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Level2Tag) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Level2Tag' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Level1Tag) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Level1Tag' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Level0Tag) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Level0Tag' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000D8, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000E8, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, Temp_int_Variable) == 0x0000EC, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, K2Node_Select_Default) == 0x0000F0, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000118, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000138, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000148, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000150, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000170, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000180, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000188, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x0001A8, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x0001B8, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level, K2Node_SwitchEnum_CmpSuccess) == 0x0001B9, "Member 'BP_Deployable_JungleBuff_C_Does_Player_Have_Higher_Or_Equal_Buff_Level::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.DoesCharacterHaveJungleBuff
// 0x0090 (0x0090 - 0x0000)
struct BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BuffLevelFound;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LocalTagContainer;                                 // 0x0010(0x0020)(Edit, BlueprintVisible)
	class AHWCharacter_Base*                      LocalCharacter;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              LocalASC;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0058(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff) == 0x000090, "Wrong size on BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, Object) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::Object' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, ReturnValue) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, BuffLevelFound) == 0x000009, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::BuffLevelFound' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, LocalIndex) == 0x00000C, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, LocalTagContainer) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::LocalTagContainer' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, LocalCharacter) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::LocalCharacter' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, LocalASC) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::LocalASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000040, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000088, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'BP_Deployable_JungleBuff_C_DoesCharacterHaveJungleBuff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.DoesPlayerHaveLowerOrMatchingBuffLevel
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel final
{
public:
	class UHWAbilitySystemComponent*              LocalASC;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasLowerOrMatchingBuffLevel;                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BuffLevelFound;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0078(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel");
static_assert(sizeof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel) == 0x0000D8, "Wrong size on BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, LocalASC) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::LocalASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, HasLowerOrMatchingBuffLevel) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::HasLowerOrMatchingBuffLevel' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, BuffLevelFound) == 0x000009, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::BuffLevelFound' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, LocalIndex) == 0x00000C, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, Temp_bool_Variable) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000040, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0000A8, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, Temp_int_Variable) == 0x0000AC, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x0000B0, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x0000C0, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, K2Node_SwitchInteger_CmpSuccess) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveLowerOrMatchingBuffLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.DoesPlayerHaveMatchingBuff
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff final
{
public:
	class UHWAbilitySystemComponent*              ASC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMatchingBuff;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  LocalTagList;                                      // 0x0010(0x0020)(Edit, BlueprintVisible)
	bool                                          BuffLevelFound;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalIndex;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0038(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0078(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0098(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff) == 0x0000D0, "Wrong size on BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, ASC) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::ASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, HasMatchingBuff) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::HasMatchingBuff' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, LocalTagList) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::LocalTagList' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, BuffLevelFound) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::BuffLevelFound' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, LocalIndex) == 0x000034, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff, K2Node_SwitchEnum_CmpSuccess) == 0x0000C9, "Member 'BP_Deployable_JungleBuff_C_DoesPlayerHaveMatchingBuff::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.ExecuteUbergraph_BP_Deployable_JungleBuff
// 0x0310 (0x0310 - 0x0000)
struct BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWInteractableComponent*               K2Node_ComponentBoundEvent_Interactable;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_InteractInstigator;     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCharacterPickupBuff_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff) == 0x000310, "Wrong size on BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, EntryPoint) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000024, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000060, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000068, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, K2Node_ComponentBoundEvent_Interactable) == 0x000070, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, K2Node_ComponentBoundEvent_InteractInstigator) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::K2Node_ComponentBoundEvent_InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Lerp_ReturnValue) == 0x000080, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_CanCharacterPickupBuff_ReturnValue) == 0x000088, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_CanCharacterPickupBuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000E0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001C8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Lerp_ReturnValue_1) == 0x0001D8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_MakeVector_ReturnValue) == 0x0001E0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001F8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0002E0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x0002E8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0002F0, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002F8, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_SelectFloat_A_ImplicitCast) == 0x000300, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000308, "Member 'BP_Deployable_JungleBuff_C_ExecuteUbergraph_BP_Deployable_JungleBuff::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.FindHighestBuffLevelGE
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE final
{
public:
	int32                                         BuffLevel_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LocalGE;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_4;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_8;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_9;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_10;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_11;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_12;                            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_13;                            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_14;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_15;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_2;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_3;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE");
static_assert(sizeof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE) == 0x0000E0, "Wrong size on BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, BuffLevel_0) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::BuffLevel_0' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, GE) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::GE' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, LocalGE) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::LocalGE' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_int_Variable) == 0x000018, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_1) == 0x000028, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_2) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_3) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_int_Variable_1) == 0x000040, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_4) == 0x000048, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_5) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_6) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_7) == 0x000060, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_int_Variable_2) == 0x000068, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_8) == 0x000070, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_9) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_10) == 0x000080, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_11) == 0x000088, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_int_Variable_3) == 0x000090, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_12) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_13) == 0x0000A0, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_14) == 0x0000A8, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, Temp_class_Variable_15) == 0x0000B0, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::Temp_class_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, K2Node_Select_Default) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, K2Node_Select_Default_2) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, K2Node_Select_Default_3) == 0x0000D0, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_Deployable_JungleBuff_C_FindHighestBuffLevelGE::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.GrantBuff
// 0x0090 (0x0090 - 0x0000)
struct BP_Deployable_JungleBuff_C_GrantBuff final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RefreshedExistingBuff;                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              LocalASC;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      LocalCharacter;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesPlayerHaveMatchingBuff_HasMatchingBuff; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_Return; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_HeldBuffLevel; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_BuffTagContainer; // 0x0048(0x0020)()
	class UClass*                                 CallFunc_FindHighestBuffLevelGE_GE;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue_2; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_GrantBuff) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_GrantBuff");
static_assert(sizeof(BP_Deployable_JungleBuff_C_GrantBuff) == 0x000090, "Wrong size on BP_Deployable_JungleBuff_C_GrantBuff");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, Actor) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::Actor' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, RefreshedExistingBuff) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::RefreshedExistingBuff' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, Return) == 0x000009, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::Return' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, LocalASC) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::LocalASC' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, LocalCharacter) == 0x000018, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::LocalCharacter' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue_1) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_DoesPlayerHaveMatchingBuff_HasMatchingBuff) == 0x000040, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_DoesPlayerHaveMatchingBuff_HasMatchingBuff' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_Return) == 0x000041, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_Return' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_HeldBuffLevel) == 0x000044, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_HeldBuffLevel' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_BuffTagContainer) == 0x000048, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_Does_Player_Have_Higher_Or_Equal_Buff_Level_BuffTagContainer' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_FindHighestBuffLevelGE_GE) == 0x000068, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_FindHighestBuffLevelGE_GE' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000070, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000078, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue_2) == 0x000080, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_GrantBuff, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000088, "Member 'BP_Deployable_JungleBuff_C_GrantBuff::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.InitializeNiagaraParameters
// 0x0068 (0x0068 - 0x0000)
struct BP_Deployable_JungleBuff_C_InitializeNiagaraParameters final
{
public:
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJungleBuffType                               Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_InitializeNiagaraParameters");
static_assert(sizeof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters) == 0x000068, "Wrong size on BP_Deployable_JungleBuff_C_InitializeNiagaraParameters");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, Temp_object_Variable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, Temp_object_Variable_1) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, Temp_object_Variable_2) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, Temp_byte_Variable) == 0x000019, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, K2Node_Select_Default) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000058, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_InitializeNiagaraParameters, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000060, "Member 'BP_Deployable_JungleBuff_C_InitializeNiagaraParameters::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Deployable_JungleBuff_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Deployable_JungleBuff_C_ReceiveTick");
static_assert(sizeof(BP_Deployable_JungleBuff_C_ReceiveTick) == 0x000004, "Wrong size on BP_Deployable_JungleBuff_C_ReceiveTick");
static_assert(offsetof(BP_Deployable_JungleBuff_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.SetBuffName
// 0x02B8 (0x02B8 - 0x0000)
struct BP_Deployable_JungleBuff_C_SetBuffName final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	int32                                         Temp_int_Variable_2;                               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0120(0x0018)()
	int32                                         Temp_int_Variable_3;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_12;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0188(0x0018)()
	EJungleBuffType                               Temp_byte_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_16;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0220(0x0018)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0240(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0258(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0270(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0288(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x02A0(0x0018)()
};
static_assert(alignof(BP_Deployable_JungleBuff_C_SetBuffName) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_SetBuffName");
static_assert(sizeof(BP_Deployable_JungleBuff_C_SetBuffName) == 0x0002B8, "Wrong size on BP_Deployable_JungleBuff_C_SetBuffName");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_int_Variable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_1) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_2) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_3) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_int_Variable_1) == 0x000068, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_4) == 0x000070, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_5) == 0x000088, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_6) == 0x0000A0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_7) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_int_Variable_2) == 0x0000D0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_8) == 0x0000D8, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_9) == 0x0000F0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_10) == 0x000108, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_11) == 0x000120, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_int_Variable_3) == 0x000138, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_12) == 0x000140, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_13) == 0x000158, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_14) == 0x000170, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_15) == 0x000188, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_byte_Variable) == 0x0001A0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_16) == 0x0001A8, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_17) == 0x0001C0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_18) == 0x0001D8, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_19) == 0x0001F0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_20) == 0x000208, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, Temp_text_Variable_21) == 0x000220, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, CallFunc_IsDedicatedServer_ReturnValue) == 0x000238, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, K2Node_Select_Default) == 0x000240, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, K2Node_Select_Default_1) == 0x000258, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, K2Node_Select_Default_2) == 0x000270, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, K2Node_Select_Default_3) == 0x000288, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetBuffName, K2Node_Select_Default_4) == 0x0002A0, "Member 'BP_Deployable_JungleBuff_C_SetBuffName::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.SetDisplayInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_Deployable_JungleBuff_C_SetDisplayInfo final
{
public:
	bool                                          CallFunc_IsDisplayInfoActive_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0010(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_SetDisplayInfo) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_SetDisplayInfo");
static_assert(sizeof(BP_Deployable_JungleBuff_C_SetDisplayInfo) == 0x000018, "Wrong size on BP_Deployable_JungleBuff_C_SetDisplayInfo");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_IsDisplayInfoActive_ReturnValue) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_IsDisplayInfoActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_Conv_IntToByte_ReturnValue) == 0x000002, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_GetGenericTeamId_ReturnValue) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetDisplayInfo, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_Deployable_JungleBuff_C_SetDisplayInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.SetTargetLocation
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Deployable_JungleBuff_C_SetTargetLocation final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_AnimationLandingOffset_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_SetTargetLocation) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_SetTargetLocation");
static_assert(sizeof(BP_Deployable_JungleBuff_C_SetTargetLocation) == 0x0001C0, "Wrong size on BP_Deployable_JungleBuff_C_SetTargetLocation");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, Temp_object_Variable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000098, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000180, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_SelectVector_ReturnValue) == 0x000188, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_SelectFloat_ReturnValue) == 0x0001A0, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_SelectFloat_B_ImplicitCast) == 0x0001A8, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0001B0, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_SetTargetLocation, K2Node_VariableSet_AnimationLandingOffset_ImplicitCast) == 0x0001B8, "Member 'BP_Deployable_JungleBuff_C_SetTargetLocation::K2Node_VariableSet_AnimationLandingOffset_ImplicitCast' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.StartPickupProcess
// 0x0010 (0x0010 - 0x0000)
struct BP_Deployable_JungleBuff_C_StartPickupProcess final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantBuff_RefreshedExistingBuff;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantBuff_Return;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_StartPickupProcess) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_StartPickupProcess");
static_assert(sizeof(BP_Deployable_JungleBuff_C_StartPickupProcess) == 0x000010, "Wrong size on BP_Deployable_JungleBuff_C_StartPickupProcess");
static_assert(offsetof(BP_Deployable_JungleBuff_C_StartPickupProcess, Instigator_0) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_StartPickupProcess::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_StartPickupProcess, CallFunc_GrantBuff_RefreshedExistingBuff) == 0x000008, "Member 'BP_Deployable_JungleBuff_C_StartPickupProcess::CallFunc_GrantBuff_RefreshedExistingBuff' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_StartPickupProcess, CallFunc_GrantBuff_Return) == 0x000009, "Member 'BP_Deployable_JungleBuff_C_StartPickupProcess::CallFunc_GrantBuff_Return' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.UpdateNiagaraParameters
// 0x0188 (0x0188 - 0x0000)
struct BP_Deployable_JungleBuff_C_UpdateNiagaraParameters final
{
public:
	EJungleBuffType                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJungleBuffType                               Temp_byte_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnlyASpectator_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0180(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters) == 0x000008, "Wrong alignment on BP_Deployable_JungleBuff_C_UpdateNiagaraParameters");
static_assert(sizeof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters) == 0x000188, "Wrong size on BP_Deployable_JungleBuff_C_UpdateNiagaraParameters");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_byte_Variable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable) == 0x000004, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_2) == 0x000024, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_3) == 0x000034, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_4) == 0x000044, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_5) == 0x000054, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_6) == 0x000064, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_7) == 0x000074, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_8) == 0x000084, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_9) == 0x000094, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_byte_Variable_1) == 0x0000A4, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_10) == 0x0000A8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_11) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_12) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_13) == 0x0000D8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_14) == 0x0000E8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_15) == 0x0000F8, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_16) == 0x000108, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_17) == 0x000118, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_18) == 0x000128, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, Temp_struct_Variable_19) == 0x000138, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, K2Node_Select_Default) == 0x000148, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, K2Node_Select_Default_1) == 0x000158, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000168, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_IsOnlyASpectator_ReturnValue) == 0x000170, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_IsOnlyASpectator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_K2_GetPawn_ReturnValue) == 0x000178, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_GetGenericTeamId_ReturnValue) == 0x000180, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_Conv_IntToByte_ReturnValue) == 0x000181, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000182, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UpdateNiagaraParameters, CallFunc_BooleanOR_ReturnValue) == 0x000183, "Member 'BP_Deployable_JungleBuff_C_UpdateNiagaraParameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Deployable_JungleBuff.BP_Deployable_JungleBuff_C.UserConstructionScript
// 0x0168 (0x0168 - 0x0000)
struct BP_Deployable_JungleBuff_C_UserConstructionScript final
{
public:
	EJungleBuffType                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJungleBuffType                               Temp_byte_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deployable_JungleBuff_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Deployable_JungleBuff_C_UserConstructionScript");
static_assert(sizeof(BP_Deployable_JungleBuff_C_UserConstructionScript) == 0x000168, "Wrong size on BP_Deployable_JungleBuff_C_UserConstructionScript");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable) == 0x000004, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_2) == 0x000024, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_3) == 0x000034, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_4) == 0x000044, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_5) == 0x000054, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_6) == 0x000064, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_7) == 0x000074, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_8) == 0x000084, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_9) == 0x000094, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_byte_Variable_1) == 0x0000A4, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_10) == 0x0000A8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_11) == 0x0000B8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_12) == 0x0000C8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_13) == 0x0000D8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_14) == 0x0000E8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_15) == 0x0000F8, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_16) == 0x000108, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_17) == 0x000118, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_18) == 0x000128, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, Temp_struct_Variable_19) == 0x000138, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, K2Node_Select_Default) == 0x000148, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deployable_JungleBuff_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000158, "Member 'BP_Deployable_JungleBuff_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");

}

