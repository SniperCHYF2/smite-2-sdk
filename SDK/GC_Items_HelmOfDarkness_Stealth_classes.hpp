#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Items_HelmOfDarkness_Stealth

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Items_HelmOfDarkness_Stealth.GC_Items_HelmOfDarkness_Stealth_C
// 0x0020 (0x1000 - 0x0FE0)
class AGC_Items_HelmOfDarkness_Stealth_C final : public AHWGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ModelToScale;                                      // 0x0FE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialToUse;                                     // 0x0FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHWMaterialOverlayHandle               OverlayHandle;                                     // 0x0FF8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ApplyMaterialToModel(class UObject* Object);
	void ExecuteUbergraph_GC_Items_HelmOfDarkness_Stealth(int32 EntryPoint);
	void GetModelToScale(class UObject* Object);
	void OnApplication(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnRemoval(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void RemoveMaterialFromModelIfApplicable(class UObject* Object);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Items_HelmOfDarkness_Stealth_C">();
	}
	static class AGC_Items_HelmOfDarkness_Stealth_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Items_HelmOfDarkness_Stealth_C>();
	}
};
static_assert(alignof(AGC_Items_HelmOfDarkness_Stealth_C) == 0x000008, "Wrong alignment on AGC_Items_HelmOfDarkness_Stealth_C");
static_assert(sizeof(AGC_Items_HelmOfDarkness_Stealth_C) == 0x001000, "Wrong size on AGC_Items_HelmOfDarkness_Stealth_C");
static_assert(offsetof(AGC_Items_HelmOfDarkness_Stealth_C, UberGraphFrame) == 0x000FE0, "Member 'AGC_Items_HelmOfDarkness_Stealth_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_Items_HelmOfDarkness_Stealth_C, ModelToScale) == 0x000FE8, "Member 'AGC_Items_HelmOfDarkness_Stealth_C::ModelToScale' has a wrong offset!");
static_assert(offsetof(AGC_Items_HelmOfDarkness_Stealth_C, MaterialToUse) == 0x000FF0, "Member 'AGC_Items_HelmOfDarkness_Stealth_C::MaterialToUse' has a wrong offset!");
static_assert(offsetof(AGC_Items_HelmOfDarkness_Stealth_C, OverlayHandle) == 0x000FF8, "Member 'AGC_Items_HelmOfDarkness_Stealth_C::OverlayHandle' has a wrong offset!");

}

