#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_Items_ScepterOfDominion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DBP_Items_ScepterOfDominion.DBP_Items_ScepterOfDominion_C
// 0x0020 (0x04E8 - 0x04C8)
class ADBP_Items_ScepterOfDominion_C final : public AHWDeployable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      AOE;                                               // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HealTick;                                          // 0x04D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewVar;                                            // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateFiringVisuals();
	void ActivatePrefireVisuals();
	void ExecuteUbergraph_DBP_Items_ScepterOfDominion(int32 EntryPoint);
	void ReceiveDestroyed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBP_Items_ScepterOfDominion_C">();
	}
	static class ADBP_Items_ScepterOfDominion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADBP_Items_ScepterOfDominion_C>();
	}
};
static_assert(alignof(ADBP_Items_ScepterOfDominion_C) == 0x000008, "Wrong alignment on ADBP_Items_ScepterOfDominion_C");
static_assert(sizeof(ADBP_Items_ScepterOfDominion_C) == 0x0004E8, "Wrong size on ADBP_Items_ScepterOfDominion_C");
static_assert(offsetof(ADBP_Items_ScepterOfDominion_C, UberGraphFrame) == 0x0004C8, "Member 'ADBP_Items_ScepterOfDominion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADBP_Items_ScepterOfDominion_C, AOE) == 0x0004D0, "Member 'ADBP_Items_ScepterOfDominion_C::AOE' has a wrong offset!");
static_assert(offsetof(ADBP_Items_ScepterOfDominion_C, HealTick) == 0x0004D8, "Member 'ADBP_Items_ScepterOfDominion_C::HealTick' has a wrong offset!");
static_assert(offsetof(ADBP_Items_ScepterOfDominion_C, NewVar) == 0x0004E0, "Member 'ADBP_Items_ScepterOfDominion_C::NewVar' has a wrong offset!");

}

