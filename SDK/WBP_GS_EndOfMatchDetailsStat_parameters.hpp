#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_EndOfMatchDetailsStat

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat
// 0x0004 (0x0004 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat) == 0x000004, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat) == 0x000004, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat, EntryPoint) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_ExecuteUbergraph_WBP_GS_EndOfMatchDetailsStat::EntryPoint' has a wrong offset!");

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.HandleIsBestInStat
// 0x0020 (0x0020 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat final
{
public:
	bool                                          bIsBestInStat;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat) == 0x000004, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat) == 0x000020, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, bIsBestInStat) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::bIsBestInStat' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_bool_Variable) == 0x000001, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_struct_Variable) == 0x000004, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_bool_Variable_1) == 0x000014, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_byte_Variable) == 0x000015, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, Temp_byte_Variable_1) == 0x000016, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, K2Node_Select_Default) == 0x000017, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat, K2Node_Select_Default_1) == 0x000018, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleIsBestInStat::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.HandleStatHovered
// 0x0034 (0x0034 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered) == 0x000004, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered) == 0x000034, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, bIsHovered) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::bIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_bool_Variable) == 0x000001, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_struct_Variable) == 0x000004, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_struct_Variable_1) == 0x000010, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_struct_Variable_2) == 0x000018, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_bool_Variable_2) == 0x000020, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_byte_Variable) == 0x000021, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, Temp_byte_Variable_1) == 0x000022, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, K2Node_Select_Default) == 0x000023, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered, K2Node_Select_Default_2) == 0x00002C, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatHovered::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.HandleStatSet
// 0x0028 (0x0028 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet final
{
public:
	struct FGameplayTag                           InStatTag;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   InStatText;                                        // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         InStatValue;                                       // 0x0020(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet) == 0x000008, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet) == 0x000028, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet, InStatTag) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet::InStatTag' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet, InStatText) == 0x000008, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet::InStatText' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet, InStatValue) == 0x000020, "Member 'WBP_GS_EndOfMatchDetailsStat_C_HandleStatSet::InStatValue' has a wrong offset!");

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.SetIsEnemy
// 0x0020 (0x0020 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy final
{
public:
	bool                                          bIsEnemy_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy) == 0x000004, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy) == 0x000020, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy, bIsEnemy_0) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy::bIsEnemy_0' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy, Temp_struct_Variable) == 0x000004, "Member 'WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy, Temp_bool_Variable) == 0x000014, "Member 'WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy, K2Node_Select_Default) == 0x000018, "Member 'WBP_GS_EndOfMatchDetailsStat_C_SetIsEnemy::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GS_EndOfMatchDetailsStat.WBP_GS_EndOfMatchDetailsStat_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_GS_EndOfMatchDetailsStat_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

