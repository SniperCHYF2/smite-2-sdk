#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AIDifficulty_DamageModifier_VsGods

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AIDifficulty_DamageModifier_VsGods.GA_AIDifficulty_DamageModifier_VsGods_C
// 0x0048 (0x0DB8 - 0x0D70)
class UGA_AIDifficulty_DamageModifier_VsGods_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          ModifyDamageVsGodBots;                             // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ModifyDamageVsPlayers;                             // 0x0D79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ModifyAbilityDamageOnly;                           // 0x0D7A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7B[0x5];                                      // 0x0D7B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VsGodBots_MissingHealthPctStep;                    // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VsGodBots_DamageReductionPctPerMissingHealthStack; // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VsGodBots_MaxDamageReductionPct;                   // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VsPlayers_MissingHealthPctStep;                    // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VsPlayers_DamageReductionPctPerMissingHealthStack; // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VsPlayers_MaxDamageReductionPct;                   // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FromPlayers_DamageTakenPct;                        // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_AIDifficulty_DamageModifier_VsGods(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void ModifyDamagePerStackOfMissingHealth(class AHWCharacter_Base* TargetCharacter, double HealthPctStep, double HealthPctModfiierPerStep, double MaxDamageReductionPct, double* Multiplier);
	void OnDamageTaken(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue);
	void OnDealtDamage(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue);
	void SetupVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AIDifficulty_DamageModifier_VsGods_C">();
	}
	static class UGA_AIDifficulty_DamageModifier_VsGods_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AIDifficulty_DamageModifier_VsGods_C>();
	}
};
static_assert(alignof(UGA_AIDifficulty_DamageModifier_VsGods_C) == 0x000008, "Wrong alignment on UGA_AIDifficulty_DamageModifier_VsGods_C");
static_assert(sizeof(UGA_AIDifficulty_DamageModifier_VsGods_C) == 0x000DB8, "Wrong size on UGA_AIDifficulty_DamageModifier_VsGods_C");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, UberGraphFrame) == 0x000D70, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, ModifyDamageVsGodBots) == 0x000D78, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::ModifyDamageVsGodBots' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, ModifyDamageVsPlayers) == 0x000D79, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::ModifyDamageVsPlayers' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, ModifyAbilityDamageOnly) == 0x000D7A, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::ModifyAbilityDamageOnly' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsGodBots_MissingHealthPctStep) == 0x000D80, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsGodBots_MissingHealthPctStep' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsGodBots_DamageReductionPctPerMissingHealthStack) == 0x000D88, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsGodBots_DamageReductionPctPerMissingHealthStack' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsGodBots_MaxDamageReductionPct) == 0x000D90, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsGodBots_MaxDamageReductionPct' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsPlayers_MissingHealthPctStep) == 0x000D98, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsPlayers_MissingHealthPctStep' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsPlayers_DamageReductionPctPerMissingHealthStack) == 0x000DA0, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsPlayers_DamageReductionPctPerMissingHealthStack' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, VsPlayers_MaxDamageReductionPct) == 0x000DA8, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::VsPlayers_MaxDamageReductionPct' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_DamageModifier_VsGods_C, FromPlayers_DamageTakenPct) == 0x000DB0, "Member 'UGA_AIDifficulty_DamageModifier_VsGods_C::FromPlayers_DamageTakenPct' has a wrong offset!");

}

