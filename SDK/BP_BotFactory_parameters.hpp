#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_BotFactory.BP_BotFactory_C.ApplyLightningEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_BotFactory_C_ApplyLightningEffect final
{
public:
	class AHWCharacter_Base*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_ApplyLightningEffect) == 0x000008, "Wrong alignment on BP_BotFactory_C_ApplyLightningEffect");
static_assert(sizeof(BP_BotFactory_C_ApplyLightningEffect) == 0x000018, "Wrong size on BP_BotFactory_C_ApplyLightningEffect");
static_assert(offsetof(BP_BotFactory_C_ApplyLightningEffect, Character) == 0x000000, "Member 'BP_BotFactory_C_ApplyLightningEffect::Character' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ApplyLightningEffect, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_BotFactory_C_ApplyLightningEffect::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ApplyLightningEffect, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000010, "Member 'BP_BotFactory_C_ApplyLightningEffect::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.BindOnDamageEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_BotFactory_C_BindOnDamageEvent final
{
public:
	class AHWCharacter_Base*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FDamageEventData& DamageEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              K2Node_DynamicCast_AsHWAbility_System_Component;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_BindOnDamageEvent) == 0x000008, "Wrong alignment on BP_BotFactory_C_BindOnDamageEvent");
static_assert(sizeof(BP_BotFactory_C_BindOnDamageEvent) == 0x000038, "Wrong size on BP_BotFactory_C_BindOnDamageEvent");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, Character) == 0x000000, "Member 'BP_BotFactory_C_BindOnDamageEvent::Character' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BotFactory_C_BindOnDamageEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BotFactory_C_BindOnDamageEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'BP_BotFactory_C_BindOnDamageEvent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, K2Node_DynamicCast_AsHWAbility_System_Component) == 0x000028, "Member 'BP_BotFactory_C_BindOnDamageEvent::K2Node_DynamicCast_AsHWAbility_System_Component' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_BindOnDamageEvent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BotFactory_C_BindOnDamageEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.ExecuteUbergraph_BP_BotFactory
// 0x0030 (0x0030 - 0x0000)
struct BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_NewTargetActor;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_Event_characterSpawned;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Causer;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Causer;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory) == 0x000008, "Wrong alignment on BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory");
static_assert(sizeof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory) == 0x000030, "Wrong size on BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, EntryPoint) == 0x000000, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, K2Node_Event_NewTargetActor) == 0x000008, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::K2Node_Event_NewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, K2Node_Event_characterSpawned) == 0x000010, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::K2Node_Event_characterSpawned' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, K2Node_Event_Causer) == 0x000018, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, K2Node_CustomEvent_Causer) == 0x000020, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, Temp_int_Variable) == 0x000028, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.GetLeashCapsule
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_GetLeashCapsule final
{
public:
	class UPrimitiveComponent*                    LeashComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_GetLeashCapsule) == 0x000008, "Wrong alignment on BP_BotFactory_C_GetLeashCapsule");
static_assert(sizeof(BP_BotFactory_C_GetLeashCapsule) == 0x000008, "Wrong size on BP_BotFactory_C_GetLeashCapsule");
static_assert(offsetof(BP_BotFactory_C_GetLeashCapsule, LeashComponent) == 0x000000, "Member 'BP_BotFactory_C_GetLeashCapsule::LeashComponent' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.GetLeashRadius
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_GetLeashRadius final
{
public:
	double                                        LeashRadius_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_GetLeashRadius) == 0x000008, "Wrong alignment on BP_BotFactory_C_GetLeashRadius");
static_assert(sizeof(BP_BotFactory_C_GetLeashRadius) == 0x000008, "Wrong size on BP_BotFactory_C_GetLeashRadius");
static_assert(offsetof(BP_BotFactory_C_GetLeashRadius, LeashRadius_0) == 0x000000, "Member 'BP_BotFactory_C_GetLeashRadius::LeashRadius_0' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.GetLeashVolume
// 0x0028 (0x0028 - 0x0000)
struct BP_BotFactory_C_GetLeashVolume final
{
public:
	TSoftObjectPtr<class ATriggerVolume>          LeashVolume_0;                                     // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_GetLeashVolume) == 0x000008, "Wrong alignment on BP_BotFactory_C_GetLeashVolume");
static_assert(sizeof(BP_BotFactory_C_GetLeashVolume) == 0x000028, "Wrong size on BP_BotFactory_C_GetLeashVolume");
static_assert(offsetof(BP_BotFactory_C_GetLeashVolume, LeashVolume_0) == 0x000000, "Member 'BP_BotFactory_C_GetLeashVolume::LeashVolume_0' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.GetNearbyMinionCount
// 0x0004 (0x0004 - 0x0000)
struct BP_BotFactory_C_GetNearbyMinionCount final
{
public:
	int32                                         MinionCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_GetNearbyMinionCount) == 0x000004, "Wrong alignment on BP_BotFactory_C_GetNearbyMinionCount");
static_assert(sizeof(BP_BotFactory_C_GetNearbyMinionCount) == 0x000004, "Wrong size on BP_BotFactory_C_GetNearbyMinionCount");
static_assert(offsetof(BP_BotFactory_C_GetNearbyMinionCount, MinionCount) == 0x000000, "Member 'BP_BotFactory_C_GetNearbyMinionCount::MinionCount' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.GetStartingWaypoints
// 0x0010 (0x0010 - 0x0000)
struct BP_BotFactory_C_GetStartingWaypoints final
{
public:
	TArray<TSoftObjectPtr<class AWaypoint_C>>     Waypoints;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BotFactory_C_GetStartingWaypoints) == 0x000008, "Wrong alignment on BP_BotFactory_C_GetStartingWaypoints");
static_assert(sizeof(BP_BotFactory_C_GetStartingWaypoints) == 0x000010, "Wrong size on BP_BotFactory_C_GetStartingWaypoints");
static_assert(offsetof(BP_BotFactory_C_GetStartingWaypoints, Waypoints) == 0x000000, "Member 'BP_BotFactory_C_GetStartingWaypoints::Waypoints' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.LightningFuryDied
// 0x0028 (0x0028 - 0x0000)
struct BP_BotFactory_C_LightningFuryDied final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_LightningFuryDied) == 0x000008, "Wrong alignment on BP_BotFactory_C_LightningFuryDied");
static_assert(sizeof(BP_BotFactory_C_LightningFuryDied) == 0x000028, "Wrong size on BP_BotFactory_C_LightningFuryDied");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BotFactory_C_LightningFuryDied::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BotFactory_C_LightningFuryDied::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BotFactory_C_LightningFuryDied::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BotFactory_C_LightningFuryDied::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000018, "Member 'BP_BotFactory_C_LightningFuryDied::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_BotFactory_C_LightningFuryDied::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_LightningFuryDied, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BotFactory_C_LightningFuryDied::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.MulticastCustomFactoryEmptied
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_MulticastCustomFactoryEmptied final
{
public:
	class AActor*                                 Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_MulticastCustomFactoryEmptied) == 0x000008, "Wrong alignment on BP_BotFactory_C_MulticastCustomFactoryEmptied");
static_assert(sizeof(BP_BotFactory_C_MulticastCustomFactoryEmptied) == 0x000008, "Wrong size on BP_BotFactory_C_MulticastCustomFactoryEmptied");
static_assert(offsetof(BP_BotFactory_C_MulticastCustomFactoryEmptied, Causer) == 0x000000, "Member 'BP_BotFactory_C_MulticastCustomFactoryEmptied::Causer' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.OnFactoryEmptied
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_OnFactoryEmptied final
{
public:
	class AActor*                                 Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_OnFactoryEmptied) == 0x000008, "Wrong alignment on BP_BotFactory_C_OnFactoryEmptied");
static_assert(sizeof(BP_BotFactory_C_OnFactoryEmptied) == 0x000008, "Wrong size on BP_BotFactory_C_OnFactoryEmptied");
static_assert(offsetof(BP_BotFactory_C_OnFactoryEmptied, Causer) == 0x000000, "Member 'BP_BotFactory_C_OnFactoryEmptied::Causer' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.OnSpawnedBot
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_OnSpawnedBot final
{
public:
	class AHWCharacter_Base*                      characterSpawned;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_OnSpawnedBot) == 0x000008, "Wrong alignment on BP_BotFactory_C_OnSpawnedBot");
static_assert(sizeof(BP_BotFactory_C_OnSpawnedBot) == 0x000008, "Wrong size on BP_BotFactory_C_OnSpawnedBot");
static_assert(offsetof(BP_BotFactory_C_OnSpawnedBot, characterSpawned) == 0x000000, "Member 'BP_BotFactory_C_OnSpawnedBot::characterSpawned' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.RetrieveTargetActor
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_RetrieveTargetActor final
{
public:
	class AActor*                                 CurrentTargetActor;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_RetrieveTargetActor) == 0x000008, "Wrong alignment on BP_BotFactory_C_RetrieveTargetActor");
static_assert(sizeof(BP_BotFactory_C_RetrieveTargetActor) == 0x000008, "Wrong size on BP_BotFactory_C_RetrieveTargetActor");
static_assert(offsetof(BP_BotFactory_C_RetrieveTargetActor, CurrentTargetActor) == 0x000000, "Member 'BP_BotFactory_C_RetrieveTargetActor::CurrentTargetActor' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.SendDamageCallback
// 0x0090 (0x0090 - 0x0000)
struct BP_BotFactory_C_SendDamageCallback final
{
public:
	struct FDamageEventData                       DamageEventData;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x0070(0x0020)()
};
static_assert(alignof(BP_BotFactory_C_SendDamageCallback) == 0x000008, "Wrong alignment on BP_BotFactory_C_SendDamageCallback");
static_assert(sizeof(BP_BotFactory_C_SendDamageCallback) == 0x000090, "Wrong size on BP_BotFactory_C_SendDamageCallback");
static_assert(offsetof(BP_BotFactory_C_SendDamageCallback, DamageEventData) == 0x000000, "Member 'BP_BotFactory_C_SendDamageCallback::DamageEventData' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_SendDamageCallback, CallFunc_GetAssetTags_ReturnValue) == 0x000070, "Member 'BP_BotFactory_C_SendDamageCallback::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.UpdateNearbyMinionCount
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_UpdateNearbyMinionCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewMinionCount;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_UpdateNearbyMinionCount) == 0x000004, "Wrong alignment on BP_BotFactory_C_UpdateNearbyMinionCount");
static_assert(sizeof(BP_BotFactory_C_UpdateNearbyMinionCount) == 0x000008, "Wrong size on BP_BotFactory_C_UpdateNearbyMinionCount");
static_assert(offsetof(BP_BotFactory_C_UpdateNearbyMinionCount, NewCount) == 0x000000, "Member 'BP_BotFactory_C_UpdateNearbyMinionCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UpdateNearbyMinionCount, NewMinionCount) == 0x000004, "Member 'BP_BotFactory_C_UpdateNearbyMinionCount::NewMinionCount' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.UpdateTargetActor
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_C_UpdateTargetActor final
{
public:
	class AActor*                                 NewTargetActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_UpdateTargetActor) == 0x000008, "Wrong alignment on BP_BotFactory_C_UpdateTargetActor");
static_assert(sizeof(BP_BotFactory_C_UpdateTargetActor) == 0x000008, "Wrong size on BP_BotFactory_C_UpdateTargetActor");
static_assert(offsetof(BP_BotFactory_C_UpdateTargetActor, NewTargetActor) == 0x000000, "Member 'BP_BotFactory_C_UpdateTargetActor::NewTargetActor' has a wrong offset!");

// Function BP_BotFactory.BP_BotFactory_C.UserConstructionScript
// 0x0100 (0x0100 - 0x0000)
struct BP_BotFactory_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0090(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCapsuleRadius_Radius_ImplicitCast;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_BotFactory_C_UserConstructionScript");
static_assert(sizeof(BP_BotFactory_C_UserConstructionScript) == 0x000100, "Wrong size on BP_BotFactory_C_UserConstructionScript");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BotFactory_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BotFactory_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000C, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, Temp_struct_Variable) == 0x000010, "Member 'BP_BotFactory_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000088, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000B8, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, K2Node_DynamicCast_AsActor) == 0x0000C0, "Member 'BP_BotFactory_C_UserConstructionScript::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_BotFactory_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D8, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_C_UserConstructionScript, CallFunc_SetCapsuleRadius_Radius_ImplicitCast) == 0x0000F0, "Member 'BP_BotFactory_C_UserConstructionScript::CallFunc_SetCapsuleRadius_Radius_ImplicitCast' has a wrong offset!");

}

