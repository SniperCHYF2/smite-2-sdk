#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_Store_VIPScreen

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_Store_VIPScreen.WBP_C_Store_VIPScreen_C.ExecuteUbergraph_WBP_C_Store_VIPScreen
// 0x0004 (0x0004 - 0x0000)
struct WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen) == 0x000004, "Wrong alignment on WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen");
static_assert(sizeof(WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen) == 0x000004, "Wrong size on WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen, EntryPoint) == 0x000000, "Member 'WBP_C_Store_VIPScreen_C_ExecuteUbergraph_WBP_C_Store_VIPScreen::EntryPoint' has a wrong offset!");

// Function WBP_C_Store_VIPScreen.WBP_C_Store_VIPScreen_C.UpdateExpirationText
// 0x0040 (0x0040 - 0x0000)
struct WBP_C_Store_VIPScreen_C_UpdateExpirationText final
{
public:
	struct FDateTime                              ExpirationTime;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeMinValue_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFormattedTimeSpan_Text;                // 0x0028(0x0018)()
};
static_assert(alignof(WBP_C_Store_VIPScreen_C_UpdateExpirationText) == 0x000008, "Wrong alignment on WBP_C_Store_VIPScreen_C_UpdateExpirationText");
static_assert(sizeof(WBP_C_Store_VIPScreen_C_UpdateExpirationText) == 0x000040, "Wrong size on WBP_C_Store_VIPScreen_C_UpdateExpirationText");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, ExpirationTime) == 0x000000, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::ExpirationTime' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, CallFunc_DateTimeMinValue_ReturnValue) == 0x000008, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::CallFunc_DateTimeMinValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, CallFunc_UtcNow_ReturnValue) == 0x000018, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000020, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdateExpirationText, CallFunc_GetFormattedTimeSpan_Text) == 0x000028, "Member 'WBP_C_Store_VIPScreen_C_UpdateExpirationText::CallFunc_GetFormattedTimeSpan_Text' has a wrong offset!");

// Function WBP_C_Store_VIPScreen.WBP_C_Store_VIPScreen_C.UpdatePurchaseButton
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_Store_VIPScreen_C_UpdatePurchaseButton final
{
public:
	EHWVIPOwnershipLevel                          VIPOwnership;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHStoreItemPrice*                      PriceItem;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PriceGroupTag;                                     // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton) == 0x000008, "Wrong alignment on WBP_C_Store_VIPScreen_C_UpdatePurchaseButton");
static_assert(sizeof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton) == 0x000020, "Wrong size on WBP_C_Store_VIPScreen_C_UpdatePurchaseButton");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, VIPOwnership) == 0x000000, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::VIPOwnership' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, PriceItem) == 0x000008, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::PriceItem' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, PriceGroupTag) == 0x000010, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::PriceGroupTag' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_Store_VIPScreen_C_UpdatePurchaseButton, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'WBP_C_Store_VIPScreen_C_UpdatePurchaseButton::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

}

