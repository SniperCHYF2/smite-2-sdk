#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodHealthGainLossBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.DisplayCurrentValuePercent
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent) == 0x000004, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent) == 0x000004, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent, Percent) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_DisplayCurrentValuePercent::Percent' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.DisplayGainPercent
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent) == 0x000004, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent) == 0x000004, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent, Percent) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_DisplayGainPercent::Percent' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.DisplayLossPercent
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent) == 0x000004, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent) == 0x000004, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent, Percent) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_DisplayLossPercent::Percent' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar) == 0x000008, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar) == 0x000010, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar, EntryPoint) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_G_V2_GodHealthGainLossBar_C_ExecuteUbergraph_WBP_G_V2_GodHealthGainLossBar::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.PercentRageConfigChanged
// 0x0054 (0x0054 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged final
{
public:
	float                                         NewPercent;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHWGainLossBarPercentRangeConfig       NewPercentConfig;                                  // 0x0004(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged) == 0x000004, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged) == 0x000054, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged, NewPercent) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged::NewPercent' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged, NewPercentConfig) == 0x000004, "Member 'WBP_G_V2_GodHealthGainLossBar_C_PercentRageConfigChanged::NewPercentConfig' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.SetBorderColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor) == 0x000004, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor) == 0x000010, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor, Color) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetBorderColor::Color' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.SetGainEnabled
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled final
{
public:
	bool                                          bGainIsEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled) == 0x000001, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled) == 0x000005, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled, bGainIsEnabled) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled::bGainIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetGainEnabled::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_GodHealthGainLossBar.WBP_G_V2_GodHealthGainLossBar_C.SetLossEnabled
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled final
{
public:
	bool                                          bLossIsEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled) == 0x000001, "Wrong alignment on WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled");
static_assert(sizeof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled) == 0x000005, "Wrong size on WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled, bLossIsEnabled) == 0x000000, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled::bLossIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V2_GodHealthGainLossBar_C_SetLossEnabled::K2Node_Select_Default' has a wrong offset!");

}

