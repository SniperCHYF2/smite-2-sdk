#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HelpTip_Popup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HelpTip_Popup.WBP_HelpTip_Popup_C
// 0x0100 (0x0738 - 0x0638)
class UWBP_HelpTip_Popup_C final : public UHWCharacterWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0638(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TimerPlay;                                         // 0x0640(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear;                                            // 0x0648(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWImage*                               Icon;                                              // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               Progress;                                          // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWRichTextBlock*                       Section1Text;                                      // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Section1Title;                                     // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Section2Text;                                      // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Section2Title;                                     // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Section3Text;                                      // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Section3Title;                                     // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Subtitle;                                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           Title;                                             // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentHoveredIndex;                               // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HelpTipExpireTimer;                                // 0x06A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayTime;                                       // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveHelpTipPriority;                             // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      HelpTipHistory;                                    // 0x06B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               ProgressTimer;                                     // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   EmptyText;                                         // 0x0710(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SFXHelpTipPopIn;                                   // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXHelpTipPopOut;                                  // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BindToGamePhaseChangeEvent();
	void Construct();
	void ExecuteUbergraph_WBP_HelpTip_Popup(int32 EntryPoint);
	struct FEventReply FirstPipHover(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply FourthPipHover(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void GamePhaseChanged(const struct FGameplayTag& NewPhase);
	float GetPercent();
	class UWidget* GetToolTipWidget();
	void HideSelf();
	void HideStaticHelpTip();
	void OnLocalTeamUpdated(const struct FGenericTeamId& TeamId, ETeamAttitude AttitudeTowardsLocal);
	struct FEventReply SecondPipHover(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetTextAndColors(class UBP_NPE_HelpTipContent_C* Content);
	void SFXHideHelpTip();
	void SFXShowHelpTip();
	void ShouldShowHelpTip(class UBP_NPE_HelpTipContent_C* Content, bool* ShouldShow);
	void ShowDynamicHelpTip(class UBP_NPE_HelpTipContent_C* Content);
	void ShowStaticHelpTip(class UBP_NPE_HelpTipContent_C* Content);
	struct FEventReply ThirdPipHover(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HelpTip_Popup_C">();
	}
	static class UWBP_HelpTip_Popup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HelpTip_Popup_C>();
	}
};
static_assert(alignof(UWBP_HelpTip_Popup_C) == 0x000008, "Wrong alignment on UWBP_HelpTip_Popup_C");
static_assert(sizeof(UWBP_HelpTip_Popup_C) == 0x000738, "Wrong size on UWBP_HelpTip_Popup_C");
static_assert(offsetof(UWBP_HelpTip_Popup_C, UberGraphFrame) == 0x000638, "Member 'UWBP_HelpTip_Popup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, TimerPlay) == 0x000640, "Member 'UWBP_HelpTip_Popup_C::TimerPlay' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Appear) == 0x000648, "Member 'UWBP_HelpTip_Popup_C::Appear' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Icon) == 0x000650, "Member 'UWBP_HelpTip_Popup_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Progress) == 0x000658, "Member 'UWBP_HelpTip_Popup_C::Progress' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section1Text) == 0x000660, "Member 'UWBP_HelpTip_Popup_C::Section1Text' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section1Title) == 0x000668, "Member 'UWBP_HelpTip_Popup_C::Section1Title' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section2Text) == 0x000670, "Member 'UWBP_HelpTip_Popup_C::Section2Text' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section2Title) == 0x000678, "Member 'UWBP_HelpTip_Popup_C::Section2Title' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section3Text) == 0x000680, "Member 'UWBP_HelpTip_Popup_C::Section3Text' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Section3Title) == 0x000688, "Member 'UWBP_HelpTip_Popup_C::Section3Title' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Subtitle) == 0x000690, "Member 'UWBP_HelpTip_Popup_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, Title) == 0x000698, "Member 'UWBP_HelpTip_Popup_C::Title' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, CurrentHoveredIndex) == 0x0006A0, "Member 'UWBP_HelpTip_Popup_C::CurrentHoveredIndex' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, HelpTipExpireTimer) == 0x0006A8, "Member 'UWBP_HelpTip_Popup_C::HelpTipExpireTimer' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, DisplayTime) == 0x0006B0, "Member 'UWBP_HelpTip_Popup_C::DisplayTime' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, ActiveHelpTipPriority) == 0x0006B4, "Member 'UWBP_HelpTip_Popup_C::ActiveHelpTipPriority' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, HelpTipHistory) == 0x0006B8, "Member 'UWBP_HelpTip_Popup_C::HelpTipHistory' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, ProgressTimer) == 0x000708, "Member 'UWBP_HelpTip_Popup_C::ProgressTimer' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, EmptyText) == 0x000710, "Member 'UWBP_HelpTip_Popup_C::EmptyText' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, SFXHelpTipPopIn) == 0x000728, "Member 'UWBP_HelpTip_Popup_C::SFXHelpTipPopIn' has a wrong offset!");
static_assert(offsetof(UWBP_HelpTip_Popup_C, SFXHelpTipPopOut) == 0x000730, "Member 'UWBP_HelpTip_Popup_C::SFXHelpTipPopOut' has a wrong offset!");

}

