#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SettingsSlider

#include "Basic.hpp"

#include "WBP_SettingsSlider_classes.hpp"
#include "WBP_SettingsSlider_parameters.hpp"


namespace SDK
{

// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Value To Slider
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Slider_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Value_To_Slider(double* Slider_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Value To Slider");

	Params::WBP_SettingsSlider_C_Value_To_Slider Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Slider_Value != nullptr)
		*Slider_Value = Parms.Slider_Value;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Tick");

	Params::WBP_SettingsSlider_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step Right
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Step_Right()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Step Right");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step Left
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Step_Left()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Step Left");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Step
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Step(double Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Step");

	Params::WBP_SettingsSlider_C_Step Parms{};

	Parms.Multiplier = Multiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Slider To Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Slider_To_Value(double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Slider To Value");

	Params::WBP_SettingsSlider_C_Slider_To_Value Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Set Display Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Set_Display_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Set Display Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Set Desired Value
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Set_Desired_Value()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Set Desired Value");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.ResetCurrentAcceleration
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::ResetCurrentAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "ResetCurrentAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Position Slider To Value
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Position_Slider_To_Value()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Position Slider To Value");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnWidgetSettingsInfoSet
// (Event, Protected, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::OnWidgetSettingsInfoSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnWidgetSettingsInfoSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnSettingsInfoValueChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bChangedExternally                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::OnSettingsInfoValueChanged(bool bChangedExternally)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnSettingsInfoValueChanged");

	Params::WBP_SettingsSlider_C_OnSettingsInfoValueChanged Parms{};

	Parms.bChangedExternally = bChangedExternally;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnMouseLeave");

	Params::WBP_SettingsSlider_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnMouseEnter");

	Params::WBP_SettingsSlider_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply WBP_SettingsSlider::UWBP_SettingsSlider_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnKeyUp");

	Params::WBP_SettingsSlider_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply WBP_SettingsSlider::UWBP_SettingsSlider_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "OnKeyDown");

	Params::WBP_SettingsSlider_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.NavigateRightFailure
// (Event, Public, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::NavigateRightFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "NavigateRightFailure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.NavigateLeftFailure
// (Event, Public, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::NavigateLeftFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "NavigateLeftFailure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.IsSliderKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   IsKey                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::IsSliderKey(const struct FKey& InKey, bool* IsKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "IsSliderKey");

	Params::WBP_SettingsSlider_C_IsSliderKey Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	if (IsKey != nullptr)
		*IsKey = Parms.IsKey;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.IncreaseCurrentAcceleration
// (Public, BlueprintCallable, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::IncreaseCurrentAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "IncreaseCurrentAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GetMinSliderValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Min_Value                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::GetMinSliderValue(double* Min_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "GetMinSliderValue");

	Params::WBP_SettingsSlider_C_GetMinSliderValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Min_Value != nullptr)
		*Min_Value = Parms.Min_Value;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GetMaxSliderValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Max_Value                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::GetMaxSliderValue(double* Max_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "GetMaxSliderValue");

	Params::WBP_SettingsSlider_C_GetMaxSliderValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Max_Value != nullptr)
		*Max_Value = Parms.Max_Value;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Get Dirty Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Get_Dirty_Value(double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Get Dirty Value");

	Params::WBP_SettingsSlider_C_Get_Dirty_Value Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GamepadUnhover
// (Event, Public, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::GamepadUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "GamepadUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.GamepadHover
// (Event, Public, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::GamepadHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "GamepadHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.ExecuteUbergraph_WBP_SettingsSlider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::ExecuteUbergraph_WBP_SettingsSlider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "ExecuteUbergraph_WBP_SettingsSlider");

	Params::WBP_SettingsSlider_C_ExecuteUbergraph_WBP_SettingsSlider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_SettingsSlider.WBP_SettingsSlider_C.BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void WBP_SettingsSlider::UWBP_SettingsSlider_C::BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SettingsSlider_C", "BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::WBP_SettingsSlider_C_BndEvt__SettingsSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

