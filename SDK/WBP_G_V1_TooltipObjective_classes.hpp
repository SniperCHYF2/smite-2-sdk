#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_TooltipObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V1_TooltipObjective.WBP_G_V1_TooltipObjective_C
// 0x0050 (0x0648 - 0x05F8)
class UWBP_G_V1_TooltipObjective_C final : public UHWTooltipWidget_Objective
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWTextBlock*                           DescriptionText1;                                  // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           DescriptionText2;                                  // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           DescriptionText3;                                  // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage;                                           // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_1;                                         // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_116;                                       // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           Text_List;                                         // 0x0630(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Selected_Index;                                    // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DisplayText(const TArray<class FText>& TextList, const int32 SelectedIndex);
	void ExecuteUbergraph_WBP_G_V1_TooltipObjective(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V1_TooltipObjective_C">();
	}
	static class UWBP_G_V1_TooltipObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V1_TooltipObjective_C>();
	}
};
static_assert(alignof(UWBP_G_V1_TooltipObjective_C) == 0x000008, "Wrong alignment on UWBP_G_V1_TooltipObjective_C");
static_assert(sizeof(UWBP_G_V1_TooltipObjective_C) == 0x000648, "Wrong size on UWBP_G_V1_TooltipObjective_C");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, UberGraphFrame) == 0x0005F8, "Member 'UWBP_G_V1_TooltipObjective_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, DescriptionText1) == 0x000600, "Member 'UWBP_G_V1_TooltipObjective_C::DescriptionText1' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, DescriptionText2) == 0x000608, "Member 'UWBP_G_V1_TooltipObjective_C::DescriptionText2' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, DescriptionText3) == 0x000610, "Member 'UWBP_G_V1_TooltipObjective_C::DescriptionText3' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, HWImage) == 0x000618, "Member 'UWBP_G_V1_TooltipObjective_C::HWImage' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, HWImage_1) == 0x000620, "Member 'UWBP_G_V1_TooltipObjective_C::HWImage_1' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, HWImage_116) == 0x000628, "Member 'UWBP_G_V1_TooltipObjective_C::HWImage_116' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, Text_List) == 0x000630, "Member 'UWBP_G_V1_TooltipObjective_C::Text_List' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_TooltipObjective_C, Selected_Index) == 0x000640, "Member 'UWBP_G_V1_TooltipObjective_C::Selected_Index' has a wrong offset!");

}

