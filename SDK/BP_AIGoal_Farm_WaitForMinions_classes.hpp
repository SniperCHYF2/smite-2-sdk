#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Farm_WaitForMinions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_Farm_WaitForMinions.BP_AIGoal_Farm_WaitForMinions_C
// 0x0058 (0x0140 - 0x00E8)
class UBP_AIGoal_Farm_WaitForMinions_C final : public UHWAIGoal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MaxDistanceFromLane;                               // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 JumpAbilityClass;                                  // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   JumpAbilitySoftClass;                              // 0x0100(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        MinJumpTimerDelay;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxJumpTimerDelay;                                 // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpChance;                                        // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CheckPreconditionsBP(class AHWAIController* InController);
	void EndGoalBP();
	void ExecuteUbergraph_BP_AIGoal_Farm_WaitForMinions(int32 EntryPoint);
	void IsAheadOfMinionWave(class AHWAIController* Controller_0, bool* IsAhead);
	void JumpTimer();
	void StartGoalBP();
	void StartRandomJumpTimer();
	void TickGoalBP();
	void TryJump();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_Farm_WaitForMinions_C">();
	}
	static class UBP_AIGoal_Farm_WaitForMinions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_Farm_WaitForMinions_C>();
	}
};
static_assert(alignof(UBP_AIGoal_Farm_WaitForMinions_C) == 0x000008, "Wrong alignment on UBP_AIGoal_Farm_WaitForMinions_C");
static_assert(sizeof(UBP_AIGoal_Farm_WaitForMinions_C) == 0x000140, "Wrong size on UBP_AIGoal_Farm_WaitForMinions_C");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, UberGraphFrame) == 0x0000E8, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, MaxDistanceFromLane) == 0x0000F0, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::MaxDistanceFromLane' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, JumpAbilityClass) == 0x0000F8, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::JumpAbilityClass' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, JumpAbilitySoftClass) == 0x000100, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::JumpAbilitySoftClass' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, MinJumpTimerDelay) == 0x000128, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::MinJumpTimerDelay' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, MaxJumpTimerDelay) == 0x000130, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::MaxJumpTimerDelay' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_WaitForMinions_C, JumpChance) == 0x000138, "Member 'UBP_AIGoal_Farm_WaitForMinions_C::JumpChance' has a wrong offset!");

}

