#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HomeQuickPlay

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "EQuickPlayButtonMode_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HomeQuickPlay.WBP_HomeQuickPlay_C
// 0x04A8 (0x0A88 - 0x05E0)
class UWBP_HomeQuickPlay_C final : public UHWQuickPlayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlayButton_StatusModeFade;                         // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayButton_DisabledModeFade;                       // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayButton_JoinModeFade;                           // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayButton_Disabled;                               // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MobileLayout;                                      // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SupplementaryBtnClick;                             // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SupplementaryBtnHover_Disabled;                    // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayBtnClick;                                      // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayButton_QueuedMode;                             // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SupplementaryBtnHover;                             // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayBtnHover;                                      // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         BackfillPips;                                      // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               BackfillPipsOverlay;                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BusyWrapper;                                       // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisabledButtonText;                                // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FillSheen;                                         // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeNameTextForJoin;                           // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeNameTextForStatus;                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_148;                                       // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           ModeTypeText;                                      // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               PlayBtn_Wisps;                                     // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayBtnGamepadCallout;                             // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStandardButtonNoArt_C*                 PlayBtnHitTarget;                                  // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayButton_DisabledMode;                           // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayButton_JoinMode;                               // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayButton_StatusMode;                             // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StatusMsgText;                                     // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SupplementaryBtn_EdgeDeco;                         // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SupplementaryBtn_Overlay;                          // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SupplementaryBtnChangeMode;                        // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SupplementaryBtnGamepadCallout;                    // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStandardButtonNoArt_C*                 SupplementaryBtnHitTarget;                         // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SupplementaryBtnLabel;                             // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Timer;                                             // 0x06F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WaitingforLeader;                                  // 0x06F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MapButton_C*                       WBP_MapButton;                                     // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          PlayShortcutEnabled;                               // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StatusMsg_Unknown;                                 // 0x0710(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_NoQueuesAvailable;                       // 0x0728(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_NoSelection;                             // 0x0740(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_QueueUnavailable;                        // 0x0758(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PartyLimit;                              // 0x0770(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_ReadyToJoin;                             // 0x0788(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_WaitingForLeader;                        // 0x07A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_QueuedStatus;                            // 0x07B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_EnteringMatch;                           // 0x07D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PartyLevel;                              // 0x07E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PlayerLevel;                             // 0x0800(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_ChooseGamemode;                                // 0x0818(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_CancelSearch;                                  // 0x0830(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bSupplementaryBtnEnabled;                          // 0x0848(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              TriggerStatusModeDisplayUpdate;                    // 0x0850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bForceFirstTimeUpdate;                             // 0x0860(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentQueueTimeElapsed;                           // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Msg_ReadyToRejoin;                                 // 0x0870(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_LeaveMatch;                                    // 0x0888(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_LeaveCustomMatch;                              // 0x08A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FTimerHandle                           PendingQueueUpdateTimer;                           // 0x08B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PendingQueueUpdateTimeoutTime;                     // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ClickPlayBtnHomeQuickPlaySFX;                      // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                ClickCancelBtnHomeQuickPlaySFX;                    // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   StatusMsg_PartyLimitMin;                           // 0x08D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_RankedRangeTooFar;                       // 0x08F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LeaveQueueShortcutEnabled;                         // 0x0908(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_909[0x7];                                      // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StatusMsg_PartyPlatformDisallowed;                 // 0x0910(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_Retrying;                                // 0x0928(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PlayerOwnedJobs;                         // 0x0940(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PartyOwnedJobs;                          // 0x0958(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SFXClick;                                          // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXHover;                                          // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Msg_VersionMismatch;                               // 0x0980(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_DeserterPenalty;                               // 0x0998(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DeserterPenaltyItemId;                             // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CachedDeserterTimerHandle;                         // 0x09B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedIsDeserter;                                  // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StatusMsgWaitingForPlayers;                        // 0x09C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsgJoiningMatch;                             // 0x09E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_MatchFound;                                    // 0x09F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           BackfillTimerHandle;                               // 0x0A10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingBackfillStateTime;                        // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          PlayButtonMode;                                    // 0x0A1C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1D[0x3];                                      // 0x0A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_MatchmakingQueueInfo*               QueueDetails;                                      // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   StatusMsgSearchingForPlayers;                      // 0x0A28(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_PartyDeserterPenalty;                          // 0x0A40(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PartyOverSRLimit;                        // 0x0A58(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   StatusMsg_PartySRDifference;                       // 0x0A70(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Apply_Pending_Display();
	void ApplyKeyShortcutsEnabled();
	void BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature(class UWidget* Widget);
	void BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature(class UWidget* Widget);
	void BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature(class UWidget* Widget);
	void BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature(class UWidget* Widget);
	void ExecuteUbergraph_WBP_HomeQuickPlay(int32 EntryPoint);
	void ForceClickPlayButton();
	void ForceClickSupplementaryButton();
	void ForceHoverSupplementaryBtn();
	void ForceUnhoverSupplementaryBtn();
	void ForceVisualState();
	void GetDeserterText(class FText* Result);
	void GetDeserterTimeRemaining(class FString* Hours, class FString* Minutes, class FString* PlayerName);
	void GetNavigationWidgets(TArray<class URHWidget*>* Return_Value);
	class FText GetQueuedTimeText();
	void HandleCustomQueueUpdate();
	void HandleInputModeChanged(ERH_INPUT_STATE InputMode);
	void HandleQuickPlayStateUpdate();
	void HandleTriggerStatusModeEvent();
	void InitializeWidgetNavigation();
	void IsCurrentlyInCustomLobby(bool* IsCustom);
	void OnInitialized();
	void OnQueueJoined(const class FString& QueueId);
	void OnQueueLeft();
	void OnQueueStateUpdate(ERH_MatchStatus CurrentMatchStatus);
	void OnSelectedQueueUpdate(class URH_MatchmakingQueueInfo* CurrentSelectedQueue);
	void OnUpdateQueueTimeElapsed(float TimeElapsed);
	void OnUpdateQuickPlayState(EQuickPlayQueueState QueueState);
	void Pending_Queue_Update_Timeout();
	void PlayClickSFX();
	void PlayHoverSFX();
	void SetCurrentGameModeTextDisplay();
	void SetupGamepadCallout();
	void TogglePlayButtonMode(EQuickPlayButtonMode InMode);
	void ToggleSupplementaryBtnEnabled(bool InIsEnabled);
	void UpdateBackfillJoinTime();
	void UpdateBackfillPips();
	void UpdateQueueTimer();
	void UpdateStatusModeDisplay();

	class UWidget* BP_GetDesiredFocusTarget() const;
	void IsSelectedRegionValid(bool* Return) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HomeQuickPlay_C">();
	}
	static class UWBP_HomeQuickPlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HomeQuickPlay_C>();
	}
};
static_assert(alignof(UWBP_HomeQuickPlay_C) == 0x000008, "Wrong alignment on UWBP_HomeQuickPlay_C");
static_assert(sizeof(UWBP_HomeQuickPlay_C) == 0x000A88, "Wrong size on UWBP_HomeQuickPlay_C");
static_assert(offsetof(UWBP_HomeQuickPlay_C, UberGraphFrame) == 0x0005E0, "Member 'UWBP_HomeQuickPlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_StatusModeFade) == 0x0005E8, "Member 'UWBP_HomeQuickPlay_C::PlayButton_StatusModeFade' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_DisabledModeFade) == 0x0005F0, "Member 'UWBP_HomeQuickPlay_C::PlayButton_DisabledModeFade' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_JoinModeFade) == 0x0005F8, "Member 'UWBP_HomeQuickPlay_C::PlayButton_JoinModeFade' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_Disabled) == 0x000600, "Member 'UWBP_HomeQuickPlay_C::PlayButton_Disabled' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, MobileLayout) == 0x000608, "Member 'UWBP_HomeQuickPlay_C::MobileLayout' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnClick) == 0x000610, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnClick' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnHover_Disabled) == 0x000618, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnHover_Disabled' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayBtnClick) == 0x000620, "Member 'UWBP_HomeQuickPlay_C::PlayBtnClick' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_QueuedMode) == 0x000628, "Member 'UWBP_HomeQuickPlay_C::PlayButton_QueuedMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnHover) == 0x000630, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnHover' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayBtnHover) == 0x000638, "Member 'UWBP_HomeQuickPlay_C::PlayBtnHover' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, BackfillPips) == 0x000640, "Member 'UWBP_HomeQuickPlay_C::BackfillPips' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, BackfillPipsOverlay) == 0x000648, "Member 'UWBP_HomeQuickPlay_C::BackfillPipsOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, BusyWrapper) == 0x000650, "Member 'UWBP_HomeQuickPlay_C::BusyWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, DisabledButtonText) == 0x000658, "Member 'UWBP_HomeQuickPlay_C::DisabledButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, FillSheen) == 0x000660, "Member 'UWBP_HomeQuickPlay_C::FillSheen' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, GameModeNameTextForJoin) == 0x000668, "Member 'UWBP_HomeQuickPlay_C::GameModeNameTextForJoin' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, GameModeNameTextForStatus) == 0x000670, "Member 'UWBP_HomeQuickPlay_C::GameModeNameTextForStatus' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, HWImage_148) == 0x000678, "Member 'UWBP_HomeQuickPlay_C::HWImage_148' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, ModeTypeText) == 0x000680, "Member 'UWBP_HomeQuickPlay_C::ModeTypeText' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayBtn_Wisps) == 0x000688, "Member 'UWBP_HomeQuickPlay_C::PlayBtn_Wisps' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayBtnGamepadCallout) == 0x000690, "Member 'UWBP_HomeQuickPlay_C::PlayBtnGamepadCallout' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayBtnHitTarget) == 0x000698, "Member 'UWBP_HomeQuickPlay_C::PlayBtnHitTarget' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_DisabledMode) == 0x0006A0, "Member 'UWBP_HomeQuickPlay_C::PlayButton_DisabledMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_JoinMode) == 0x0006A8, "Member 'UWBP_HomeQuickPlay_C::PlayButton_JoinMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButton_StatusMode) == 0x0006B0, "Member 'UWBP_HomeQuickPlay_C::PlayButton_StatusMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsgText) == 0x0006B8, "Member 'UWBP_HomeQuickPlay_C::StatusMsgText' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtn_EdgeDeco) == 0x0006C0, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtn_EdgeDeco' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtn_Overlay) == 0x0006C8, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtn_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnChangeMode) == 0x0006D0, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnChangeMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnGamepadCallout) == 0x0006D8, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnGamepadCallout' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnHitTarget) == 0x0006E0, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnHitTarget' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SupplementaryBtnLabel) == 0x0006E8, "Member 'UWBP_HomeQuickPlay_C::SupplementaryBtnLabel' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Timer) == 0x0006F0, "Member 'UWBP_HomeQuickPlay_C::Timer' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, WaitingforLeader) == 0x0006F8, "Member 'UWBP_HomeQuickPlay_C::WaitingforLeader' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, WBP_MapButton) == 0x000700, "Member 'UWBP_HomeQuickPlay_C::WBP_MapButton' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayShortcutEnabled) == 0x000708, "Member 'UWBP_HomeQuickPlay_C::PlayShortcutEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_Unknown) == 0x000710, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_Unknown' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_NoQueuesAvailable) == 0x000728, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_NoQueuesAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_NoSelection) == 0x000740, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_NoSelection' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_QueueUnavailable) == 0x000758, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_QueueUnavailable' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyLimit) == 0x000770, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyLimit' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_ReadyToJoin) == 0x000788, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_ReadyToJoin' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_WaitingForLeader) == 0x0007A0, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_WaitingForLeader' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_QueuedStatus) == 0x0007B8, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_QueuedStatus' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_EnteringMatch) == 0x0007D0, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_EnteringMatch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyLevel) == 0x0007E8, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyLevel' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PlayerLevel) == 0x000800, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PlayerLevel' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_ChooseGamemode) == 0x000818, "Member 'UWBP_HomeQuickPlay_C::Msg_ChooseGamemode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_CancelSearch) == 0x000830, "Member 'UWBP_HomeQuickPlay_C::Msg_CancelSearch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, bSupplementaryBtnEnabled) == 0x000848, "Member 'UWBP_HomeQuickPlay_C::bSupplementaryBtnEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, TriggerStatusModeDisplayUpdate) == 0x000850, "Member 'UWBP_HomeQuickPlay_C::TriggerStatusModeDisplayUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, bForceFirstTimeUpdate) == 0x000860, "Member 'UWBP_HomeQuickPlay_C::bForceFirstTimeUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, CurrentQueueTimeElapsed) == 0x000868, "Member 'UWBP_HomeQuickPlay_C::CurrentQueueTimeElapsed' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_ReadyToRejoin) == 0x000870, "Member 'UWBP_HomeQuickPlay_C::Msg_ReadyToRejoin' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_LeaveMatch) == 0x000888, "Member 'UWBP_HomeQuickPlay_C::Msg_LeaveMatch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_LeaveCustomMatch) == 0x0008A0, "Member 'UWBP_HomeQuickPlay_C::Msg_LeaveCustomMatch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PendingQueueUpdateTimer) == 0x0008B8, "Member 'UWBP_HomeQuickPlay_C::PendingQueueUpdateTimer' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PendingQueueUpdateTimeoutTime) == 0x0008C0, "Member 'UWBP_HomeQuickPlay_C::PendingQueueUpdateTimeoutTime' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, ClickPlayBtnHomeQuickPlaySFX) == 0x0008C8, "Member 'UWBP_HomeQuickPlay_C::ClickPlayBtnHomeQuickPlaySFX' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, ClickCancelBtnHomeQuickPlaySFX) == 0x0008D0, "Member 'UWBP_HomeQuickPlay_C::ClickCancelBtnHomeQuickPlaySFX' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyLimitMin) == 0x0008D8, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyLimitMin' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_RankedRangeTooFar) == 0x0008F0, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_RankedRangeTooFar' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, LeaveQueueShortcutEnabled) == 0x000908, "Member 'UWBP_HomeQuickPlay_C::LeaveQueueShortcutEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyPlatformDisallowed) == 0x000910, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyPlatformDisallowed' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_Retrying) == 0x000928, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_Retrying' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PlayerOwnedJobs) == 0x000940, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PlayerOwnedJobs' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyOwnedJobs) == 0x000958, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyOwnedJobs' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SFXClick) == 0x000970, "Member 'UWBP_HomeQuickPlay_C::SFXClick' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, SFXHover) == 0x000978, "Member 'UWBP_HomeQuickPlay_C::SFXHover' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_VersionMismatch) == 0x000980, "Member 'UWBP_HomeQuickPlay_C::Msg_VersionMismatch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_DeserterPenalty) == 0x000998, "Member 'UWBP_HomeQuickPlay_C::Msg_DeserterPenalty' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, DeserterPenaltyItemId) == 0x0009B0, "Member 'UWBP_HomeQuickPlay_C::DeserterPenaltyItemId' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, CachedDeserterTimerHandle) == 0x0009B8, "Member 'UWBP_HomeQuickPlay_C::CachedDeserterTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, CachedIsDeserter) == 0x0009C0, "Member 'UWBP_HomeQuickPlay_C::CachedIsDeserter' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsgWaitingForPlayers) == 0x0009C8, "Member 'UWBP_HomeQuickPlay_C::StatusMsgWaitingForPlayers' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsgJoiningMatch) == 0x0009E0, "Member 'UWBP_HomeQuickPlay_C::StatusMsgJoiningMatch' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_MatchFound) == 0x0009F8, "Member 'UWBP_HomeQuickPlay_C::Msg_MatchFound' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, BackfillTimerHandle) == 0x000A10, "Member 'UWBP_HomeQuickPlay_C::BackfillTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, RemainingBackfillStateTime) == 0x000A18, "Member 'UWBP_HomeQuickPlay_C::RemainingBackfillStateTime' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, PlayButtonMode) == 0x000A1C, "Member 'UWBP_HomeQuickPlay_C::PlayButtonMode' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, QueueDetails) == 0x000A20, "Member 'UWBP_HomeQuickPlay_C::QueueDetails' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsgSearchingForPlayers) == 0x000A28, "Member 'UWBP_HomeQuickPlay_C::StatusMsgSearchingForPlayers' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, Msg_PartyDeserterPenalty) == 0x000A40, "Member 'UWBP_HomeQuickPlay_C::Msg_PartyDeserterPenalty' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartyOverSRLimit) == 0x000A58, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartyOverSRLimit' has a wrong offset!");
static_assert(offsetof(UWBP_HomeQuickPlay_C, StatusMsg_PartySRDifference) == 0x000A70, "Member 'UWBP_HomeQuickPlay_C::StatusMsg_PartySRDifference' has a wrong offset!");

}

