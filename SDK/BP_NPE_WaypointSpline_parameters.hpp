#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_WaypointSpline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_WaypointSpline.BP_NPE_WaypointSpline_C.ExecuteUbergraph_BP_NPE_WaypointSpline
// 0x00E0 (0x00E0 - 0x0000)
struct BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleOn;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline) == 0x000008, "Wrong alignment on BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline");
static_assert(sizeof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline) == 0x0000E0, "Wrong size on BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, EntryPoint) == 0x000000, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, Temp_int_Variable) == 0x000004, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, K2Node_CustomEvent_ToggleOn) == 0x00000C, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::K2Node_CustomEvent_ToggleOn' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000028, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000070, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000088, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000090, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x0000D8, "Member 'BP_NPE_WaypointSpline_C_ExecuteUbergraph_BP_NPE_WaypointSpline::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function BP_NPE_WaypointSpline.BP_NPE_WaypointSpline_C.ToggleSplineFX
// 0x0001 (0x0001 - 0x0000)
struct BP_NPE_WaypointSpline_C_ToggleSplineFX final
{
public:
	bool                                          ToggleOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointSpline_C_ToggleSplineFX) == 0x000001, "Wrong alignment on BP_NPE_WaypointSpline_C_ToggleSplineFX");
static_assert(sizeof(BP_NPE_WaypointSpline_C_ToggleSplineFX) == 0x000001, "Wrong size on BP_NPE_WaypointSpline_C_ToggleSplineFX");
static_assert(offsetof(BP_NPE_WaypointSpline_C_ToggleSplineFX, ToggleOn) == 0x000000, "Member 'BP_NPE_WaypointSpline_C_ToggleSplineFX::ToggleOn' has a wrong offset!");

}

