#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_AbilitiesList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_GodBuilder_AbilitiesList.WBP_S_GodBuilder_AbilitiesList_C
// 0x0018 (0x0640 - 0x0628)
class UWBP_S_GodBuilder_AbilitiesList_C final : public UHWGodBuilderAbilitiesListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0628(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_C_GodDetails_Label_C*              ListHeader;                                        // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         EntryCount;                                        // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddInitialAbilityEntries();
	void ExecuteUbergraph_WBP_S_GodBuilder_AbilitiesList(int32 EntryPoint);
	void InitializeWidget();
	void PreConstruct(bool IsDesignTime);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_GodBuilder_AbilitiesList_C">();
	}
	static class UWBP_S_GodBuilder_AbilitiesList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_GodBuilder_AbilitiesList_C>();
	}
};
static_assert(alignof(UWBP_S_GodBuilder_AbilitiesList_C) == 0x000008, "Wrong alignment on UWBP_S_GodBuilder_AbilitiesList_C");
static_assert(sizeof(UWBP_S_GodBuilder_AbilitiesList_C) == 0x000640, "Wrong size on UWBP_S_GodBuilder_AbilitiesList_C");
static_assert(offsetof(UWBP_S_GodBuilder_AbilitiesList_C, UberGraphFrame) == 0x000628, "Member 'UWBP_S_GodBuilder_AbilitiesList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_AbilitiesList_C, ListHeader) == 0x000630, "Member 'UWBP_S_GodBuilder_AbilitiesList_C::ListHeader' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_AbilitiesList_C, EntryCount) == 0x000638, "Member 'UWBP_S_GodBuilder_AbilitiesList_C::EntryCount' has a wrong offset!");

}

