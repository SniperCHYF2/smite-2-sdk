#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_TooltipAbilityOverview_DetailLine

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.DisplayCustomText
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText) == 0x000018, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText, Text) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayCustomText::Text' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.DisplayKeywordIcon
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              KeywordIcon;                                       // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon) == 0x000030, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, KeywordIcon) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::KeywordIcon' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, Temp_bool_Variable) == 0x000028, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, Temp_byte_Variable) == 0x00002A, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, Temp_byte_Variable_1) == 0x00002B, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon, K2Node_Select_Default) == 0x00002C, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.DisplayKeywordText
// 0x0128 (0x0128 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWDataDisplay_Keyword                 KeywordData;                                       // 0x0018(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x011C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText) == 0x000128, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, Text) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::Text' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, KeywordData) == 0x000018, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::KeywordData' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, Temp_struct_Variable) == 0x000108, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x000110, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000118, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, Temp_bool_Variable) == 0x000119, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText, K2Node_Select_Default) == 0x00011C, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_DisplayKeywordText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.FormatScaling
// 0x0198 (0x0198 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling final
{
public:
	class FText                                   ScalingValueText;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHWDataDisplay_CharacterStat           StatData;                                          // 0x0018(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x00B8(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling) == 0x000198, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, ScalingValueText) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::ScalingValueText' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, StatData) == 0x000018, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::StatData' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, ReturnValue) == 0x0000B8, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, K2Node_MakeArray_Array) == 0x000170, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling, CallFunc_Format_ReturnValue) == 0x000180, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScaling::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.FormatScalingTexts
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts final
{
public:
	TArray<class FText>                           IndividualScalingTexts;                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_JoinTextArray_ReturnValue;                // 0x0028(0x0018)()
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts) == 0x000040, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts, IndividualScalingTexts) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts::IndividualScalingTexts' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts, ReturnValue) == 0x000010, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts, CallFunc_JoinTextArray_ReturnValue) == 0x000028, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatScalingTexts::CallFunc_JoinTextArray_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.FormatValue
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCurrentLevel;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue) == 0x0000D8, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, Value) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, bIsCurrentLevel) == 0x000004, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::bIsCurrentLevel' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, ReturnValue) == 0x000008, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, Temp_bool_Variable) == 0x000020, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, K2Node_MakeArray_Array) == 0x000090, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, K2Node_Select_Default) == 0x0000B8, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000D0, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValue::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_TooltipAbilityOverview_DetailLine.WBP_G_V1_TooltipAbilityOverview_DetailLine_C.FormatValues
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues final
{
public:
	TArray<class FText>                           ValueTexts;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_JoinTextArray_ReturnValue;                // 0x0028(0x0018)()
};
static_assert(alignof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues");
static_assert(sizeof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues) == 0x000040, "Wrong size on WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues, ValueTexts) == 0x000000, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues::ValueTexts' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues, ReturnValue) == 0x000010, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues, CallFunc_JoinTextArray_ReturnValue) == 0x000028, "Member 'WBP_G_V1_TooltipAbilityOverview_DetailLine_C_FormatValues::CallFunc_JoinTextArray_ReturnValue' has a wrong offset!");

}

