#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory_GoldFury

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_BotFactory_Leashed_Jungle_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BotFactory_GoldFury.BP_BotFactory_GoldFury_C
// 0x0090 (0x0A50 - 0x09C0)
class ABP_BotFactory_GoldFury_C final : public ABP_BotFactory_Leashed_Jungle_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BotFactory_GoldFury_C;           // 0x09C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         KillsNeededForElderFury;                           // 0x09C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AncientFuryDebuffTimer;                            // 0x09D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AncientFuryActive;                                 // 0x09D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x3];                                      // 0x09D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OrderKillCount;                                    // 0x09DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         ChaosKillCount;                                    // 0x09E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnGoldFuryKillsChanged;                            // 0x09E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAncientFuryActivated;                            // 0x09F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         AncientFuryDebuffDuration;                         // 0x0A08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0C[0x4];                                      // 0x0A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ABP_WindSprite_SpawnPoint_C>> WindSpriteSpawnPoints;                 // 0x0A10(0x0010)(Edit, BlueprintVisible)
	bool                                          AreWindSpritesActive;                              // 0x0A20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   GoldFuryPool;                                      // 0x0A28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(const struct FGameplayTag& Tag)> OnFurySpawnUpdated;               // 0x0A38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           GoldFurySpawnTag;                                  // 0x0A48(0x0008)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void BindToGoldFuryKillsInTracker();
	void CollectWindSpriteSpawns();
	void ElderFurySpawnAnnouncement();
	void ExecuteUbergraph_BP_BotFactory_GoldFury(int32 EntryPoint);
	void GetKillCountForTeam(int32 Team, int32* KillCount);
	void GoldFuryKillsChanged(class AHWTeamState* TeamState, int32 NewStat);
	void GoldFuryTypeDied(class AHWCharacter_Base* Character);
	void OnChaosGoldFuryKillsChanged(class AHWTeamState* TeamState, int32 NewStat);
	void OnOrderGoldFuryKillsChanged(class AHWTeamState* TeamState, int32 NewStat);
	void OnRep_AncientFuryActive();
	void OnRep_ChaosKillCount();
	void OnRep_GoldFurySpawnTag();
	void OnRep_OrderKillCount();
	void OnSpawnBotDied(class AHWCharacter_Base* characterKilled, class AActor* Killer);
	void RandomizeGoldFurySpawn();
	void ReceiveBeginPlay();
	void Remove_Ancient_Fury_Debuff_on_Factories();
	void RetrieveGoldFuryType(class AHWCharacter_Base* Character, struct FGameplayTag* GoldFuryTag);
	void SendAnnouncement();
	void SpawnLightningSpawners();
	void SpawnWindSprites();
	void StartAncientFuryTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BotFactory_GoldFury_C">();
	}
	static class ABP_BotFactory_GoldFury_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BotFactory_GoldFury_C>();
	}
};
static_assert(alignof(ABP_BotFactory_GoldFury_C) == 0x000008, "Wrong alignment on ABP_BotFactory_GoldFury_C");
static_assert(sizeof(ABP_BotFactory_GoldFury_C) == 0x000A50, "Wrong size on ABP_BotFactory_GoldFury_C");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, UberGraphFrame_BP_BotFactory_GoldFury_C) == 0x0009C0, "Member 'ABP_BotFactory_GoldFury_C::UberGraphFrame_BP_BotFactory_GoldFury_C' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, KillsNeededForElderFury) == 0x0009C8, "Member 'ABP_BotFactory_GoldFury_C::KillsNeededForElderFury' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, AncientFuryDebuffTimer) == 0x0009D0, "Member 'ABP_BotFactory_GoldFury_C::AncientFuryDebuffTimer' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, AncientFuryActive) == 0x0009D8, "Member 'ABP_BotFactory_GoldFury_C::AncientFuryActive' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, OrderKillCount) == 0x0009DC, "Member 'ABP_BotFactory_GoldFury_C::OrderKillCount' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, ChaosKillCount) == 0x0009E0, "Member 'ABP_BotFactory_GoldFury_C::ChaosKillCount' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, OnGoldFuryKillsChanged) == 0x0009E8, "Member 'ABP_BotFactory_GoldFury_C::OnGoldFuryKillsChanged' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, OnAncientFuryActivated) == 0x0009F8, "Member 'ABP_BotFactory_GoldFury_C::OnAncientFuryActivated' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, AncientFuryDebuffDuration) == 0x000A08, "Member 'ABP_BotFactory_GoldFury_C::AncientFuryDebuffDuration' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, WindSpriteSpawnPoints) == 0x000A10, "Member 'ABP_BotFactory_GoldFury_C::WindSpriteSpawnPoints' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, AreWindSpritesActive) == 0x000A20, "Member 'ABP_BotFactory_GoldFury_C::AreWindSpritesActive' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, GoldFuryPool) == 0x000A28, "Member 'ABP_BotFactory_GoldFury_C::GoldFuryPool' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, OnFurySpawnUpdated) == 0x000A38, "Member 'ABP_BotFactory_GoldFury_C::OnFurySpawnUpdated' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_GoldFury_C, GoldFurySpawnTag) == 0x000A48, "Member 'ABP_BotFactory_GoldFury_C::GoldFurySpawnTag' has a wrong offset!");

}

