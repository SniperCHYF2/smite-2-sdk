#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_RankDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_RankDisplay.WBP_C_RankDisplay_C.BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature final
{
public:
	class URHWidget*                              Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature");
static_assert(sizeof(WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature) == 0x000010, "Wrong size on WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature");
static_assert(offsetof(WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature, bHovered) == 0x000008, "Member 'WBP_C_RankDisplay_C_BndEvt__WBP_C_RankDisplay_WBP_S_Master_Tile_K2Node_ComponentBoundEvent_1_RHWidgetGamepadHovered__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_C_RankDisplay.WBP_C_RankDisplay_C.ExecuteUbergraph_WBP_C_RankDisplay
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHWidget*                              K2Node_ComponentBoundEvent_Widget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay) == 0x000008, "Wrong alignment on WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay");
static_assert(sizeof(WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay) == 0x000018, "Wrong size on WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay");
static_assert(offsetof(WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay, EntryPoint) == 0x000000, "Member 'WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay, K2Node_ComponentBoundEvent_Widget) == 0x000008, "Member 'WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay, K2Node_ComponentBoundEvent_bHovered) == 0x000010, "Member 'WBP_C_RankDisplay_C_ExecuteUbergraph_WBP_C_RankDisplay::K2Node_ComponentBoundEvent_bHovered' has a wrong offset!");

// Function WBP_C_RankDisplay.WBP_C_RankDisplay_C.PopulateRankData
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_C_RankDisplay_C_PopulateRankData final
{
public:
	struct FHWSkillRatingRank                     Data;                                              // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Completed;                                         // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWLeaderboardSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLastReceivedLeaderboardId_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHWLeaderboardDataContainer            CallFunc_GetCachedLeaderboard_OutLeaderboardDataContainer; // 0x0110(0x0010)()
	bool                                          CallFunc_GetCachedLeaderboard_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWLeaderboardEntry*                    CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0018)()
};
static_assert(alignof(WBP_C_RankDisplay_C_PopulateRankData) == 0x000008, "Wrong alignment on WBP_C_RankDisplay_C_PopulateRankData");
static_assert(sizeof(WBP_C_RankDisplay_C_PopulateRankData) == 0x0001B0, "Wrong size on WBP_C_RankDisplay_C_PopulateRankData");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, Data) == 0x000000, "Member 'WBP_C_RankDisplay_C_PopulateRankData::Data' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, Completed) == 0x000060, "Member 'WBP_C_RankDisplay_C_PopulateRankData::Completed' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, Temp_byte_Variable) == 0x000061, "Member 'WBP_C_RankDisplay_C_PopulateRankData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_Greater_IntInt_ReturnValue) == 0x000062, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_C_RankDisplay_C_PopulateRankData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_C_RankDisplay_C_PopulateRankData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, Temp_byte_Variable_1) == 0x0000C8, "Member 'WBP_C_RankDisplay_C_PopulateRankData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, Temp_bool_Variable) == 0x0000E8, "Member 'WBP_C_RankDisplay_C_PopulateRankData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000F0, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_GetLastReceivedLeaderboardId_ReturnValue) == 0x0000F8, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_GetLastReceivedLeaderboardId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, K2Node_Select_Default) == 0x000108, "Member 'WBP_C_RankDisplay_C_PopulateRankData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_GetCachedLeaderboard_OutLeaderboardDataContainer) == 0x000110, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_GetCachedLeaderboard_OutLeaderboardDataContainer' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_GetCachedLeaderboard_ReturnValue) == 0x000120, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_GetCachedLeaderboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_Array_Get_Item) == 0x000128, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000130, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'WBP_C_RankDisplay_C_PopulateRankData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, K2Node_MakeArray_Array_1) == 0x000188, "Member 'WBP_C_RankDisplay_C_PopulateRankData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_C_RankDisplay_C_PopulateRankData, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'WBP_C_RankDisplay_C_PopulateRankData::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function WBP_C_RankDisplay.WBP_C_RankDisplay_C.SetCurrentRank
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_RankDisplay_C_SetCurrentRank final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_RankDisplay_C_SetCurrentRank) == 0x000001, "Wrong alignment on WBP_C_RankDisplay_C_SetCurrentRank");
static_assert(sizeof(WBP_C_RankDisplay_C_SetCurrentRank) == 0x000001, "Wrong size on WBP_C_RankDisplay_C_SetCurrentRank");
static_assert(offsetof(WBP_C_RankDisplay_C_SetCurrentRank, Show) == 0x000000, "Member 'WBP_C_RankDisplay_C_SetCurrentRank::Show' has a wrong offset!");

// Function WBP_C_RankDisplay.WBP_C_RankDisplay_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_RankDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

