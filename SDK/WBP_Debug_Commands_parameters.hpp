#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Debug_Commands

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Debug_Commands.WBP_Debug_Commands_C.AddNewButton
// 0x0020 (0x0020 - 0x0000)
struct WBP_Debug_Commands_C_AddNewButton final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Command;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_Commands_C_AddNewButton) == 0x000008, "Wrong alignment on WBP_Debug_Commands_C_AddNewButton");
static_assert(sizeof(WBP_Debug_Commands_C_AddNewButton) == 0x000020, "Wrong size on WBP_Debug_Commands_C_AddNewButton");
static_assert(offsetof(WBP_Debug_Commands_C_AddNewButton, Name_0) == 0x000000, "Member 'WBP_Debug_Commands_C_AddNewButton::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_AddNewButton, Command) == 0x000010, "Member 'WBP_Debug_Commands_C_AddNewButton::Command' has a wrong offset!");

// Function WBP_Debug_Commands.WBP_Debug_Commands_C.BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'WBP_Debug_Commands_C_BndEvt__WBP_Debug_Commands_CommandCategories_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function WBP_Debug_Commands.WBP_Debug_Commands_C.ExecuteUbergraph_WBP_Debug_Commands
// 0x0078 (0x0078 - 0x0000)
struct WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UHWWidget*>                      CallFunc_AddUninitializedEntries_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UHWWidget*                              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CommandButton_C*                   K2Node_DynamicCast_AsWBP_Command_Button;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Name;                                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Command;                              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands) == 0x000008, "Wrong alignment on WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands");
static_assert(sizeof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands) == 0x000078, "Wrong size on WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, EntryPoint) == 0x000000, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, CallFunc_AddUninitializedEntries_ReturnValue) == 0x000008, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::CallFunc_AddUninitializedEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_DynamicCast_AsWBP_Command_Button) == 0x000028, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_DynamicCast_AsWBP_Command_Button' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_ComponentBoundEvent_SelectedItem) == 0x000040, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_ComponentBoundEvent_SelectionType) == 0x000050, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_Event_Name) == 0x000058, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands, K2Node_Event_Command) == 0x000068, "Member 'WBP_Debug_Commands_C_ExecuteUbergraph_WBP_Debug_Commands::K2Node_Event_Command' has a wrong offset!");

// Function WBP_Debug_Commands.WBP_Debug_Commands_C.GetActionBindingContainers
// 0x0010 (0x0010 - 0x0000)
struct WBP_Debug_Commands_C_GetActionBindingContainers final
{
public:
	TArray<struct FHWUIActionBindingContainer>    ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Debug_Commands_C_GetActionBindingContainers) == 0x000008, "Wrong alignment on WBP_Debug_Commands_C_GetActionBindingContainers");
static_assert(sizeof(WBP_Debug_Commands_C_GetActionBindingContainers) == 0x000010, "Wrong size on WBP_Debug_Commands_C_GetActionBindingContainers");
static_assert(offsetof(WBP_Debug_Commands_C_GetActionBindingContainers, ReturnValue) == 0x000000, "Member 'WBP_Debug_Commands_C_GetActionBindingContainers::ReturnValue' has a wrong offset!");

// Function WBP_Debug_Commands.WBP_Debug_Commands_C.GetWidgetName
// 0x0018 (0x0018 - 0x0000)
struct WBP_Debug_Commands_C_GetWidgetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_Debug_Commands_C_GetWidgetName) == 0x000008, "Wrong alignment on WBP_Debug_Commands_C_GetWidgetName");
static_assert(sizeof(WBP_Debug_Commands_C_GetWidgetName) == 0x000018, "Wrong size on WBP_Debug_Commands_C_GetWidgetName");
static_assert(offsetof(WBP_Debug_Commands_C_GetWidgetName, ReturnValue) == 0x000000, "Member 'WBP_Debug_Commands_C_GetWidgetName::ReturnValue' has a wrong offset!");

}

