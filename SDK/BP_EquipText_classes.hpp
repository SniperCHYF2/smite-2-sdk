#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EquipText.BP_EquipText_C
// 0x0028 (0x02C0 - 0x0298)
class ABP_EquipText_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Movement_Alpha_64BAEDA441E5ECEF1B3710866DC8D9CE;   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Movement__Direction_64BAEDA441E5ECEF1B3710866DC8D9CE; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Movement;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EquipText(int32 EntryPoint);
	void Movement__FinishedFunc();
	void Movement__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipText_C">();
	}
	static class ABP_EquipText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EquipText_C>();
	}
};
static_assert(alignof(ABP_EquipText_C) == 0x000008, "Wrong alignment on ABP_EquipText_C");
static_assert(sizeof(ABP_EquipText_C) == 0x0002C0, "Wrong size on ABP_EquipText_C");
static_assert(offsetof(ABP_EquipText_C, UberGraphFrame) == 0x000298, "Member 'ABP_EquipText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EquipText_C, Scene) == 0x0002A0, "Member 'ABP_EquipText_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_EquipText_C, TextRender) == 0x0002A8, "Member 'ABP_EquipText_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_EquipText_C, Movement_Alpha_64BAEDA441E5ECEF1B3710866DC8D9CE) == 0x0002B0, "Member 'ABP_EquipText_C::Movement_Alpha_64BAEDA441E5ECEF1B3710866DC8D9CE' has a wrong offset!");
static_assert(offsetof(ABP_EquipText_C, Movement__Direction_64BAEDA441E5ECEF1B3710866DC8D9CE) == 0x0002B4, "Member 'ABP_EquipText_C::Movement__Direction_64BAEDA441E5ECEF1B3710866DC8D9CE' has a wrong offset!");
static_assert(offsetof(ABP_EquipText_C, Movement) == 0x0002B8, "Member 'ABP_EquipText_C::Movement' has a wrong offset!");

}

