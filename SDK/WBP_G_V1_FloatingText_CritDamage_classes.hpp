#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_FloatingText_CritDamage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V1_FloatingText_CritDamage.WBP_G_V1_FloatingText_CritDamage_C
// 0x0098 (0x0740 - 0x06A8)
class UWBP_G_V1_FloatingText_CritDamage_C final : public UHWFloatingTextScaleWidget
{
public:
	class UWidgetAnimation*                       AnimMoveAndFade;                                   // 0x06A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWTextBlock*                           CritDamageText;                                    // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWScaleBox*                            DamageNumberScaleBox;                              // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               DamageTypeIcon;                                    // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage;                                           // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_1;                                         // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_2;                                         // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_50;                                        // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         FontInfo;                                          // 0x06E8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AnimateNumber(int32 Number, const struct FGameplayCueParameters& Parameters, class AActor* OwnerActor);
	void ApplyFontSize(int32 Size);
	void GetDamageTypeIcon(struct FGameplayCueParameters& CueParameters, class UTexture2D** Texture);
	void InitializeWidget();
	void OnShown();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V1_FloatingText_CritDamage_C">();
	}
	static class UWBP_G_V1_FloatingText_CritDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V1_FloatingText_CritDamage_C>();
	}
};
static_assert(alignof(UWBP_G_V1_FloatingText_CritDamage_C) == 0x000008, "Wrong alignment on UWBP_G_V1_FloatingText_CritDamage_C");
static_assert(sizeof(UWBP_G_V1_FloatingText_CritDamage_C) == 0x000740, "Wrong size on UWBP_G_V1_FloatingText_CritDamage_C");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, AnimMoveAndFade) == 0x0006A8, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::AnimMoveAndFade' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, CritDamageText) == 0x0006B0, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::CritDamageText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, DamageNumberScaleBox) == 0x0006B8, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::DamageNumberScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, DamageTypeIcon) == 0x0006C0, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::DamageTypeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, HWImage) == 0x0006C8, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::HWImage' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, HWImage_1) == 0x0006D0, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::HWImage_1' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, HWImage_2) == 0x0006D8, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::HWImage_2' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, HWImage_50) == 0x0006E0, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::HWImage_50' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_CritDamage_C, FontInfo) == 0x0006E8, "Member 'UWBP_G_V1_FloatingText_CritDamage_C::FontInfo' has a wrong offset!");

}

