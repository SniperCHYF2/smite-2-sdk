#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_BuffWidget

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.BuffDataUpdated
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_BuffWidget_C_BuffDataUpdated final
{
public:
	const class UHWGameplayEffectUIBuffData*      CallFunc_GetCurrentBuffData_ReturnValue;           // 0x0000(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_BuffDataUpdated) == 0x000008, "Wrong alignment on WBP_G_V2_BuffWidget_C_BuffDataUpdated");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_BuffDataUpdated) == 0x000010, "Wrong size on WBP_G_V2_BuffWidget_C_BuffDataUpdated");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_BuffDataUpdated, CallFunc_GetCurrentBuffData_ReturnValue) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_BuffDataUpdated::CallFunc_GetCurrentBuffData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_BuffDataUpdated, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_BuffWidget_C_BuffDataUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.ExecuteUbergraph_WBP_G_V2_BuffWidget
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget) == 0x000004, "Wrong alignment on WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget) == 0x000004, "Wrong size on WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget, EntryPoint) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_ExecuteUbergraph_WBP_G_V2_BuffWidget::EntryPoint' has a wrong offset!");

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.SetBuffWidgetType
// 0x004C (0x004C - 0x0000)
struct WBP_G_V2_BuffWidget_C_SetBuffWidgetType final
{
public:
	EHWBuffWidgetType                             BuffWidgetType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWBuffWidgetType                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWBuffWidgetType                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x000C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0020(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0034(0x0014)()
	int32                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType) == 0x000004, "Wrong alignment on WBP_G_V2_BuffWidget_C_SetBuffWidgetType");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType) == 0x00004C, "Wrong size on WBP_G_V2_BuffWidget_C_SetBuffWidgetType");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, BuffWidgetType) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::BuffWidgetType' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, Temp_int_Variable) == 0x000004, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, Temp_int_Variable_1) == 0x000008, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, K2Node_MakeStruct_SlateColor) == 0x00000C, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, K2Node_MakeStruct_SlateColor_1) == 0x000020, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, K2Node_Select_Default) == 0x000034, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_SetBuffWidgetType, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_G_V2_BuffWidget_C_SetBuffWidgetType::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.UpdateCountdown
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_BuffWidget_C_UpdateCountdown final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRemaining_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_Timer_Duration_Display_OutText;    // 0x0018(0x0018)()
	float                                         CallFunc_GetTimeRemaining_ReturnValue_1;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_UpdateCountdown) == 0x000008, "Wrong alignment on WBP_G_V2_BuffWidget_C_UpdateCountdown");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_UpdateCountdown) == 0x000048, "Wrong size on WBP_G_V2_BuffWidget_C_UpdateCountdown");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, Temp_bool_Variable) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000008, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_GetTimeRemaining_ReturnValue) == 0x000010, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_GetTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_Format_Timer_Duration_Display_OutText) == 0x000018, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_Format_Timer_Duration_Display_OutText' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_GetTimeRemaining_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_GetTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000034, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, K2Node_Select_Default) == 0x000035, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast) == 0x000038, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateCountdown, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_G_V2_BuffWidget_C_UpdateCountdown::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.UpdateStackCount
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_BuffWidget_C_UpdateStackCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_UpdateStackCount) == 0x000008, "Wrong alignment on WBP_G_V2_BuffWidget_C_UpdateStackCount");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_UpdateStackCount) == 0x000028, "Wrong size on WBP_G_V2_BuffWidget_C_UpdateStackCount");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, Temp_bool_Variable) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_UpdateStackCount, K2Node_Select_Default) == 0x000021, "Member 'WBP_G_V2_BuffWidget_C_UpdateStackCount::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_BuffWidget.WBP_G_V2_BuffWidget_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_BuffWidget_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

