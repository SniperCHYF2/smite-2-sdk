#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RandomStrafe

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_RandomStrafe.BTT_RandomStrafe_C.ExecuteUbergraph_BTT_RandomStrafe
// 0x0160 (0x0160 - 0x0000)
struct BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe) == 0x000008, "Wrong alignment on BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe");
static_assert(sizeof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe) == 0x000160, "Wrong size on BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, EntryPoint) == 0x000000, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomBool_ReturnValue) == 0x000004, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_GetControlRotation_ReturnValue) == 0x000030, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_GetRightVector_ReturnValue) == 0x000068, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomBool_ReturnValue_1) == 0x000098, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomFloat_ReturnValue) == 0x0000A8, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000B0, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_BooleanOR_ReturnValue) == 0x0000C9, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_SelectVector_ReturnValue) == 0x0000D0, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Normal_ReturnValue) == 0x0000E8, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000100, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000118, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_Add_VectorVector_ReturnValue) == 0x000130, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_MoveToLocation_ReturnValue) == 0x000148, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_MoveToLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000149, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x000150, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x000158, "Member 'BTT_RandomStrafe_C_ExecuteUbergraph_BTT_RandomStrafe::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");

// Function BTT_RandomStrafe.BTT_RandomStrafe_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_RandomStrafe_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomStrafe_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_RandomStrafe_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_RandomStrafe_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_RandomStrafe_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_RandomStrafe_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_RandomStrafe_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomStrafe_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_RandomStrafe_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

