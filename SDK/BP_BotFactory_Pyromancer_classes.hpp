#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory_Pyromancer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_BotFactory_Random_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BotFactory_Pyromancer.BP_BotFactory_Pyromancer_C
// 0x0040 (0x0A08 - 0x09C8)
class ABP_BotFactory_Pyromancer_C final : public ABP_BotFactory_Random_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BotFactory_Pyromancer_C;         // 0x09C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           Spawn_Table_Tag;                                   // 0x09D0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPyromancerActive;                                // 0x09D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              PyromancerActivated;                               // 0x09E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          PyroWaitingForFactoryEmpty;                        // 0x09F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              PyromancerWaiting;                                 // 0x09F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_BotFactory_Pyromancer(int32 EntryPoint);
	void OnFactoryEmptied(class AActor* Causer);
	void OnRep_IsPyromancerActive();
	void OnRep_PyroWaitingForFactoryEmpty();
	void OnSpawnedBot(class AHWCharacter_Base* characterSpawned);
	void SwapToPyromancer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BotFactory_Pyromancer_C">();
	}
	static class ABP_BotFactory_Pyromancer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BotFactory_Pyromancer_C>();
	}
};
static_assert(alignof(ABP_BotFactory_Pyromancer_C) == 0x000008, "Wrong alignment on ABP_BotFactory_Pyromancer_C");
static_assert(sizeof(ABP_BotFactory_Pyromancer_C) == 0x000A08, "Wrong size on ABP_BotFactory_Pyromancer_C");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, UberGraphFrame_BP_BotFactory_Pyromancer_C) == 0x0009C8, "Member 'ABP_BotFactory_Pyromancer_C::UberGraphFrame_BP_BotFactory_Pyromancer_C' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, Spawn_Table_Tag) == 0x0009D0, "Member 'ABP_BotFactory_Pyromancer_C::Spawn_Table_Tag' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, IsPyromancerActive) == 0x0009D8, "Member 'ABP_BotFactory_Pyromancer_C::IsPyromancerActive' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, PyromancerActivated) == 0x0009E0, "Member 'ABP_BotFactory_Pyromancer_C::PyromancerActivated' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, PyroWaitingForFactoryEmpty) == 0x0009F0, "Member 'ABP_BotFactory_Pyromancer_C::PyroWaitingForFactoryEmpty' has a wrong offset!");
static_assert(offsetof(ABP_BotFactory_Pyromancer_C, PyromancerWaiting) == 0x0009F8, "Member 'ABP_BotFactory_Pyromancer_C::PyromancerWaiting' has a wrong offset!");

}

