#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnDirector

#include "Basic.hpp"

#include "BP_SpawnDirector_classes.hpp"
#include "BP_SpawnDirector_parameters.hpp"


namespace SDK
{

// Function BP_SpawnDirector.BP_SpawnDirector_C.BeginSpawning
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::BeginSpawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "BeginSpawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.EnableSpawnDirectorAndBeginSpawning
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::EnableSpawnDirectorAndBeginSpawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "EnableSpawnDirectorAndBeginSpawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.ExecuteUbergraph_BP_SpawnDirector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::ExecuteUbergraph_BP_SpawnDirector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "ExecuteUbergraph_BP_SpawnDirector");

	Params::BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.FilterOutNagaTeamSpawns
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>>*FilteredSpawns                                         (Parm, OutParm)

void ABP_SpawnDirector_C::FilterOutNagaTeamSpawns(TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>>* FilteredSpawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "FilterOutNagaTeamSpawns");

	Params::BP_SpawnDirector_C_FilterOutNagaTeamSpawns Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FilteredSpawns != nullptr)
		*FilteredSpawns = std::move(Parms.FilteredSpawns);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.ForceSpawnWave
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::ForceSpawnWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "ForceSpawnWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.GatherAllFactories
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::GatherAllFactories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "GatherAllFactories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.GatherFactories
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoPopulate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              FactoryTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<TSoftObjectPtr<class ABP_BotFactory_C>>&ManuallySelectedBotFactories                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AHWBotFactory*>&           OutFactoryArray                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_SpawnDirector_C::GatherFactories(bool AutoPopulate, const struct FGameplayTag& FactoryTag, TArray<TSoftObjectPtr<class ABP_BotFactory_C>>& ManuallySelectedBotFactories, TArray<class AHWBotFactory*>& OutFactoryArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "GatherFactories");

	Params::BP_SpawnDirector_C_GatherFactories Parms{};

	Parms.AutoPopulate = AutoPopulate;
	Parms.FactoryTag = std::move(FactoryTag);
	Parms.ManuallySelectedBotFactories = std::move(ManuallySelectedBotFactories);
	Parms.OutFactoryArray = std::move(OutFactoryArray);

	UObject::ProcessEvent(Func, &Parms);

	ManuallySelectedBotFactories = std::move(Parms.ManuallySelectedBotFactories);
	OutFactoryArray = std::move(Parms.OutFactoryArray);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.GetMatchPhase
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag*                    CurrentPhaseTag                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::GetMatchPhase(struct FGameplayTag* CurrentPhaseTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "GetMatchPhase");

	Params::BP_SpawnDirector_C_GetMatchPhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentPhaseTag != nullptr)
		*CurrentPhaseTag = std::move(Parms.CurrentPhaseTag);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.GetMatchTime
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  MatchTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::GetMatchTime(float* MatchTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "GetMatchTime");

	Params::BP_SpawnDirector_C_GetMatchTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MatchTime != nullptr)
		*MatchTime = Parms.MatchTime;
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.GetWaveDifficulty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EFactoryDifficulty*                     Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::GetWaveDifficulty(EFactoryDifficulty* Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "GetWaveDifficulty");

	Params::BP_SpawnDirector_C_GetWaveDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.InitializeMinionFactories
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::InitializeMinionFactories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "InitializeMinionFactories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.KillAllWaves
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::KillAllWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "KillAllWaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.NagaFactoryEmpty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWBotFactory*                    BotFactory                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::NagaFactoryEmpty(class AHWBotFactory* BotFactory, class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "NagaFactoryEmpty");

	Params::BP_SpawnDirector_C_NagaFactoryEmpty Parms{};

	Parms.BotFactory = BotFactory;
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.OnMatchPhaseStarted
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewPhase                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::OnMatchPhaseStarted(const struct FGameplayTag& NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "OnMatchPhaseStarted");

	Params::BP_SpawnDirector_C_OnMatchPhaseStarted Parms{};

	Parms.NewPhase = std::move(NewPhase);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpawnDirector_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.ResetWaveVariables
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::ResetWaveVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "ResetWaveVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SetSpawnTableForFactories
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SpawnTableTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::SetSpawnTableForFactories(const struct FGameplayTag& SpawnTableTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SetSpawnTableForFactories");

	Params::BP_SpawnDirector_C_SetSpawnTableForFactories Parms{};

	Parms.SpawnTableTag = std::move(SpawnTableTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnCyclingWave
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::SpawnCyclingWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SpawnCyclingWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnFireGiant
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::SpawnFireGiant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SpawnFireGiant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnPause
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::SpawnPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SpawnPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnResume
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::SpawnResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SpawnResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnWave
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::SpawnWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "SpawnWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartFireGiantTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StartFireGiantTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartFireGiantTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartJungleCamps
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::StartJungleCamps(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartJungleCamps");

	Params::BP_SpawnDirector_C_StartJungleCamps Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartJungleCampsLeveling
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::StartJungleCampsLeveling(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartJungleCampsLeveling");

	Params::BP_SpawnDirector_C_StartJungleCampsLeveling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartNagaCamps
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StartNagaCamps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartNagaCamps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartNagaTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StartNagaTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartNagaTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartPyromancerTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StartPyromancerTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartPyromancerTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StartSpawnTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StartSpawnTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StartSpawnTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.StopSpawning
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::StopSpawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "StopSpawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.Swap To Pyromancer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::Swap_To_Pyromancer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "Swap To Pyromancer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.Timestamp
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          RealClockTime                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_SpawnDirector_C::Timestamp(class FString* RealClockTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "Timestamp");

	Params::BP_SpawnDirector_C_Timestamp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RealClockTime != nullptr)
		*RealClockTime = std::move(Parms.RealClockTime);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.TriggerSpawn
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::TriggerSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "TriggerSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnDirector.BP_SpawnDirector_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpawnDirector_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnDirector_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

