#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBP_SentryWard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DBP_SentryWard.DBP_SentryWard_C
// 0x0058 (0x0608 - 0x05B0)
class ADBP_SentryWard_C final : public AHWDeployable_Ward
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class UHWAbilitySystemComponent*, struct FActiveGameplayEffectHandle> WardEffectMap;        // 0x05B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_DBP_SentryWard(int32 EntryPoint);
	void IsWardValidTargetForAdd(class AHWDeployable_Ward* WardDeployable, bool* IsValidTarget);
	void IsWardValidTargetForRemove(class AHWDeployable_Ward* WardDeployable, bool* IsValidTarget);
	void OnVisionRangeBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult);
	void OnVisionRangeEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();
	void ReceiveDamageAsPip(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void WardDied(const struct FDamageEventData& DeathEventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBP_SentryWard_C">();
	}
	static class ADBP_SentryWard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADBP_SentryWard_C>();
	}
};
static_assert(alignof(ADBP_SentryWard_C) == 0x000008, "Wrong alignment on ADBP_SentryWard_C");
static_assert(sizeof(ADBP_SentryWard_C) == 0x000608, "Wrong size on ADBP_SentryWard_C");
static_assert(offsetof(ADBP_SentryWard_C, UberGraphFrame) == 0x0005B0, "Member 'ADBP_SentryWard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADBP_SentryWard_C, WardEffectMap) == 0x0005B8, "Member 'ADBP_SentryWard_C::WardEffectMap' has a wrong offset!");

}

