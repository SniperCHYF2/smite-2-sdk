#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_FloatingText_CritDamage

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_FloatingText_CritDamage.WBP_G_V1_FloatingText_CritDamage_C.AnimateNumber
// 0x0100 (0x0100 - 0x0000)
struct WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 OwnerActor;                                        // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFloatingNumberAsText_OutText;          // 0x00E8(0x0018)()
};
static_assert(alignof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber");
static_assert(sizeof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber) == 0x000100, "Wrong size on WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber, Number) == 0x000000, "Member 'WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber::Number' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber, Parameters) == 0x000008, "Member 'WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber::Parameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber, OwnerActor) == 0x0000E0, "Member 'WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber::OwnerActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber, CallFunc_GetFloatingNumberAsText_OutText) == 0x0000E8, "Member 'WBP_G_V1_FloatingText_CritDamage_C_AnimateNumber::CallFunc_GetFloatingNumberAsText_OutText' has a wrong offset!");

// Function WBP_G_V1_FloatingText_CritDamage.WBP_G_V1_FloatingText_CritDamage_C.ApplyFontSize
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize");
static_assert(sizeof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize) == 0x000028, "Wrong size on WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize, Size) == 0x000000, "Member 'WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize, CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast) == 0x000020, "Member 'WBP_G_V1_FloatingText_CritDamage_C_ApplyFontSize::CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_FloatingText_CritDamage.WBP_G_V1_FloatingText_CritDamage_C.GetDamageTypeIcon
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon final
{
public:
	struct FGameplayCueParameters                 CueParameters;                                     // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UTexture2D*                             Texture;                                           // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00E8(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0110(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0130(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BreakGameplayCueParameters_GameplayStackCount; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x01BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon");
static_assert(sizeof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon) == 0x0001C8, "Wrong size on WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CueParameters) == 0x000000, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CueParameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, Texture) == 0x0000D8, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::Texture' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000E0, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000E4, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000E8, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000100, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000108, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000110, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000130, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_Location) == 0x000150, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_Normal) == 0x000168, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000180, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000188, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000190, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000198, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0001A0, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0001A4, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_GameplayStackCount) == 0x0001A8, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_GameplayStackCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0001B0, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0001B8, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x0001BC, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001C4, "Member 'WBP_G_V1_FloatingText_CritDamage_C_GetDamageTypeIcon::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WBP_G_V1_FloatingText_CritDamage.WBP_G_V1_FloatingText_CritDamage_C.OnShown
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_FloatingText_CritDamage_C_OnShown final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_CritDamage_C_OnShown) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_CritDamage_C_OnShown");
static_assert(sizeof(WBP_G_V1_FloatingText_CritDamage_C_OnShown) == 0x000010, "Wrong size on WBP_G_V1_FloatingText_CritDamage_C_OnShown");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_OnShown, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V1_FloatingText_CritDamage_C_OnShown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_CritDamage_C_OnShown, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_G_V1_FloatingText_CritDamage_C_OnShown::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");

}

