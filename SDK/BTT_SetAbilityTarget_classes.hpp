#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SetAbilityTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_SetAbilityTarget.BTT_SetAbilityTarget_C
// 0x0080 (0x0128 - 0x00A8)
class UBTT_SetAbilityTarget_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 Source_Target;                                     // 0x00B0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 Result_Key;                                        // 0x00D8(0x0028)(Edit, BlueprintVisible)
	double                                        Offset;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TargetGround;                                      // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDebug;                                         // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_SetAbilityTarget(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_SetAbilityTarget_C">();
	}
	static class UBTT_SetAbilityTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_SetAbilityTarget_C>();
	}
};
static_assert(alignof(UBTT_SetAbilityTarget_C) == 0x000008, "Wrong alignment on UBTT_SetAbilityTarget_C");
static_assert(sizeof(UBTT_SetAbilityTarget_C) == 0x000128, "Wrong size on UBTT_SetAbilityTarget_C");
static_assert(offsetof(UBTT_SetAbilityTarget_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_SetAbilityTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, Source_Target) == 0x0000B0, "Member 'UBTT_SetAbilityTarget_C::Source_Target' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, Result_Key) == 0x0000D8, "Member 'UBTT_SetAbilityTarget_C::Result_Key' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, Offset) == 0x000100, "Member 'UBTT_SetAbilityTarget_C::Offset' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, TargetLocation) == 0x000108, "Member 'UBTT_SetAbilityTarget_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, TargetGround) == 0x000120, "Member 'UBTT_SetAbilityTarget_C::TargetGround' has a wrong offset!");
static_assert(offsetof(UBTT_SetAbilityTarget_C, ShowDebug) == 0x000121, "Member 'UBTT_SetAbilityTarget_C::ShowDebug' has a wrong offset!");

}

