#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_BuildsList

#include "Basic.hpp"

#include "WBP_S_GodBuilder_BuildsList_classes.hpp"
#include "WBP_S_GodBuilder_BuildsList_parameters.hpp"


namespace SDK
{

// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_S_GodBuilder_BuildsList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.ExecuteUbergraph_WBP_S_GodBuilder_BuildsList
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_GodBuilder_BuildsList_C::ExecuteUbergraph_WBP_S_GodBuilder_BuildsList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "ExecuteUbergraph_WBP_S_GodBuilder_BuildsList");

	Params::WBP_S_GodBuilder_BuildsList_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildsList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.InitDesignLayout
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_GodBuilder_BuildsList_C::InitDesignLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "InitDesignLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_GodBuilder_BuildsList_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "PreConstruct");

	Params::WBP_S_GodBuilder_BuildsList_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.UpdateListDisplay
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHWBuildsListDisplayType                BuildsType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_GodBuilder_BuildsList_C::UpdateListDisplay(EHWBuildsListDisplayType BuildsType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "UpdateListDisplay");

	Params::WBP_S_GodBuilder_BuildsList_C_UpdateListDisplay Parms{};

	Parms.BuildsType = BuildsType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_GodBuilder_BuildsList.WBP_S_GodBuilder_BuildsList_C.BP_GetDesiredFocusTarget
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_S_GodBuilder_BuildsList_C::BP_GetDesiredFocusTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_GodBuilder_BuildsList_C", "BP_GetDesiredFocusTarget");

	Params::WBP_S_GodBuilder_BuildsList_C_BP_GetDesiredFocusTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

