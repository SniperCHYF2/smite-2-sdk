#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_DivisionDisplay

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_C_DivisionDisplay.WBP_C_DivisionDisplay_C
// 0x0070 (0x0668 - 0x05F8)
class UWBP_C_DivisionDisplay_C final : public UHWWidget
{
public:
	class UHWImage*                               DivisionImage;                                     // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           DivisionText;                                      // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_111;                                       // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_250;                                       // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           SRText;                                            // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FHWSkillRatingDivision                 DivisionData;                                      // 0x0620(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void PopulateDivision(const struct FHWSkillRatingDivision& Division);
	void GetDivisionData(struct FHWSkillRatingDivision* DivisionData_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_C_DivisionDisplay_C">();
	}
	static class UWBP_C_DivisionDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_C_DivisionDisplay_C>();
	}
};
static_assert(alignof(UWBP_C_DivisionDisplay_C) == 0x000008, "Wrong alignment on UWBP_C_DivisionDisplay_C");
static_assert(sizeof(UWBP_C_DivisionDisplay_C) == 0x000668, "Wrong size on UWBP_C_DivisionDisplay_C");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, DivisionImage) == 0x0005F8, "Member 'UWBP_C_DivisionDisplay_C::DivisionImage' has a wrong offset!");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, DivisionText) == 0x000600, "Member 'UWBP_C_DivisionDisplay_C::DivisionText' has a wrong offset!");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, HWImage_111) == 0x000608, "Member 'UWBP_C_DivisionDisplay_C::HWImage_111' has a wrong offset!");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, HWImage_250) == 0x000610, "Member 'UWBP_C_DivisionDisplay_C::HWImage_250' has a wrong offset!");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, SRText) == 0x000618, "Member 'UWBP_C_DivisionDisplay_C::SRText' has a wrong offset!");
static_assert(offsetof(UWBP_C_DivisionDisplay_C, DivisionData) == 0x000620, "Member 'UWBP_C_DivisionDisplay_C::DivisionData' has a wrong offset!");

}

