#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_PlayVoice

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_PlayVoice.GC_PlayVoice_C.AttemptPlayVoice
// 0x0058 (0x0058 - 0x0000)
struct GC_PlayVoice_C_AttemptPlayVoice final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWVoiceComponent*                      CallFunc_GetVoiceComponent_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWVoiceComponent*                      CallFunc_GetVoiceComponent_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayVoice_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FHWVoiceOverQueue& VoiceEvent)> K2Node_CreateDelegate_OutputDelegate; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHWVoiceOverQueue                      K2Node_MakeStruct_HWVoiceOverQueue;                // 0x0030(0x0028)(NoDestructor)
};
static_assert(alignof(GC_PlayVoice_C_AttemptPlayVoice) == 0x000008, "Wrong alignment on GC_PlayVoice_C_AttemptPlayVoice");
static_assert(sizeof(GC_PlayVoice_C_AttemptPlayVoice) == 0x000058, "Wrong size on GC_PlayVoice_C_AttemptPlayVoice");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GC_PlayVoice_C_AttemptPlayVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, CallFunc_GetVoiceComponent_ReturnValue) == 0x000008, "Member 'GC_PlayVoice_C_AttemptPlayVoice::CallFunc_GetVoiceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, CallFunc_GetVoiceComponent_ReturnValue_1) == 0x000010, "Member 'GC_PlayVoice_C_AttemptPlayVoice::CallFunc_GetVoiceComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, CallFunc_CanPlayVoice_ReturnValue) == 0x000018, "Member 'GC_PlayVoice_C_AttemptPlayVoice::CallFunc_CanPlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'GC_PlayVoice_C_AttemptPlayVoice::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_AttemptPlayVoice, K2Node_MakeStruct_HWVoiceOverQueue) == 0x000030, "Member 'GC_PlayVoice_C_AttemptPlayVoice::K2Node_MakeStruct_HWVoiceOverQueue' has a wrong offset!");

// Function GC_PlayVoice.GC_PlayVoice_C.OnActiveVoiceEventChanged
// 0x0028 (0x0028 - 0x0000)
struct GC_PlayVoice_C_OnActiveVoiceEventChanged final
{
public:
	struct FHWVoiceOverQueue                      VoiceEvent;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(GC_PlayVoice_C_OnActiveVoiceEventChanged) == 0x000008, "Wrong alignment on GC_PlayVoice_C_OnActiveVoiceEventChanged");
static_assert(sizeof(GC_PlayVoice_C_OnActiveVoiceEventChanged) == 0x000028, "Wrong size on GC_PlayVoice_C_OnActiveVoiceEventChanged");
static_assert(offsetof(GC_PlayVoice_C_OnActiveVoiceEventChanged, VoiceEvent) == 0x000000, "Member 'GC_PlayVoice_C_OnActiveVoiceEventChanged::VoiceEvent' has a wrong offset!");

// Function GC_PlayVoice.GC_PlayVoice_C.OnExecute
// 0x01D8 (0x01D8 - 0x0000)
struct GC_PlayVoice_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00F0(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0118(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0138(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BreakGameplayCueParameters_GameplayStackCount; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Smite_God*                 K2Node_DynamicCast_AsHWCharacter_Smite_God;        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayVoice_ShouldPlay;               // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_PlayVoice_C_OnExecute) == 0x000008, "Wrong alignment on GC_PlayVoice_C_OnExecute");
static_assert(sizeof(GC_PlayVoice_C_OnExecute) == 0x0001D8, "Wrong size on GC_PlayVoice_C_OnExecute");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_PlayVoice_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, Parameters) == 0x000008, "Member 'GC_PlayVoice_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, ReturnValue) == 0x0000E0, "Member 'GC_PlayVoice_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000E4, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000E8, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000F0, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000108, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000110, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000118, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000138, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_Location) == 0x000158, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_Normal) == 0x000170, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000188, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000190, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000198, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0001A0, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0001A8, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0001AC, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_GameplayStackCount) == 0x0001B0, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_GameplayStackCount' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0001B8, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0001C0, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_IsGameplayTagValid_ReturnValue) == 0x0001C1, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, K2Node_DynamicCast_AsHWCharacter_Smite_God) == 0x0001C8, "Member 'GC_PlayVoice_C_OnExecute::K2Node_DynamicCast_AsHWCharacter_Smite_God' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'GC_PlayVoice_C_OnExecute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_ShouldPlayVoice_ShouldPlay) == 0x0001D1, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_ShouldPlayVoice_ShouldPlay' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_OnExecute, CallFunc_BooleanAND_ReturnValue) == 0x0001D2, "Member 'GC_PlayVoice_C_OnExecute::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GC_PlayVoice.GC_PlayVoice_C.ParseTags
// 0x0048 (0x0048 - 0x0000)
struct GC_PlayVoice_C_ParseTags final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue_1;        // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue_2;        // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue_3;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetFirstMatchingTag_ReturnValue_4;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_PlayVoice_C_ParseTags) == 0x000008, "Wrong alignment on GC_PlayVoice_C_ParseTags");
static_assert(sizeof(GC_PlayVoice_C_ParseTags) == 0x000048, "Wrong size on GC_PlayVoice_C_ParseTags");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, TagContainer) == 0x000000, "Member 'GC_PlayVoice_C_ParseTags::TagContainer' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, CallFunc_GetFirstMatchingTag_ReturnValue) == 0x000020, "Member 'GC_PlayVoice_C_ParseTags::CallFunc_GetFirstMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, CallFunc_GetFirstMatchingTag_ReturnValue_1) == 0x000028, "Member 'GC_PlayVoice_C_ParseTags::CallFunc_GetFirstMatchingTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, CallFunc_GetFirstMatchingTag_ReturnValue_2) == 0x000030, "Member 'GC_PlayVoice_C_ParseTags::CallFunc_GetFirstMatchingTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, CallFunc_GetFirstMatchingTag_ReturnValue_3) == 0x000038, "Member 'GC_PlayVoice_C_ParseTags::CallFunc_GetFirstMatchingTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ParseTags, CallFunc_GetFirstMatchingTag_ReturnValue_4) == 0x000040, "Member 'GC_PlayVoice_C_ParseTags::CallFunc_GetFirstMatchingTag_ReturnValue_4' has a wrong offset!");

// Function GC_PlayVoice.GC_PlayVoice_C.ShouldPlayVoice
// 0x0010 (0x0010 - 0x0000)
struct GC_PlayVoice_C_ShouldPlayVoice final
{
public:
	struct FGameplayTag                           AudienceTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlay;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_PlayVoice_C_ShouldPlayVoice) == 0x000004, "Wrong alignment on GC_PlayVoice_C_ShouldPlayVoice");
static_assert(sizeof(GC_PlayVoice_C_ShouldPlayVoice) == 0x000010, "Wrong size on GC_PlayVoice_C_ShouldPlayVoice");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, AudienceTag) == 0x000000, "Member 'GC_PlayVoice_C_ShouldPlayVoice::AudienceTag' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, ShouldPlay) == 0x000008, "Member 'GC_PlayVoice_C_ShouldPlayVoice::ShouldPlay' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'GC_PlayVoice_C_ShouldPlayVoice::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'GC_PlayVoice_C_ShouldPlayVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, CallFunc_IsLocallyViewed_ReturnValue) == 0x00000B, "Member 'GC_PlayVoice_C_ShouldPlayVoice::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00000C, "Member 'GC_PlayVoice_C_ShouldPlayVoice::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_PlayVoice_C_ShouldPlayVoice, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'GC_PlayVoice_C_ShouldPlayVoice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

