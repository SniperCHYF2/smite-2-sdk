#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_FloatingText_Mana

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_FloatingText_Mana.WBP_G_V1_FloatingText_Mana_C.AnimateNumber
// 0x0108 (0x0108 - 0x0000)
struct WBP_G_V1_FloatingText_Mana_C_AnimateNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 OwnerActor;                                        // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Mana_C_AnimateNumber");
static_assert(sizeof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber) == 0x000108, "Wrong size on WBP_G_V1_FloatingText_Mana_C_AnimateNumber");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber, Number) == 0x000000, "Member 'WBP_G_V1_FloatingText_Mana_C_AnimateNumber::Number' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber, Parameters) == 0x000008, "Member 'WBP_G_V1_FloatingText_Mana_C_AnimateNumber::Parameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber, OwnerActor) == 0x0000E0, "Member 'WBP_G_V1_FloatingText_Mana_C_AnimateNumber::OwnerActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber, CallFunc_Abs_Int_ReturnValue) == 0x0000E8, "Member 'WBP_G_V1_FloatingText_Mana_C_AnimateNumber::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_AnimateNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'WBP_G_V1_FloatingText_Mana_C_AnimateNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Mana.WBP_G_V1_FloatingText_Mana_C.ApplyFontSize
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_FloatingText_Mana_C_ApplyFontSize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Size_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_Mana_C_ApplyFontSize) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Mana_C_ApplyFontSize");
static_assert(sizeof(WBP_G_V1_FloatingText_Mana_C_ApplyFontSize) == 0x000018, "Wrong size on WBP_G_V1_FloatingText_Mana_C_ApplyFontSize");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_ApplyFontSize, Size) == 0x000000, "Member 'WBP_G_V1_FloatingText_Mana_C_ApplyFontSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_ApplyFontSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_G_V1_FloatingText_Mana_C_ApplyFontSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_ApplyFontSize, K2Node_SetFieldsInStruct_Size_ImplicitCast) == 0x000010, "Member 'WBP_G_V1_FloatingText_Mana_C_ApplyFontSize::K2Node_SetFieldsInStruct_Size_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Mana.WBP_G_V1_FloatingText_Mana_C.ExecuteUbergraph_WBP_G_V1_FloatingText_Mana
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana) == 0x000004, "Wrong alignment on WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana");
static_assert(sizeof(WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana) == 0x000004, "Wrong size on WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana, EntryPoint) == 0x000000, "Member 'WBP_G_V1_FloatingText_Mana_C_ExecuteUbergraph_WBP_G_V1_FloatingText_Mana::EntryPoint' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Mana.WBP_G_V1_FloatingText_Mana_C.OnShown
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V1_FloatingText_Mana_C_OnShown final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Random_OutItem;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_Mana_C_OnShown) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Mana_C_OnShown");
static_assert(sizeof(WBP_G_V1_FloatingText_Mana_C_OnShown) == 0x000030, "Wrong size on WBP_G_V1_FloatingText_Mana_C_OnShown");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_OnShown, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V1_FloatingText_Mana_C_OnShown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_OnShown, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_G_V1_FloatingText_Mana_C_OnShown::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_OnShown, CallFunc_GetEndTime_ReturnValue) == 0x000018, "Member 'WBP_G_V1_FloatingText_Mana_C_OnShown::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_OnShown, CallFunc_Array_Random_OutItem) == 0x000020, "Member 'WBP_G_V1_FloatingText_Mana_C_OnShown::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Mana_C_OnShown, CallFunc_Array_Random_OutIndex) == 0x000028, "Member 'WBP_G_V1_FloatingText_Mana_C_OnShown::CallFunc_Array_Random_OutIndex' has a wrong offset!");

}

