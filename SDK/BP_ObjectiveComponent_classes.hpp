#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ObjectiveComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "S_ObjectivePhase_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ObjectiveComponent.BP_ObjectiveComponent_C
// 0x0050 (0x00F0 - 0x00A0)
class UBP_ObjectiveComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FS_ObjectivePhase>              ObjectivePhases;                                   // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentPhaseIndex;                                 // 0x00B8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PhaseTimer;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StartingPhase;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FGameplayTag& PrevPhase, const struct FGameplayTag& NextPhase)> OnObjectivePhaseEnded; // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FGameplayTag& CurrentPhase, double PhaseDuration)> OnObjectivePhaseStarted; // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EndPhase();
	void ExecuteUbergraph_BP_ObjectiveComponent(int32 EntryPoint);
	void GoToPhase(const struct FGameplayTag& NextPhase, double DurationOverride);
	void MulticastObjectivePhaseEnd(const struct FGameplayTag& PrevPhase, const struct FGameplayTag& NextPhase);
	void MulticastObjectivePhaseStart(const struct FGameplayTag& CurrentPhase, double PhaseDuration);
	void PauseCurrentPhase();
	void ResumeCurrentPhase();
	void StartPhase(double DurationOverride);

	void GetCurrentObjectivePhaseDuration(double* PhaseDuration) const;
	void GetCurrentObjectivePhaseElapsedTime(double* ElapsedTime) const;
	void GetCurrentObjectivePhaseRemainingTime(double* RemainingTime) const;
	void GetCurrentPhase(struct FGameplayTag* CurrentPhase) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ObjectiveComponent_C">();
	}
	static class UBP_ObjectiveComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ObjectiveComponent_C>();
	}
};
static_assert(alignof(UBP_ObjectiveComponent_C) == 0x000008, "Wrong alignment on UBP_ObjectiveComponent_C");
static_assert(sizeof(UBP_ObjectiveComponent_C) == 0x0000F0, "Wrong size on UBP_ObjectiveComponent_C");
static_assert(offsetof(UBP_ObjectiveComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_ObjectiveComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, ObjectivePhases) == 0x0000A8, "Member 'UBP_ObjectiveComponent_C::ObjectivePhases' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, CurrentPhaseIndex) == 0x0000B8, "Member 'UBP_ObjectiveComponent_C::CurrentPhaseIndex' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, PhaseTimer) == 0x0000C0, "Member 'UBP_ObjectiveComponent_C::PhaseTimer' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, StartingPhase) == 0x0000C8, "Member 'UBP_ObjectiveComponent_C::StartingPhase' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, OnObjectivePhaseEnded) == 0x0000D0, "Member 'UBP_ObjectiveComponent_C::OnObjectivePhaseEnded' has a wrong offset!");
static_assert(offsetof(UBP_ObjectiveComponent_C, OnObjectivePhaseStarted) == 0x0000E0, "Member 'UBP_ObjectiveComponent_C::OnObjectivePhaseStarted' has a wrong offset!");

}

