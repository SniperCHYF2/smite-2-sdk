#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodAbilityDisplay_Normal

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_GodAbilityDisplay_Normal.WBP_G_V2_GodAbilityDisplay_Normal_C
// 0x0110 (0x0858 - 0x0748)
class UWBP_G_V2_GodAbilityDisplay_Normal_C final : public UHWActivatableEquipmentWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0748(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ReadyToLevelInitialAnim;                           // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CooldownCompleteAnim;                              // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ReadytoLevelAnim;                                  // 0x0760(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlusButtonPressAnim;                               // 0x0768(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RefireActiveAnim;                                  // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AimingPhaseAnim;                                   // 0x0778(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWImage*                               AbilityCostUnmet;                                  // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               AbilityIcon;                                       // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               AbilityLocked;                                     // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWScaleBox*                            AimingScaler;                                      // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               CooldownDarken;                                    // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               CooldownPulse;                                     // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FireOverlay;                                       // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FlashAnimation;                                    // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FrameSheen;                                        // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWButton*                              HitArea;                                           // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_HUD_MultiPromptWidget_C*         Hotkeys;                                           // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HoverBG;                                           // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_G_V2_GodAbilityLevelBar_C*         LevelBar;                                          // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             LevelUp_Overlay;                                   // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_HUD_MultiPromptWidget_C*         LevelUpHotkeys;                                    // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             LevelUpHotkeys_Overlay;                            // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           ManaCostText;                                      // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             PinnedBuildRecommendationOverlay;                  // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               RefireOverlay;                                     // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               RefireProgressOutline;                             // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               RefireProgressOutlineBGGlow;                       // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AbilityIconMaterial;                               // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RefireProgressMaterial;                            // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RefireProgressGlowMaterial;                        // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXTooltipHover;                                   // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LevelUpInputTag;                                   // 0x0848(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXAbilityUp;                                      // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Dev_GodAbilityDisplay_Normal_Smite2_HitArea_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_Dev_GodAbilityDisplay_Normal_Smite2_HitArea_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_G_V2_GodAbilityDisplay_Normal_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodAbilityDisplay_Normal_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodAbilityDisplay_Normal_CooldownWidget_K2Node_ComponentBoundEvent_4_OnAssociatedEquipmentAmmoChanged__DelegateSignature(const int32 PreviousAmmoCount, const int32 NewAmmoCount);
	void BndEvt__WBP_G_V2_GodAbilityDisplay_Normal_CooldownWidget_K2Node_ComponentBoundEvent_5_OnEffectsUntracked__DelegateSignature();
	void BndEvt__WBP_G_V2_GodAbilityDisplay_Normal_HitArea_K2Node_ComponentBoundEvent_6_OnButtonRightClickedEvent__DelegateSignature();
	void Check_Ability_Fire(ETriggerEvent KeyTriggerEvent);
	void Check_Level_Animation();
	void CheckToDisplayHelpTipForAbility(bool Can_Activate, bool DoesNotMeetCost, const struct FGameplayTag& BlockTagReason);
	void DisplayAbilityCost(const struct FGameplayAttribute& CostAttribute, float Cost, const class FText& textFormat);
	void DisplayAbilityCostMet(bool bCostIsMet);
	void DisplayAbilityPhase_Aiming(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Fired(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Inactive(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_PreFire(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayCanLevelUp(bool bCanLevelUp);
	void DisplayEquipment(const class UHWEquipmentItem* EquipmentInfo);
	void DisplayEquipmentMaxLevel(int32 MaxLevel);
	void DisplayIconOverride(const TSoftObjectPtr<class UTexture2D>& Texture);
	void DisplayInputTag(const struct FGameplayTag& Tag);
	void DisplayRefireState(const bool bIsRefireIsActive, const class UHWEquipmentComponentSettings_Refireable* RefireSettings);
	void DisplayShowPrimaryRecommendation(bool bShouldShow);
	void EquipmentLevelUpdated();
	void ExecuteUbergraph_WBP_G_V2_GodAbilityDisplay_Normal(int32 EntryPoint);
	void InitializeWidget();
	void Level_Up_Hot_Keys_Visability_Updated(bool bHasKeysToDisplay);
	void On_Tracked_Effect_Ended(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void PlayPhaseAnimation(EHWUIAbilityFlowPhase PreviousPhase, class UWidget* PhaseWidget, class UWidgetAnimation* PhaseAnim, bool bLoopAnimation);
	void Set_Text_Alignment_and_Size(EHorizontalAlignment Horizontal_Alignment, EVerticalAlignment Vertical_Alignment, int32 FontSize, double BottomPadding);
	void StopPhaseAnimation(EHWUIAbilityFlowPhase PhaseAnimation);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UninitializeWidget();
	void UpdateGrayscale();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_GodAbilityDisplay_Normal_C">();
	}
	static class UWBP_G_V2_GodAbilityDisplay_Normal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_GodAbilityDisplay_Normal_C>();
	}
};
static_assert(alignof(UWBP_G_V2_GodAbilityDisplay_Normal_C) == 0x000008, "Wrong alignment on UWBP_G_V2_GodAbilityDisplay_Normal_C");
static_assert(sizeof(UWBP_G_V2_GodAbilityDisplay_Normal_C) == 0x000858, "Wrong size on UWBP_G_V2_GodAbilityDisplay_Normal_C");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, UberGraphFrame) == 0x000748, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, ReadyToLevelInitialAnim) == 0x000750, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::ReadyToLevelInitialAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, CooldownCompleteAnim) == 0x000758, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::CooldownCompleteAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, ReadytoLevelAnim) == 0x000760, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::ReadytoLevelAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, PlusButtonPressAnim) == 0x000768, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::PlusButtonPressAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireActiveAnim) == 0x000770, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireActiveAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AimingPhaseAnim) == 0x000778, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AimingPhaseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AbilityCostUnmet) == 0x000780, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AbilityCostUnmet' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AbilityIcon) == 0x000788, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AbilityLocked) == 0x000790, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AbilityLocked' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AimingScaler) == 0x000798, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AimingScaler' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, CooldownDarken) == 0x0007A0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::CooldownDarken' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, CooldownPulse) == 0x0007A8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::CooldownPulse' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, FireOverlay) == 0x0007B0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::FireOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, FlashAnimation) == 0x0007B8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::FlashAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, FrameSheen) == 0x0007C0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::FrameSheen' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, HitArea) == 0x0007C8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::HitArea' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, Hotkeys) == 0x0007D0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::Hotkeys' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, HoverBG) == 0x0007D8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::HoverBG' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, LevelBar) == 0x0007E0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::LevelBar' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, LevelUp_Overlay) == 0x0007E8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::LevelUp_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, LevelUpHotkeys) == 0x0007F0, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::LevelUpHotkeys' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, LevelUpHotkeys_Overlay) == 0x0007F8, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::LevelUpHotkeys_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, ManaCostText) == 0x000800, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::ManaCostText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, PinnedBuildRecommendationOverlay) == 0x000808, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::PinnedBuildRecommendationOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireOverlay) == 0x000810, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireProgressOutline) == 0x000818, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireProgressOutline' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireProgressOutlineBGGlow) == 0x000820, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireProgressOutlineBGGlow' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, AbilityIconMaterial) == 0x000828, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::AbilityIconMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireProgressMaterial) == 0x000830, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireProgressMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, RefireProgressGlowMaterial) == 0x000838, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::RefireProgressGlowMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, SFXTooltipHover) == 0x000840, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::SFXTooltipHover' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, LevelUpInputTag) == 0x000848, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::LevelUpInputTag' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodAbilityDisplay_Normal_C, SFXAbilityUp) == 0x000850, "Member 'UWBP_G_V2_GodAbilityDisplay_Normal_C::SFXAbilityUp' has a wrong offset!");

}

