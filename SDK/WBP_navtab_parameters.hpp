#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_navtab

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_navtab.WBP_navtab_C.TryCreateCalloutWidget
// 0x0060 (0x0060 - 0x0000)
struct WBP_navtab_C_TryCreateCalloutWidget final
{
public:
	bool                                          Created;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHWidget*                              K2Node_DynamicCast_AsRHWidget;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_TryCreateCalloutWidget) == 0x000008, "Wrong alignment on WBP_navtab_C_TryCreateCalloutWidget");
static_assert(sizeof(WBP_navtab_C_TryCreateCalloutWidget) == 0x000060, "Wrong size on WBP_navtab_C_TryCreateCalloutWidget");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, Created) == 0x000000, "Member 'WBP_navtab_C_TryCreateCalloutWidget::Created' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_DynamicCast_AsRHWidget) == 0x000008, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_DynamicCast_AsRHWidget' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000020, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000029, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'WBP_navtab_C_TryCreateCalloutWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_DynamicCast_AsOverlay_Slot) == 0x000050, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_DynamicCast_AsOverlay_Slot' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_TryCreateCalloutWidget, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_navtab_C_TryCreateCalloutWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.SetShowCallout
// 0x0007 (0x0007 - 0x0000)
struct WBP_navtab_C_SetShowCallout final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCreateCalloutWidget_Created;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_SetShowCallout) == 0x000001, "Wrong alignment on WBP_navtab_C_SetShowCallout");
static_assert(sizeof(WBP_navtab_C_SetShowCallout) == 0x000007, "Wrong size on WBP_navtab_C_SetShowCallout");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, Show) == 0x000000, "Member 'WBP_navtab_C_SetShowCallout::Show' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, Temp_bool_Variable) == 0x000001, "Member 'WBP_navtab_C_SetShowCallout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, Temp_byte_Variable) == 0x000002, "Member 'WBP_navtab_C_SetShowCallout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_navtab_C_SetShowCallout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, CallFunc_TryCreateCalloutWidget_Created) == 0x000004, "Member 'WBP_navtab_C_SetShowCallout::CallFunc_TryCreateCalloutWidget_Created' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_navtab_C_SetShowCallout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetShowCallout, K2Node_Select_Default) == 0x000006, "Member 'WBP_navtab_C_SetShowCallout::K2Node_Select_Default' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.SetSelected
// 0x0020 (0x0020 - 0x0000)
struct WBP_navtab_C_SetSelected final
{
public:
	bool                                          bNewSelected;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_SetSelected) == 0x000008, "Wrong alignment on WBP_navtab_C_SetSelected");
static_assert(sizeof(WBP_navtab_C_SetSelected) == 0x000020, "Wrong size on WBP_navtab_C_SetSelected");
static_assert(offsetof(WBP_navtab_C_SetSelected, bNewSelected) == 0x000000, "Member 'WBP_navtab_C_SetSelected::bNewSelected' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WBP_navtab_C_SetSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetSelected, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'WBP_navtab_C_SetSelected::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_navtab_C_SetSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetSelected, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'WBP_navtab_C_SetSelected::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetSelected, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'WBP_navtab_C_SetSelected::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.SetIsFirstTab
// 0x0001 (0x0001 - 0x0000)
struct WBP_navtab_C_SetIsFirstTab final
{
public:
	bool                                          IsFirstTab;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_SetIsFirstTab) == 0x000001, "Wrong alignment on WBP_navtab_C_SetIsFirstTab");
static_assert(sizeof(WBP_navtab_C_SetIsFirstTab) == 0x000001, "Wrong size on WBP_navtab_C_SetIsFirstTab");
static_assert(offsetof(WBP_navtab_C_SetIsFirstTab, IsFirstTab) == 0x000000, "Member 'WBP_navtab_C_SetIsFirstTab::IsFirstTab' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.SetDisabled
// 0x0038 (0x0038 - 0x0000)
struct WBP_navtab_C_SetDisabled final
{
public:
	bool                                          bNewDisabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_SetDisabled) == 0x000008, "Wrong alignment on WBP_navtab_C_SetDisabled");
static_assert(sizeof(WBP_navtab_C_SetDisabled) == 0x000038, "Wrong size on WBP_navtab_C_SetDisabled");
static_assert(offsetof(WBP_navtab_C_SetDisabled, bNewDisabled) == 0x000000, "Member 'WBP_navtab_C_SetDisabled::bNewDisabled' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_byte_Variable) == 0x000001, "Member 'WBP_navtab_C_SetDisabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_bool_Variable) == 0x000002, "Member 'WBP_navtab_C_SetDisabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_real_Variable) == 0x000008, "Member 'WBP_navtab_C_SetDisabled::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_real_Variable_1) == 0x000010, "Member 'WBP_navtab_C_SetDisabled::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_bool_Variable_1) == 0x000018, "Member 'WBP_navtab_C_SetDisabled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, K2Node_Select_Default) == 0x000020, "Member 'WBP_navtab_C_SetDisabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_navtab_C_SetDisabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_byte_Variable_2) == 0x000029, "Member 'WBP_navtab_C_SetDisabled::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_byte_Variable_3) == 0x00002A, "Member 'WBP_navtab_C_SetDisabled::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, K2Node_Select_Default_1) == 0x00002B, "Member 'WBP_navtab_C_SetDisabled::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, Temp_bool_Variable_2) == 0x00002C, "Member 'WBP_navtab_C_SetDisabled::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, K2Node_Select_Default_2) == 0x00002D, "Member 'WBP_navtab_C_SetDisabled::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_SetDisabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000030, "Member 'WBP_navtab_C_SetDisabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.SetButtonText
// 0x0018 (0x0018 - 0x0000)
struct WBP_navtab_C_SetButtonText final
{
public:
	class FText                                   ButtonText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_navtab_C_SetButtonText) == 0x000008, "Wrong alignment on WBP_navtab_C_SetButtonText");
static_assert(sizeof(WBP_navtab_C_SetButtonText) == 0x000018, "Wrong size on WBP_navtab_C_SetButtonText");
static_assert(offsetof(WBP_navtab_C_SetButtonText, ButtonText) == 0x000000, "Member 'WBP_navtab_C_SetButtonText::ButtonText' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.RefreshColoring
// 0x0028 (0x0028 - 0x0000)
struct WBP_navtab_C_RefreshColoring final
{
public:
	TDelegate<void(bool IsValid)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHBattlepass*                          CallFunc_GetActiveBattlepass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_RefreshColoring) == 0x000008, "Wrong alignment on WBP_navtab_C_RefreshColoring");
static_assert(sizeof(WBP_navtab_C_RefreshColoring) == 0x000028, "Wrong size on WBP_navtab_C_RefreshColoring");
static_assert(offsetof(WBP_navtab_C_RefreshColoring, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_navtab_C_RefreshColoring::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_RefreshColoring, CallFunc_GetActiveBattlepass_ReturnValue) == 0x000010, "Member 'WBP_navtab_C_RefreshColoring::CallFunc_GetActiveBattlepass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_RefreshColoring, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000018, "Member 'WBP_navtab_C_RefreshColoring::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_RefreshColoring, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_navtab_C_RefreshColoring::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_navtab_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_navtab_C_PreConstruct");
static_assert(sizeof(WBP_navtab_C_PreConstruct) == 0x000001, "Wrong size on WBP_navtab_C_PreConstruct");
static_assert(offsetof(WBP_navtab_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_navtab_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.OnLoginStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_navtab_C_OnLoginStateChanged final
{
public:
	ERHLoginState                                 LoginState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_OnLoginStateChanged) == 0x000001, "Wrong alignment on WBP_navtab_C_OnLoginStateChanged");
static_assert(sizeof(WBP_navtab_C_OnLoginStateChanged) == 0x000001, "Wrong size on WBP_navtab_C_OnLoginStateChanged");
static_assert(offsetof(WBP_navtab_C_OnLoginStateChanged, LoginState) == 0x000000, "Member 'WBP_navtab_C_OnLoginStateChanged::LoginState' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.OnGetBattlepassOwnership
// 0x0008 (0x0008 - 0x0000)
struct WBP_navtab_C_OnGetBattlepassOwnership final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_OnGetBattlepassOwnership) == 0x000004, "Wrong alignment on WBP_navtab_C_OnGetBattlepassOwnership");
static_assert(sizeof(WBP_navtab_C_OnGetBattlepassOwnership) == 0x000008, "Wrong size on WBP_navtab_C_OnGetBattlepassOwnership");
static_assert(offsetof(WBP_navtab_C_OnGetBattlepassOwnership, IsValid) == 0x000000, "Member 'WBP_navtab_C_OnGetBattlepassOwnership::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_OnGetBattlepassOwnership, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WBP_navtab_C_OnGetBattlepassOwnership::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_navtab.WBP_navtab_C.ExecuteUbergraph_WBP_navtab
// 0x0040 (0x0040 - 0x0000)
struct WBP_navtab_C_ExecuteUbergraph_WBP_navtab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ButtonText;                     // 0x0008(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCreateCalloutWidget_Created;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCreateCalloutWidget_Created_1;         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab) == 0x000008, "Wrong alignment on WBP_navtab_C_ExecuteUbergraph_WBP_navtab");
static_assert(sizeof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab) == 0x000040, "Wrong size on WBP_navtab_C_ExecuteUbergraph_WBP_navtab");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, EntryPoint) == 0x000000, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, K2Node_CustomEvent_ButtonText) == 0x000008, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::K2Node_CustomEvent_ButtonText' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_TryCreateCalloutWidget_Created) == 0x000029, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_TryCreateCalloutWidget_Created' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_RemoveChild_ReturnValue) == 0x00002A, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_TryCreateCalloutWidget_Created_1) == 0x00002B, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_TryCreateCalloutWidget_Created_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_BooleanOR_ReturnValue_1) == 0x000039, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_navtab_C_ExecuteUbergraph_WBP_navtab, CallFunc_TextIsEmpty_ReturnValue) == 0x00003A, "Member 'WBP_navtab_C_ExecuteUbergraph_WBP_navtab::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}

