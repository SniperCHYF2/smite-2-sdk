#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_RuneforgedHammer_Passive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Items_RuneforgedHammer_Passive.GA_Items_RuneforgedHammer_Passive_C
// 0x0068 (0x0F40 - 0x0ED8)
class UGA_Items_RuneforgedHammer_Passive_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        PercentOfDamageDealt;                              // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, struct FActiveGameplayEffectHandle> MapActorToHandle;                        // 0x0EE8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           ClearTimer;                                        // 0x0F38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnGameplayEffectAppliedToTarget(const class AActor* Target, const struct FActiveGameplayEffectHandle& ActiveHandle, const struct FGameplayTagContainer& EffectAssetTags, const struct FGameplayEffectSpecHandle& EffectSpecHandle);
	void ClearMap();
	void ExecuteUbergraph_GA_Items_RuneforgedHammer_Passive(int32 EntryPoint);
	void OnDamageReceived(const struct FDamageEventData& DamageEventData);
	void OnOwnerDealtDamage(const struct FDamageEventData& DamageEventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Items_RuneforgedHammer_Passive_C">();
	}
	static class UGA_Items_RuneforgedHammer_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Items_RuneforgedHammer_Passive_C>();
	}
};
static_assert(alignof(UGA_Items_RuneforgedHammer_Passive_C) == 0x000008, "Wrong alignment on UGA_Items_RuneforgedHammer_Passive_C");
static_assert(sizeof(UGA_Items_RuneforgedHammer_Passive_C) == 0x000F40, "Wrong size on UGA_Items_RuneforgedHammer_Passive_C");
static_assert(offsetof(UGA_Items_RuneforgedHammer_Passive_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Items_RuneforgedHammer_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Items_RuneforgedHammer_Passive_C, PercentOfDamageDealt) == 0x000EE0, "Member 'UGA_Items_RuneforgedHammer_Passive_C::PercentOfDamageDealt' has a wrong offset!");
static_assert(offsetof(UGA_Items_RuneforgedHammer_Passive_C, MapActorToHandle) == 0x000EE8, "Member 'UGA_Items_RuneforgedHammer_Passive_C::MapActorToHandle' has a wrong offset!");
static_assert(offsetof(UGA_Items_RuneforgedHammer_Passive_C, ClearTimer) == 0x000F38, "Member 'UGA_Items_RuneforgedHammer_Passive_C::ClearTimer' has a wrong offset!");

}

