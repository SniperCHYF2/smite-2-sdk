#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ComebackRewards

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ComebackRewards.GA_ComebackRewards_C
// 0x0088 (0x0DF8 - 0x0D70)
class UGA_ComebackRewards_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  BonusJungle_ValidVictimTags;                       // 0x0D78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BonusJungleXP_PercentModifierPerLevelDeficit;      // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BonusJungleGold_PercentModifierPerLevelDeficit;    // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BonusObjective_ValidVictimTags;                    // 0x0DA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         BonusObjectiveGold_Coefficient;                    // 0x0DC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BonusObjectiveGold_MaximumTeamGoldDeficit;         // 0x0DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwardBonusXP;                                     // 0x0DD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwardBonusGold;                                   // 0x0DD9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDA[0x6];                                      // 0x0DDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           GameStateInterface;                                // 0x0DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitAttributeChange*       OnLevelUpTask;                                     // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwardBonusJungleXP;                               // 0x0DF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwardBonusJungleGold;                             // 0x0DF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwardBonusObjectiveGold;                          // 0x0DF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalcBonusRewardBasedOnMGLDeficit(const class UAbilitySystemComponent* TargetASC, double MedianGodLevel, double PercentModifierPerLevelDeficit, double BaseReward, double* BonusAdditiveReward);
	void CalcTeamGoldDeficit(double* TeamGoldDeficit);
	void ExecuteUbergraph_GA_ComebackRewards(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAdjustGoldReceived(const struct FGameplayTagContainer& EffectTags, const struct FGoldXpCalcInfo& CalcInfo, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseGoldValue);
	void OnAdjustXPReceived(const struct FGameplayTagContainer& EffectTags, const struct FGoldXpCalcInfo& CalcInfo, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseXpValue);
	void OnChange_22E0F03641C264A0390A3B82DC3A9831(class UAbilitySystemComponent* OwningAbilitySystem);
	void OnOwnerLeveledUp();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ComebackRewards_C">();
	}
	static class UGA_ComebackRewards_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ComebackRewards_C>();
	}
};
static_assert(alignof(UGA_ComebackRewards_C) == 0x000008, "Wrong alignment on UGA_ComebackRewards_C");
static_assert(sizeof(UGA_ComebackRewards_C) == 0x000DF8, "Wrong size on UGA_ComebackRewards_C");
static_assert(offsetof(UGA_ComebackRewards_C, UberGraphFrame) == 0x000D70, "Member 'UGA_ComebackRewards_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusJungle_ValidVictimTags) == 0x000D78, "Member 'UGA_ComebackRewards_C::BonusJungle_ValidVictimTags' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusJungleXP_PercentModifierPerLevelDeficit) == 0x000D98, "Member 'UGA_ComebackRewards_C::BonusJungleXP_PercentModifierPerLevelDeficit' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusJungleGold_PercentModifierPerLevelDeficit) == 0x000DA0, "Member 'UGA_ComebackRewards_C::BonusJungleGold_PercentModifierPerLevelDeficit' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusObjective_ValidVictimTags) == 0x000DA8, "Member 'UGA_ComebackRewards_C::BonusObjective_ValidVictimTags' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusObjectiveGold_Coefficient) == 0x000DC8, "Member 'UGA_ComebackRewards_C::BonusObjectiveGold_Coefficient' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, BonusObjectiveGold_MaximumTeamGoldDeficit) == 0x000DD0, "Member 'UGA_ComebackRewards_C::BonusObjectiveGold_MaximumTeamGoldDeficit' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, bAwardBonusXP) == 0x000DD8, "Member 'UGA_ComebackRewards_C::bAwardBonusXP' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, bAwardBonusGold) == 0x000DD9, "Member 'UGA_ComebackRewards_C::bAwardBonusGold' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, GameStateInterface) == 0x000DE0, "Member 'UGA_ComebackRewards_C::GameStateInterface' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, OnLevelUpTask) == 0x000DE8, "Member 'UGA_ComebackRewards_C::OnLevelUpTask' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, bAwardBonusJungleXP) == 0x000DF0, "Member 'UGA_ComebackRewards_C::bAwardBonusJungleXP' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, bAwardBonusJungleGold) == 0x000DF1, "Member 'UGA_ComebackRewards_C::bAwardBonusJungleGold' has a wrong offset!");
static_assert(offsetof(UGA_ComebackRewards_C, bAwardBonusObjectiveGold) == 0x000DF2, "Member 'UGA_ComebackRewards_C::bAwardBonusObjectiveGold' has a wrong offset!");

}

