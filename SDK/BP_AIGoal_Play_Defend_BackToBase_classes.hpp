#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Play_Defend_BackToBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_Play_Defend_BackToBase.BP_AIGoal_Play_Defend_BackToBase_C
// 0x0028 (0x0110 - 0x00E8)
class UBP_AIGoal_Play_Defend_BackToBase_C final : public UHWAIGoal
{
public:
	double                                        DefendRange;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  EnemiesToIgnore;                                   // 0x00F0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	bool CheckPreconditionsBP(class AHWAIController* InController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_Play_Defend_BackToBase_C">();
	}
	static class UBP_AIGoal_Play_Defend_BackToBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_Play_Defend_BackToBase_C>();
	}
};
static_assert(alignof(UBP_AIGoal_Play_Defend_BackToBase_C) == 0x000008, "Wrong alignment on UBP_AIGoal_Play_Defend_BackToBase_C");
static_assert(sizeof(UBP_AIGoal_Play_Defend_BackToBase_C) == 0x000110, "Wrong size on UBP_AIGoal_Play_Defend_BackToBase_C");
static_assert(offsetof(UBP_AIGoal_Play_Defend_BackToBase_C, DefendRange) == 0x0000E8, "Member 'UBP_AIGoal_Play_Defend_BackToBase_C::DefendRange' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Play_Defend_BackToBase_C, EnemiesToIgnore) == 0x0000F0, "Member 'UBP_AIGoal_Play_Defend_BackToBase_C::EnemiesToIgnore' has a wrong offset!");

}

