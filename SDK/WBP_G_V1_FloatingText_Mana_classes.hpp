#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_FloatingText_Mana

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V1_FloatingText_Mana.WBP_G_V1_FloatingText_Mana_C
// 0x00A8 (0x0750 - 0x06A8)
class UWBP_G_V1_FloatingText_Mana_C final : public UHWFloatingTextScaleWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimMoveAndFade_1to1Left;                          // 0x06B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveAndFade_2to1Left;                          // 0x06B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveAndFade_3to1Left;                          // 0x06C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveAndFade_1to1Right;                         // 0x06C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveAndFade_2to1Right;                         // 0x06D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveAndFade_3to1Right;                         // 0x06D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Backdrop;                                          // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           ManaText;                                          // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         FontInfo;                                          // 0x06F0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedAnim;                                      // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimateNumber(int32 Number, const struct FGameplayCueParameters& Parameters, class AActor* OwnerActor);
	void ApplyFontSize(int32 Size);
	void ExecuteUbergraph_WBP_G_V1_FloatingText_Mana(int32 EntryPoint);
	void InitializeWidget();
	void OnShown();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V1_FloatingText_Mana_C">();
	}
	static class UWBP_G_V1_FloatingText_Mana_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V1_FloatingText_Mana_C>();
	}
};
static_assert(alignof(UWBP_G_V1_FloatingText_Mana_C) == 0x000008, "Wrong alignment on UWBP_G_V1_FloatingText_Mana_C");
static_assert(sizeof(UWBP_G_V1_FloatingText_Mana_C) == 0x000750, "Wrong size on UWBP_G_V1_FloatingText_Mana_C");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, UberGraphFrame) == 0x0006A8, "Member 'UWBP_G_V1_FloatingText_Mana_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_1to1Left) == 0x0006B0, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_1to1Left' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_2to1Left) == 0x0006B8, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_2to1Left' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_3to1Left) == 0x0006C0, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_3to1Left' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_1to1Right) == 0x0006C8, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_1to1Right' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_2to1Right) == 0x0006D0, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_2to1Right' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, AnimMoveAndFade_3to1Right) == 0x0006D8, "Member 'UWBP_G_V1_FloatingText_Mana_C::AnimMoveAndFade_3to1Right' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, Backdrop) == 0x0006E0, "Member 'UWBP_G_V1_FloatingText_Mana_C::Backdrop' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, ManaText) == 0x0006E8, "Member 'UWBP_G_V1_FloatingText_Mana_C::ManaText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, FontInfo) == 0x0006F0, "Member 'UWBP_G_V1_FloatingText_Mana_C::FontInfo' has a wrong offset!");
static_assert(offsetof(UWBP_G_V1_FloatingText_Mana_C, SelectedAnim) == 0x000748, "Member 'UWBP_G_V1_FloatingText_Mana_C::SelectedAnim' has a wrong offset!");

}

