#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GlobalEmoteItemDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_GlobalEmoteItemDisplay.WBP_S_GlobalEmoteItemDisplay_C
// 0x0068 (0x06D8 - 0x0670)
class UWBP_S_GlobalEmoteItemDisplay_C final : public UHWItemDisplayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0678(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_S_CTADisplay_C*                    CTADisplay;                                        // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URHAsyncImage*                          GlobalEmoteImage;                                  // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HoverStroke;                                       // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               IsLockedIcon;                                      // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             IsOwnedOverlay;                                    // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           ListViewNameText;                                  // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               SelectedState;                                     // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      StatusSwitcher;                                    // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USoundBase*                             SFXClick;                                          // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXHover;                                          // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowCTA;                                          // 0x06D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_HandleDisplayItemSet();
	void BP_HandleEntryButtonHovered();
	void BP_HandleEntryButtonSelected();
	void BP_HandleEntryButtonUnhovered();
	void BP_HandleSetDisplayOwnershipIcons(bool InDisplayOwnershipIcons);
	void BP_HandleSetIsEquipped(bool InIsEquipped);
	void BP_HandleSetIsInteractable(bool InIsInteractable);
	void BP_HandleSetIsSelected(bool InIsSelected);
	void ExecuteUbergraph_WBP_S_GlobalEmoteItemDisplay(int32 EntryPoint);
	void HandleEntryButtonHovered();
	void HandleEntryButtonSelected();
	void HandleEntryButtonUnhovered();
	void InitializeWidget();
	void OnDisplayItemSet();
	void SetDisplayOwnershipIcons(bool bInDisplayOwnershipIcons);
	void SetIsEquipped(bool bInIsEquipped);
	void SetIsInteractable(bool bInIsInteractable);
	void SetIsSelected(bool bInIsSelected);
	void UpdateOwnershipIcons();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_GlobalEmoteItemDisplay_C">();
	}
	static class UWBP_S_GlobalEmoteItemDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_GlobalEmoteItemDisplay_C>();
	}
};
static_assert(alignof(UWBP_S_GlobalEmoteItemDisplay_C) == 0x000008, "Wrong alignment on UWBP_S_GlobalEmoteItemDisplay_C");
static_assert(sizeof(UWBP_S_GlobalEmoteItemDisplay_C) == 0x0006D8, "Wrong size on UWBP_S_GlobalEmoteItemDisplay_C");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, UberGraphFrame) == 0x000670, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, Anim_Hover) == 0x000678, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, CTADisplay) == 0x000680, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::CTADisplay' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, GlobalEmoteImage) == 0x000688, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::GlobalEmoteImage' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, HoverStroke) == 0x000690, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::HoverStroke' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, IsLockedIcon) == 0x000698, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::IsLockedIcon' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, IsOwnedOverlay) == 0x0006A0, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::IsOwnedOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, ListViewNameText) == 0x0006A8, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::ListViewNameText' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, SelectedState) == 0x0006B0, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::SelectedState' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, StatusSwitcher) == 0x0006B8, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::StatusSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, SFXClick) == 0x0006C0, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::SFXClick' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, SFXHover) == 0x0006C8, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::SFXHover' has a wrong offset!");
static_assert(offsetof(UWBP_S_GlobalEmoteItemDisplay_C, bShowCTA) == 0x0006D0, "Member 'UWBP_S_GlobalEmoteItemDisplay_C::bShowCTA' has a wrong offset!");

}

