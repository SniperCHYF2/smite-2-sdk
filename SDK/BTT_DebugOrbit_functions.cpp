#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_DebugOrbit

#include "Basic.hpp"

#include "BTT_DebugOrbit_classes.hpp"
#include "BTT_DebugOrbit_parameters.hpp"


namespace SDK
{

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.Calculate and Cache Orbit Point
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::Calculate_and_Cache_Orbit_Point(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "Calculate and Cache Orbit Point");

	Params::BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DebugOrbit.BTT_DebugOrbit_C.EvaluateOrbit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::EvaluateOrbit(class APawn* Pawn, double DeltaTime, class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "EvaluateOrbit");

	Params::BTT_DebugOrbit_C_EvaluateOrbit Parms{};

	Parms.Pawn = Pawn;
	Parms.DeltaTime = DeltaTime;
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ExecuteUbergraph_BTT_DebugOrbit
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::ExecuteUbergraph_BTT_DebugOrbit(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "ExecuteUbergraph_BTT_DebugOrbit");

	Params::BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "ReceiveExecuteAI");

	Params::BTT_DebugOrbit_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "ReceiveTickAI");

	Params::BTT_DebugOrbit_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DebugOrbit.BTT_DebugOrbit_C.WalkInDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DebugOrbit_C::WalkInDirection(class APawn* Pawn, const struct FVector& Direction, class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DebugOrbit_C", "WalkInDirection");

	Params::BTT_DebugOrbit_C_WalkInDirection Parms{};

	Parms.Pawn = Pawn;
	Parms.Direction = std::move(Direction);
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}

}

