#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ArenaTicketTracker

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.DisplayTicketCount
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount final
{
public:
	int32                                         TicketCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount) == 0x000004, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount) == 0x000004, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount, TicketCount) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_DisplayTicketCount::TicketCount' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker
// 0x0100 (0x0100 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         K2Node_Event_GameState;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TicketCount;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWArenaSuddenDeathState                      K2Node_Event_CurrentSuddenDeathState;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_4;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker) == 0x000008, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker) == 0x000100, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, EntryPoint) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_bool_Variable) == 0x000004, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable) == 0x000008, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_bool_Variable_1) == 0x000028, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_bool_Variable_2) == 0x000029, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_bool_Variable_3) == 0x00002A, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable_2) == 0x00002C, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_bool_Variable_4) == 0x00003C, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable_4) == 0x000040, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, Temp_struct_Variable_5) == 0x000048, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Event_GameState) == 0x000050, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Event_GameState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Select_Default) == 0x000058, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Event_TicketCount) == 0x000060, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Event_TicketCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, CallFunc_SelectColor_ReturnValue) == 0x000064, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Event_CurrentSuddenDeathState) == 0x000074, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Event_CurrentSuddenDeathState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_SwitchEnum_CmpSuccess) == 0x000075, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Select_Default_1) == 0x000078, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000088, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Select_Default_2) == 0x000090, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000098, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_MakeStruct_Margin) == 0x0000A0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_MakeStruct_Margin_1) == 0x0000B0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Select_Default_3) == 0x0000C0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_MakeStruct_Margin_2) == 0x0000D0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_MakeStruct_Margin_3) == 0x0000E0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker, K2Node_Select_Default_4) == 0x0000F0, "Member 'WBP_G_V2_ArenaTicketTracker_C_ExecuteUbergraph_WBP_G_V2_ArenaTicketTracker::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.GameStateSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_GameStateSet final
{
public:
	class AGameStateBase*                         GameState_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_GameStateSet) == 0x000008, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_GameStateSet");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_GameStateSet) == 0x000008, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_GameStateSet");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GameStateSet, GameState_0) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_GameStateSet::GameState_0' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.GetGameState
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_GetGameState final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ArenaGameState_C*                   K2Node_DynamicCast_AsBP_Arena_Game_State;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_GetGameState) == 0x000008, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_GetGameState");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_GetGameState) == 0x000020, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_GetGameState");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetGameState, Return) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetGameState::Return' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetGameState, CallFunc_GetHWGameState_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetGameState::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetGameState, K2Node_DynamicCast_AsBP_Arena_Game_State) == 0x000010, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetGameState::K2Node_DynamicCast_AsBP_Arena_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetGameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.GetTicketBarColor
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor) == 0x000004, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor) == 0x000020, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor, CallFunc_SelectColor_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ArenaTicketTracker_C_GetTicketBarColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.RefreshTicketUI
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketCount;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_GetMaxTicketCount_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI) == 0x000008, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI) == 0x000048, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, Count) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::Count' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, TicketCount) == 0x000004, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::TicketCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_GetMaxTicketCount_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_GetMaxTicketCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_SafeDivide_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'WBP_G_V2_ArenaTicketTracker_C_RefreshTicketUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.SFXPlayTicketReduction
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction final
{
public:
	int32                                         Ticket_Count;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Ticket_Count;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXEnemyTicketReduction;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXAllyTicketReduction;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction) == 0x000008, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction) == 0x000028, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, Ticket_Count) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::Ticket_Count' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, Max_Ticket_Count) == 0x000004, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::Max_Ticket_Count' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, SFXEnemyTicketReduction) == 0x000008, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::SFXEnemyTicketReduction' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, SFXAllyTicketReduction) == 0x000010, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::SFXAllyTicketReduction' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ArenaTicketTracker_C_SFXPlayTicketReduction::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ArenaTicketTracker.WBP_G_V2_ArenaTicketTracker_C.SuddenDeathChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged final
{
public:
	EHWArenaSuddenDeathState                      CurrentSuddenDeathState;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged) == 0x000001, "Wrong alignment on WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged");
static_assert(sizeof(WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged) == 0x000001, "Wrong size on WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged");
static_assert(offsetof(WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged, CurrentSuddenDeathState) == 0x000000, "Member 'WBP_G_V2_ArenaTicketTracker_C_SuddenDeathChanged::CurrentSuddenDeathState' has a wrong offset!");

}

