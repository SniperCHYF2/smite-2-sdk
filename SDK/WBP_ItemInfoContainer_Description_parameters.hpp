#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemInfoContainer_Description

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.ExecuteUbergraph_WBP_ItemInfoContainer_Description
// 0x000C (0x000C - 0x0000)
struct WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description) == 0x000004, "Wrong alignment on WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description) == 0x00000C, "Wrong size on WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, EntryPoint) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, Temp_bool_Variable) == 0x000004, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, Temp_byte_Variable) == 0x000005, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description, K2Node_Select_Default) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_ExecuteUbergraph_WBP_ItemInfoContainer_Description::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.IsLootCrate
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_IsLootCrate final
{
public:
	class UPlatformInventoryItem*                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLootCrate_0;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHLootBox*                             K2Node_DynamicCast_AsRHLoot_Box;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_IsLootCrate) == 0x000008, "Wrong alignment on WBP_ItemInfoContainer_Description_C_IsLootCrate");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_IsLootCrate) == 0x000020, "Wrong size on WBP_ItemInfoContainer_Description_C_IsLootCrate");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_IsLootCrate, Item) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_IsLootCrate::Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_IsLootCrate, IsLootCrate_0) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_IsLootCrate::IsLootCrate_0' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_IsLootCrate, K2Node_DynamicCast_AsRHLoot_Box) == 0x000010, "Member 'WBP_ItemInfoContainer_Description_C_IsLootCrate::K2Node_DynamicCast_AsRHLoot_Box' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_IsLootCrate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_ItemInfoContainer_Description_C_IsLootCrate::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemInfoContainer_Description_C_PreConstruct");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemInfoContainer_Description_C_PreConstruct");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.Set Item Info
// 0x0030 (0x0030 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_Set_Item_Info final
{
public:
	class UPlatformInventoryItem*                 CosmeticItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemType_ItemType;                     // 0x0010(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootCrate_IsLootCrate;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_Set_Item_Info) == 0x000008, "Wrong alignment on WBP_ItemInfoContainer_Description_C_Set_Item_Info");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_Set_Item_Info) == 0x000030, "Wrong size on WBP_ItemInfoContainer_Description_C_Set_Item_Info");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, CosmeticItem) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::CosmeticItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, Temp_bool_Variable) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, CallFunc_GetItemType_ItemType) == 0x000010, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::CallFunc_GetItemType_ItemType' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, Temp_byte_Variable) == 0x000028, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, Temp_byte_Variable_1) == 0x000029, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, CallFunc_IsLootCrate_IsLootCrate) == 0x00002A, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::CallFunc_IsLootCrate_IsLootCrate' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_Set_Item_Info, K2Node_Select_Default) == 0x00002B, "Member 'WBP_ItemInfoContainer_Description_C_Set_Item_Info::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.SetAlignment
// 0x0468 (0x0468 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_SetAlignment final
{
public:
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_11;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_12;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_13;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_14;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_15;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_16;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_17;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_18;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_19;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_20;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_21;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_22;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Temp_struct_Variable;                              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Temp_struct_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable_23;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Temp_struct_Variable_2;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Temp_struct_Variable_3;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable_24;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_25;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_26;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_9;                            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_10;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_11;                           // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_12;                           // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_13;                           // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_27;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_14;                           // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_15;                           // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_16;                           // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_17;                           // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_18;                           // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable_28;                             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x01FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x020C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable_29;                             // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_30;                             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0230(0x0020)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0250(0x0020)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_2;                       // 0x0270(0x0020)(NoDestructor)
	struct FAnchors                               Temp_struct_Variable_19;                           // 0x0290(0x0020)(NoDestructor)
	struct FAnchors                               Temp_struct_Variable_20;                           // 0x02B0(0x0020)(NoDestructor)
	ETextJustify                                  Temp_byte_Variable_31;                             // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_32;                             // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Temp_struct_Variable_21;                           // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Temp_struct_Variable_22;                           // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_8;                        // 0x032C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_9;                        // 0x033C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_10;                       // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_11;                       // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable_33;                             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Temp_struct_Variable_23;                           // 0x037C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default;                             // 0x038C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_Select_Default_1;                           // 0x03A0(0x0020)(NoDestructor)
	EHorizontalAlignment                          K2Node_Select_Default_2;                           // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_3;                           // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_4;                           // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3[0x5];                                      // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_5;                           // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_6;                           // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_7;                           // 0x03D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_8;                           // 0x03E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_9;                           // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_10;                          // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_11;                          // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_12;                          // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Temp_struct_Variable_24;                           // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_13;                          // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_SetAlignment) == 0x000008, "Wrong alignment on WBP_ItemInfoContainer_Description_C_SetAlignment");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_SetAlignment) == 0x000468, "Wrong size on WBP_ItemInfoContainer_Description_C_SetAlignment");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_4) == 0x000004, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_5) == 0x000005, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_6) == 0x000006, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_7) == 0x000007, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_8) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_9) == 0x000009, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_10) == 0x00000A, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_11) == 0x00000B, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_12) == 0x00000C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_13) == 0x00000D, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_14) == 0x00000E, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_15) == 0x00000F, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable) == 0x000010, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_1) == 0x000018, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_2) == 0x000020, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_3) == 0x000028, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_4) == 0x000030, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_16) == 0x000038, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_17) == 0x000039, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_18) == 0x00003A, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_19) == 0x00003B, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_20) == 0x00003C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_21) == 0x00003D, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_22) == 0x00003E, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable) == 0x000040, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_1) == 0x000050, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_23) == 0x000060, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_2) == 0x000064, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_3) == 0x000074, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_24) == 0x000084, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_4) == 0x000088, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_5) == 0x000098, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_6) == 0x0000A8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_7) == 0x0000B8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_8) == 0x0000C8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_25) == 0x0000D8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_5) == 0x0000E0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_6) == 0x0000E8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_7) == 0x0000F0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_8) == 0x0000F8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_object_Variable_9) == 0x000100, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_26) == 0x000108, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_9) == 0x000110, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_10) == 0x000120, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_11) == 0x000130, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_12) == 0x000140, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_13) == 0x000150, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_27) == 0x000160, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_14) == 0x000168, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_15) == 0x000178, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_16) == 0x000188, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_17) == 0x000198, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_18) == 0x0001A8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin) == 0x0001B8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_1) == 0x0001C8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_2) == 0x0001D8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_28) == 0x0001E8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_3) == 0x0001EC, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_4) == 0x0001FC, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_5) == 0x00020C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_29) == 0x00021C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000220, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_30) == 0x000228, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Anchors) == 0x000230, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Anchors_1) == 0x000250, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Anchors_2) == 0x000270, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Anchors_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_19) == 0x000290, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_20) == 0x0002B0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_31) == 0x0002D0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0002D8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0002E0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_32) == 0x0002E8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_21) == 0x0002EC, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_22) == 0x0002FC, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_6) == 0x00030C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_7) == 0x00031C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_8) == 0x00032C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_9) == 0x00033C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000350, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_10) == 0x000358, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_MakeStruct_Margin_11) == 0x000368, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_MakeStruct_Margin_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_byte_Variable_33) == 0x000378, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_23) == 0x00037C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default) == 0x00038C, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_1) == 0x0003A0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_2) == 0x0003C0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_3) == 0x0003C1, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_4) == 0x0003C2, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_5) == 0x0003C8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_6) == 0x0003D0, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_7) == 0x0003D4, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_8) == 0x0003E4, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_9) == 0x0003F8, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_10) == 0x000408, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_11) == 0x000410, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_12) == 0x000420, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000430, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000438, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, Temp_struct_Variable_24) == 0x000440, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, K2Node_Select_Default_13) == 0x000450, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetAlignment, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000460, "Member 'WBP_ItemInfoContainer_Description_C_SetAlignment::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.SetInfoFieldData
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_SetInfoFieldData final
{
public:
	class URHStoreItem*                           StoreItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedNameDisplay_ReturnValue;      // 0x0010(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPlatformInventoryItem>  CallFunc_GetInventoryItem_ReturnValue;             // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformInventoryItem*                 K2Node_DynamicCast_AsPlatform_Inventory_Item;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDescription_ReturnValue;           // 0x0078(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData) == 0x000008, "Wrong alignment on WBP_ItemInfoContainer_Description_C_SetInfoFieldData");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData) == 0x0000A0, "Wrong size on WBP_ItemInfoContainer_Description_C_SetInfoFieldData");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, StoreItem) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::StoreItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, Quantity) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::Quantity' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, Temp_byte_Variable) == 0x00000C, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_GetFormattedNameDisplay_ReturnValue) == 0x000010, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_GetFormattedNameDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_GetInventoryItem_ReturnValue) == 0x000030, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_GetInventoryItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, Temp_byte_Variable_1) == 0x000060, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, K2Node_DynamicCast_AsPlatform_Inventory_Item) == 0x000068, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::K2Node_DynamicCast_AsPlatform_Inventory_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_GetItemDescription_ReturnValue) == 0x000078, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_GetItemDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, Temp_bool_Variable) == 0x000090, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, K2Node_Select_Default) == 0x000091, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldData, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ItemInfoContainer_Description.WBP_ItemInfoContainer_Description_C.SetInfoFieldDataFromInventoryItem
// 0x0050 (0x0050 - 0x0000)
struct WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem final
{
public:
	class UPlatformInventoryItem*                 InventoryItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0008(0x0018)()
	class FText                                   CallFunc_GetItemDescription_ReturnValue;           // 0x0020(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem) == 0x000008, "Wrong alignment on WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem");
static_assert(sizeof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem) == 0x000050, "Wrong size on WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, InventoryItem) == 0x000000, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::InventoryItem' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, CallFunc_GetItemName_ReturnValue) == 0x000008, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, CallFunc_GetItemDescription_ReturnValue) == 0x000020, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::CallFunc_GetItemDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, Temp_byte_Variable) == 0x000039, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, Temp_byte_Variable_1) == 0x000048, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, Temp_bool_Variable) == 0x000049, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem, K2Node_Select_Default) == 0x00004A, "Member 'WBP_ItemInfoContainer_Description_C_SetInfoFieldDataFromInventoryItem::K2Node_Select_Default' has a wrong offset!");

}

