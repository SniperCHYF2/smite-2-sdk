#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_HealthThreshold

#include "Basic.hpp"

#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_HealthThreshold.BTD_HealthThreshold_C
// 0x0018 (0x00B8 - 0x00A0)
class UBTD_HealthThreshold_C final : public UBTDecorator_BlueprintBase
{
public:
	double                                        HealthPercentThreshold;                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BelowThreshold;                                    // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RandomThresholdJitter;                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_HealthThreshold_C">();
	}
	static class UBTD_HealthThreshold_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_HealthThreshold_C>();
	}
};
static_assert(alignof(UBTD_HealthThreshold_C) == 0x000008, "Wrong alignment on UBTD_HealthThreshold_C");
static_assert(sizeof(UBTD_HealthThreshold_C) == 0x0000B8, "Wrong size on UBTD_HealthThreshold_C");
static_assert(offsetof(UBTD_HealthThreshold_C, HealthPercentThreshold) == 0x0000A0, "Member 'UBTD_HealthThreshold_C::HealthPercentThreshold' has a wrong offset!");
static_assert(offsetof(UBTD_HealthThreshold_C, BelowThreshold) == 0x0000A8, "Member 'UBTD_HealthThreshold_C::BelowThreshold' has a wrong offset!");
static_assert(offsetof(UBTD_HealthThreshold_C, RandomThresholdJitter) == 0x0000B0, "Member 'UBTD_HealthThreshold_C::RandomThresholdJitter' has a wrong offset!");

}

