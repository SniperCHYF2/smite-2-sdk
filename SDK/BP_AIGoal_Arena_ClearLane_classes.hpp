#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Arena_ClearLane

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AIGoal_classes.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_Arena_ClearLane.BP_AIGoal_Arena_ClearLane_C
// 0x0010 (0x0278 - 0x0268)
class UBP_AIGoal_Arena_ClearLane_C : public UBP_AIGoal_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AIGoal_Arena_ClearLane_C;        // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         CachedNumMinionThreats;                            // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float CalculateWeight(class AHWAIController* InController);
	bool CheckPreconditionsBP(class AHWAIController* InController);
	void CountEnemyMinionThreats(class AHWAIController* InController, int32* EnemyMinionCount);
	void EndGoalBP();
	void ExecuteUbergraph_BP_AIGoal_Arena_ClearLane(int32 EntryPoint);
	void IsMinionVeryNear(class AHWCharacter_Base* SourceCharacter, class AHWCharacter_Base* TargetCharacter, bool* bMinionIsVeryNear);
	void IsTargetBehindTower(class AHWCharacter_Base* SourceCharacter, const class AHWCharacter_Base* TargetCharacter, class AHWAIController* InController, bool* IsBehindTower);
	void StartGoalBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_Arena_ClearLane_C">();
	}
	static class UBP_AIGoal_Arena_ClearLane_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_Arena_ClearLane_C>();
	}
};
static_assert(alignof(UBP_AIGoal_Arena_ClearLane_C) == 0x000008, "Wrong alignment on UBP_AIGoal_Arena_ClearLane_C");
static_assert(sizeof(UBP_AIGoal_Arena_ClearLane_C) == 0x000278, "Wrong size on UBP_AIGoal_Arena_ClearLane_C");
static_assert(offsetof(UBP_AIGoal_Arena_ClearLane_C, UberGraphFrame_BP_AIGoal_Arena_ClearLane_C) == 0x000268, "Member 'UBP_AIGoal_Arena_ClearLane_C::UberGraphFrame_BP_AIGoal_Arena_ClearLane_C' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Arena_ClearLane_C, CachedNumMinionThreats) == 0x000270, "Member 'UBP_AIGoal_Arena_ClearLane_C::CachedNumMinionThreats' has a wrong offset!");

}

