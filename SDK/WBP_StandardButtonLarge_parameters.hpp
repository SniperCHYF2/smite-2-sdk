#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StandardButtonLarge

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.ExecuteUbergraph_WBP_StandardButtonLarge
// 0x0058 (0x0058 - 0x0000)
struct WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               K2Node_CustomEvent_InputState;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGamepadPromptKey_HasValidKeyPrompt;    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetGamepadPromptKey_GamepadKey;           // 0x0038(0x0018)(HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge");
static_assert(sizeof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge) == 0x000058, "Wrong size on WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, EntryPoint) == 0x000000, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, Temp_byte_Variable) == 0x000004, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_PlayAnimation_ReturnValue_2) == 0x000018, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, Temp_byte_Variable_1) == 0x000020, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, K2Node_CustomEvent_InputState) == 0x000021, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::K2Node_CustomEvent_InputState' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, Temp_bool_Variable) == 0x000023, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, K2Node_Select_Default) == 0x000034, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_GetGamepadPromptKey_HasValidKeyPrompt) == 0x000035, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_GetGamepadPromptKey_HasValidKeyPrompt' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_GetGamepadPromptKey_GamepadKey) == 0x000038, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_GetGamepadPromptKey_GamepadKey' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge, CallFunc_GetCurrentInputState_ReturnValue) == 0x000050, "Member 'WBP_StandardButtonLarge_C_ExecuteUbergraph_WBP_StandardButtonLarge::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.GetFontStyleNameByType
// 0x000C (0x000C - 0x0000)
struct WBP_StandardButtonLarge_C_GetFontStyleNameByType final
{
public:
	class FName                                   FontName;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_GetFontStyleNameByType) == 0x000004, "Wrong alignment on WBP_StandardButtonLarge_C_GetFontStyleNameByType");
static_assert(sizeof(WBP_StandardButtonLarge_C_GetFontStyleNameByType) == 0x00000C, "Wrong size on WBP_StandardButtonLarge_C_GetFontStyleNameByType");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetFontStyleNameByType, FontName) == 0x000000, "Member 'WBP_StandardButtonLarge_C_GetFontStyleNameByType::FontName' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetFontStyleNameByType, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WBP_StandardButtonLarge_C_GetFontStyleNameByType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.GetGamepadPromptKey
// 0x0070 (0x0070 - 0x0000)
struct WBP_StandardButtonLarge_C_GetGamepadPromptKey final
{
public:
	bool                                          HasValidKeyPrompt;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   GamepadKey;                                        // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FKey                                   NoneKey;                                           // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetGamepadCancelButton_ReturnValue;       // 0x0038(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetGamepadConfirmButton_ReturnValue;      // 0x0058(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_GetGamepadPromptKey) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_GetGamepadPromptKey");
static_assert(sizeof(WBP_StandardButtonLarge_C_GetGamepadPromptKey) == 0x000070, "Wrong size on WBP_StandardButtonLarge_C_GetGamepadPromptKey");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, HasValidKeyPrompt) == 0x000000, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::HasValidKeyPrompt' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, GamepadKey) == 0x000008, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::GamepadKey' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, NoneKey) == 0x000020, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::NoneKey' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, CallFunc_GetGamepadCancelButton_ReturnValue) == 0x000038, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::CallFunc_GetGamepadCancelButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000050, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_GetGamepadPromptKey, CallFunc_GetGamepadConfirmButton_ReturnValue) == 0x000058, "Member 'WBP_StandardButtonLarge_C_GetGamepadPromptKey::CallFunc_GetGamepadConfirmButton_ReturnValue' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.HandleInputStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_StandardButtonLarge_C_HandleInputStateChanged final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_HandleInputStateChanged) == 0x000001, "Wrong alignment on WBP_StandardButtonLarge_C_HandleInputStateChanged");
static_assert(sizeof(WBP_StandardButtonLarge_C_HandleInputStateChanged) == 0x000001, "Wrong size on WBP_StandardButtonLarge_C_HandleInputStateChanged");
static_assert(offsetof(WBP_StandardButtonLarge_C_HandleInputStateChanged, InputState) == 0x000000, "Member 'WBP_StandardButtonLarge_C_HandleInputStateChanged::InputState' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.NavigateConfirm
// 0x0001 (0x0001 - 0x0000)
struct WBP_StandardButtonLarge_C_NavigateConfirm final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_NavigateConfirm) == 0x000001, "Wrong alignment on WBP_StandardButtonLarge_C_NavigateConfirm");
static_assert(sizeof(WBP_StandardButtonLarge_C_NavigateConfirm) == 0x000001, "Wrong size on WBP_StandardButtonLarge_C_NavigateConfirm");
static_assert(offsetof(WBP_StandardButtonLarge_C_NavigateConfirm, ReturnValue) == 0x000000, "Member 'WBP_StandardButtonLarge_C_NavigateConfirm::ReturnValue' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_StandardButtonLarge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_StandardButtonLarge_C_PreConstruct");
static_assert(sizeof(WBP_StandardButtonLarge_C_PreConstruct) == 0x000001, "Wrong size on WBP_StandardButtonLarge_C_PreConstruct");
static_assert(offsetof(WBP_StandardButtonLarge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_StandardButtonLarge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.Set Gamepad Prompt for Action
// 0x0030 (0x0030 - 0x0000)
struct WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action final
{
public:
	class UInputAction*                           Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetButtonForInputAction_Button;           // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonForInputAction_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action");
static_assert(sizeof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action) == 0x000030, "Wrong size on WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action");
static_assert(offsetof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action, Action) == 0x000000, "Member 'WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action::Action' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action, CallFunc_GetInputManager_ReturnValue) == 0x000008, "Member 'WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action, CallFunc_GetButtonForInputAction_Button) == 0x000010, "Member 'WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action::CallFunc_GetButtonForInputAction_Button' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action, CallFunc_GetButtonForInputAction_ReturnValue) == 0x000028, "Member 'WBP_StandardButtonLarge_C_Set_Gamepad_Prompt_for_Action::CallFunc_GetButtonForInputAction_ReturnValue' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.Set Key Prompt
// 0x0018 (0x0018 - 0x0000)
struct WBP_StandardButtonLarge_C_Set_Key_Prompt final
{
public:
	struct FKey                                   Prompt;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_Set_Key_Prompt) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_Set_Key_Prompt");
static_assert(sizeof(WBP_StandardButtonLarge_C_Set_Key_Prompt) == 0x000018, "Wrong size on WBP_StandardButtonLarge_C_Set_Key_Prompt");
static_assert(offsetof(WBP_StandardButtonLarge_C_Set_Key_Prompt, Prompt) == 0x000000, "Member 'WBP_StandardButtonLarge_C_Set_Key_Prompt::Prompt' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.SetButtonText
// 0x0018 (0x0018 - 0x0000)
struct WBP_StandardButtonLarge_C_SetButtonText final
{
public:
	class FText                                   ButtonText_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_StandardButtonLarge_C_SetButtonText) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_SetButtonText");
static_assert(sizeof(WBP_StandardButtonLarge_C_SetButtonText) == 0x000018, "Wrong size on WBP_StandardButtonLarge_C_SetButtonText");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetButtonText, ButtonText_0) == 0x000000, "Member 'WBP_StandardButtonLarge_C_SetButtonText::ButtonText_0' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.SetDefaultDisplay
// 0x0148 (0x0148 - 0x0000)
struct WBP_StandardButtonLarge_C_SetDefaultDisplay final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0020)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetFontStyleNameByType_FontName;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFontByName_HasFound;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetFontByName_FontInfo;                   // 0x0058(0x0058)(HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x00B0(0x0020)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_2;                   // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_3;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_3;                   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_SetDefaultDisplay) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_SetDefaultDisplay");
static_assert(sizeof(WBP_StandardButtonLarge_C_SetDefaultDisplay) == 0x000148, "Wrong size on WBP_StandardButtonLarge_C_SetDefaultDisplay");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_bool_Variable) == 0x000020, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_byte_Variable) == 0x000021, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_byte_Variable_1) == 0x000022, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_bool_Variable_1) == 0x000023, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_name_Variable) == 0x000024, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_name_Variable_1) == 0x00002C, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_bool_Variable_2) == 0x000034, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_name_Variable_2) == 0x000038, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, Temp_name_Variable_3) == 0x000040, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetFontStyleNameByType_FontName) == 0x000048, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetFontStyleNameByType_FontName' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetFontByName_HasFound) == 0x000050, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetFontByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetFontByName_FontInfo) == 0x000058, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetFontByName_FontInfo' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, K2Node_MakeStruct_Anchors_1) == 0x0000B0, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000D8, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_HasFound) == 0x0000E1, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_Color) == 0x0000E4, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, K2Node_Select_Default_1) == 0x0000F4, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_HasFound_1) == 0x0000FC, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_HasFound_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_Color_1) == 0x000100, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, K2Node_Select_Default_2) == 0x000110, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_HasFound_2) == 0x000118, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_HasFound_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_Color_2) == 0x00011C, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_HasFound_3) == 0x00012C, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_HasFound_3' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_GetColorByName_Color_3) == 0x000130, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_GetColorByName_Color_3' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDefaultDisplay, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'WBP_StandardButtonLarge_C_SetDefaultDisplay::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.SetDisabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_StandardButtonLarge_C_SetDisabled final
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_SetDisabled) == 0x000001, "Wrong alignment on WBP_StandardButtonLarge_C_SetDisabled");
static_assert(sizeof(WBP_StandardButtonLarge_C_SetDisabled) == 0x000001, "Wrong size on WBP_StandardButtonLarge_C_SetDisabled");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetDisabled, Disabled) == 0x000000, "Member 'WBP_StandardButtonLarge_C_SetDisabled::Disabled' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.SetHeight
// 0x0010 (0x0010 - 0x0000)
struct WBP_StandardButtonLarge_C_SetHeight final
{
public:
	double                                        InHeight;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_SetHeight) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_SetHeight");
static_assert(sizeof(WBP_StandardButtonLarge_C_SetHeight) == 0x000010, "Wrong size on WBP_StandardButtonLarge_C_SetHeight");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetHeight, InHeight) == 0x000000, "Member 'WBP_StandardButtonLarge_C_SetHeight::InHeight' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetHeight, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000008, "Member 'WBP_StandardButtonLarge_C_SetHeight::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_StandardButtonLarge.WBP_StandardButtonLarge_C.SetWidth
// 0x0010 (0x0010 - 0x0000)
struct WBP_StandardButtonLarge_C_SetWidth final
{
public:
	double                                        InWidth;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StandardButtonLarge_C_SetWidth) == 0x000008, "Wrong alignment on WBP_StandardButtonLarge_C_SetWidth");
static_assert(sizeof(WBP_StandardButtonLarge_C_SetWidth) == 0x000010, "Wrong size on WBP_StandardButtonLarge_C_SetWidth");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetWidth, InWidth) == 0x000000, "Member 'WBP_StandardButtonLarge_C_SetWidth::InWidth' has a wrong offset!");
static_assert(offsetof(WBP_StandardButtonLarge_C_SetWidth, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000008, "Member 'WBP_StandardButtonLarge_C_SetWidth::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

}

