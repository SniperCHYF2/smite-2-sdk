#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataTableSkinsCommon

#include "Basic.hpp"

#include "DataTableSkinsCommon_classes.hpp"
#include "DataTableSkinsCommon_parameters.hpp"


namespace SDK
{

// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicSkinTable::AddDataTable(class UDataTable* InTable, int32 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "AddDataTable");

	Params::DynamicSkinTable_AddDataTable Parms{};

	Parms.InTable = InTable;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTables
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FDataTableInfo>&    InTableInfos                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UDynamicSkinTable::AddDataTables(const TArray<struct FDataTableInfo>& InTableInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "AddDataTables");

	Params::DynamicSkinTable_AddDataTables Parms{};

	Parms.InTableInfos = std::move(InTableInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTableWithQuery
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagQuery&         InQuery                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDynamicSkinTable::AddDataTableWithQuery(class UDataTable* InTable, int32 InPriority, const struct FGameplayTagQuery& InQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "AddDataTableWithQuery");

	Params::DynamicSkinTable_AddDataTableWithQuery Parms{};

	Parms.InTable = InTable;
	Parms.InPriority = InPriority;
	Parms.InQuery = std::move(InQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.DynamicSkinTable.RemoveDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InTable                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDynamicSkinTable::RemoveDataTable(class UDataTable* InTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "RemoveDataTable");

	Params::DynamicSkinTable_RemoveDataTable Parms{};

	Parms.InTable = InTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.DynamicSkinTable.RemoveDataTables
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UDataTable*>&        InTables                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UDynamicSkinTable::RemoveDataTables(const TArray<class UDataTable*>& InTables)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "RemoveDataTables");

	Params::DynamicSkinTable_RemoveDataTables Parms{};

	Parms.InTables = std::move(InTables);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAllKeywords
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<struct FAssetRequestKey>*          InOutKeywords                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UDynamicSkinTable::GetAllKeywords(TSet<struct FAssetRequestKey>* InOutKeywords) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAllKeywords");

	Params::DynamicSkinTable_GetAllKeywords Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutKeywords != nullptr)
		*InOutKeywords = std::move(Parms.InOutKeywords);
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimAimOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAimOffsetBlendSpace*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAimOffsetBlendSpace* UDynamicSkinTable::GetAnimAimOffset(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAnimAimOffset");

	Params::DynamicSkinTable_GetAnimAimOffset Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimationAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimationAsset*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimationAsset* UDynamicSkinTable::GetAnimationAsset(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAnimationAsset");

	Params::DynamicSkinTable_GetAnimationAsset Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimBlendSpace
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpace*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlendSpace* UDynamicSkinTable::GetAnimBlendSpace(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAnimBlendSpace");

	Params::DynamicSkinTable_GetAnimBlendSpace Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UDynamicSkinTable::GetAnimMontage(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAnimMontage");

	Params::DynamicSkinTable_GetAnimMontage Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimSequence
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequence* UDynamicSkinTable::GetAnimSequence(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetAnimSequence");

	Params::DynamicSkinTable_GetAnimSequence Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetBool
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDynamicSkinTable::GetBool(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetBool");

	Params::DynamicSkinTable_GetBool Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetClass
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UDynamicSkinTable::GetClass(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetClass");

	Params::DynamicSkinTable_GetClass Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetDataAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataAsset* UDynamicSkinTable::GetDataAsset(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetDataAsset");

	Params::DynamicSkinTable_GetDataAsset Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDynamicSkinTable::GetFloat(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetFloat");

	Params::DynamicSkinTable_GetFloat Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetInt
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDynamicSkinTable::GetInt(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetInt");

	Params::DynamicSkinTable_GetInt Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetLinearColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UDynamicSkinTable::GetLinearColor(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetLinearColor");

	Params::DynamicSkinTable_GetLinearColor Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetMaterialInterface
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UDynamicSkinTable::GetMaterialInterface(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetMaterialInterface");

	Params::DynamicSkinTable_GetMaterialInterface Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetMetaSoundSource
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaSoundSource*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMetaSoundSource* UDynamicSkinTable::GetMetaSoundSource(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetMetaSoundSource");

	Params::DynamicSkinTable_GetMetaSoundSource Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetNameField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UDynamicSkinTable::GetNameField(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetNameField");

	Params::DynamicSkinTable_GetNameField Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetNiagaraSystem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraSystem* UDynamicSkinTable::GetNiagaraSystem(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetNiagaraSystem");

	Params::DynamicSkinTable_GetNiagaraSystem Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetPhysicsAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicsAsset*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPhysicsAsset* UDynamicSkinTable::GetPhysicsAsset(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetPhysicsAsset");

	Params::DynamicSkinTable_GetPhysicsAsset Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetPoseAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPoseAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPoseAsset* UDynamicSkinTable::GetPoseAsset(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetPoseAsset");

	Params::DynamicSkinTable_GetPoseAsset Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetSkeletalMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UDynamicSkinTable::GetSkeletalMesh(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetSkeletalMesh");

	Params::DynamicSkinTable_GetSkeletalMesh Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetStaticMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UDynamicSkinTable::GetStaticMesh(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetStaticMesh");

	Params::DynamicSkinTable_GetStaticMesh Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.GetTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          AssetRequestKey                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UDynamicSkinTable::GetTexture(const struct FAssetRequestKey& AssetRequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "GetTexture");

	Params::DynamicSkinTable_GetTexture Parms{};

	Parms.AssetRequestKey = std::move(AssetRequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.DynamicSkinTable.IsTablePendingAssetLoad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDynamicSkinTable::IsTablePendingAssetLoad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DynamicSkinTable", "IsTablePendingAssetLoad");

	Params::DynamicSkinTable_IsTablePendingAssetLoad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.AddParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMultiSkinObject*                 InParent                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMultiSkinObject::AddParent(class UMultiSkinObject* InParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "AddParent");

	Params::MultiSkinObject_AddParent Parms{};

	Parms.InParent = InParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.RemoveParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMultiSkinObject*                 InParent                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMultiSkinObject::RemoveParent(class UMultiSkinObject* InParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "RemoveParent");

	Params::MultiSkinObject_RemoveParent Parms{};

	Parms.InParent = InParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.SubscribeToAllKeywords
// (Final, Native, Public, BlueprintCallable)

void UMultiSkinObject::SubscribeToAllKeywords()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "SubscribeToAllKeywords");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.SubscribeToKeyword
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAssetRequestKey*                InKeyword                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMultiSkinObject::SubscribeToKeyword(struct FAssetRequestKey* InKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "SubscribeToKeyword");

	Params::MultiSkinObject_SubscribeToKeyword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InKeyword != nullptr)
		*InKeyword = std::move(Parms.InKeyword);
}


// Function DataTableSkinsCommon.MultiSkinObject.SubscribeToKeywords
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FAssetRequestKey>&  InKeywords                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMultiSkinObject::SubscribeToKeywords(const TArray<struct FAssetRequestKey>& InKeywords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "SubscribeToKeywords");

	Params::MultiSkinObject_SubscribeToKeywords Parms{};

	Parms.InKeywords = std::move(InKeywords);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.UnsubscribeToAllKeywords
// (Final, Native, Public, BlueprintCallable)

void UMultiSkinObject::UnsubscribeToAllKeywords()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "UnsubscribeToAllKeywords");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.UnsubscribeToKeyword
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAssetRequestKey*                InKeyword                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMultiSkinObject::UnsubscribeToKeyword(struct FAssetRequestKey* InKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "UnsubscribeToKeyword");

	Params::MultiSkinObject_UnsubscribeToKeyword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InKeyword != nullptr)
		*InKeyword = std::move(Parms.InKeyword);
}


// Function DataTableSkinsCommon.MultiSkinObject.UnsubscribeToKeywords
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FAssetRequestKey>&  InKeywords                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMultiSkinObject::UnsubscribeToKeywords(const TArray<struct FAssetRequestKey>& InKeywords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "UnsubscribeToKeywords");

	Params::MultiSkinObject_UnsubscribeToKeywords Parms{};

	Parms.InKeywords = std::move(InKeywords);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAllSkinKeywords
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<struct FAssetRequestKey>*          InOutKeywords                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UMultiSkinObject::GetAllSkinKeywords(TSet<struct FAssetRequestKey>* InOutKeywords) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAllSkinKeywords");

	Params::MultiSkinObject_GetAllSkinKeywords Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InOutKeywords != nullptr)
		*InOutKeywords = std::move(Parms.InOutKeywords);
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimAimOffset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAimOffsetBlendSpace*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAimOffsetBlendSpace* UMultiSkinObject::GetAnimAimOffset(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimAimOffset");

	Params::MultiSkinObject_GetAnimAimOffset Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimAimOffsetWithAdditionalInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAimOffsetBlendSpace**            OutAsset                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAimOffsetAdditionalInfo**        OutInfo                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetAnimAimOffsetWithAdditionalInfo(const struct FAssetRequestKey& RequestKey, int32* Priority, class UAimOffsetBlendSpace** OutAsset, class UAimOffsetAdditionalInfo** OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimAimOffsetWithAdditionalInfo");

	Params::MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	if (OutAsset != nullptr)
		*OutAsset = Parms.OutAsset;

	if (OutInfo != nullptr)
		*OutInfo = Parms.OutInfo;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimBlendSpace
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpace*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlendSpace* UMultiSkinObject::GetAnimBlendSpace(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimBlendSpace");

	Params::MultiSkinObject_GetAnimBlendSpace Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimBlendSpaceWithAdditionalInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpace**                     OutAsset                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpaceAdditionalInfo**       OutInfo                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetAnimBlendSpaceWithAdditionalInfo(const struct FAssetRequestKey& RequestKey, int32* Priority, class UBlendSpace** OutAsset, class UBlendSpaceAdditionalInfo** OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimBlendSpaceWithAdditionalInfo");

	Params::MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	if (OutAsset != nullptr)
		*OutAsset = Parms.OutAsset;

	if (OutInfo != nullptr)
		*OutInfo = Parms.OutInfo;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UMultiSkinObject::GetAnimMontage(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimMontage");

	Params::MultiSkinObject_GetAnimMontage Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimMontageWithAdditionalInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage**                    OutAsset                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontageAdditionalInfo**      OutInfo                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetAnimMontageWithAdditionalInfo(const struct FAssetRequestKey& RequestKey, int32* Priority, class UAnimMontage** OutAsset, class UAnimMontageAdditionalInfo** OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimMontageWithAdditionalInfo");

	Params::MultiSkinObject_GetAnimMontageWithAdditionalInfo Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	if (OutAsset != nullptr)
		*OutAsset = Parms.OutAsset;

	if (OutInfo != nullptr)
		*OutInfo = Parms.OutInfo;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimSequence
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequence* UMultiSkinObject::GetAnimSequence(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimSequence");

	Params::MultiSkinObject_GetAnimSequence Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetAnimSequenceWithAdditionalInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   OutAsset                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequenceAdditionalInfo**     OutInfo                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetAnimSequenceWithAdditionalInfo(const struct FAssetRequestKey& RequestKey, int32* Priority, class UAnimSequence** OutAsset, class UAnimSequenceAdditionalInfo** OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetAnimSequenceWithAdditionalInfo");

	Params::MultiSkinObject_GetAnimSequenceWithAdditionalInfo Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	if (OutAsset != nullptr)
		*OutAsset = Parms.OutAsset;

	if (OutInfo != nullptr)
		*OutInfo = Parms.OutInfo;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetBool
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetBool(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetBool");

	Params::MultiSkinObject_GetBool Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetClass
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UMultiSkinObject::GetClass(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetClass");

	Params::MultiSkinObject_GetClass Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetDataAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataAsset* UMultiSkinObject::GetDataAsset(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetDataAsset");

	Params::MultiSkinObject_GetDataAsset Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMultiSkinObject::GetFloat(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetFloat");

	Params::MultiSkinObject_GetFloat Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetInt
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMultiSkinObject::GetInt(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetInt");

	Params::MultiSkinObject_GetInt Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetLinearColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMultiSkinObject::GetLinearColor(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetLinearColor");

	Params::MultiSkinObject_GetLinearColor Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetMaterialInterface
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UMultiSkinObject::GetMaterialInterface(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetMaterialInterface");

	Params::MultiSkinObject_GetMaterialInterface Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetMetaSoundSource
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMetaSoundSource*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMetaSoundSource* UMultiSkinObject::GetMetaSoundSource(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetMetaSoundSource");

	Params::MultiSkinObject_GetMetaSoundSource Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetNameField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMultiSkinObject::GetNameField(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetNameField");

	Params::MultiSkinObject_GetNameField Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetNiagaraSystem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraSystem* UMultiSkinObject::GetNiagaraSystem(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetNiagaraSystem");

	Params::MultiSkinObject_GetNiagaraSystem Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetPhysicsAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicsAsset*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPhysicsAsset* UMultiSkinObject::GetPhysicsAsset(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetPhysicsAsset");

	Params::MultiSkinObject_GetPhysicsAsset Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetPoseAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPoseAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPoseAsset* UMultiSkinObject::GetPoseAsset(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetPoseAsset");

	Params::MultiSkinObject_GetPoseAsset Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetPoseAssetWithAdditionalInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPoseAsset**                      OutAsset                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPoseAssetAdditionalInfo**        OutInfo                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMultiSkinObject::GetPoseAssetWithAdditionalInfo(const struct FAssetRequestKey& RequestKey, int32* Priority, class UPoseAsset** OutAsset, class UPoseAssetAdditionalInfo** OutInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetPoseAssetWithAdditionalInfo");

	Params::MultiSkinObject_GetPoseAssetWithAdditionalInfo Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	if (OutAsset != nullptr)
		*OutAsset = Parms.OutAsset;

	if (OutInfo != nullptr)
		*OutInfo = Parms.OutInfo;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetSkeletalMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UMultiSkinObject::GetSkeletalMesh(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetSkeletalMesh");

	Params::MultiSkinObject_GetSkeletalMesh Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetStaticMesh
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UMultiSkinObject::GetStaticMesh(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetStaticMesh");

	Params::MultiSkinObject_GetStaticMesh Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.MultiSkinObject.GetTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAssetRequestKey&          RequestKey                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UMultiSkinObject::GetTexture(const struct FAssetRequestKey& RequestKey, int32* Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiSkinObject", "GetTexture");

	Params::MultiSkinObject_GetTexture Parms{};

	Parms.RequestKey = std::move(RequestKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Priority != nullptr)
		*Priority = Parms.Priority;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.StaticSetForcedLOD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkinnedMeshComponent*            InMeshComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InForcedLOD                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::StaticSetForcedLOD(class USkinnedMeshComponent* InMeshComp, int32 InForcedLOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkinnableSkeletalMeshComponent", "StaticSetForcedLOD");

	Params::SkinnableSkeletalMeshComponent_StaticSetForcedLOD Parms{};

	Parms.InMeshComp = InMeshComp;
	Parms.InForcedLOD = InForcedLOD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentMaterialOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableSkeletalMeshComponent::ChangePersistentMaterialOverrideById(int32 ParameterId, class UMaterialInterface* MaterialInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "ChangePersistentMaterialOverrideById");

	Params::SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.MaterialInterface = MaterialInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentScalarOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableSkeletalMeshComponent::ChangePersistentScalarOverrideById(int32 ParameterId, float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "ChangePersistentScalarOverrideById");

	Params::SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = ParameterValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentTextureOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableSkeletalMeshComponent::ChangePersistentTextureOverrideById(int32 ParameterId, class UTexture* ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "ChangePersistentTextureOverrideById");

	Params::SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = ParameterValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentVectorOverrideById
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableSkeletalMeshComponent::ChangePersistentVectorOverrideById(int32 ParameterId, const struct FLinearColor& ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "ChangePersistentVectorOverrideById");

	Params::SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = std::move(ParameterValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ForwardAnimInitialized
// (Final, Native, Private)

void USkinnableSkeletalMeshComponent::ForwardAnimInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "ForwardAnimInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.RefreshAnimation
// (Final, Native, Protected, BlueprintCallable)

void USkinnableSkeletalMeshComponent::RefreshAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "RefreshAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.RemovePersistentMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::RemovePersistentMaterialParameter(int32 ParameterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "RemovePersistentMaterialParameter");

	Params::SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter Parms{};

	Parms.ParameterId = ParameterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetAnimClassKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UAnimInstance>        InFailSafeAnimClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::SetAnimClassKeyword(class FName InKeyword, TSubclassOf<class UAnimInstance> InFailSafeAnimClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetAnimClassKeyword");

	Params::SkinnableSkeletalMeshComponent_SetAnimClassKeyword Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InFailSafeAnimClass = InFailSafeAnimClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetForcedLOD_Skinned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InNewForcedLOD                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::SetForcedLOD_Skinned(int32 InNewForcedLOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetForcedLOD_Skinned");

	Params::SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned Parms{};

	Parms.InNewForcedLOD = InNewForcedLOD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentMaterialOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentMaterialOverride(int32 MaterialSlot, class UMaterialInterface* MaterialInterface, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentMaterialOverride");

	Params::SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.MaterialInterface = MaterialInterface;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentMaterialOverrideOnAllSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentMaterialOverrideOnAllSlots(class UMaterialInterface* MaterialInterface, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentMaterialOverrideOnAllSlots");

	Params::SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots Parms{};

	Parms.MaterialInterface = MaterialInterface;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentScalarParameter(int32 MaterialSlot, class FName ParameterName, float ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentScalarParameter");

	Params::SkinnableSkeletalMeshComponent_SetPersistentScalarParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentScalarParameterOnAllMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentScalarParameterOnAllMaterials(class FName ParameterName, float ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentScalarParameterOnAllMaterials");

	Params::SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentTextureParameter(int32 MaterialSlot, class FName ParameterName, class UTexture* ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentTextureParameter");

	Params::SkinnableSkeletalMeshComponent_SetPersistentTextureParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentTextureParameterOnAllMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentTextureParameterOnAllMaterials(class FName ParameterName, class UTexture* ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentTextureParameterOnAllMaterials");

	Params::SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentVectorParameter(int32 MaterialSlot, class FName ParameterName, const struct FLinearColor& ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentVectorParameter");

	Params::SkinnableSkeletalMeshComponent_SetPersistentVectorParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = std::move(ParameterValue);
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentVectorParameterOnAllMaterials
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableSkeletalMeshComponent::SetPersistentVectorParameterOnAllMaterials(class FName ParameterName, const struct FLinearColor& ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPersistentVectorParameterOnAllMaterials");

	Params::SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = std::move(ParameterValue);
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPhysicsAssetKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicsAsset*                    InFailSafePhysicsAsset                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::SetPhysicsAssetKeyword(class FName InKeyword, class UPhysicsAsset* InFailSafePhysicsAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetPhysicsAssetKeyword");

	Params::SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InFailSafePhysicsAsset = InFailSafePhysicsAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetSkeletalMeshKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    InFailSafeSkeletalMesh                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableSkeletalMeshComponent::SetSkeletalMeshKeyword(class FName InKeyword, class USkeletalMesh* InFailSafeSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "SetSkeletalMeshKeyword");

	Params::SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InFailSafeSkeletalMesh = InFailSafeSkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.GetSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMultiSkinObject* USkinnableSkeletalMeshComponent::GetSkinObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableSkeletalMeshComponent", "GetSkinObject");

	Params::SkinnableSkeletalMeshComponent_GetSkinObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.AddSkeletalMeshKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableMergedMeshComponent::AddSkeletalMeshKeyword(class FName InKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableMergedMeshComponent", "AddSkeletalMeshKeyword");

	Params::SkinnableMergedMeshComponent_AddSkeletalMeshKeyword Parms{};

	Parms.InKeyword = InKeyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.RemoveSkeletalMeshKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableMergedMeshComponent::RemoveSkeletalMeshKeyword(class FName InKeyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableMergedMeshComponent", "RemoveSkeletalMeshKeyword");

	Params::SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword Parms{};

	Parms.InKeyword = InKeyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.SetSkeletalMeshKeywords
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FName>&              InKeywords                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    InFailSafeSkeletalMesh                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableMergedMeshComponent::SetSkeletalMeshKeywords(const TArray<class FName>& InKeywords, class USkeletalMesh* InFailSafeSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableMergedMeshComponent", "SetSkeletalMeshKeywords");

	Params::SkinnableMergedMeshComponent_SetSkeletalMeshKeywords Parms{};

	Parms.InKeywords = std::move(InKeywords);
	Parms.InFailSafeSkeletalMesh = InFailSafeSkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentMaterialOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableStaticMeshComponent::ChangePersistentMaterialOverrideById(int32 ParameterId, class UMaterialInterface* MaterialInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "ChangePersistentMaterialOverrideById");

	Params::SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.MaterialInterface = MaterialInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentScalarOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableStaticMeshComponent::ChangePersistentScalarOverrideById(int32 ParameterId, float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "ChangePersistentScalarOverrideById");

	Params::SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = ParameterValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentTextureOverrideById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableStaticMeshComponent::ChangePersistentTextureOverrideById(int32 ParameterId, class UTexture* ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "ChangePersistentTextureOverrideById");

	Params::SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = ParameterValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentVectorOverrideById
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkinnableStaticMeshComponent::ChangePersistentVectorOverrideById(int32 ParameterId, const struct FLinearColor& ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "ChangePersistentVectorOverrideById");

	Params::SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById Parms{};

	Parms.ParameterId = ParameterId;
	Parms.ParameterValue = std::move(ParameterValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.RemovePersistentMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParameterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableStaticMeshComponent::RemovePersistentMaterialParameter(int32 ParameterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "RemovePersistentMaterialParameter");

	Params::SkinnableStaticMeshComponent_RemovePersistentMaterialParameter Parms{};

	Parms.ParameterId = ParameterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentMaterialOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentMaterialOverride(int32 MaterialSlot, class UMaterialInterface* MaterialInterface, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentMaterialOverride");

	Params::SkinnableStaticMeshComponent_SetPersistentMaterialOverride Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.MaterialInterface = MaterialInterface;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentMaterialOverrideOnAllSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentMaterialOverrideOnAllSlots(class UMaterialInterface* MaterialInterface, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentMaterialOverrideOnAllSlots");

	Params::SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots Parms{};

	Parms.MaterialInterface = MaterialInterface;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentScalarParameter(int32 MaterialSlot, class FName ParameterName, float ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentScalarParameter");

	Params::SkinnableStaticMeshComponent_SetPersistentScalarParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentScalarParameterOnAllMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentScalarParameterOnAllMaterials(class FName ParameterName, float ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentScalarParameterOnAllMaterials");

	Params::SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentTextureParameter(int32 MaterialSlot, class FName ParameterName, class UTexture* ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentTextureParameter");

	Params::SkinnableStaticMeshComponent_SetPersistentTextureParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentTextureParameterOnAllMaterials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ParameterValue                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentTextureParameterOnAllMaterials(class FName ParameterName, class UTexture* ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentTextureParameterOnAllMaterials");

	Params::SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = ParameterValue;
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   MaterialSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentVectorParameter(int32 MaterialSlot, class FName ParameterName, const struct FLinearColor& ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentVectorParameter");

	Params::SkinnableStaticMeshComponent_SetPersistentVectorParameter Parms{};

	Parms.MaterialSlot = MaterialSlot;
	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = std::move(ParameterValue);
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentVectorParameterOnAllMaterials
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ParameterValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceNewOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USkinnableStaticMeshComponent::SetPersistentVectorParameterOnAllMaterials(class FName ParameterName, const struct FLinearColor& ParameterValue, bool bForceNewOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetPersistentVectorParameterOnAllMaterials");

	Params::SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials Parms{};

	Parms.ParameterName = ParameterName;
	Parms.ParameterValue = std::move(ParameterValue);
	Parms.bForceNewOverride = bForceNewOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetStaticMeshKeyword
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      InFailSafeStaticMesh                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkinnableStaticMeshComponent::SetStaticMeshKeyword(class FName InKeyword, class UStaticMesh* InFailSafeStaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "SetStaticMeshKeyword");

	Params::SkinnableStaticMeshComponent_SetStaticMeshKeyword Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InFailSafeStaticMesh = InFailSafeStaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.GetSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMultiSkinObject* USkinnableStaticMeshComponent::GetSkinObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkinnableStaticMeshComponent", "GetSkinObject");

	Params::SkinnableStaticMeshComponent_GetSkinObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DataTableSkinsCommon.SkinTagAssetInterface.HandleOnNewSkinTagAsset
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>NewSkinTagAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISkinTagAssetInterface::HandleOnNewSkinTagAsset(TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SkinTagAssetInterface", "HandleOnNewSkinTagAsset");

	Params::SkinTagAssetInterface_HandleOnNewSkinTagAsset Parms{};

	Parms.NewSkinTagAsset = NewSkinTagAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DataTableSkinsCommon.SkinTagAssetInterface.HandleOnSkinTagAssetRemoved
// (Native, Public)
// Parameters:
// TScriptInterface<class ISkinTagAssetInterface>SkinTagAssetToRemove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISkinTagAssetInterface::HandleOnSkinTagAssetRemoved(TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SkinTagAssetInterface", "HandleOnSkinTagAssetRemoved");

	Params::SkinTagAssetInterface_HandleOnSkinTagAssetRemoved Parms{};

	Parms.SkinTagAssetToRemove = SkinTagAssetToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

