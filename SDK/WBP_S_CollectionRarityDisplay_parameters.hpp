#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_CollectionRarityDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_CollectionRarityDisplay.WBP_S_CollectionRarityDisplay_C.SetDisplayRarity
// 0x0060 (0x0060 - 0x0000)
struct WBP_S_CollectionRarityDisplay_C_SetDisplayRarity final
{
public:
	struct FGameplayTag                           RarityTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RarityStyleText;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RarityStyle;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRarityName_RarityText;                 // 0x0020(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetRarityIcon_SoftIcon;                   // 0x0038(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity) == 0x000008, "Wrong alignment on WBP_S_CollectionRarityDisplay_C_SetDisplayRarity");
static_assert(sizeof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity) == 0x000060, "Wrong size on WBP_S_CollectionRarityDisplay_C_SetDisplayRarity");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, RarityTag) == 0x000000, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::RarityTag' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, RarityStyleText) == 0x000008, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::RarityStyleText' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, RarityStyle) == 0x000010, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::RarityStyle' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, CallFunc_GetRarityName_RarityText) == 0x000020, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::CallFunc_GetRarityName_RarityText' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayRarity, CallFunc_GetRarityIcon_SoftIcon) == 0x000038, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayRarity::CallFunc_GetRarityIcon_SoftIcon' has a wrong offset!");

// Function WBP_S_CollectionRarityDisplay.WBP_S_CollectionRarityDisplay_C.SetDisplayItem
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_CollectionRarityDisplay_C_SetDisplayItem final
{
public:
	class UHWInventoryItem*                       InventoryItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CollectionRarityDisplay_C_SetDisplayItem) == 0x000008, "Wrong alignment on WBP_S_CollectionRarityDisplay_C_SetDisplayItem");
static_assert(sizeof(WBP_S_CollectionRarityDisplay_C_SetDisplayItem) == 0x000018, "Wrong size on WBP_S_CollectionRarityDisplay_C_SetDisplayItem");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayItem, InventoryItem) == 0x000000, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayItem::InventoryItem' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayItem, K2Node_DynamicCast_AsHWCollection_Item) == 0x000008, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayItem::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_S_CollectionRarityDisplay.WBP_S_CollectionRarityDisplay_C.SetDisplayBanner
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_CollectionRarityDisplay_C_SetDisplayBanner final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner) == 0x000001, "Wrong alignment on WBP_S_CollectionRarityDisplay_C_SetDisplayBanner");
static_assert(sizeof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner) == 0x000005, "Wrong size on WBP_S_CollectionRarityDisplay_C_SetDisplayBanner");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner, Show) == 0x000000, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayBanner::Show' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayBanner::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayBanner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayBanner::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_SetDisplayBanner, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_CollectionRarityDisplay_C_SetDisplayBanner::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_CollectionRarityDisplay.WBP_S_CollectionRarityDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_CollectionRarityDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CollectionRarityDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_CollectionRarityDisplay_C_PreConstruct");
static_assert(sizeof(WBP_S_CollectionRarityDisplay_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_CollectionRarityDisplay_C_PreConstruct");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_CollectionRarityDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_S_CollectionRarityDisplay.WBP_S_CollectionRarityDisplay_C.ExecuteUbergraph_WBP_S_CollectionRarityDisplay
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay) == 0x000004, "Wrong alignment on WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay");
static_assert(sizeof(WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay) == 0x000008, "Wrong size on WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay, EntryPoint) == 0x000000, "Member 'WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_S_CollectionRarityDisplay_C_ExecuteUbergraph_WBP_S_CollectionRarityDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");

}

