#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory_Leashed_Jungle

#include "Basic.hpp"

#include "EJungleTribes_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.AwardRenown
// 0x0048 (0x0048 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_AwardRenown final
{
public:
	class AHWCharacter_Base*                      characterKilled;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_NPC_C*                    LocalNPC;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_NPC_C*                    K2Node_DynamicCast_AsBP_Character_NPC;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0030(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ConquestGameState_C*                K2Node_DynamicCast_AsBP_Conquest_Game_State;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_AwardRenown) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_AwardRenown");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_AwardRenown) == 0x000048, "Wrong size on BP_BotFactory_Leashed_Jungle_C_AwardRenown");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, characterKilled) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::characterKilled' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, Killer) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::Killer' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, LocalNPC) == 0x000010, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::LocalNPC' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, K2Node_DynamicCast_AsBP_Character_NPC) == 0x000018, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::K2Node_DynamicCast_AsBP_Character_NPC' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, CallFunc_GetHWGameState_ReturnValue) == 0x000028, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, CallFunc_GetGenericTeamId_ReturnValue) == 0x000030, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, K2Node_DynamicCast_AsBP_Conquest_Game_State) == 0x000038, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::K2Node_DynamicCast_AsBP_Conquest_Game_State' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_AwardRenown, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'BP_BotFactory_Leashed_Jungle_C_AwardRenown::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.ExecuteUbergraph_BP_BotFactory_Leashed_Jungle
// 0x0040 (0x0040 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_Event_characterKilled;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_killer;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SpawnTableTag;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_Event_characterSpawned;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_NPC_C*                    K2Node_DynamicCast_AsBP_Character_NPC;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle) == 0x000040, "Wrong size on BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, EntryPoint) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_Event_Causer) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_Event_characterKilled) == 0x000010, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_Event_characterKilled' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_Event_killer) == 0x000018, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_Event_killer' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_CustomEvent_SpawnTableTag) == 0x000020, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_CustomEvent_SpawnTableTag' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_Event_characterSpawned) == 0x000028, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_Event_characterSpawned' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_DynamicCast_AsBP_Character_NPC) == 0x000030, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_DynamicCast_AsBP_Character_NPC' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BotFactory_Leashed_Jungle_C_ExecuteUbergraph_BP_BotFactory_Leashed_Jungle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.MulticastSpawnTableUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated final
{
public:
	struct FGameplayTag                           SpawnTableTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated) == 0x000004, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated) == 0x000008, "Wrong size on BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated, SpawnTableTag) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_MulticastSpawnTableUpdated::SpawnTableTag' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.OnFactoryEmptied
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied final
{
public:
	class AActor*                                 Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied) == 0x000008, "Wrong size on BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied, Causer) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_OnFactoryEmptied::Causer' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.OnSpawnBotDied
// 0x0010 (0x0010 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied final
{
public:
	class AHWCharacter_Base*                      characterKilled;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied) == 0x000010, "Wrong size on BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied, characterKilled) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied::characterKilled' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied, Killer) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_OnSpawnBotDied::Killer' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.OnSpawnedBot
// 0x0008 (0x0008 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot final
{
public:
	class AHWCharacter_Base*                      characterSpawned;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot) == 0x000008, "Wrong size on BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot, characterSpawned) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_OnSpawnedBot::characterSpawned' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.RandomizeBasedOnTribes
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes final
{
public:
	EJungleTribes                                 LocalTribe;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomInt;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPhaseElapsedTime_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateSpawnTable_Return;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EJungleTribes                                 Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJungleTribes                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes) == 0x0000C8, "Wrong size on BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, LocalTribe) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::LocalTribe' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, RandomInt) == 0x000004, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::RandomInt' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable_1) == 0x000010, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable_2) == 0x000018, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable_3) == 0x000020, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable_4) == 0x000028, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_struct_Variable_5) == 0x000030, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000038, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_GetHWGameState_ReturnValue) == 0x000048, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_GetCurrentPhaseElapsedTime_ReturnValue) == 0x000060, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_GetCurrentPhaseElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000068, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_UpdateSpawnTable_Return) == 0x000088, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_UpdateSpawnTable_Return' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, Temp_byte_Variable) == 0x0000A0, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, K2Node_Select_Default) == 0x0000A4, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000AC, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000AD, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_RandomInteger_ReturnValue) == 0x0000B4, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x0000C0, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeBasedOnTribes::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.RandomizeNextSpawn
// 0x0001 (0x0001 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn) == 0x000001, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn) == 0x000001, "Wrong size on BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeNextSpawn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.RandomizeSpawnsBasedOnDifficulty
// 0x0078 (0x0078 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty final
{
public:
	int32                                         RandomInt;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x001C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0024(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x002C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_6;                            // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_7;                            // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0054(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x005C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x0064(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty) == 0x000004, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty) == 0x000078, "Wrong size on BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, RandomInt) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::RandomInt' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_int_Variable) == 0x000004, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_1) == 0x000010, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_int_Variable_1) == 0x000018, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_2) == 0x00001C, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_3) == 0x000024, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_4) == 0x00002C, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_5) == 0x000034, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_int_Variable_2) == 0x00003C, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_6) == 0x000040, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, Temp_struct_Variable_7) == 0x000048, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, CallFunc_RandomInteger_ReturnValue) == 0x000050, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, K2Node_Select_Default) == 0x000054, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, K2Node_Select_Default_1) == 0x00005C, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, K2Node_Select_Default_2) == 0x000064, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, CallFunc_RandomInteger_ReturnValue_1) == 0x00006C, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, CallFunc_RandomInteger_ReturnValue_2) == 0x000070, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty, K2Node_SwitchEnum_CmpSuccess) == 0x000074, "Member 'BP_BotFactory_Leashed_Jungle_C_RandomizeSpawnsBasedOnDifficulty::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.UpdateFactoryLevel
// 0x0038 (0x0038 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateSpawnTable_Return;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_NPC_C*                    K2Node_DynamicCast_AsBP_Character_NPC;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel) == 0x000008, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel) == 0x000038, "Wrong size on BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, Level) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::Level' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_UpdateSpawnTable_Return) == 0x000010, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_UpdateSpawnTable_Return' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, K2Node_DynamicCast_AsBP_Character_NPC) == 0x000020, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::K2Node_DynamicCast_AsBP_Character_NPC' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateFactoryLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BotFactory_Leashed_Jungle.BP_BotFactory_Leashed_Jungle_C.UpdateSpawnTable
// 0x0002 (0x0002 - 0x0000)
struct BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable) == 0x000001, "Wrong alignment on BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable");
static_assert(sizeof(BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable) == 0x000002, "Wrong size on BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable, Return) == 0x000000, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable::Return' has a wrong offset!");
static_assert(offsetof(BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000001, "Member 'BP_BotFactory_Leashed_Jungle_C_UpdateSpawnTable::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

}

