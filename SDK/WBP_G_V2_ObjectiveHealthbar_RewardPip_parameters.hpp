#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ObjectiveHealthbar_RewardPip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ObjectiveHealthbar_RewardPip.WBP_G_V2_ObjectiveHealthbar_RewardPip_C.ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip, EntryPoint) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_RewardPip::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_RewardPip.WBP_G_V2_ObjectiveHealthbar_RewardPip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_RewardPip.WBP_G_V2_ObjectiveHealthbar_RewardPip_C.SetFilled
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled final
{
public:
	bool                                          bFilled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled) == 0x000001, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled) == 0x000005, "Wrong size on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled, bFilled) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled::bFilled' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFilled::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_RewardPip.WBP_G_V2_ObjectiveHealthbar_RewardPip_C.SetFinalRewardState
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState final
{
public:
	bool                                          bFinalReward;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x002C(0x0014)()
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState) == 0x000040, "Wrong size on WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState, bFinalReward) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState::bFinalReward' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState, K2Node_Select_Default) == 0x00002C, "Member 'WBP_G_V2_ObjectiveHealthbar_RewardPip_C_SetFinalRewardState::K2Node_Select_Default' has a wrong offset!");

}

