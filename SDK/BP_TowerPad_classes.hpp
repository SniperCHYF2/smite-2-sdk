#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TowerPad

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TowerPad.BP_TowerPad_C
// 0x0070 (0x0308 - 0x0298)
class ABP_TowerPad_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWNiagaraComponent*                    RangeFX;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane1;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Pad_1;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x02C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           ColorNeutral;                                      // 0x02CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorOrder;                                        // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorChaos;                                        // 0x02EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMI_Pad_2;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DisablePad();
	void ExecuteUbergraph_BP_TowerPad(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SetColor(const struct FLinearColor& NewColor);
	void SetColorByTeam(int32 Team_0);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TowerPad_C">();
	}
	static class ABP_TowerPad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TowerPad_C>();
	}
};
static_assert(alignof(ABP_TowerPad_C) == 0x000008, "Wrong alignment on ABP_TowerPad_C");
static_assert(sizeof(ABP_TowerPad_C) == 0x000308, "Wrong size on ABP_TowerPad_C");
static_assert(offsetof(ABP_TowerPad_C, UberGraphFrame) == 0x000298, "Member 'ABP_TowerPad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, RangeFX) == 0x0002A0, "Member 'ABP_TowerPad_C::RangeFX' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, Root) == 0x0002A8, "Member 'ABP_TowerPad_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, Plane1) == 0x0002B0, "Member 'ABP_TowerPad_C::Plane1' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, Plane2) == 0x0002B8, "Member 'ABP_TowerPad_C::Plane2' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, DMI_Pad_1) == 0x0002C0, "Member 'ABP_TowerPad_C::DMI_Pad_1' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, Team) == 0x0002C8, "Member 'ABP_TowerPad_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, ColorNeutral) == 0x0002CC, "Member 'ABP_TowerPad_C::ColorNeutral' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, ColorOrder) == 0x0002DC, "Member 'ABP_TowerPad_C::ColorOrder' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, ColorChaos) == 0x0002EC, "Member 'ABP_TowerPad_C::ColorChaos' has a wrong offset!");
static_assert(offsetof(ABP_TowerPad_C, DMI_Pad_2) == 0x000300, "Member 'ABP_TowerPad_C::DMI_Pad_2' has a wrong offset!");

}

