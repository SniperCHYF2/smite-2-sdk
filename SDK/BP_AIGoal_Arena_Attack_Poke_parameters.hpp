#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Arena_Attack_Poke

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.CalculateWeight
// 0x0020 (0x0020 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CachedCharacter;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWeight_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight) == 0x000008, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight) == 0x000020, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight, InController) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight, CachedCharacter) == 0x000010, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight::CachedCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight, CallFunc_CalculateWeight_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CalculateWeight::CallFunc_CalculateWeight_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.CanAttackNearbyGod
// 0x0030 (0x0030 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttack;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWCharacter_Base*>              Threats;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Count;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOnlyReturnFire_ReturnFireOnly;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostileThreatAvailable_ReturnValue;     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGodThreatAvailable_ReturnValue;         // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsHostileThreatAvailable_MaxDamagedByTime_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsGodThreatAvailable_MaxDistance_ImplicitCast; // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod) == 0x000008, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod) == 0x000030, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, InController) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, ShouldAttack) == 0x000008, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::ShouldAttack' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, Threats) == 0x000010, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::Threats' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, Count) == 0x000020, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::Count' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, CallFunc_ShouldOnlyReturnFire_ReturnFireOnly) == 0x000024, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::CallFunc_ShouldOnlyReturnFire_ReturnFireOnly' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, CallFunc_IsHostileThreatAvailable_ReturnValue) == 0x000025, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::CallFunc_IsHostileThreatAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, CallFunc_IsGodThreatAvailable_ReturnValue) == 0x000026, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::CallFunc_IsGodThreatAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, CallFunc_IsHostileThreatAvailable_MaxDamagedByTime_ImplicitCast) == 0x000028, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::CallFunc_IsHostileThreatAvailable_MaxDamagedByTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod, CallFunc_IsGodThreatAvailable_MaxDistance_ImplicitCast) == 0x00002C, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CanAttackNearbyGod::CallFunc_IsGodThreatAvailable_MaxDistance_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.CheckPreconditionsBP
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAttackNearbyGod_ShouldAttack;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP) == 0x000038, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_CanAttackNearbyGod_ShouldAttack) == 0x000020, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_CanAttackNearbyGod_ShouldAttack' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_GetValueAsFloat_ReturnValue) == 0x000024, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_AIGoal_Arena_Attack_Poke_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke
// 0x0004 (0x0004 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke) == 0x000004, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke) == 0x000004, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke, EntryPoint) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ExecuteUbergraph_BP_AIGoal_Arena_Attack_Poke::EntryPoint' has a wrong offset!");

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.HasMatchStarted
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted final
{
public:
	bool                                          MatchStarted;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameMode*                            GameMode;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentMatchPhaseTag_ReturnValue;      // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameMode*                            CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted) == 0x000008, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted) == 0x000028, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, MatchStarted) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::MatchStarted' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, GameMode) == 0x000008, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::GameMode' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, CallFunc_GetCurrentMatchPhaseTag_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::CallFunc_GetCurrentMatchPhaseTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, CallFunc_MatchesTag_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Arena_Attack_Poke_C_HasMatchStarted::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Arena_Attack_Poke.BP_AIGoal_Arena_Attack_Poke_C.ShouldOnlyReturnFire
// 0x0040 (0x0040 - 0x0000)
struct BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnFireOnly;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGodThreatAvailable_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCharacterLevel_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchStarted_MatchStarted;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire) == 0x000008, "Wrong alignment on BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire");
static_assert(sizeof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire) == 0x000040, "Wrong size on BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, InController) == 0x000000, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, ReturnFireOnly) == 0x000008, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::ReturnFireOnly' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_IsGodThreatAvailable_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_IsGodThreatAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_GetCharacterLevel_ReturnValue) == 0x00002C, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_GetCharacterLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_HasMatchStarted_MatchStarted) == 0x000030, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_HasMatchStarted_MatchStarted' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000033, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'BP_AIGoal_Arena_Attack_Poke_C_ShouldOnlyReturnFire::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

