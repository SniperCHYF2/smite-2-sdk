#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_ComboBoxOption

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_ComboBoxOption.WBP_S_ComboBoxOption_C.ExecuteUbergraph_WBP_S_ComboBoxOption
// 0x0028 (0x0028 - 0x0000)
struct WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InText;                               // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption) == 0x000008, "Wrong alignment on WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption");
static_assert(sizeof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption) == 0x000028, "Wrong size on WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, EntryPoint) == 0x000000, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, Temp_bool_Variable) == 0x000004, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, Temp_byte_Variable) == 0x000005, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, K2Node_Event_InText) == 0x000008, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, K2Node_Event_bIsSelected) == 0x000020, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption, K2Node_Select_Default) == 0x000021, "Member 'WBP_S_ComboBoxOption_C_ExecuteUbergraph_WBP_S_ComboBoxOption::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_ComboBoxOption.WBP_S_ComboBoxOption_C.SetIsSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_ComboBoxOption_C_SetIsSelected final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_ComboBoxOption_C_SetIsSelected) == 0x000001, "Wrong alignment on WBP_S_ComboBoxOption_C_SetIsSelected");
static_assert(sizeof(WBP_S_ComboBoxOption_C_SetIsSelected) == 0x000001, "Wrong size on WBP_S_ComboBoxOption_C_SetIsSelected");
static_assert(offsetof(WBP_S_ComboBoxOption_C_SetIsSelected, bIsSelected) == 0x000000, "Member 'WBP_S_ComboBoxOption_C_SetIsSelected::bIsSelected' has a wrong offset!");

// Function WBP_S_ComboBoxOption.WBP_S_ComboBoxOption_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_ComboBoxOption_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_S_ComboBoxOption_C_SetText) == 0x000008, "Wrong alignment on WBP_S_ComboBoxOption_C_SetText");
static_assert(sizeof(WBP_S_ComboBoxOption_C_SetText) == 0x000018, "Wrong size on WBP_S_ComboBoxOption_C_SetText");
static_assert(offsetof(WBP_S_ComboBoxOption_C_SetText, InText) == 0x000000, "Member 'WBP_S_ComboBoxOption_C_SetText::InText' has a wrong offset!");

}

