#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotFactory

#include "Basic.hpp"

#include "BP_BotFactory_classes.hpp"
#include "BP_BotFactory_parameters.hpp"


namespace SDK
{

// Function BP_BotFactory.BP_BotFactory_C.ApplyAncientFuryDebuff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::ApplyAncientFuryDebuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "ApplyAncientFuryDebuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.ApplyLightningEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::ApplyLightningEffect(class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "ApplyLightningEffect");

	Params::BP_BotFactory_C_ApplyLightningEffect Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.BindOnDamageEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::BindOnDamageEvent(class AHWCharacter_Base* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "BindOnDamageEvent");

	Params::BP_BotFactory_C_BindOnDamageEvent Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.DebugDrawVectorField
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::DebugDrawVectorField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "DebugDrawVectorField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.EndAbilityCalled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::EndAbilityCalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "EndAbilityCalled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.ExecuteUbergraph_BP_BotFactory
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::ExecuteUbergraph_BP_BotFactory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "ExecuteUbergraph_BP_BotFactory");

	Params::BP_BotFactory_C_ExecuteUbergraph_BP_BotFactory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.GenerateVectorField
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::GenerateVectorField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GenerateVectorField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.GetLeashCapsule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent**             LeashComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::GetLeashCapsule(class UPrimitiveComponent** LeashComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GetLeashCapsule");

	Params::BP_BotFactory_C_GetLeashCapsule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeashComponent != nullptr)
		*LeashComponent = Parms.LeashComponent;
}


// Function BP_BotFactory.BP_BotFactory_C.GetLeashRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 LeashRadius_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::GetLeashRadius(double* LeashRadius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GetLeashRadius");

	Params::BP_BotFactory_C_GetLeashRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeashRadius_0 != nullptr)
		*LeashRadius_0 = Parms.LeashRadius_0;
}


// Function BP_BotFactory.BP_BotFactory_C.GetLeashVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ATriggerVolume>*   LeashVolume_0                                          (Parm, OutParm, HasGetValueTypeHash)

void ABP_BotFactory_C::GetLeashVolume(TSoftObjectPtr<class ATriggerVolume>* LeashVolume_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GetLeashVolume");

	Params::BP_BotFactory_C_GetLeashVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeashVolume_0 != nullptr)
		*LeashVolume_0 = Parms.LeashVolume_0;
}


// Function BP_BotFactory.BP_BotFactory_C.GetNearbyMinionCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  MinionCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::GetNearbyMinionCount(int32* MinionCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GetNearbyMinionCount");

	Params::BP_BotFactory_C_GetNearbyMinionCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MinionCount != nullptr)
		*MinionCount = Parms.MinionCount;
}


// Function BP_BotFactory.BP_BotFactory_C.GetStartingWaypoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class AWaypoint_C>>*Waypoints                                              (Parm, OutParm)

void ABP_BotFactory_C::GetStartingWaypoints(TArray<TSoftObjectPtr<class AWaypoint_C>>* Waypoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "GetStartingWaypoints");

	Params::BP_BotFactory_C_GetStartingWaypoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Waypoints != nullptr)
		*Waypoints = std::move(Parms.Waypoints);
}


// Function BP_BotFactory.BP_BotFactory_C.LightningFuryDied
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::LightningFuryDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "LightningFuryDied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.MulticastCustomFactoryEmptied
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::MulticastCustomFactoryEmptied(class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "MulticastCustomFactoryEmptied");

	Params::BP_BotFactory_C_MulticastCustomFactoryEmptied Parms{};

	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.OnFactoryEmptied
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::OnFactoryEmptied(class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "OnFactoryEmptied");

	Params::BP_BotFactory_C_OnFactoryEmptied Parms{};

	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.OnSpawnedBot
// (Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_Base*                characterSpawned                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::OnSpawnedBot(class AHWCharacter_Base* characterSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "OnSpawnedBot");

	Params::BP_BotFactory_C_OnSpawnedBot Parms{};

	Parms.characterSpawned = characterSpawned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.RemoveAncientFuryDebuff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::RemoveAncientFuryDebuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "RemoveAncientFuryDebuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotFactory.BP_BotFactory_C.RetrieveTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          CurrentTargetActor                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::RetrieveTargetActor(class AActor** CurrentTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "RetrieveTargetActor");

	Params::BP_BotFactory_C_RetrieveTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentTargetActor != nullptr)
		*CurrentTargetActor = Parms.CurrentTargetActor;
}


// Function BP_BotFactory.BP_BotFactory_C.SendDamageCallback
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_BotFactory_C::SendDamageCallback(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "SendDamageCallback");

	Params::BP_BotFactory_C_SendDamageCallback Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.UpdateNearbyMinionCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  NewMinionCount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::UpdateNearbyMinionCount(int32 NewCount, int32* NewMinionCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "UpdateNearbyMinionCount");

	Params::BP_BotFactory_C_UpdateNearbyMinionCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);

	if (NewMinionCount != nullptr)
		*NewMinionCount = Parms.NewMinionCount;
}


// Function BP_BotFactory.BP_BotFactory_C.UpdateTargetActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewTargetActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BotFactory_C::UpdateTargetActor(class AActor* NewTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "UpdateTargetActor");

	Params::BP_BotFactory_C_UpdateTargetActor Parms{};

	Parms.NewTargetActor = NewTargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotFactory.BP_BotFactory_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BotFactory_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotFactory_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

