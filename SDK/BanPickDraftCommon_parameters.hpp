#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BanPickDraftCommon

#include "Basic.hpp"

#include "BanPickDraftCommon_structs.hpp"


namespace SDK::Params
{

// Function BanPickDraftCommon.DraftActorInterface.GetDraftActor
// 0x0010 (0x0010 - 0x0000)
struct DraftActorInterface_GetDraftActor final
{
public:
	class FName                                   InDraftName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADraftReplicatedActor*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftActorInterface_GetDraftActor) == 0x000008, "Wrong alignment on DraftActorInterface_GetDraftActor");
static_assert(sizeof(DraftActorInterface_GetDraftActor) == 0x000010, "Wrong size on DraftActorInterface_GetDraftActor");
static_assert(offsetof(DraftActorInterface_GetDraftActor, InDraftName) == 0x000000, "Member 'DraftActorInterface_GetDraftActor::InDraftName' has a wrong offset!");
static_assert(offsetof(DraftActorInterface_GetDraftActor, ReturnValue) == 0x000008, "Member 'DraftActorInterface_GetDraftActor::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftActorInterface.IsUIRelevantOrSpectator
// 0x0001 (0x0001 - 0x0000)
struct DraftActorInterface_IsUIRelevantOrSpectator final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftActorInterface_IsUIRelevantOrSpectator) == 0x000001, "Wrong alignment on DraftActorInterface_IsUIRelevantOrSpectator");
static_assert(sizeof(DraftActorInterface_IsUIRelevantOrSpectator) == 0x000001, "Wrong size on DraftActorInterface_IsUIRelevantOrSpectator");
static_assert(offsetof(DraftActorInterface_IsUIRelevantOrSpectator, ReturnValue) == 0x000000, "Member 'DraftActorInterface_IsUIRelevantOrSpectator::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.EmptyDraftTask
// 0x0048 (0x0048 - 0x0000)
struct DraftReplicatedActor_EmptyDraftTask final
{
public:
	struct FDraftTask                             ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_EmptyDraftTask) == 0x000008, "Wrong alignment on DraftReplicatedActor_EmptyDraftTask");
static_assert(sizeof(DraftReplicatedActor_EmptyDraftTask) == 0x000048, "Wrong size on DraftReplicatedActor_EmptyDraftTask");
static_assert(offsetof(DraftReplicatedActor_EmptyDraftTask, ReturnValue) == 0x000000, "Member 'DraftReplicatedActor_EmptyDraftTask::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskIdsEqual
// 0x0006 (0x0006 - 0x0000)
struct DraftReplicatedActor_IsTaskIdsEqual final
{
public:
	struct FDraftTaskId                           A;                                                 // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDraftTaskId                           B;                                                 // 0x0002(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x1];                                        // 0x0005(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_IsTaskIdsEqual) == 0x000002, "Wrong alignment on DraftReplicatedActor_IsTaskIdsEqual");
static_assert(sizeof(DraftReplicatedActor_IsTaskIdsEqual) == 0x000006, "Wrong size on DraftReplicatedActor_IsTaskIdsEqual");
static_assert(offsetof(DraftReplicatedActor_IsTaskIdsEqual, A) == 0x000000, "Member 'DraftReplicatedActor_IsTaskIdsEqual::A' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_IsTaskIdsEqual, B) == 0x000002, "Member 'DraftReplicatedActor_IsTaskIdsEqual::B' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_IsTaskIdsEqual, ReturnValue) == 0x000004, "Member 'DraftReplicatedActor_IsTaskIdsEqual::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskIdValid
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_IsTaskIdValid final
{
public:
	struct FDraftTaskId                           InTaskId;                                          // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_IsTaskIdValid) == 0x000002, "Wrong alignment on DraftReplicatedActor_IsTaskIdValid");
static_assert(sizeof(DraftReplicatedActor_IsTaskIdValid) == 0x000004, "Wrong size on DraftReplicatedActor_IsTaskIdValid");
static_assert(offsetof(DraftReplicatedActor_IsTaskIdValid, InTaskId) == 0x000000, "Member 'DraftReplicatedActor_IsTaskIdValid::InTaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_IsTaskIdValid, ReturnValue) == 0x000002, "Member 'DraftReplicatedActor_IsTaskIdValid::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskValid
// 0x0050 (0x0050 - 0x0000)
struct DraftReplicatedActor_IsTaskValid final
{
public:
	struct FDraftTask                             InTask;                                            // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_IsTaskValid) == 0x000008, "Wrong alignment on DraftReplicatedActor_IsTaskValid");
static_assert(sizeof(DraftReplicatedActor_IsTaskValid) == 0x000050, "Wrong size on DraftReplicatedActor_IsTaskValid");
static_assert(offsetof(DraftReplicatedActor_IsTaskValid, InTask) == 0x000000, "Member 'DraftReplicatedActor_IsTaskValid::InTask' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_IsTaskValid, ReturnValue) == 0x000048, "Member 'DraftReplicatedActor_IsTaskValid::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.TasksEqual
// 0x0098 (0x0098 - 0x0000)
struct DraftReplicatedActor_TasksEqual final
{
public:
	struct FDraftTask                             A;                                                 // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDraftTask                             B;                                                 // 0x0048(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_TasksEqual) == 0x000008, "Wrong alignment on DraftReplicatedActor_TasksEqual");
static_assert(sizeof(DraftReplicatedActor_TasksEqual) == 0x000098, "Wrong size on DraftReplicatedActor_TasksEqual");
static_assert(offsetof(DraftReplicatedActor_TasksEqual, A) == 0x000000, "Member 'DraftReplicatedActor_TasksEqual::A' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_TasksEqual, B) == 0x000048, "Member 'DraftReplicatedActor_TasksEqual::B' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_TasksEqual, ReturnValue) == 0x000090, "Member 'DraftReplicatedActor_TasksEqual::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.ClientAcknowledgeComplete
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_ClientAcknowledgeComplete final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_ClientAcknowledgeComplete) == 0x000002, "Wrong alignment on DraftReplicatedActor_ClientAcknowledgeComplete");
static_assert(sizeof(DraftReplicatedActor_ClientAcknowledgeComplete) == 0x000004, "Wrong size on DraftReplicatedActor_ClientAcknowledgeComplete");
static_assert(offsetof(DraftReplicatedActor_ClientAcknowledgeComplete, TaskId) == 0x000000, "Member 'DraftReplicatedActor_ClientAcknowledgeComplete::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_ClientAcknowledgeComplete, bSuccess) == 0x000002, "Member 'DraftReplicatedActor_ClientAcknowledgeComplete::bSuccess' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.ClientAcknowledgeSelect
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_ClientAcknowledgeSelect final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_ClientAcknowledgeSelect) == 0x000002, "Wrong alignment on DraftReplicatedActor_ClientAcknowledgeSelect");
static_assert(sizeof(DraftReplicatedActor_ClientAcknowledgeSelect) == 0x000004, "Wrong size on DraftReplicatedActor_ClientAcknowledgeSelect");
static_assert(offsetof(DraftReplicatedActor_ClientAcknowledgeSelect, TaskId) == 0x000000, "Member 'DraftReplicatedActor_ClientAcknowledgeSelect::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_ClientAcknowledgeSelect, bSuccess) == 0x000002, "Member 'DraftReplicatedActor_ClientAcknowledgeSelect::bSuccess' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.FindChoiceByUObject
// 0x0018 (0x0018 - 0x0000)
struct DraftReplicatedActor_FindChoiceByUObject final
{
public:
	class UObject*                                ChoiceObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDraftChoice                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_FindChoiceByUObject) == 0x000008, "Wrong alignment on DraftReplicatedActor_FindChoiceByUObject");
static_assert(sizeof(DraftReplicatedActor_FindChoiceByUObject) == 0x000018, "Wrong size on DraftReplicatedActor_FindChoiceByUObject");
static_assert(offsetof(DraftReplicatedActor_FindChoiceByUObject, ChoiceObject) == 0x000000, "Member 'DraftReplicatedActor_FindChoiceByUObject::ChoiceObject' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_FindChoiceByUObject, ReturnValue) == 0x000008, "Member 'DraftReplicatedActor_FindChoiceByUObject::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.OnPlayerOwnerLogout
// 0x0008 (0x0008 - 0x0000)
struct DraftReplicatedActor_OnPlayerOwnerLogout final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_OnPlayerOwnerLogout) == 0x000008, "Wrong alignment on DraftReplicatedActor_OnPlayerOwnerLogout");
static_assert(sizeof(DraftReplicatedActor_OnPlayerOwnerLogout) == 0x000008, "Wrong size on DraftReplicatedActor_OnPlayerOwnerLogout");
static_assert(offsetof(DraftReplicatedActor_OnPlayerOwnerLogout, InActor) == 0x000000, "Member 'DraftReplicatedActor_OnPlayerOwnerLogout::InActor' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.RequestCompleteTask
// 0x0010 (0x0010 - 0x0000)
struct DraftReplicatedActor_RequestCompleteTask final
{
public:
	class UObject*                                ChoiceObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECanCompleteDraftTaskResult                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_RequestCompleteTask) == 0x000008, "Wrong alignment on DraftReplicatedActor_RequestCompleteTask");
static_assert(sizeof(DraftReplicatedActor_RequestCompleteTask) == 0x000010, "Wrong size on DraftReplicatedActor_RequestCompleteTask");
static_assert(offsetof(DraftReplicatedActor_RequestCompleteTask, ChoiceObject) == 0x000000, "Member 'DraftReplicatedActor_RequestCompleteTask::ChoiceObject' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_RequestCompleteTask, ReturnValue) == 0x000008, "Member 'DraftReplicatedActor_RequestCompleteTask::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.RequestSelect
// 0x0010 (0x0010 - 0x0000)
struct DraftReplicatedActor_RequestSelect final
{
public:
	class UObject*                                ChoiceObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECanCompleteDraftTaskResult                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_RequestSelect) == 0x000008, "Wrong alignment on DraftReplicatedActor_RequestSelect");
static_assert(sizeof(DraftReplicatedActor_RequestSelect) == 0x000010, "Wrong size on DraftReplicatedActor_RequestSelect");
static_assert(offsetof(DraftReplicatedActor_RequestSelect, ChoiceObject) == 0x000000, "Member 'DraftReplicatedActor_RequestSelect::ChoiceObject' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_RequestSelect, ReturnValue) == 0x000008, "Member 'DraftReplicatedActor_RequestSelect::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.ServerRequestComplete
// 0x0010 (0x0010 - 0x0000)
struct DraftReplicatedActor_ServerRequestComplete final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ChoiceObject;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_ServerRequestComplete) == 0x000008, "Wrong alignment on DraftReplicatedActor_ServerRequestComplete");
static_assert(sizeof(DraftReplicatedActor_ServerRequestComplete) == 0x000010, "Wrong size on DraftReplicatedActor_ServerRequestComplete");
static_assert(offsetof(DraftReplicatedActor_ServerRequestComplete, TaskId) == 0x000000, "Member 'DraftReplicatedActor_ServerRequestComplete::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_ServerRequestComplete, ChoiceObject) == 0x000008, "Member 'DraftReplicatedActor_ServerRequestComplete::ChoiceObject' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.ServerRequestSelect
// 0x0010 (0x0010 - 0x0000)
struct DraftReplicatedActor_ServerRequestSelect final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ChoiceObject;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_ServerRequestSelect) == 0x000008, "Wrong alignment on DraftReplicatedActor_ServerRequestSelect");
static_assert(sizeof(DraftReplicatedActor_ServerRequestSelect) == 0x000010, "Wrong size on DraftReplicatedActor_ServerRequestSelect");
static_assert(offsetof(DraftReplicatedActor_ServerRequestSelect, TaskId) == 0x000000, "Member 'DraftReplicatedActor_ServerRequestSelect::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_ServerRequestSelect, ChoiceObject) == 0x000008, "Member 'DraftReplicatedActor_ServerRequestSelect::ChoiceObject' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetActiveTaskForPlayer
// 0x0060 (0x0060 - 0x0000)
struct DraftReplicatedActor_GetActiveTaskForPlayer final
{
public:
	struct FDraftPlayerIdHandle                   InPlayerId;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPendingComplete;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDraftTask                             ReturnValue;                                       // 0x0018(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetActiveTaskForPlayer) == 0x000008, "Wrong alignment on DraftReplicatedActor_GetActiveTaskForPlayer");
static_assert(sizeof(DraftReplicatedActor_GetActiveTaskForPlayer) == 0x000060, "Wrong size on DraftReplicatedActor_GetActiveTaskForPlayer");
static_assert(offsetof(DraftReplicatedActor_GetActiveTaskForPlayer, InPlayerId) == 0x000000, "Member 'DraftReplicatedActor_GetActiveTaskForPlayer::InPlayerId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetActiveTaskForPlayer, bPendingComplete) == 0x000010, "Member 'DraftReplicatedActor_GetActiveTaskForPlayer::bPendingComplete' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetActiveTaskForPlayer, ReturnValue) == 0x000018, "Member 'DraftReplicatedActor_GetActiveTaskForPlayer::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetCompletedTasksForPlayer
// 0x0020 (0x0020 - 0x0000)
struct DraftReplicatedActor_GetCompletedTasksForPlayer final
{
public:
	struct FDraftPlayerIdHandle                   InPlayerId;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDraftTask>                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetCompletedTasksForPlayer) == 0x000008, "Wrong alignment on DraftReplicatedActor_GetCompletedTasksForPlayer");
static_assert(sizeof(DraftReplicatedActor_GetCompletedTasksForPlayer) == 0x000020, "Wrong size on DraftReplicatedActor_GetCompletedTasksForPlayer");
static_assert(offsetof(DraftReplicatedActor_GetCompletedTasksForPlayer, InPlayerId) == 0x000000, "Member 'DraftReplicatedActor_GetCompletedTasksForPlayer::InPlayerId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetCompletedTasksForPlayer, ReturnValue) == 0x000010, "Member 'DraftReplicatedActor_GetCompletedTasksForPlayer::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetOwningPlayerController
// 0x0008 (0x0008 - 0x0000)
struct DraftReplicatedActor_GetOwningPlayerController final
{
public:
	class APlayerController*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetOwningPlayerController) == 0x000008, "Wrong alignment on DraftReplicatedActor_GetOwningPlayerController");
static_assert(sizeof(DraftReplicatedActor_GetOwningPlayerController) == 0x000008, "Wrong size on DraftReplicatedActor_GetOwningPlayerController");
static_assert(offsetof(DraftReplicatedActor_GetOwningPlayerController, ReturnValue) == 0x000000, "Member 'DraftReplicatedActor_GetOwningPlayerController::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeRemainingByTaskId
// 0x0008 (0x0008 - 0x0000)
struct DraftReplicatedActor_GetTimeRemainingByTaskId final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetTimeRemainingByTaskId) == 0x000004, "Wrong alignment on DraftReplicatedActor_GetTimeRemainingByTaskId");
static_assert(sizeof(DraftReplicatedActor_GetTimeRemainingByTaskId) == 0x000008, "Wrong size on DraftReplicatedActor_GetTimeRemainingByTaskId");
static_assert(offsetof(DraftReplicatedActor_GetTimeRemainingByTaskId, TaskId) == 0x000000, "Member 'DraftReplicatedActor_GetTimeRemainingByTaskId::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetTimeRemainingByTaskId, ReturnValue) == 0x000004, "Member 'DraftReplicatedActor_GetTimeRemainingByTaskId::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeRemainingByTimerId
// 0x0008 (0x0008 - 0x0000)
struct DraftReplicatedActor_GetTimeRemainingByTimerId final
{
public:
	struct FPGame_ReplicatedTimerId               TimerId;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetTimeRemainingByTimerId) == 0x000004, "Wrong alignment on DraftReplicatedActor_GetTimeRemainingByTimerId");
static_assert(sizeof(DraftReplicatedActor_GetTimeRemainingByTimerId) == 0x000008, "Wrong size on DraftReplicatedActor_GetTimeRemainingByTimerId");
static_assert(offsetof(DraftReplicatedActor_GetTimeRemainingByTimerId, TimerId) == 0x000000, "Member 'DraftReplicatedActor_GetTimeRemainingByTimerId::TimerId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetTimeRemainingByTimerId, ReturnValue) == 0x000004, "Member 'DraftReplicatedActor_GetTimeRemainingByTimerId::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimerStateByTaskId
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_GetTimerStateByTaskId final
{
public:
	struct FDraftTaskId                           TaskId;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPGame_ReplicateTimerState                    ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_GetTimerStateByTaskId) == 0x000002, "Wrong alignment on DraftReplicatedActor_GetTimerStateByTaskId");
static_assert(sizeof(DraftReplicatedActor_GetTimerStateByTaskId) == 0x000004, "Wrong size on DraftReplicatedActor_GetTimerStateByTaskId");
static_assert(offsetof(DraftReplicatedActor_GetTimerStateByTaskId, TaskId) == 0x000000, "Member 'DraftReplicatedActor_GetTimerStateByTaskId::TaskId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetTimerStateByTaskId, ReturnValue) == 0x000002, "Member 'DraftReplicatedActor_GetTimerStateByTaskId::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimerStateByTimerId
// 0x0002 (0x0002 - 0x0000)
struct DraftReplicatedActor_GetTimerStateByTimerId final
{
public:
	struct FPGame_ReplicatedTimerId               TimerId;                                           // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPGame_ReplicateTimerState                    ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetTimerStateByTimerId) == 0x000001, "Wrong alignment on DraftReplicatedActor_GetTimerStateByTimerId");
static_assert(sizeof(DraftReplicatedActor_GetTimerStateByTimerId) == 0x000002, "Wrong size on DraftReplicatedActor_GetTimerStateByTimerId");
static_assert(offsetof(DraftReplicatedActor_GetTimerStateByTimerId, TimerId) == 0x000000, "Member 'DraftReplicatedActor_GetTimerStateByTimerId::TimerId' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_GetTimerStateByTimerId, ReturnValue) == 0x000001, "Member 'DraftReplicatedActor_GetTimerStateByTimerId::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeUntilLastActiveTaskExpires
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires) == 0x000004, "Wrong alignment on DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires");
static_assert(sizeof(DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires) == 0x000004, "Wrong size on DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires");
static_assert(offsetof(DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires, ReturnValue) == 0x000000, "Member 'DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeUntilNextActiveTaskExpires
// 0x0004 (0x0004 - 0x0000)
struct DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires) == 0x000004, "Wrong alignment on DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires");
static_assert(sizeof(DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires) == 0x000004, "Wrong size on DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires");
static_assert(offsetof(DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires, ReturnValue) == 0x000000, "Member 'DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftReplicatedActor.IsValidChoiceForPersonalActiveTask
// 0x0010 (0x0010 - 0x0000)
struct DraftReplicatedActor_IsValidChoiceForPersonalActiveTask final
{
public:
	class UObject*                                ChoiceObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECanCompleteDraftTaskResult                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DraftReplicatedActor_IsValidChoiceForPersonalActiveTask) == 0x000008, "Wrong alignment on DraftReplicatedActor_IsValidChoiceForPersonalActiveTask");
static_assert(sizeof(DraftReplicatedActor_IsValidChoiceForPersonalActiveTask) == 0x000010, "Wrong size on DraftReplicatedActor_IsValidChoiceForPersonalActiveTask");
static_assert(offsetof(DraftReplicatedActor_IsValidChoiceForPersonalActiveTask, ChoiceObject) == 0x000000, "Member 'DraftReplicatedActor_IsValidChoiceForPersonalActiveTask::ChoiceObject' has a wrong offset!");
static_assert(offsetof(DraftReplicatedActor_IsValidChoiceForPersonalActiveTask, ReturnValue) == 0x000008, "Member 'DraftReplicatedActor_IsValidChoiceForPersonalActiveTask::ReturnValue' has a wrong offset!");

// Function BanPickDraftCommon.DraftRules.GetOverallStatusTextAndTimer
// 0x0070 (0x0070 - 0x0000)
struct DraftRules_GetOverallStatusTextAndTimer final
{
public:
	const class ADraftReplicatedActor*            InDraftActor;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPGame_ReplicatedTimerId               OutActiveTimerId;                                  // 0x0008(0x0001)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDraftTask                             PrimaryTask;                                       // 0x0010(0x0048)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0058(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DraftRules_GetOverallStatusTextAndTimer) == 0x000008, "Wrong alignment on DraftRules_GetOverallStatusTextAndTimer");
static_assert(sizeof(DraftRules_GetOverallStatusTextAndTimer) == 0x000070, "Wrong size on DraftRules_GetOverallStatusTextAndTimer");
static_assert(offsetof(DraftRules_GetOverallStatusTextAndTimer, InDraftActor) == 0x000000, "Member 'DraftRules_GetOverallStatusTextAndTimer::InDraftActor' has a wrong offset!");
static_assert(offsetof(DraftRules_GetOverallStatusTextAndTimer, OutActiveTimerId) == 0x000008, "Member 'DraftRules_GetOverallStatusTextAndTimer::OutActiveTimerId' has a wrong offset!");
static_assert(offsetof(DraftRules_GetOverallStatusTextAndTimer, PrimaryTask) == 0x000010, "Member 'DraftRules_GetOverallStatusTextAndTimer::PrimaryTask' has a wrong offset!");
static_assert(offsetof(DraftRules_GetOverallStatusTextAndTimer, ReturnValue) == 0x000058, "Member 'DraftRules_GetOverallStatusTextAndTimer::ReturnValue' has a wrong offset!");

}

