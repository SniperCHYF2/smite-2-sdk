#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_CurrencySimpleInfo

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_CurrencySimpleInfo.WBP_S_CurrencySimpleInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_CurrencySimpleInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CurrencySimpleInfo_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_CurrencySimpleInfo_C_PreConstruct");
static_assert(sizeof(WBP_S_CurrencySimpleInfo_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_CurrencySimpleInfo_C_PreConstruct");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_CurrencySimpleInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_S_CurrencySimpleInfo.WBP_S_CurrencySimpleInfo_C.OnDisplayItemAsCurrency
// 0x0050 (0x0050 - 0x0000)
struct WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency final
{
public:
	class URHCurrency*                            CURRENCY;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHStoreItem*                           CallFunc_GetStoreItem_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLootQuantity_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
};
static_assert(alignof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency) == 0x000008, "Wrong alignment on WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency");
static_assert(sizeof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency) == 0x000050, "Wrong size on WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CURRENCY) == 0x000000, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CURRENCY' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_GetItemName_ReturnValue) == 0x000008, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_GetStoreItem_ReturnValue) == 0x000028, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_GetStoreItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_GetLootQuantity_ReturnValue) == 0x000030, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_GetLootQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WBP_S_CurrencySimpleInfo_C_OnDisplayItemAsCurrency::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_S_CurrencySimpleInfo.WBP_S_CurrencySimpleInfo_C.ExecuteUbergraph_WBP_S_CurrencySimpleInfo
// 0x000C (0x000C - 0x0000)
struct WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo) == 0x000004, "Wrong alignment on WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo");
static_assert(sizeof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo) == 0x00000C, "Wrong size on WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, EntryPoint) == 0x000000, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, Temp_byte_Variable) == 0x000004, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, Temp_byte_Variable_4) == 0x000009, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo, K2Node_Select_Default) == 0x00000A, "Member 'WBP_S_CurrencySimpleInfo_C_ExecuteUbergraph_WBP_S_CurrencySimpleInfo::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_CurrencySimpleInfo.WBP_S_CurrencySimpleInfo_C.DisplayOrderCurrency
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency final
{
public:
	class URHStoreItem*                           InStoreItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         InOrderQuantity;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency) == 0x000008, "Wrong alignment on WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency");
static_assert(sizeof(WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency) == 0x000010, "Wrong size on WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency, InStoreItem) == 0x000000, "Member 'WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency::InStoreItem' has a wrong offset!");
static_assert(offsetof(WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency, InOrderQuantity) == 0x000008, "Member 'WBP_S_CurrencySimpleInfo_C_DisplayOrderCurrency::InOrderQuantity' has a wrong offset!");

}

