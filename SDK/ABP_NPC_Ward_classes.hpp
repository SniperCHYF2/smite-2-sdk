#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_Ward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ABP_NPC_Ward_structs.hpp"
#include "Hemingway_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_Ward.ABP_NPC_Ward_C
// 0x03D0 (0x09B0 - 0x05E0)
class UABP_NPC_Ward_C final : public UHWCharacter_AnimInstNPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_NPC_Ward::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x05E8(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x05F8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0600(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0608(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0630(0x0120)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0750(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0780(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07F8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0848(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0870(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0940(0x0050)()
	struct FVector                                Relative_Direction;                                // 0x0990(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_NPC_Ward(int32 EntryPoint);
	void PlayHitReaction(const struct FVector& RelativeDirection, float HealthPercent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_Ward_C">();
	}
	static class UABP_NPC_Ward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_Ward_C>();
	}
};
static_assert(alignof(UABP_NPC_Ward_C) == 0x000010, "Wrong alignment on UABP_NPC_Ward_C");
static_assert(sizeof(UABP_NPC_Ward_C) == 0x0009B0, "Wrong size on UABP_NPC_Ward_C");
static_assert(offsetof(UABP_NPC_Ward_C, UberGraphFrame) == 0x0005E0, "Member 'UABP_NPC_Ward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, __AnimBlueprintMutables) == 0x0005E8, "Member 'UABP_NPC_Ward_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimBlueprintExtension_PropertyAccess) == 0x0005F8, "Member 'UABP_NPC_Ward_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimBlueprintExtension_Base) == 0x000600, "Member 'UABP_NPC_Ward_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_Root) == 0x000608, "Member 'UABP_NPC_Ward_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000630, "Member 'UABP_NPC_Ward_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_TransitionResult) == 0x000750, "Member 'UABP_NPC_Ward_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_SequencePlayer_1) == 0x000780, "Member 'UABP_NPC_Ward_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_StateResult_1) == 0x0007D0, "Member 'UABP_NPC_Ward_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_SequencePlayer) == 0x0007F8, "Member 'UABP_NPC_Ward_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_StateResult) == 0x000848, "Member 'UABP_NPC_Ward_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_StateMachine) == 0x000870, "Member 'UABP_NPC_Ward_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, AnimGraphNode_Slot) == 0x000940, "Member 'UABP_NPC_Ward_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Ward_C, Relative_Direction) == 0x000990, "Member 'UABP_NPC_Ward_C::Relative_Direction' has a wrong offset!");

}

