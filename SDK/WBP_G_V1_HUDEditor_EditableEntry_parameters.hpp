#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_HUDEditor_EditableEntry

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_OpacityBar_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_ScaleBar_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_BndEvt__WBP_G_V1_HUDEditor_EditableEntry_VisibilityCheckBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.CustomModifierFieldAdded
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded final
{
public:
	class UHWHUDEditorEditableEntryCustomField*   AddedCustomField;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded) == 0x000020, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded, AddedCustomField) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded::AddedCustomField' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded, K2Node_MakeStruct_Margin) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldAdded::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.CustomModifierFieldRemoved
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved final
{
public:
	class UHWHUDEditorEditableEntryCustomField*   RemovedCustomField;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved) == 0x000010, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved, RemovedCustomField) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved::RemovedCustomField' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved, CallFunc_RemoveChild_ReturnValue) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_CustomModifierFieldRemoved::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.DisplayGenericModifierData
// 0x001C (0x001C - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData final
{
public:
	struct FHWUIStyleLocalGenericModifier         GenericModifier;                                   // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TDelegate<void(class UHWDragArea* DragArea, bool bNewIsDragging)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData) == 0x00001C, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData, GenericModifier) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData::GenericModifier' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_DisplayGenericModifierData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.DisplayLocalModifier
// 0x0088 (0x0088 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier final
{
public:
	struct FHWUIStyleLocalModifier                LocalModifier;                                     // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier) == 0x000088, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier, LocalModifier) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_DisplayLocalModifier::LocalModifier' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.EntrySelectedStateChanged
// 0x001C (0x001C - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged) == 0x00001C, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged, bIsSelected) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged, Temp_struct_Variable) == 0x000004, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged, K2Node_Select_Default) == 0x000014, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_EntrySelectedStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry
// 0x0138 (0x0138 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0048(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C0(0x0078)(ConstParm)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry) == 0x000138, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, EntryPoint) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_ComponentBoundEvent_Value_1) == 0x000004, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_ComponentBoundEvent_bIsChecked) == 0x00000C, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_Event_MyGeometry) == 0x000010, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_Event_MouseEvent_1) == 0x000048, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry, K2Node_Event_MouseEvent) == 0x0000C0, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_ExecuteUbergraph_WBP_G_V1_HUDEditor_EditableEntry::K2Node_Event_MouseEvent' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.HandleIsDragging
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging final
{
public:
	class UHWDragArea*                            DragArea;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewIsDragging;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging) == 0x000010, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging, DragArea) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging::DragArea' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging, bNewIsDragging) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleIsDragging::bNewIsDragging' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.HandleOpacityNavigation
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation) == 0x000020, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Navigation_0) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, ReturnValue) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_byte_Variable) == 0x000010, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable) == 0x000011, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_1) == 0x000012, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_2) == 0x000013, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_3) == 0x000014, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_4) == 0x000015, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_5) == 0x000016, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, Temp_bool_Variable_6) == 0x000017, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation, K2Node_Select_Default) == 0x000018, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleOpacityNavigation::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.HandleScaleNavigation
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation) == 0x000020, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Navigation_0) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, ReturnValue) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_byte_Variable) == 0x000010, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable) == 0x000011, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_1) == 0x000012, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_2) == 0x000013, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_3) == 0x000014, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_4) == 0x000015, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_5) == 0x000016, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, Temp_bool_Variable_6) == 0x000017, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation, K2Node_Select_Default) == 0x000018, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleScaleNavigation::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.HandleSliderNavigation
// 0x0050 (0x0050 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation final
{
public:
	bool                                          bIsIncrement;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWSlider*                              Slider;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation) == 0x000050, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, bIsIncrement) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::bIsIncrement' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, Slider) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::Slider' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_FClamp_Max_ImplicitCast) == 0x000030, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_FClamp_Min_ImplicitCast) == 0x000038, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation, CallFunc_SetValue_InValue_ImplicitCast) == 0x000048, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_HandleSliderNavigation::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.OnAddedToFocusPath
// 0x000C (0x000C - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath) == 0x00000C, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath, CallFunc_GetCurrentInputState_ReturnValue) == 0x000008, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnAddedToFocusPath::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived) == 0x0001B8, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x0000F8, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.SetHighilightState
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState final
{
public:
	bool                                          bShouldHighlight;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V1_HUDEditor_Highlighter_C*      K2Node_DynamicCast_AsWBP_G_V1_HUDEditor_Highlighter; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState) == 0x000030, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, bShouldHighlight) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::bShouldHighlight' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, Temp_struct_Variable) == 0x000004, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, K2Node_Select_Default) == 0x000014, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, K2Node_DynamicCast_AsWBP_G_V1_HUDEditor_Highlighter) == 0x000020, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::K2Node_DynamicCast_AsWBP_G_V1_HUDEditor_Highlighter' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_SetHighilightState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_G_V1_HUDEditor_EditableEntry.WBP_G_V1_HUDEditor_EditableEntry_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V1_HUDEditor_EditableEntry_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

