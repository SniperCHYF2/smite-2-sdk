#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_SurrenderPip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_SurrenderPip.WBP_G_V2_SurrenderPip_C.DisplayVoteState
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_SurrenderPip_C_DisplayVoteState final
{
public:
	EHWVoteState                                  VoteState;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWVoteState                                  Temp_byte_Variable_2;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderPip_C_DisplayVoteState) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderPip_C_DisplayVoteState");
static_assert(sizeof(WBP_G_V2_SurrenderPip_C_DisplayVoteState) == 0x000040, "Wrong size on WBP_G_V2_SurrenderPip_C_DisplayVoteState");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, VoteState) == 0x000000, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::VoteState' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_object_Variable) == 0x000008, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_object_Variable_1) == 0x000018, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_object_Variable_2) == 0x000020, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_bool_Variable) == 0x000028, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_byte_Variable) == 0x000029, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, K2Node_Select_Default) == 0x00002B, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00002C, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, Temp_byte_Variable_2) == 0x00002D, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderPip_C_DisplayVoteState, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_G_V2_SurrenderPip_C_DisplayVoteState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

