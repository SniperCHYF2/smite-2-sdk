#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BaronSamedi_Passive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_BaronSamedi_Passive.GA_BaronSamedi_Passive_C
// 0x0040 (0x0DB0 - 0x0D70)
class UGA_BaronSamedi_Passive_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSubclassOf<class UGameplayEffect>            Hysteria_Manager_GE;                               // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Hysteria_Drain_GE;                                 // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Hysteria_Prevent_Grain_GE;                         // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Hysteria_Application_GE;                           // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        MaxHysteriaThreshold;                              // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TalentDamagePerHysteria;                           // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IntScalingPerHysteria;                             // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyHysteriaToTarget(const struct FGameplayAbilityTargetDataHandle& Target_Data, double Hysteria_Amount_To_Apply);
	void DamageEvent(const struct FDamageEventData& DamageEventData);
	void ExecuteUbergraph_GA_BaronSamedi_Passive(int32 EntryPoint);
	void GetA01TalentDoTHysteriaAmount(double* HysteriaToApply);
	void GetA03BurstHysteriaAmount(double* HysteriaToApply);
	void GetA03DotHysteriaAmount(double* HysteriaToApply);
	void SetupListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_BaronSamedi_Passive_C">();
	}
	static class UGA_BaronSamedi_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_BaronSamedi_Passive_C>();
	}
};
static_assert(alignof(UGA_BaronSamedi_Passive_C) == 0x000008, "Wrong alignment on UGA_BaronSamedi_Passive_C");
static_assert(sizeof(UGA_BaronSamedi_Passive_C) == 0x000DB0, "Wrong size on UGA_BaronSamedi_Passive_C");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, UberGraphFrame) == 0x000D70, "Member 'UGA_BaronSamedi_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, Hysteria_Manager_GE) == 0x000D78, "Member 'UGA_BaronSamedi_Passive_C::Hysteria_Manager_GE' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, Hysteria_Drain_GE) == 0x000D80, "Member 'UGA_BaronSamedi_Passive_C::Hysteria_Drain_GE' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, Hysteria_Prevent_Grain_GE) == 0x000D88, "Member 'UGA_BaronSamedi_Passive_C::Hysteria_Prevent_Grain_GE' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, Hysteria_Application_GE) == 0x000D90, "Member 'UGA_BaronSamedi_Passive_C::Hysteria_Application_GE' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, MaxHysteriaThreshold) == 0x000D98, "Member 'UGA_BaronSamedi_Passive_C::MaxHysteriaThreshold' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, TalentDamagePerHysteria) == 0x000DA0, "Member 'UGA_BaronSamedi_Passive_C::TalentDamagePerHysteria' has a wrong offset!");
static_assert(offsetof(UGA_BaronSamedi_Passive_C, IntScalingPerHysteria) == 0x000DA8, "Member 'UGA_BaronSamedi_Passive_C::IntScalingPerHysteria' has a wrong offset!");

}

