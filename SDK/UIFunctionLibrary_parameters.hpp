#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIFunctionLibrary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "ButtonIconAssoc_structs.hpp"


namespace SDK::Params
{

// Function UIFunctionLibrary.UIFunctionLibrary_C.FormatSecondsToHighestTimerText
// 0x05F8 (0x05F8 - 0x0000)
struct UIFunctionLibrary_C_FormatSecondsToHighestTimerText final
{
public:
	int64                                         Seconds;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   WeekOverride;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   WeeksOverride;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   DayOverride;                                       // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   DaysOverride;                                      // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   HourOverride;                                      // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   HoursOverride;                                     // 0x0080(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          UseOverrides;                                      // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Timer_Text;                                        // 0x00A8(0x0018)(Parm, OutParm)
	int32                                         Days;                                              // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Week;                                              // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00E0(0x0018)()
	int32                                         CallFunc_GetDays_ReturnValue;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0100(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0120(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0140(0x0018)()
	bool                                          Temp_bool_Variable_5;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0220(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0240(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0290(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A8(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02C8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0318(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0368(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0388(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03D8(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x03E8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0400(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0418(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0430(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0448(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0460(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0478(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0490(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x04A8(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_5;                           // 0x04F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0510(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0520(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0538(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0550(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x05A0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x05B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x05C8(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1; // 0x05E0(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_FormatSecondsToHighestTimerText");
static_assert(sizeof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText) == 0x0005F8, "Wrong size on UIFunctionLibrary_C_FormatSecondsToHighestTimerText");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Seconds) == 0x000000, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Seconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, WeekOverride) == 0x000008, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::WeekOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, WeeksOverride) == 0x000020, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::WeeksOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, DayOverride) == 0x000038, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::DayOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, DaysOverride) == 0x000050, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::DaysOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, HourOverride) == 0x000068, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::HourOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, HoursOverride) == 0x000080, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::HoursOverride' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, UseOverrides) == 0x000098, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::UseOverrides' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, __WorldContext) == 0x0000A0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Timer_Text) == 0x0000A8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Timer_Text' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Days) == 0x0000C0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Days' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Week) == 0x0000C4, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Week' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable) == 0x0000C8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0000CC, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable_1) == 0x0000D0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_MakeTimespan_ReturnValue) == 0x0000D8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_text_Variable) == 0x0000E0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_GetDays_ReturnValue) == 0x0000F8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_GetDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable_2) == 0x0000FC, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_text_Variable_1) == 0x000100, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable_3) == 0x000118, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_text_Variable_2) == 0x000120, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable_4) == 0x000138, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_text_Variable_3) == 0x000140, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, Temp_bool_Variable_5) == 0x000158, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Greater_IntInt_ReturnValue) == 0x000159, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Divide_IntInt_ReturnValue) == 0x00015C, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000160, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array) == 0x0001C0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_MakeLiteralText_ReturnValue) == 0x000220, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000238, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000240, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array_1) == 0x000290, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002A0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue) == 0x0002A8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0002C0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002C8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000318, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array_2) == 0x000368, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000378, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000380, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000388, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array_3) == 0x0003D8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default) == 0x0003E8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default_1) == 0x000400, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default_2) == 0x000418, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue_1) == 0x000430, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default_3) == 0x000448, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000460, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue_2) == 0x000478, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default_4) == 0x000490, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_6) == 0x0004A8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_Select_Default_5) == 0x0004F8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array_4) == 0x000510, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue_3) == 0x000520, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue_4) == 0x000538, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeStruct_FormatArgumentData_7) == 0x000550, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x0005A0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, K2Node_MakeArray_Array_5) == 0x0005B8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_Format_ReturnValue_5) == 0x0005C8, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToHighestTimerText, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1) == 0x0005E0, "Member 'UIFunctionLibrary_C_FormatSecondsToHighestTimerText::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.FormatSecondsToTimerText
// 0x0200 (0x0200 - 0x0000)
struct UIFunctionLibrary_C_FormatSecondsToTimerText final
{
public:
	double                                        Seconds;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute_Digits;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTenths;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Timer_Text;                                        // 0x0018(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x01C8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E0(0x0018)()
	float                                         CallFunc_FromSeconds_Seconds_ImplicitCast;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_FormatSecondsToTimerText) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_FormatSecondsToTimerText");
static_assert(sizeof(UIFunctionLibrary_C_FormatSecondsToTimerText) == 0x000200, "Wrong size on UIFunctionLibrary_C_FormatSecondsToTimerText");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Seconds) == 0x000000, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Seconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Minute_Digits) == 0x000008, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Minute_Digits' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, ShowTenths) == 0x00000C, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::ShowTenths' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, __WorldContext) == 0x000010, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Timer_Text) == 0x000018, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Timer_Text' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Temp_bool_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_FromSeconds_ReturnValue) == 0x000038, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_BreakTimespan_Days) == 0x000040, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_BreakTimespan_Hours) == 0x000044, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_BreakTimespan_Minutes) == 0x000048, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_BreakTimespan_Seconds) == 0x00004C, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_BreakTimespan_Milliseconds) == 0x000050, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Temp_text_Variable) == 0x000058, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_Divide_IntInt_ReturnValue) == 0x000070, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000078, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_Conv_IntToText_ReturnValue) == 0x000080, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000138, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, Temp_text_Variable_1) == 0x000150, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, K2Node_MakeArray_Array) == 0x0001B8, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, K2Node_Select_Default) == 0x0001C8, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_Format_ReturnValue) == 0x0001E0, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_FormatSecondsToTimerText, CallFunc_FromSeconds_Seconds_ImplicitCast) == 0x0001F8, "Member 'UIFunctionLibrary_C_FormatSecondsToTimerText::CallFunc_FromSeconds_Seconds_ImplicitCast' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleDescription
// 0x00F0 (0x00F0 - 0x0000)
struct UIFunctionLibrary_C_GetCharacterRoleDescription final
{
public:
	ECharacterRole                                CharacterRole;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   SoftIcon;                                          // 0x0010(0x0018)(Parm, OutParm)
	ECharacterRole                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_GetCharacterRoleDescription) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetCharacterRoleDescription");
static_assert(sizeof(UIFunctionLibrary_C_GetCharacterRoleDescription) == 0x0000F0, "Wrong size on UIFunctionLibrary_C_GetCharacterRoleDescription");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, CharacterRole) == 0x000000, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::CharacterRole' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_byte_Variable) == 0x000028, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_1) == 0x000048, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_2) == 0x000060, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_3) == 0x000078, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_4) == 0x000090, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_5) == 0x0000A8, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, Temp_text_Variable_6) == 0x0000C0, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleDescription, K2Node_Select_Default) == 0x0000D8, "Member 'UIFunctionLibrary_C_GetCharacterRoleDescription::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleIcon
// 0x0180 (0x0180 - 0x0000)
struct UIFunctionLibrary_C_GetCharacterRoleIcon final
{
public:
	ECharacterRole                                CharacterRole;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	ECharacterRole                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0068(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0090(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x00B8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_4;                        // 0x00E0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_5;                        // 0x0108(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_6;                        // 0x0130(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0158(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetCharacterRoleIcon) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetCharacterRoleIcon");
static_assert(sizeof(UIFunctionLibrary_C_GetCharacterRoleIcon) == 0x000180, "Wrong size on UIFunctionLibrary_C_GetCharacterRoleIcon");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, CharacterRole) == 0x000000, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::CharacterRole' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_byte_Variable) == 0x000038, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable) == 0x000040, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_1) == 0x000068, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_2) == 0x000090, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_3) == 0x0000B8, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_4) == 0x0000E0, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_5) == 0x000108, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, Temp_softobject_Variable_6) == 0x000130, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIcon, K2Node_Select_Default) == 0x000158, "Member 'UIFunctionLibrary_C_GetCharacterRoleIcon::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleIconSmall
// 0x0180 (0x0180 - 0x0000)
struct UIFunctionLibrary_C_GetCharacterRoleIconSmall final
{
public:
	ECharacterRole                                CharacterRole;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	ECharacterRole                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0068(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0090(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x00B8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_4;                        // 0x00E0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_5;                        // 0x0108(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_6;                        // 0x0130(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0158(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetCharacterRoleIconSmall) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetCharacterRoleIconSmall");
static_assert(sizeof(UIFunctionLibrary_C_GetCharacterRoleIconSmall) == 0x000180, "Wrong size on UIFunctionLibrary_C_GetCharacterRoleIconSmall");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, CharacterRole) == 0x000000, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::CharacterRole' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_byte_Variable) == 0x000038, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable) == 0x000040, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_1) == 0x000068, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_2) == 0x000090, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_3) == 0x0000B8, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_4) == 0x0000E0, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_5) == 0x000108, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, Temp_softobject_Variable_6) == 0x000130, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleIconSmall, K2Node_Select_Default) == 0x000158, "Member 'UIFunctionLibrary_C_GetCharacterRoleIconSmall::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetCharacterRoleName
// 0x00F0 (0x00F0 - 0x0000)
struct UIFunctionLibrary_C_GetCharacterRoleName final
{
public:
	ECharacterRole                                CharacterRole;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   SoftIcon;                                          // 0x0010(0x0018)(Parm, OutParm)
	ECharacterRole                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_GetCharacterRoleName) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetCharacterRoleName");
static_assert(sizeof(UIFunctionLibrary_C_GetCharacterRoleName) == 0x0000F0, "Wrong size on UIFunctionLibrary_C_GetCharacterRoleName");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, CharacterRole) == 0x000000, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::CharacterRole' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_byte_Variable) == 0x000028, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_1) == 0x000048, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_2) == 0x000060, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_3) == 0x000078, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_4) == 0x000090, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_5) == 0x0000A8, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, Temp_text_Variable_6) == 0x0000C0, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetCharacterRoleName, K2Node_Select_Default) == 0x0000D8, "Member 'UIFunctionLibrary_C_GetCharacterRoleName::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetColorByName
// 0x0048 (0x0048 - 0x0000)
struct UIFunctionLibrary_C_GetColorByName final
{
public:
	class FName                                   ColorName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFound;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorPaletteInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetColorByName) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetColorByName");
static_assert(sizeof(UIFunctionLibrary_C_GetColorByName) == 0x000048, "Wrong size on UIFunctionLibrary_C_GetColorByName");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, ColorName) == 0x000000, "Member 'UIFunctionLibrary_C_GetColorByName::ColorName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetColorByName::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, HasFound) == 0x000010, "Member 'UIFunctionLibrary_C_GetColorByName::HasFound' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, Color) == 0x000014, "Member 'UIFunctionLibrary_C_GetColorByName::Color' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'UIFunctionLibrary_C_GetColorByName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetColorByName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'UIFunctionLibrary_C_GetColorByName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetEnemyColor
// 0x0030 (0x0030 - 0x0000)
struct UIFunctionLibrary_C_GetEnemyColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Return_Value;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetEnemyColor) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetEnemyColor");
static_assert(sizeof(UIFunctionLibrary_C_GetEnemyColor) == 0x000030, "Wrong size on UIFunctionLibrary_C_GetEnemyColor");
static_assert(offsetof(UIFunctionLibrary_C_GetEnemyColor, __WorldContext) == 0x000000, "Member 'UIFunctionLibrary_C_GetEnemyColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetEnemyColor, Return_Value) == 0x000008, "Member 'UIFunctionLibrary_C_GetEnemyColor::Return_Value' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetEnemyColor, CallFunc_GetColorByName_HasFound) == 0x000018, "Member 'UIFunctionLibrary_C_GetEnemyColor::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetEnemyColor, CallFunc_GetColorByName_Color) == 0x00001C, "Member 'UIFunctionLibrary_C_GetEnemyColor::CallFunc_GetColorByName_Color' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFontByName
// 0x0130 (0x0130 - 0x0000)
struct UIFunctionLibrary_C_GetFontByName final
{
public:
	class FName                                   FontName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFound;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         FontInfo;                                          // 0x0018(0x0058)(Parm, OutParm, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0070(0x0058)(HasGetValueTypeHash)
	struct FFontPaletteInfo                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x0060)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetFontByName) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetFontByName");
static_assert(sizeof(UIFunctionLibrary_C_GetFontByName) == 0x000130, "Wrong size on UIFunctionLibrary_C_GetFontByName");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, FontName) == 0x000000, "Member 'UIFunctionLibrary_C_GetFontByName::FontName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetFontByName::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, HasFound) == 0x000010, "Member 'UIFunctionLibrary_C_GetFontByName::HasFound' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, FontInfo) == 0x000018, "Member 'UIFunctionLibrary_C_GetFontByName::FontInfo' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, K2Node_MakeStruct_SlateFontInfo) == 0x000070, "Member 'UIFunctionLibrary_C_GetFontByName::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'UIFunctionLibrary_C_GetFontByName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFontByName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000128, "Member 'UIFunctionLibrary_C_GetFontByName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFormattedTimeSpan
// 0x0518 (0x0518 - 0x0000)
struct UIFunctionLibrary_C_GetFormattedTimeSpan final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Shorthand;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0198(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x01B0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x01C8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x01E0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x01F8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0210(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x0228(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x0248(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0268(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x0280(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_8;            // 0x02A0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x02B8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_9;            // 0x02D0(0x0018)()
	bool                                          Temp_bool_Variable_6;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x02F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0308(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0328(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0340(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x0390(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_10;           // 0x03A8(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x03C0(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x03D8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0408(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0420(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_7;                           // 0x0470(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0488(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x04D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x04E8(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x0500(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_GetFormattedTimeSpan) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetFormattedTimeSpan");
static_assert(sizeof(UIFunctionLibrary_C_GetFormattedTimeSpan) == 0x000518, "Wrong size on UIFunctionLibrary_C_GetFormattedTimeSpan");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Timespan) == 0x000000, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Timespan' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Shorthand) == 0x000008, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Shorthand' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, __WorldContext) == 0x000010, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Text) == 0x000018, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Text' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_BreakTimespan_Days) == 0x000034, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_BreakTimespan_Hours) == 0x000038, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_BreakTimespan_Minutes) == 0x00003C, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_BreakTimespan_Seconds) == 0x000040, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_BreakTimespan_Milliseconds) == 0x000044, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000048, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeArray_Array) == 0x0000B0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000110, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeArray_Array_1) == 0x000118, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000130, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000138, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000190, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeArray_Array_2) == 0x000198, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_1) == 0x0001A8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue) == 0x0001B0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0001C8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0001E0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0001F8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000210, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_5) == 0x000228, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_2) == 0x000240, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_6) == 0x000248, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_3) == 0x000260, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default) == 0x000268, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_7) == 0x000280, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_4) == 0x000298, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_5) == 0x000299, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_8) == 0x0002A0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_1) == 0x0002B8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_9) == 0x0002D0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_6) == 0x0002E8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_2) == 0x0002F0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Format_ReturnValue) == 0x000308, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, Temp_bool_Variable_7) == 0x000320, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_3) == 0x000328, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData_3) == 0x000340, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_4) == 0x000390, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_MakeLiteralText_ReturnValue_10) == 0x0003A8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_MakeLiteralText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_5) == 0x0003C0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_6) == 0x0003D8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Format_ReturnValue_1) == 0x0003F0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Format_ReturnValue_2) == 0x000408, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData_4) == 0x000420, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_Select_Default_7) == 0x000470, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeStruct_FormatArgumentData_5) == 0x000488, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, K2Node_MakeArray_Array_3) == 0x0004D8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_Format_ReturnValue_3) == 0x0004E8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpan, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x000500, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpan::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFormattedTimeSpanFirstValue
// 0x03B0 (0x03B0 - 0x0000)
struct UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Shorthand;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0050(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0070(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0088(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0138(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0168(0x0018)()
	int32                                         CallFunc_GetHours_ReturnValue;                     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x01E0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x0228(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0240(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0260(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0278(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1; // 0x0290(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x02A8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x02C0(0x0018)()
	int32                                         CallFunc_GetDays_ReturnValue;                      // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02E8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0340(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default_4;                           // 0x0350(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0368(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0380(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2; // 0x0398(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue");
static_assert(sizeof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue) == 0x0003B0, "Wrong size on UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Timespan) == 0x000000, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Timespan' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Shorthand) == 0x000008, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Shorthand' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, __WorldContext) == 0x000010, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Text) == 0x000018, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Text' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_text_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable) == 0x000048, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable_1) == 0x000049, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_text_Variable_1) == 0x000050, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable_2) == 0x000068, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable_3) == 0x000069, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue) == 0x000070, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000088, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable_4) == 0x0000A0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_GetMinutes_ReturnValue) == 0x0000A4, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000A8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeArray_Array) == 0x000108, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default) == 0x000120, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000138, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000150, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_text_Variable_2) == 0x000168, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_GetHours_ReturnValue) == 0x000180, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_GetHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, Temp_bool_Variable_5) == 0x000184, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000188, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default_1) == 0x0001E0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Format_ReturnValue) == 0x000208, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000220, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x000228, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default_2) == 0x000240, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000258, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default_3) == 0x000260, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Format_ReturnValue_1) == 0x000278, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1) == 0x000290, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0002A8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0002C0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_GetDays_ReturnValue) == 0x0002D8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_GetDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0002DC, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0002E0, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002E8, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000338, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_MakeArray_Array_2) == 0x000340, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default_4) == 0x000350, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, K2Node_Select_Default_5) == 0x000368, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_Format_ReturnValue_2) == 0x000380, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2) == 0x000398, "Member 'UIFunctionLibrary_C_GetFormattedTimeSpanFirstValue::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue_2' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetFriendlyColor
// 0x0030 (0x0030 - 0x0000)
struct UIFunctionLibrary_C_GetFriendlyColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Return_Value;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetFriendlyColor) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetFriendlyColor");
static_assert(sizeof(UIFunctionLibrary_C_GetFriendlyColor) == 0x000030, "Wrong size on UIFunctionLibrary_C_GetFriendlyColor");
static_assert(offsetof(UIFunctionLibrary_C_GetFriendlyColor, __WorldContext) == 0x000000, "Member 'UIFunctionLibrary_C_GetFriendlyColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFriendlyColor, Return_Value) == 0x000008, "Member 'UIFunctionLibrary_C_GetFriendlyColor::Return_Value' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFriendlyColor, CallFunc_GetColorByName_HasFound) == 0x000018, "Member 'UIFunctionLibrary_C_GetFriendlyColor::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetFriendlyColor, CallFunc_GetColorByName_Color) == 0x00001C, "Member 'UIFunctionLibrary_C_GetFriendlyColor::CallFunc_GetColorByName_Color' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeDescription
// 0x0030 (0x0030 - 0x0000)
struct UIFunctionLibrary_C_GetGameModeDescription final
{
public:
	struct FGameplayTag                           GameModeTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   GameModeDesc;                                      // 0x0010(0x0018)(Parm, OutParm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetGameModeDescription) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetGameModeDescription");
static_assert(sizeof(UIFunctionLibrary_C_GetGameModeDescription) == 0x000030, "Wrong size on UIFunctionLibrary_C_GetGameModeDescription");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeDescription, GameModeTag) == 0x000000, "Member 'UIFunctionLibrary_C_GetGameModeDescription::GameModeTag' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeDescription, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetGameModeDescription::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeDescription, GameModeDesc) == 0x000010, "Member 'UIFunctionLibrary_C_GetGameModeDescription::GameModeDesc' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeDescription, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000028, "Member 'UIFunctionLibrary_C_GetGameModeDescription::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeIcon
// 0x0040 (0x0040 - 0x0000)
struct UIFunctionLibrary_C_GetGameModeIcon final
{
public:
	struct FGameplayTag                           GameModeTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetGameModeIcon) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetGameModeIcon");
static_assert(sizeof(UIFunctionLibrary_C_GetGameModeIcon) == 0x000040, "Wrong size on UIFunctionLibrary_C_GetGameModeIcon");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeIcon, GameModeTag) == 0x000000, "Member 'UIFunctionLibrary_C_GetGameModeIcon::GameModeTag' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeIcon, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetGameModeIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeIcon, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetGameModeIcon::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeIcon, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000038, "Member 'UIFunctionLibrary_C_GetGameModeIcon::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetGameModeName
// 0x0030 (0x0030 - 0x0000)
struct UIFunctionLibrary_C_GetGameModeName final
{
public:
	struct FGameplayTag                           GameModeTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   GameModeName;                                      // 0x0010(0x0018)(Parm, OutParm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetGameModeName) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetGameModeName");
static_assert(sizeof(UIFunctionLibrary_C_GetGameModeName) == 0x000030, "Wrong size on UIFunctionLibrary_C_GetGameModeName");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeName, GameModeTag) == 0x000000, "Member 'UIFunctionLibrary_C_GetGameModeName::GameModeTag' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeName, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetGameModeName::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeName, GameModeName) == 0x000010, "Member 'UIFunctionLibrary_C_GetGameModeName::GameModeName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetGameModeName, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000028, "Member 'UIFunctionLibrary_C_GetGameModeName::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetHUDCommon
// 0x0038 (0x0038 - 0x0000)
struct UIFunctionLibrary_C_GetHUDCommon final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHHUDCommon*                           HUD_Common;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHHUDCommon*                           K2Node_DynamicCast_AsRHHUDCommon;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetHUDCommon) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetHUDCommon");
static_assert(sizeof(UIFunctionLibrary_C_GetHUDCommon) == 0x000038, "Wrong size on UIFunctionLibrary_C_GetHUDCommon");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, __WorldContext) == 0x000000, "Member 'UIFunctionLibrary_C_GetHUDCommon::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, HUD_Common) == 0x000008, "Member 'UIFunctionLibrary_C_GetHUDCommon::HUD_Common' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000010, "Member 'UIFunctionLibrary_C_GetHUDCommon::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'UIFunctionLibrary_C_GetHUDCommon::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UIFunctionLibrary_C_GetHUDCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, K2Node_DynamicCast_AsRHHUDCommon) == 0x000028, "Member 'UIFunctionLibrary_C_GetHUDCommon::K2Node_DynamicCast_AsRHHUDCommon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetHUDCommon, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UIFunctionLibrary_C_GetHUDCommon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetIconForGamepadButton
// 0x0068 (0x0068 - 0x0000)
struct UIFunctionLibrary_C_GetIconForGamepadButton final
{
public:
	struct FKey                                   Button;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGamepadIcons                                 CallFunc_GetGamepadIconSet_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetKeyName_ReturnValue;                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonIconAssoc                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetIconForGamepadButton) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetIconForGamepadButton");
static_assert(sizeof(UIFunctionLibrary_C_GetIconForGamepadButton) == 0x000068, "Wrong size on UIFunctionLibrary_C_GetIconForGamepadButton");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, Button) == 0x000000, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::Button' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, __WorldContext) == 0x000018, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, Icon) == 0x000020, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::Icon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, CallFunc_GetGamepadIconSet_ReturnValue) == 0x000028, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::CallFunc_GetGamepadIconSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, CallFunc_GetKeyName_ReturnValue) == 0x00002C, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::CallFunc_GetKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetIconForGamepadButton, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'UIFunctionLibrary_C_GetIconForGamepadButton::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetInputTypeIcon
// 0x0048 (0x0048 - 0x0000)
struct UIFunctionLibrary_C_GetInputTypeIcon final
{
public:
	uint8                                         InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetInputTypeIcon) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetInputTypeIcon");
static_assert(sizeof(UIFunctionLibrary_C_GetInputTypeIcon) == 0x000048, "Wrong size on UIFunctionLibrary_C_GetInputTypeIcon");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, InputType) == 0x000000, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::InputType' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Texture) == 0x000010, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Texture' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Temp_byte_Variable) == 0x000018, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Temp_object_Variable) == 0x000020, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Temp_object_Variable_1) == 0x000028, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Temp_object_Variable_2) == 0x000030, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, Temp_object_Variable_3) == 0x000038, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetInputTypeIcon, K2Node_Select_Default) == 0x000040, "Member 'UIFunctionLibrary_C_GetInputTypeIcon::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetItemType
// 0x0050 (0x0050 - 0x0000)
struct UIFunctionLibrary_C_GetItemType final
{
public:
	class UPlatformInventoryItem*                 InventoryItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ItemType;                                          // 0x0010(0x0018)(Parm, OutParm)
	struct FGameplayTagContainer                  CallFunc_GetCollectionContainer_ReturnValue;       // 0x0028(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_2;                     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_3;                     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_4;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_5;                     // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetItemType) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetItemType");
static_assert(sizeof(UIFunctionLibrary_C_GetItemType) == 0x000050, "Wrong size on UIFunctionLibrary_C_GetItemType");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, InventoryItem) == 0x000000, "Member 'UIFunctionLibrary_C_GetItemType::InventoryItem' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetItemType::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, ItemType) == 0x000010, "Member 'UIFunctionLibrary_C_GetItemType::ItemType' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_GetCollectionContainer_ReturnValue) == 0x000028, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_GetCollectionContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue) == 0x000048, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue_1) == 0x000049, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue_2) == 0x00004A, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue_3) == 0x00004B, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue_4) == 0x00004C, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetItemType, CallFunc_HasTag_ReturnValue_5) == 0x00004D, "Member 'UIFunctionLibrary_C_GetItemType::CallFunc_HasTag_ReturnValue_5' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetPlatformIconByDisplayType
// 0x0020 (0x0020 - 0x0000)
struct UIFunctionLibrary_C_GetPlatformIconByDisplayType final
{
public:
	ERHPlatformDisplayType                        Platform;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetPlatformIconByDisplayType) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetPlatformIconByDisplayType");
static_assert(sizeof(UIFunctionLibrary_C_GetPlatformIconByDisplayType) == 0x000020, "Wrong size on UIFunctionLibrary_C_GetPlatformIconByDisplayType");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformIconByDisplayType, Platform) == 0x000000, "Member 'UIFunctionLibrary_C_GetPlatformIconByDisplayType::Platform' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformIconByDisplayType, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetPlatformIconByDisplayType::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformIconByDisplayType, Icon) == 0x000010, "Member 'UIFunctionLibrary_C_GetPlatformIconByDisplayType::Icon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformIconByDisplayType, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'UIFunctionLibrary_C_GetPlatformIconByDisplayType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetPlatformViewProfileText
// 0x0038 (0x0038 - 0x0000)
struct UIFunctionLibrary_C_GetPlatformViewProfileText final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Return_Value;                                      // 0x0008(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetPlatformViewProfileText) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetPlatformViewProfileText");
static_assert(sizeof(UIFunctionLibrary_C_GetPlatformViewProfileText) == 0x000038, "Wrong size on UIFunctionLibrary_C_GetPlatformViewProfileText");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformViewProfileText, __WorldContext) == 0x000000, "Member 'UIFunctionLibrary_C_GetPlatformViewProfileText::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformViewProfileText, Return_Value) == 0x000008, "Member 'UIFunctionLibrary_C_GetPlatformViewProfileText::Return_Value' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformViewProfileText, CallFunc_GetPlatformName_ReturnValue) == 0x000020, "Member 'UIFunctionLibrary_C_GetPlatformViewProfileText::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformViewProfileText, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000030, "Member 'UIFunctionLibrary_C_GetPlatformViewProfileText::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetPlatformViewProfileText, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000031, "Member 'UIFunctionLibrary_C_GetPlatformViewProfileText::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetS1MasteryNum
// 0x0040 (0x0040 - 0x0000)
struct UIFunctionLibrary_C_GetS1MasteryNum final
{
public:
	int32                                         MasteryRank;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetS1MasteryNum) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetS1MasteryNum");
static_assert(sizeof(UIFunctionLibrary_C_GetS1MasteryNum) == 0x000040, "Wrong size on UIFunctionLibrary_C_GetS1MasteryNum");
static_assert(offsetof(UIFunctionLibrary_C_GetS1MasteryNum, MasteryRank) == 0x000000, "Member 'UIFunctionLibrary_C_GetS1MasteryNum::MasteryRank' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetS1MasteryNum, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetS1MasteryNum::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetS1MasteryNum, SoftIcon) == 0x000010, "Member 'UIFunctionLibrary_C_GetS1MasteryNum::SoftIcon' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetS1MasteryNum, K2Node_SwitchInteger_CmpSuccess) == 0x000038, "Member 'UIFunctionLibrary_C_GetS1MasteryNum::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetSettingsDataFactory
// 0x0020 (0x0020 - 0x0000)
struct UIFunctionLibrary_C_GetSettingsDataFactory final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHSettingsDataFactory*                 SettingsDataFactory;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHHUDCommon*                           CallFunc_GetHUDCommon_HUD_Common;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHSettingsDataFactory*                 CallFunc_GetSettingsDataFactory_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetSettingsDataFactory) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetSettingsDataFactory");
static_assert(sizeof(UIFunctionLibrary_C_GetSettingsDataFactory) == 0x000020, "Wrong size on UIFunctionLibrary_C_GetSettingsDataFactory");
static_assert(offsetof(UIFunctionLibrary_C_GetSettingsDataFactory, __WorldContext) == 0x000000, "Member 'UIFunctionLibrary_C_GetSettingsDataFactory::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetSettingsDataFactory, SettingsDataFactory) == 0x000008, "Member 'UIFunctionLibrary_C_GetSettingsDataFactory::SettingsDataFactory' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetSettingsDataFactory, CallFunc_GetHUDCommon_HUD_Common) == 0x000010, "Member 'UIFunctionLibrary_C_GetSettingsDataFactory::CallFunc_GetHUDCommon_HUD_Common' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetSettingsDataFactory, CallFunc_GetSettingsDataFactory_ReturnValue) == 0x000018, "Member 'UIFunctionLibrary_C_GetSettingsDataFactory::CallFunc_GetSettingsDataFactory_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetTeamColor
// 0x0100 (0x0100 - 0x0000)
struct UIFunctionLibrary_C_GetTeamColor final
{
public:
	int32                                         TeamNum;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OwningPlayerNum;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Team_Color;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_Color;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FLinearColor>              TeamColorMap;                                      // 0x0028(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FLinearColor>              K2Node_MakeVariable_MakeVariableOutput;            // 0x0080(0x0050)()
	struct FLinearColor                           CallFunc_GetEnemyColor_Return_Value;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetFriendlyColor_Return_Value;            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_GetTeamColor) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetTeamColor");
static_assert(sizeof(UIFunctionLibrary_C_GetTeamColor) == 0x000100, "Wrong size on UIFunctionLibrary_C_GetTeamColor");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, TeamNum) == 0x000000, "Member 'UIFunctionLibrary_C_GetTeamColor::TeamNum' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, OwningPlayerNum) == 0x000004, "Member 'UIFunctionLibrary_C_GetTeamColor::OwningPlayerNum' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetTeamColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, Team_Color) == 0x000010, "Member 'UIFunctionLibrary_C_GetTeamColor::Team_Color' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, Found_Color) == 0x000020, "Member 'UIFunctionLibrary_C_GetTeamColor::Found_Color' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, TeamColorMap) == 0x000028, "Member 'UIFunctionLibrary_C_GetTeamColor::TeamColorMap' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, Temp_bool_Variable) == 0x000078, "Member 'UIFunctionLibrary_C_GetTeamColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000079, "Member 'UIFunctionLibrary_C_GetTeamColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000080, "Member 'UIFunctionLibrary_C_GetTeamColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, CallFunc_GetEnemyColor_Return_Value) == 0x0000D0, "Member 'UIFunctionLibrary_C_GetTeamColor::CallFunc_GetEnemyColor_Return_Value' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, CallFunc_GetFriendlyColor_Return_Value) == 0x0000E0, "Member 'UIFunctionLibrary_C_GetTeamColor::CallFunc_GetFriendlyColor_Return_Value' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamColor, K2Node_Select_Default) == 0x0000F0, "Member 'UIFunctionLibrary_C_GetTeamColor::K2Node_Select_Default' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.GetTeamName
// 0x00C8 (0x00C8 - 0x0000)
struct UIFunctionLibrary_C_GetTeamName final
{
public:
	int32                                         TeamNum;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Abbreviate;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   TeamName;                                          // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0098(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00B0(0x0018)()
};
static_assert(alignof(UIFunctionLibrary_C_GetTeamName) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_GetTeamName");
static_assert(sizeof(UIFunctionLibrary_C_GetTeamName) == 0x0000C8, "Wrong size on UIFunctionLibrary_C_GetTeamName");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, TeamNum) == 0x000000, "Member 'UIFunctionLibrary_C_GetTeamName::TeamNum' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Abbreviate) == 0x000004, "Member 'UIFunctionLibrary_C_GetTeamName::Abbreviate' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_GetTeamName::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, TeamName) == 0x000010, "Member 'UIFunctionLibrary_C_GetTeamName::TeamName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_bool_Variable) == 0x000028, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, K2Node_SwitchInteger_CmpSuccess) == 0x000029, "Member 'UIFunctionLibrary_C_GetTeamName::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_text_Variable) == 0x000030, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_text_Variable_1) == 0x000048, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_bool_Variable_1) == 0x000060, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, K2Node_Select_Default) == 0x000068, "Member 'UIFunctionLibrary_C_GetTeamName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_text_Variable_2) == 0x000080, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, Temp_text_Variable_3) == 0x000098, "Member 'UIFunctionLibrary_C_GetTeamName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_GetTeamName, K2Node_Select_Default_1) == 0x0000B0, "Member 'UIFunctionLibrary_C_GetTeamName::K2Node_Select_Default_1' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.IsLocalActionSaved
// 0x0030 (0x0030 - 0x0000)
struct UIFunctionLibrary_C_IsLocalActionSaved final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionSaved;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHGameUserSettings*                    K2Node_DynamicCast_AsRHGame_User_Settings;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalActionSaved_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_IsLocalActionSaved) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_IsLocalActionSaved");
static_assert(sizeof(UIFunctionLibrary_C_IsLocalActionSaved) == 0x000030, "Wrong size on UIFunctionLibrary_C_IsLocalActionSaved");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, ActionName) == 0x000000, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::ActionName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, ActionSaved) == 0x000010, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::ActionSaved' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, K2Node_DynamicCast_AsRHGame_User_Settings) == 0x000020, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::K2Node_DynamicCast_AsRHGame_User_Settings' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_IsLocalActionSaved, CallFunc_IsLocalActionSaved_ReturnValue) == 0x000029, "Member 'UIFunctionLibrary_C_IsLocalActionSaved::CallFunc_IsLocalActionSaved_ReturnValue' has a wrong offset!");

// Function UIFunctionLibrary.UIFunctionLibrary_C.SaveLocalAction
// 0x0028 (0x0028 - 0x0000)
struct UIFunctionLibrary_C_SaveLocalAction final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHGameUserSettings*                    K2Node_DynamicCast_AsRHGame_User_Settings;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIFunctionLibrary_C_SaveLocalAction) == 0x000008, "Wrong alignment on UIFunctionLibrary_C_SaveLocalAction");
static_assert(sizeof(UIFunctionLibrary_C_SaveLocalAction) == 0x000028, "Wrong size on UIFunctionLibrary_C_SaveLocalAction");
static_assert(offsetof(UIFunctionLibrary_C_SaveLocalAction, ActionName) == 0x000000, "Member 'UIFunctionLibrary_C_SaveLocalAction::ActionName' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_SaveLocalAction, __WorldContext) == 0x000008, "Member 'UIFunctionLibrary_C_SaveLocalAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_SaveLocalAction, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'UIFunctionLibrary_C_SaveLocalAction::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_SaveLocalAction, K2Node_DynamicCast_AsRHGame_User_Settings) == 0x000018, "Member 'UIFunctionLibrary_C_SaveLocalAction::K2Node_DynamicCast_AsRHGame_User_Settings' has a wrong offset!");
static_assert(offsetof(UIFunctionLibrary_C_SaveLocalAction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UIFunctionLibrary_C_SaveLocalAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

