#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodHealthAttribute

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_GodHealthAttribute.WBP_G_V2_GodHealthAttribute_C
// 0x0020 (0x0648 - 0x0628)
class UWBP_G_V2_GodHealthAttribute_C final : public UHWCharacterHealthWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0628(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DamageTakenShake;                                  // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_GS_V1_CCImmunityListener_C*        CCImmunityListener;                                // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_G_V2_GodHealthGainLossBar_C*       GainLossBar;                                       // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Dev_GodHealthAttribute_Smite_CCImmunityListener_K2Node_ComponentBoundEvent_0_OnEffectTrackStarted__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_Dev_GodHealthAttribute_Smite_CCImmunityListener_K2Node_ComponentBoundEvent_1_OnEffectTrackEnded__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void ExecuteUbergraph_WBP_G_V2_GodHealthAttribute(int32 EntryPoint);
	void OnAttributesTracked();
	void OnAttributesUntracked();
	void UpdateCCImmunity(bool bIsCCImmunityActive);
	void UpdateCurrentHealth(float OldHealth, float NewHealth, bool bShouldAnimate);
	void UpdateMaxHealth(float OldMaxHealth, float NewMaxHealth, bool bShouldAnimate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_GodHealthAttribute_C">();
	}
	static class UWBP_G_V2_GodHealthAttribute_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_GodHealthAttribute_C>();
	}
};
static_assert(alignof(UWBP_G_V2_GodHealthAttribute_C) == 0x000008, "Wrong alignment on UWBP_G_V2_GodHealthAttribute_C");
static_assert(sizeof(UWBP_G_V2_GodHealthAttribute_C) == 0x000648, "Wrong size on UWBP_G_V2_GodHealthAttribute_C");
static_assert(offsetof(UWBP_G_V2_GodHealthAttribute_C, UberGraphFrame) == 0x000628, "Member 'UWBP_G_V2_GodHealthAttribute_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodHealthAttribute_C, DamageTakenShake) == 0x000630, "Member 'UWBP_G_V2_GodHealthAttribute_C::DamageTakenShake' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodHealthAttribute_C, CCImmunityListener) == 0x000638, "Member 'UWBP_G_V2_GodHealthAttribute_C::CCImmunityListener' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodHealthAttribute_C, GainLossBar) == 0x000640, "Member 'UWBP_G_V2_GodHealthAttribute_C::GainLossBar' has a wrong offset!");

}

