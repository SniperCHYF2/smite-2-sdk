#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_S_UILibrary

#include "Basic.hpp"

#include "DataTableSkinsCommon_structs.hpp"
#include "Hemingway_structs.hpp"
#include "RallyHereIntegration_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetButtonEquipText
// 0x00C0 (0x00C0 - 0x0000)
struct BPL_S_UILibrary_C_GetButtonEquipText final
{
public:
	EHWButtonEquipStatus                          EquipStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	EHWButtonEquipStatus                          Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0018)()
};
static_assert(alignof(BPL_S_UILibrary_C_GetButtonEquipText) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetButtonEquipText");
static_assert(sizeof(BPL_S_UILibrary_C_GetButtonEquipText) == 0x0000C0, "Wrong size on BPL_S_UILibrary_C_GetButtonEquipText");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, EquipStatus) == 0x000000, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::EquipStatus' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Text) == 0x000010, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Text' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_byte_Variable) == 0x000028, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_text_Variable) == 0x000030, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_text_Variable_1) == 0x000048, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_text_Variable_2) == 0x000060, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_text_Variable_3) == 0x000078, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, Temp_text_Variable_4) == 0x000090, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetButtonEquipText, K2Node_Select_Default) == 0x0000A8, "Member 'BPL_S_UILibrary_C_GetButtonEquipText::K2Node_Select_Default' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetCollectionNameByType
// 0x0288 (0x0288 - 0x0000)
struct BPL_S_UILibrary_C_GetCollectionNameByType final
{
public:
	EHWCollectionItemType                         NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   String;                                            // 0x0010(0x0018)(Parm, OutParm)
	EHWCollectionItemType                         Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0240(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0258(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0270(0x0018)()
};
static_assert(alignof(BPL_S_UILibrary_C_GetCollectionNameByType) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetCollectionNameByType");
static_assert(sizeof(BPL_S_UILibrary_C_GetCollectionNameByType) == 0x000288, "Wrong size on BPL_S_UILibrary_C_GetCollectionNameByType");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, NewParam) == 0x000000, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, String) == 0x000010, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::String' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_byte_Variable) == 0x000028, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable) == 0x000030, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_1) == 0x000048, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_2) == 0x000060, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_3) == 0x000078, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_4) == 0x000090, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_5) == 0x0000A8, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_6) == 0x0000C0, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_7) == 0x0000D8, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_8) == 0x0000F0, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_9) == 0x000108, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_10) == 0x000120, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_11) == 0x000138, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_12) == 0x000150, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_13) == 0x000168, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_14) == 0x000180, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_15) == 0x000198, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_16) == 0x0001B0, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_17) == 0x0001C8, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_18) == 0x0001E0, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_19) == 0x0001F8, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_20) == 0x000210, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_21) == 0x000228, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_22) == 0x000240, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, Temp_text_Variable_23) == 0x000258, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetCollectionNameByType, K2Node_Select_Default) == 0x000270, "Member 'BPL_S_UILibrary_C_GetCollectionNameByType::K2Node_Select_Default' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetItemTypeText
// 0x0188 (0x0188 - 0x0000)
struct BPL_S_UILibrary_C_GetItemTypeText final
{
public:
	class UPlatformInventoryItem*                 InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRH_ItemId                             InItemId;                                          // 0x0008(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutText;                                           // 0x0028(0x0018)(Parm, OutParm)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UHWCharacterItem>        CallFunc_GetAssociatedCharacterFull_ReturnValue;   // 0x0050(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCollectionNameByType_String;           // 0x0078(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0050)(HasGetValueTypeHash)
	const class UHWCharacterItem*                 K2Node_DynamicCast_AsHWCharacter_Item;             // 0x00E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
};
static_assert(alignof(BPL_S_UILibrary_C_GetItemTypeText) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetItemTypeText");
static_assert(sizeof(BPL_S_UILibrary_C_GetItemTypeText) == 0x000188, "Wrong size on BPL_S_UILibrary_C_GetItemTypeText");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, InItem) == 0x000000, "Member 'BPL_S_UILibrary_C_GetItemTypeText::InItem' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, InItemId) == 0x000008, "Member 'BPL_S_UILibrary_C_GetItemTypeText::InItemId' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, __WorldContext) == 0x000020, "Member 'BPL_S_UILibrary_C_GetItemTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, OutText) == 0x000028, "Member 'BPL_S_UILibrary_C_GetItemTypeText::OutText' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_DynamicCast_AsHWCollection_Item) == 0x000040, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_GetAssociatedCharacterFull_ReturnValue) == 0x000050, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_GetAssociatedCharacterFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_GetCollectionNameByType_String) == 0x000078, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_GetCollectionNameByType_String' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000090, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_DynamicCast_AsHWCharacter_Item) == 0x0000E8, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_DynamicCast_AsHWCharacter_Item' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_GetItemName_ReturnValue) == 0x0000F8, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, K2Node_MakeArray_Array) == 0x000160, "Member 'BPL_S_UILibrary_C_GetItemTypeText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetItemTypeText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'BPL_S_UILibrary_C_GetItemTypeText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetPantheonIcon
// 0x0040 (0x0040 - 0x0000)
struct BPL_S_UILibrary_C_GetPantheonIcon final
{
public:
	struct FGameplayTag                           PantheonTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetPantheonIcon) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetPantheonIcon");
static_assert(sizeof(BPL_S_UILibrary_C_GetPantheonIcon) == 0x000040, "Wrong size on BPL_S_UILibrary_C_GetPantheonIcon");
static_assert(offsetof(BPL_S_UILibrary_C_GetPantheonIcon, PantheonTag) == 0x000000, "Member 'BPL_S_UILibrary_C_GetPantheonIcon::PantheonTag' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetPantheonIcon, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetPantheonIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetPantheonIcon, SoftIcon) == 0x000010, "Member 'BPL_S_UILibrary_C_GetPantheonIcon::SoftIcon' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetPantheonIcon, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000038, "Member 'BPL_S_UILibrary_C_GetPantheonIcon::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetRarityColorTag
// 0x0020 (0x0020 - 0x0000)
struct BPL_S_UILibrary_C_GetRarityColorTag final
{
public:
	struct FGameplayTag                           InRarityTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutColorTag;                                       // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetRarityColorTag) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetRarityColorTag");
static_assert(sizeof(BPL_S_UILibrary_C_GetRarityColorTag) == 0x000020, "Wrong size on BPL_S_UILibrary_C_GetRarityColorTag");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityColorTag, InRarityTag) == 0x000000, "Member 'BPL_S_UILibrary_C_GetRarityColorTag::InRarityTag' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityColorTag, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetRarityColorTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityColorTag, OutColorTag) == 0x000010, "Member 'BPL_S_UILibrary_C_GetRarityColorTag::OutColorTag' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityColorTag, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'BPL_S_UILibrary_C_GetRarityColorTag::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetRarityIcon
// 0x0040 (0x0040 - 0x0000)
struct BPL_S_UILibrary_C_GetRarityIcon final
{
public:
	struct FGameplayTag                           RarityTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SoftIcon;                                          // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetRarityIcon) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetRarityIcon");
static_assert(sizeof(BPL_S_UILibrary_C_GetRarityIcon) == 0x000040, "Wrong size on BPL_S_UILibrary_C_GetRarityIcon");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityIcon, RarityTag) == 0x000000, "Member 'BPL_S_UILibrary_C_GetRarityIcon::RarityTag' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityIcon, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetRarityIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityIcon, SoftIcon) == 0x000010, "Member 'BPL_S_UILibrary_C_GetRarityIcon::SoftIcon' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityIcon, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000038, "Member 'BPL_S_UILibrary_C_GetRarityIcon::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetRarityName
// 0x0030 (0x0030 - 0x0000)
struct BPL_S_UILibrary_C_GetRarityName final
{
public:
	struct FGameplayTag                           RarityTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   RarityText;                                        // 0x0010(0x0018)(Parm, OutParm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetRarityName) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetRarityName");
static_assert(sizeof(BPL_S_UILibrary_C_GetRarityName) == 0x000030, "Wrong size on BPL_S_UILibrary_C_GetRarityName");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityName, RarityTag) == 0x000000, "Member 'BPL_S_UILibrary_C_GetRarityName::RarityTag' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityName, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetRarityName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityName, RarityText) == 0x000010, "Member 'BPL_S_UILibrary_C_GetRarityName::RarityText' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetRarityName, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000028, "Member 'BPL_S_UILibrary_C_GetRarityName::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetSmite2GodCircleMastery
// 0x0040 (0x0040 - 0x0000)
struct BPL_S_UILibrary_C_GetSmite2GodCircleMastery final
{
public:
	int32                                         MasteryLevel;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetSmite2GodCircleMastery");
static_assert(sizeof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery) == 0x000040, "Wrong size on BPL_S_UILibrary_C_GetSmite2GodCircleMastery");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery, MasteryLevel) == 0x000000, "Member 'BPL_S_UILibrary_C_GetSmite2GodCircleMastery::MasteryLevel' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetSmite2GodCircleMastery::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery, Icon) == 0x000010, "Member 'BPL_S_UILibrary_C_GetSmite2GodCircleMastery::Icon' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodCircleMastery, K2Node_SwitchInteger_CmpSuccess) == 0x000038, "Member 'BPL_S_UILibrary_C_GetSmite2GodCircleMastery::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GetSmite2GodMasteryIcon
// 0x0040 (0x0040 - 0x0000)
struct BPL_S_UILibrary_C_GetSmite2GodMasteryIcon final
{
public:
	int32                                         MasteryLevel;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GetSmite2GodMasteryIcon");
static_assert(sizeof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon) == 0x000040, "Wrong size on BPL_S_UILibrary_C_GetSmite2GodMasteryIcon");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon, MasteryLevel) == 0x000000, "Member 'BPL_S_UILibrary_C_GetSmite2GodMasteryIcon::MasteryLevel' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_GetSmite2GodMasteryIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon, Icon) == 0x000010, "Member 'BPL_S_UILibrary_C_GetSmite2GodMasteryIcon::Icon' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GetSmite2GodMasteryIcon, K2Node_SwitchInteger_CmpSuccess) == 0x000038, "Member 'BPL_S_UILibrary_C_GetSmite2GodMasteryIcon::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.GoToFounders
// 0x0028 (0x0028 - 0x0000)
struct BPL_S_UILibrary_C_GoToFounders final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRH_ItemId                             SourceItem;                                        // 0x0008(0x0014)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWViewRedirectorSubsystem*             CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_GoToFounders) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_GoToFounders");
static_assert(sizeof(BPL_S_UILibrary_C_GoToFounders) == 0x000028, "Wrong size on BPL_S_UILibrary_C_GoToFounders");
static_assert(offsetof(BPL_S_UILibrary_C_GoToFounders, __WorldContext) == 0x000000, "Member 'BPL_S_UILibrary_C_GoToFounders::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GoToFounders, SourceItem) == 0x000008, "Member 'BPL_S_UILibrary_C_GoToFounders::SourceItem' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_GoToFounders, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'BPL_S_UILibrary_C_GoToFounders::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.IsTopViewRouteRHNavigation
// 0x0078 (0x0078 - 0x0000)
struct BPL_S_UILibrary_C_IsTopViewRouteRHNavigation final
{
public:
	class URHWidget*                              WidgetContext;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRHNavigation;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue;              // 0x0020(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FViewRoute                             CallFunc_GetViewRoute_ViewRoute;                   // 0x0028(0x0048)()
	bool                                          CallFunc_GetViewRoute_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_IsTopViewRouteRHNavigation");
static_assert(sizeof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation) == 0x000078, "Wrong size on BPL_S_UILibrary_C_IsTopViewRouteRHNavigation");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, WidgetContext) == 0x000000, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::WidgetContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, bIsRHNavigation) == 0x000010, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::bIsRHNavigation' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, CallFunc_GetViewManager_ReturnValue) == 0x000018, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, CallFunc_GetTopViewRoute_ReturnValue) == 0x000020, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::CallFunc_GetTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, CallFunc_GetViewRoute_ViewRoute) == 0x000028, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::CallFunc_GetViewRoute_ViewRoute' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, CallFunc_GetViewRoute_ReturnValue) == 0x000070, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::CallFunc_GetViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_IsTopViewRouteRHNavigation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'BPL_S_UILibrary_C_IsTopViewRouteRHNavigation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_S_UILibrary.BPL_S_UILibrary_C.PreviewSoundFromCollection
// 0x00B0 (0x00B0 - 0x0000)
struct BPL_S_UILibrary_C_PreviewSoundFromCollection final
{
public:
	class UHWCollectionItem*                      InCollectionItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAudioSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWMusicPackItem*                       K2Node_DynamicCast_AsHWMusic_Pack_Item;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAnnouncerPackItem*                   K2Node_DynamicCast_AsHWAnnouncer_Pack_Item;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              CallFunc_GetCosmeticSound_ReturnValue;             // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	EHWCollectionItemType                         CallFunc_GetCollectionType_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetRequestKey                       K2Node_MakeStruct_AssetRequestKey;                 // 0x0064(0x001C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHWAudioTrackPlayInfo                  K2Node_MakeStruct_HWAudioTrackPlayInfo;            // 0x0084(0x0024)(NoDestructor)
	class UAudioComponent*                        CallFunc_PlayMusicTrack_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_S_UILibrary_C_PreviewSoundFromCollection) == 0x000008, "Wrong alignment on BPL_S_UILibrary_C_PreviewSoundFromCollection");
static_assert(sizeof(BPL_S_UILibrary_C_PreviewSoundFromCollection) == 0x0000B0, "Wrong size on BPL_S_UILibrary_C_PreviewSoundFromCollection");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, InCollectionItem) == 0x000000, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::InCollectionItem' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, __WorldContext) == 0x000008, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_DynamicCast_AsHWMusic_Pack_Item) == 0x000018, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_DynamicCast_AsHWMusic_Pack_Item' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_DynamicCast_AsHWAnnouncer_Pack_Item) == 0x000028, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_DynamicCast_AsHWAnnouncer_Pack_Item' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, CallFunc_GetCosmeticSound_ReturnValue) == 0x000038, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::CallFunc_GetCosmeticSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, CallFunc_GetCollectionType_ReturnValue) == 0x000060, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::CallFunc_GetCollectionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_MakeStruct_AssetRequestKey) == 0x000064, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_MakeStruct_AssetRequestKey' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, K2Node_MakeStruct_HWAudioTrackPlayInfo) == 0x000084, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::K2Node_MakeStruct_HWAudioTrackPlayInfo' has a wrong offset!");
static_assert(offsetof(BPL_S_UILibrary_C_PreviewSoundFromCollection, CallFunc_PlayMusicTrack_ReturnValue) == 0x0000A8, "Member 'BPL_S_UILibrary_C_PreviewSoundFromCollection::CallFunc_PlayMusicTrack_ReturnValue' has a wrong offset!");

}

