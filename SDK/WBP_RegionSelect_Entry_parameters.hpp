#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RegionSelect_Entry

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_RegionSelect_Entry.WBP_RegionSelect_Entry_C.ExecuteUbergraph_WBP_RegionSelect_Entry
// 0x0030 (0x0030 - 0x0000)
struct WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomLobbyRegionSelect_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry) == 0x000008, "Wrong alignment on WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry");
static_assert(sizeof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry) == 0x000030, "Wrong size on WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, EntryPoint) == 0x000000, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, CallFunc_IsCustomLobbyRegionSelect_ReturnValue) == 0x000004, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::CallFunc_IsCustomLobbyRegionSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000010, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000020, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_RegionSelect_Entry_C_ExecuteUbergraph_WBP_RegionSelect_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RegionSelect_Entry.WBP_RegionSelect_Entry_C.IsCustomLobbyRegionSelect
// 0x0020 (0x0020 - 0x0000)
struct WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentRoute_ReturnValue;              // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect) == 0x000008, "Wrong alignment on WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect");
static_assert(sizeof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect) == 0x000020, "Wrong size on WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect");
static_assert(offsetof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect, ReturnValue) == 0x000000, "Member 'WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect, CallFunc_GetViewManager_ReturnValue) == 0x000008, "Member 'WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect, CallFunc_GetCurrentRoute_ReturnValue) == 0x000010, "Member 'WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect::CallFunc_GetCurrentRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000018, "Member 'WBP_RegionSelect_Entry_C_IsCustomLobbyRegionSelect::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_RegionSelect_Entry.WBP_RegionSelect_Entry_C.NavigateConfirm
// 0x0001 (0x0001 - 0x0000)
struct WBP_RegionSelect_Entry_C_NavigateConfirm final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RegionSelect_Entry_C_NavigateConfirm) == 0x000001, "Wrong alignment on WBP_RegionSelect_Entry_C_NavigateConfirm");
static_assert(sizeof(WBP_RegionSelect_Entry_C_NavigateConfirm) == 0x000001, "Wrong size on WBP_RegionSelect_Entry_C_NavigateConfirm");
static_assert(offsetof(WBP_RegionSelect_Entry_C_NavigateConfirm, ReturnValue) == 0x000000, "Member 'WBP_RegionSelect_Entry_C_NavigateConfirm::ReturnValue' has a wrong offset!");

// Function WBP_RegionSelect_Entry.WBP_RegionSelect_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_RegionSelect_Entry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RegionSelect_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_RegionSelect_Entry_C_PreConstruct");
static_assert(sizeof(WBP_RegionSelect_Entry_C_PreConstruct) == 0x000001, "Wrong size on WBP_RegionSelect_Entry_C_PreConstruct");
static_assert(offsetof(WBP_RegionSelect_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_RegionSelect_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_RegionSelect_Entry.WBP_RegionSelect_Entry_C.ShowPreferredSiteIcon
// 0x0005 (0x0005 - 0x0000)
struct WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon final
{
public:
	bool                                          IsPreferredSite;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon) == 0x000001, "Wrong alignment on WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon");
static_assert(sizeof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon) == 0x000005, "Wrong size on WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon, IsPreferredSite) == 0x000000, "Member 'WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon::IsPreferredSite' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon, Temp_bool_Variable) == 0x000001, "Member 'WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon, Temp_byte_Variable) == 0x000002, "Member 'WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon, K2Node_Select_Default) == 0x000004, "Member 'WBP_RegionSelect_Entry_C_ShowPreferredSiteIcon::K2Node_Select_Default' has a wrong offset!");

}

