#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodRoster_FilterWidget

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.AddPantheonFilters
// 0x0078 (0x0078 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetPantheonGameplayTags_ReturnValue;      // 0x0018(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0038(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodRoster_FilterEntry_C*         CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters) == 0x000078, "Wrong size on WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Divide_IntInt_ReturnValue) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_GetPantheonGameplayTags_ReturnValue) == 0x000018, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_GetPantheonGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000038, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_Create_ReturnValue) == 0x000068, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000070, "Member 'WBP_C_GodRoster_FilterWidget_C_AddPantheonFilters::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.AddSpecializationFilters
// 0x0070 (0x0070 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterEntry_C*         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetSpecializationGameplayTags_ReturnValue; // 0x0030(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters) == 0x000070, "Wrong size on WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Divide_IntInt_ReturnValue) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000028, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_GetSpecializationGameplayTags_ReturnValue) == 0x000030, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_GetSpecializationGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000050, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Array_Get_Item) == 0x000064, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_C_GodRoster_FilterWidget_C_AddSpecializationFilters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_BndEvt__WBP_C_GodRoster_FilterWidget_SearchTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.ExecuteUbergraph_WBP_C_GodRoster_FilterWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget) == 0x000020, "Wrong size on WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget, EntryPoint) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_ExecuteUbergraph_WBP_C_GodRoster_FilterWidget::K2Node_ComponentBoundEvent_Text' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.HandleFilterEntryClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked final
{
public:
	struct FGameplayTag                           FilterTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterEntry_C*         Entry;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked) == 0x000010, "Wrong size on WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked, FilterTag) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked::FilterTag' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked, Entry) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_HandleFilterEntryClicked::Entry' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.HandleSortEntryClicked
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked final
{
public:
	struct FGameplayTag                           FilterTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterEntry_C*         Entry;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked) == 0x000018, "Wrong size on WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked, FilterTag) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked::FilterTag' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked, Entry) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked::Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_HandleSortEntryClicked::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.InitializeEntries
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_InitializeEntries final
{
public:
	TArray<class UWidget*>                        FilterEntries;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& FilterTag, class UWBP_C_GodRoster_FilterEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& FilterTag, class UWBP_C_GodRoster_FilterEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodRoster_FilterEntry_C*         K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterEntry_C*         K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_2;             // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_3;             // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_4;             // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_InitializeEntries");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries) == 0x0000D8, "Wrong size on WBP_C_GodRoster_FilterWidget_C_InitializeEntries");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, FilterEntries) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::FilterEntries' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_GetAllChildren_ReturnValue_1) == 0x000060, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry) == 0x000080, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1) == 0x000098, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_GetAllChildren_ReturnValue_2) == 0x0000A8, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_GetAllChildren_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_GetAllChildren_ReturnValue_3) == 0x0000B8, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_GetAllChildren_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeEntries, CallFunc_GetAllChildren_ReturnValue_4) == 0x0000C8, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeEntries::CallFunc_GetAllChildren_ReturnValue_4' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.InitializeWidget
// 0x0028 (0x0028 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_InitializeWidget final
{
public:
	class UHWIconSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWDataDisplay_Keywords*          CallFunc_GetKeywordsDataDisplay_ReturnValue;       // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReady_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_InitializeWidget");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget) == 0x000028, "Wrong size on WBP_C_GodRoster_FilterWidget_C_InitializeWidget");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget, CallFunc_GetKeywordsDataDisplay_ReturnValue) == 0x000008, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeWidget::CallFunc_GetKeywordsDataDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget, CallFunc_IsReady_ReturnValue) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeWidget::CallFunc_IsReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_InitializeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_C_GodRoster_FilterWidget_C_InitializeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.PlayClickSFX
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_PlayClickSFX final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_PlayClickSFX) == 0x000001, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_PlayClickSFX");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_PlayClickSFX) == 0x000001, "Wrong size on WBP_C_GodRoster_FilterWidget_C_PlayClickSFX");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_PlayClickSFX, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_PlayClickSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.PlayHoverSFX
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX) == 0x000001, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX) == 0x000001, "Wrong size on WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_PlayHoverSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_PreConstruct");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_C_GodRoster_FilterWidget_C_PreConstruct");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.ToggleFilterDisplay
// 0x0005 (0x0005 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay) == 0x000001, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay) == 0x000005, "Wrong size on WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay, Temp_bool_Variable) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay, Temp_byte_Variable) == 0x000001, "Member 'WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay, K2Node_Select_Default) == 0x000003, "Member 'WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_C_GodRoster_FilterWidget_C_ToggleFilterDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.UninitializeEntries
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_UninitializeEntries final
{
public:
	TArray<class UWidget*>                        FilterEntries;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodRoster_FilterEntry_C*         K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_2;             // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_C_GodRoster_FilterEntry_C*         K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_3;             // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_4;             // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_UninitializeEntries");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries) == 0x0000C0, "Wrong size on WBP_C_GodRoster_FilterWidget_C_UninitializeEntries");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, FilterEntries) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::FilterEntries' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry) == 0x000030, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_GetAllChildren_ReturnValue_1) == 0x000060, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_GetAllChildren_ReturnValue_2) == 0x000080, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_GetAllChildren_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1) == 0x000090, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Entry_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_GetAllChildren_ReturnValue_3) == 0x0000A0, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_GetAllChildren_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UninitializeEntries, CallFunc_GetAllChildren_ReturnValue_4) == 0x0000B0, "Member 'WBP_C_GodRoster_FilterWidget_C_UninitializeEntries::CallFunc_GetAllChildren_ReturnValue_4' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.UpdateSortDescription
// 0x0148 (0x0148 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C0(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShouldInvertSort_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00F8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0128(0x0018)()
	EHWFilterSortMethod                           CallFunc_GetSortMethod_ReturnValue;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription) == 0x000148, "Wrong size on WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_bool_Variable) == 0x000018, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_1) == 0x000020, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_2) == 0x000038, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_bool_Variable_1) == 0x000050, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_3) == 0x000058, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_4) == 0x000070, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_bool_Variable_2) == 0x000088, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_5) == 0x000090, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_6) == 0x0000A8, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_text_Variable_7) == 0x0000C0, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, Temp_bool_Variable_3) == 0x0000D8, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, CallFunc_GetShouldInvertSort_ReturnValue) == 0x0000D9, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::CallFunc_GetShouldInvertSort_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, K2Node_Select_Default_1) == 0x0000F8, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, K2Node_Select_Default_2) == 0x000110, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, K2Node_Select_Default_3) == 0x000128, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, CallFunc_GetSortMethod_ReturnValue) == 0x000140, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::CallFunc_GetSortMethod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription, K2Node_SwitchEnum_CmpSuccess) == 0x000141, "Member 'WBP_C_GodRoster_FilterWidget_C_UpdateSortDescription::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_C_GodRoster_FilterWidget.WBP_C_GodRoster_FilterWidget_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_GodRoster_FilterWidget_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

