#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RallyHereIntegration

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "RallyHereAPI_structs.hpp"
#include "RallyHereIntegration_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class RallyHereIntegration.RH_SubsystemPluginBase
// 0x0000 (0x0028 - 0x0028)
class URH_SubsystemPluginBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SubsystemPluginBase">();
	}
	static class URH_SubsystemPluginBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_SubsystemPluginBase>();
	}
};
static_assert(alignof(URH_SubsystemPluginBase) == 0x000008, "Wrong alignment on URH_SubsystemPluginBase");
static_assert(sizeof(URH_SubsystemPluginBase) == 0x000028, "Wrong size on URH_SubsystemPluginBase");

// Class RallyHereIntegration.RH_LocalPlayerSubsystemPlugin
// 0x0000 (0x0028 - 0x0028)
class URH_LocalPlayerSubsystemPlugin : public URH_SubsystemPluginBase
{
public:
	class URH_GameInstanceSubsystem* GetGameInstanceSubsystem() const;
	class URH_LocalPlayerSubsystem* GetLocalPlayerSubsystem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerSubsystemPlugin">();
	}
	static class URH_LocalPlayerSubsystemPlugin* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayerSubsystemPlugin>();
	}
};
static_assert(alignof(URH_LocalPlayerSubsystemPlugin) == 0x000008, "Wrong alignment on URH_LocalPlayerSubsystemPlugin");
static_assert(sizeof(URH_LocalPlayerSubsystemPlugin) == 0x000028, "Wrong size on URH_LocalPlayerSubsystemPlugin");

// Class RallyHereIntegration.RH_AdSubsystem
// 0x0020 (0x0048 - 0x0028)
class URH_AdSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool GetCodesFromLocale(class FString* OutLangCode, class FString* OutCountryCode);

	class FString GetAdApiToken() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_AdSubsystem">();
	}
	static class URH_AdSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_AdSubsystem>();
	}
};
static_assert(alignof(URH_AdSubsystem) == 0x000008, "Wrong alignment on URH_AdSubsystem");
static_assert(sizeof(URH_AdSubsystem) == 0x000048, "Wrong size on URH_AdSubsystem");

// Class RallyHereIntegration.RH_OnlineBeaconHost
// 0x0008 (0x03E0 - 0x03D8)
class ARH_OnlineBeaconHost final : public AOnlineBeaconHost
{
public:
	bool                                          bRequireBeaconAuthentication;                      // 0x03D8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCreateTestHost;                               // 0x03D9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_OnlineBeaconHost">();
	}
	static class ARH_OnlineBeaconHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARH_OnlineBeaconHost>();
	}
};
static_assert(alignof(ARH_OnlineBeaconHost) == 0x000008, "Wrong alignment on ARH_OnlineBeaconHost");
static_assert(sizeof(ARH_OnlineBeaconHost) == 0x0003E0, "Wrong size on ARH_OnlineBeaconHost");
static_assert(offsetof(ARH_OnlineBeaconHost, bRequireBeaconAuthentication) == 0x0003D8, "Member 'ARH_OnlineBeaconHost::bRequireBeaconAuthentication' has a wrong offset!");
static_assert(offsetof(ARH_OnlineBeaconHost, bAutoCreateTestHost) == 0x0003D9, "Member 'ARH_OnlineBeaconHost::bAutoCreateTestHost' has a wrong offset!");

// Class RallyHereIntegration.RH_OnlineBeaconClient
// 0x0010 (0x0338 - 0x0328)
class ARH_OnlineBeaconClient : public AOnlineBeaconClient
{
public:
	uint8                                         Pad_328[0x10];                                     // 0x0328(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_OnlineBeaconClient">();
	}
	static class ARH_OnlineBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARH_OnlineBeaconClient>();
	}
};
static_assert(alignof(ARH_OnlineBeaconClient) == 0x000008, "Wrong alignment on ARH_OnlineBeaconClient");
static_assert(sizeof(ARH_OnlineBeaconClient) == 0x000338, "Wrong size on ARH_OnlineBeaconClient");

// Class RallyHereIntegration.RH_TestBeaconClient
// 0x0000 (0x0338 - 0x0338)
class ARH_TestBeaconClient final : public ARH_OnlineBeaconClient
{
public:
	void ClientPong(const struct FDateTime& ClientTime);
	void ServerPing(const struct FDateTime& ClientTime);
	void TestPing();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_TestBeaconClient">();
	}
	static class ARH_TestBeaconClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARH_TestBeaconClient>();
	}
};
static_assert(alignof(ARH_TestBeaconClient) == 0x000008, "Wrong alignment on ARH_TestBeaconClient");
static_assert(sizeof(ARH_TestBeaconClient) == 0x000338, "Wrong size on ARH_TestBeaconClient");

// Class RallyHereIntegration.RH_TestBeaconHostObject
// 0x0000 (0x02C0 - 0x02C0)
class ARH_TestBeaconHostObject final : public AOnlineBeaconHostObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_TestBeaconHostObject">();
	}
	static class ARH_TestBeaconHostObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARH_TestBeaconHostObject>();
	}
};
static_assert(alignof(ARH_TestBeaconHostObject) == 0x000008, "Wrong alignment on ARH_TestBeaconHostObject");
static_assert(sizeof(ARH_TestBeaconHostObject) == 0x0002C0, "Wrong size on ARH_TestBeaconHostObject");

// Class RallyHereIntegration.RH_CatalogItem
// 0x01D8 (0x0200 - 0x0028)
class URH_CatalogItem final : public UObject
{
public:
	class FString                                 Etag;                                              // 0x0028(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRHAPI_Item                            APIItem;                                           // 0x0038(0x0180)(Transient, NativeAccessSpecifierPublic)
	int32                                         ItemId;                                            // 0x01B8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERHAPI_ItemType                               Type;                                              // 0x01BC(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RefItemId;                                         // 0x01C0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         AvailabilityFlags;                                 // 0x01C4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EntitledLootId;                                    // 0x01C8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LevelXpTableId;                                    // 0x01CC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LevelVendorId;                                     // 0x01D0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CouponDiscountCurrencyItemId;                      // 0x01D4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CouponDiscountPercentage;                          // 0x01D8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          CouponConsumeOnUse;                                // 0x01DC(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemInventoryBucketUseRuleSetId;                   // 0x01E0(0x0010)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 CouponDiscountLoot;                                // 0x01F0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

public:
	int32 GetAvailabilityFlags() const;
	bool GetCouponConsumeOnUse() const;
	int32 GetCouponDiscountCurrencyItemId() const;
	const TArray<int32> GetCouponDiscountLoot() const;
	float GetCouponDiscountPercentage() const;
	int32 GetEntitledLootId() const;
	int32 GetItemId() const;
	class FString GetItemInventoryBucketUseRulesetId() const;
	int32 GetLevelVendorId() const;
	int32 GetLevelXpTableId() const;
	int32 GetRefItemId() const;
	ERHAPI_ItemType GetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_CatalogItem">();
	}
	static class URH_CatalogItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_CatalogItem>();
	}
};
static_assert(alignof(URH_CatalogItem) == 0x000008, "Wrong alignment on URH_CatalogItem");
static_assert(sizeof(URH_CatalogItem) == 0x000200, "Wrong size on URH_CatalogItem");
static_assert(offsetof(URH_CatalogItem, Etag) == 0x000028, "Member 'URH_CatalogItem::Etag' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, APIItem) == 0x000038, "Member 'URH_CatalogItem::APIItem' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, ItemId) == 0x0001B8, "Member 'URH_CatalogItem::ItemId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, Type) == 0x0001BC, "Member 'URH_CatalogItem::Type' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, RefItemId) == 0x0001C0, "Member 'URH_CatalogItem::RefItemId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, AvailabilityFlags) == 0x0001C4, "Member 'URH_CatalogItem::AvailabilityFlags' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, EntitledLootId) == 0x0001C8, "Member 'URH_CatalogItem::EntitledLootId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, LevelXpTableId) == 0x0001CC, "Member 'URH_CatalogItem::LevelXpTableId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, LevelVendorId) == 0x0001D0, "Member 'URH_CatalogItem::LevelVendorId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, CouponDiscountCurrencyItemId) == 0x0001D4, "Member 'URH_CatalogItem::CouponDiscountCurrencyItemId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, CouponDiscountPercentage) == 0x0001D8, "Member 'URH_CatalogItem::CouponDiscountPercentage' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, CouponConsumeOnUse) == 0x0001DC, "Member 'URH_CatalogItem::CouponConsumeOnUse' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, ItemInventoryBucketUseRuleSetId) == 0x0001E0, "Member 'URH_CatalogItem::ItemInventoryBucketUseRuleSetId' has a wrong offset!");
static_assert(offsetof(URH_CatalogItem, CouponDiscountLoot) == 0x0001F0, "Member 'URH_CatalogItem::CouponDiscountLoot' has a wrong offset!");

// Class RallyHereIntegration.RH_GameInstanceSubsystemPlugin
// 0x0000 (0x0028 - 0x0028)
class URH_GameInstanceSubsystemPlugin : public URH_SubsystemPluginBase
{
public:
	class URH_GameInstanceSubsystem* GetGameInstanceSubsystem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameInstanceSubsystemPlugin">();
	}
	static class URH_GameInstanceSubsystemPlugin* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GameInstanceSubsystemPlugin>();
	}
};
static_assert(alignof(URH_GameInstanceSubsystemPlugin) == 0x000008, "Wrong alignment on URH_GameInstanceSubsystemPlugin");
static_assert(sizeof(URH_GameInstanceSubsystemPlugin) == 0x000028, "Wrong size on URH_GameInstanceSubsystemPlugin");

// Class RallyHereIntegration.RH_CatalogSubsystem
// 0x0478 (0x04A0 - 0x0028)
class URH_CatalogSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRH_VendorRequestState>         VendorRequests;                                    // 0x0040(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x50];                                      // 0x0050(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FRHAPI_XpTable>            XpTables;                                          // 0x00A0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, struct FRHAPI_Vendor>             CatalogVendors;                                    // 0x00F0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class URH_CatalogItem*>           CatalogItems;                                      // 0x0140(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, struct FRHAPI_Loot>               CatalogLootItems;                                  // 0x0190(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, struct FRHAPI_TimeFrame>          TimeFrames;                                        // 0x01E0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, struct FRHAPI_PricePoint>  CatalogPricePoints;                                // 0x0230(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_280[0x220];                                    // 0x0280(0x0220)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_GetCatalogAll(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogInventoryBucketUseRuleSetsAll(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogItem(int32 ItemId, const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogLoot(int32 ItemId, const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogPricePointsAll(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogTimeFramesAll(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogVendor(const struct FRHVendorGetRequest& VendorRequest);
	void BLUEPRINT_GetCatalogVendorsAll(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetCatalogXpAll(const TDelegate<void(bool bSuccess)>& Delegate);

	bool GetXpTable(int32 XpTableId, struct FRHAPI_XpTable* XpTable) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_CatalogSubsystem">();
	}
	static class URH_CatalogSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_CatalogSubsystem>();
	}
};
static_assert(alignof(URH_CatalogSubsystem) == 0x000008, "Wrong alignment on URH_CatalogSubsystem");
static_assert(sizeof(URH_CatalogSubsystem) == 0x0004A0, "Wrong size on URH_CatalogSubsystem");
static_assert(offsetof(URH_CatalogSubsystem, VendorRequests) == 0x000040, "Member 'URH_CatalogSubsystem::VendorRequests' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, XpTables) == 0x0000A0, "Member 'URH_CatalogSubsystem::XpTables' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, CatalogVendors) == 0x0000F0, "Member 'URH_CatalogSubsystem::CatalogVendors' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, CatalogItems) == 0x000140, "Member 'URH_CatalogSubsystem::CatalogItems' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, CatalogLootItems) == 0x000190, "Member 'URH_CatalogSubsystem::CatalogLootItems' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, TimeFrames) == 0x0001E0, "Member 'URH_CatalogSubsystem::TimeFrames' has a wrong offset!");
static_assert(offsetof(URH_CatalogSubsystem, CatalogPricePoints) == 0x000230, "Member 'URH_CatalogSubsystem::CatalogPricePoints' has a wrong offset!");

// Class RallyHereIntegration.RH_CatalogBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class URH_CatalogBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetCouponDiscountedPrice(class URH_CatalogItem* CouponItem, int32 Price);
	static int32 GetLevelAtXp(const struct FRHAPI_XpTable& XpTable, int64 XpPoints);
	static bool GetUnitPrice(const TArray<struct FRHAPI_PriceBreakpoint>& PriceBreakpoints, int32 CurrencyItemId, int32 Quantity, int32* Price);
	static TArray<struct FRHAPI_PriceBreakPointCurrency> GetUnitPrices(const TArray<struct FRHAPI_PriceBreakpoint>& PriceBreakpoints, const TArray<int32>& CurrencyIds, int32 Quantity);
	static bool GetVendorItemById(const struct FRHAPI_Vendor& Vendor, int32 LootId, struct FRHAPI_Loot* LootItem);
	static int64 GetXpAtLevel(const struct FRHAPI_XpTable& XpTable, int32 XpLevel);
	static bool IsCouponApplicableForItem(class URH_CatalogItem* CouponItem, const struct FRHAPI_Loot& LootItem);
	static bool IsCouponApplicableForLootId(class URH_CatalogItem* CouponItem, int32 LootId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_CatalogBlueprintLibrary">();
	}
	static class URH_CatalogBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_CatalogBlueprintLibrary>();
	}
};
static_assert(alignof(URH_CatalogBlueprintLibrary) == 0x000008, "Wrong alignment on URH_CatalogBlueprintLibrary");
static_assert(sizeof(URH_CatalogBlueprintLibrary) == 0x000028, "Wrong size on URH_CatalogBlueprintLibrary");

// Class RallyHereIntegration.RH_ConfigSubsystem
// 0x00F0 (0x0118 - 0x0028)
class URH_ConfigSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_ConfigSubsystem* ConfigSubsystem)> BLUEPRINT_OnKVsUpdated; // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x30];                                      // 0x0050(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_ConfigSubsystem* ConfigSubsystem)> BLUEPRINT_OnSettingsUpdated; // 0x0080(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            KVs;                                               // 0x0090(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FDateTime                              KickBeforeHint;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 KVsETag;                                           // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRH_ServerTimeCache                    ServerTimeCache;                                   // 0x0108(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_RefreshServerTimeCache(const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

	bool GetAnyKV(const class FString& Key, class FString* Value) const;
	bool GetAppSetting(const class FString& Key, class FString* Value) const;
	const TMap<class FString, class FString> GetAppSettings() const;
	struct FDateTime GetKickBeforeHint() const;
	bool GetKV(const class FString& Key, class FString* Value) const;
	bool GetKVBool(const class FString& Key, bool DefaultValue) const;
	const TMap<class FString, class FString> GetKVs() const;
	bool GetServerTime(struct FDateTime* Time) const;
	const struct FRH_ServerTimeCache GetServerTimeCache() const;
	bool GetServerTimeDrift(struct FTimespan* Timespan) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_ConfigSubsystem">();
	}
	static class URH_ConfigSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_ConfigSubsystem>();
	}
};
static_assert(alignof(URH_ConfigSubsystem) == 0x000008, "Wrong alignment on URH_ConfigSubsystem");
static_assert(sizeof(URH_ConfigSubsystem) == 0x000118, "Wrong size on URH_ConfigSubsystem");
static_assert(offsetof(URH_ConfigSubsystem, BLUEPRINT_OnKVsUpdated) == 0x000040, "Member 'URH_ConfigSubsystem::BLUEPRINT_OnKVsUpdated' has a wrong offset!");
static_assert(offsetof(URH_ConfigSubsystem, BLUEPRINT_OnSettingsUpdated) == 0x000080, "Member 'URH_ConfigSubsystem::BLUEPRINT_OnSettingsUpdated' has a wrong offset!");
static_assert(offsetof(URH_ConfigSubsystem, KVs) == 0x000090, "Member 'URH_ConfigSubsystem::KVs' has a wrong offset!");
static_assert(offsetof(URH_ConfigSubsystem, KickBeforeHint) == 0x0000E0, "Member 'URH_ConfigSubsystem::KickBeforeHint' has a wrong offset!");
static_assert(offsetof(URH_ConfigSubsystem, KVsETag) == 0x0000E8, "Member 'URH_ConfigSubsystem::KVsETag' has a wrong offset!");
static_assert(offsetof(URH_ConfigSubsystem, ServerTimeCache) == 0x000108, "Member 'URH_ConfigSubsystem::ServerTimeCache' has a wrong offset!");

// Class RallyHereIntegration.RH_DiagnosticsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class URH_DiagnosticsBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void GenerateReport(const struct FRH_DiagnosticReportOptions& Options);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_DiagnosticsBlueprintLibrary">();
	}
	static class URH_DiagnosticsBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_DiagnosticsBlueprintLibrary>();
	}
};
static_assert(alignof(URH_DiagnosticsBlueprintLibrary) == 0x000008, "Wrong alignment on URH_DiagnosticsBlueprintLibrary");
static_assert(sizeof(URH_DiagnosticsBlueprintLibrary) == 0x000028, "Wrong size on URH_DiagnosticsBlueprintLibrary");

// Class RallyHereIntegration.RH_EntitlementSubsystem
// 0x0058 (0x0080 - 0x0028)
class URH_EntitlementSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EntitlementOSSName;                                // 0x0078(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_EntitlementSubsystem">();
	}
	static class URH_EntitlementSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_EntitlementSubsystem>();
	}
};
static_assert(alignof(URH_EntitlementSubsystem) == 0x000008, "Wrong alignment on URH_EntitlementSubsystem");
static_assert(sizeof(URH_EntitlementSubsystem) == 0x000080, "Wrong size on URH_EntitlementSubsystem");
static_assert(offsetof(URH_EntitlementSubsystem, EntitlementOSSName) == 0x000078, "Member 'URH_EntitlementSubsystem::EntitlementOSSName' has a wrong offset!");

// Class RallyHereIntegration.RH_FriendSubsystem
// 0x0178 (0x01A0 - 0x0028)
class URH_FriendSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const TArray<class URH_RHFriendAndPlatformFriend*>& FriendList)> BLUEPRINT_FriendListUpdatedDelegate; // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_RHFriendAndPlatformFriend* Friend)> BLUEPRINT_FriendUpdatedDelegate; // 0x0068(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGuid& PlayerId, const class FName& Error)> BLUEPRINT_FriendUpdateErrorDelegate; // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const TArray<struct FRHAPI_BlockedPlayer>& Blocked)> BLUEPRINT_BlockedListUpdatedDelegate; // 0x00B8(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x18];                                      // 0x00C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGuid& PlayerId, const bool bSuccess)> BLUEPRINT_BlockedPlayerUpdatedDelegate; // 0x00E0(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x18];                                      // 0x00F0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGuid& PlayerId, const class FName& Error)> BLUEPRINT_BlockedPlayerUpdateErrorDelegate; // 0x0108(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class URH_RHFriendAndPlatformFriend*>  Friends;                                           // 0x0118(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_128[0x78];                                     // 0x0128(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool IsFriendPlatformBlocked(const class URH_RHFriendAndPlatformFriend* Player);

	bool BLUEPRINT_AddFriend(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid, ERHAPI_FriendshipStatus FriendStatus)>& Delegate);
	bool BLUEPRINT_AddNotes(const struct FGuid& PlayerUuid, class FString& Notes, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid, const class FString& NewNote)>& Delegate);
	bool BLUEPRINT_BlockPlayer(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	bool BLUEPRINT_DeleteNotes(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	bool BLUEPRINT_FetchBlockedList(const TDelegate<void(bool bSuccess)>& Delegate);
	bool BLUEPRINT_FetchBlockedPlayer(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	bool BLUEPRINT_FetchFriend(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	bool BLUEPRINT_FetchFriendsList(const TDelegate<void(bool bSuccess)>& Delegate);
	bool BLUEPRINT_RemoveFriend(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	bool BLUEPRINT_UnblockPlayer(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FGuid& FriendsPlayerUuid)>& Delegate);
	class URH_RHFriendAndPlatformFriend* GetOrCreateFriend(class URH_PlayerInfo* PlayerInfo);
	void UpdateRecentPlayerForOSS(const class URH_LocalPlayerSubsystem* LocalPlayerSubsystem, const struct FGuid& PlayerUuid);

	const TArray<struct FGuid> GetBlocked() const;
	class URH_RHFriendAndPlatformFriend* GetFriendByPlatformId(const struct FRH_PlayerPlatformId& PlatformPlayerId) const;
	class URH_RHFriendAndPlatformFriend* GetFriendByPlayerInfo(class URH_PlayerInfo* PlayerInfo) const;
	class URH_RHFriendAndPlatformFriend* GetFriendByUuid(const struct FGuid& PlayerUuid) const;
	class URH_RHFriendAndPlatformFriend* GetFriendByUuidOrPlatformId(const struct FGuid& PlayerUuid, const struct FRH_PlayerPlatformId& PlatformPlayerId) const;
	const TArray<class URH_RHFriendAndPlatformFriend*> GetFriends() const;
	class URH_PlayerInfoSubsystem* GetRH_PlayerInfoSubsystem() const;
	bool HasFriendsCached() const;
	bool IsFriendBlocked(const class URH_RHFriendAndPlatformFriend* Player) const;
	bool IsPlayerBlocked(const struct FGuid& PlayerUuid) const;
	bool IsPlayerPlatformBlocked(const struct FGuid& PlayerUuid) const;
	bool IsPlayerRhBlocked(const struct FGuid& PlayerUuid) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_FriendSubsystem">();
	}
	static class URH_FriendSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_FriendSubsystem>();
	}
};
static_assert(alignof(URH_FriendSubsystem) == 0x000008, "Wrong alignment on URH_FriendSubsystem");
static_assert(sizeof(URH_FriendSubsystem) == 0x0001A0, "Wrong size on URH_FriendSubsystem");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_FriendListUpdatedDelegate) == 0x000040, "Member 'URH_FriendSubsystem::BLUEPRINT_FriendListUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_FriendUpdatedDelegate) == 0x000068, "Member 'URH_FriendSubsystem::BLUEPRINT_FriendUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_FriendUpdateErrorDelegate) == 0x000090, "Member 'URH_FriendSubsystem::BLUEPRINT_FriendUpdateErrorDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_BlockedListUpdatedDelegate) == 0x0000B8, "Member 'URH_FriendSubsystem::BLUEPRINT_BlockedListUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_BlockedPlayerUpdatedDelegate) == 0x0000E0, "Member 'URH_FriendSubsystem::BLUEPRINT_BlockedPlayerUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, BLUEPRINT_BlockedPlayerUpdateErrorDelegate) == 0x000108, "Member 'URH_FriendSubsystem::BLUEPRINT_BlockedPlayerUpdateErrorDelegate' has a wrong offset!");
static_assert(offsetof(URH_FriendSubsystem, Friends) == 0x000118, "Member 'URH_FriendSubsystem::Friends' has a wrong offset!");

// Class RallyHereIntegration.RH_PlatformFriend
// 0x0048 (0x0070 - 0x0028)
class URH_PlatformFriend final : public UObject
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0028(0x0018)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DisplayName;                                       // 0x0040(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 RichPresenceInfo;                                  // 0x0050(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Joinable;                                          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          PlayingGame;                                       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          PlayingThisGame;                                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Online;                                            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          DoNotDisturb;                                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Friend;                                            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Blocked;                                           // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          PendingFriendRequestToYou;                         // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          PendingFriendRequestFromYou;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Clear();
	void ClearFriendAndStatusInfo();
	void Init(class URH_PlatformFriend* Other);
	void SetBlocked(bool bNewBlocked);

	class FString GetClientDisplayName() const;
	ERHAPI_Platform GetPlatform() const;
	ERHAPI_Platform GetPlatformBase() const;
	class FString GetPlatformUserId() const;
	const struct FRH_PlayerPlatformId GetPlayerPlatformId() const;
	class FString GetRichPresenceInfo() const;
	bool HasAnyRelationship() const;
	bool HasPendingFriendRequestFromYou() const;
	bool HasPendingFriendRequestToYou() const;
	bool IsBlocked() const;
	bool IsDND() const;
	bool IsFriend() const;
	bool IsJoinable() const;
	bool IsOnline() const;
	bool IsPlayingGame() const;
	bool IsPlayingThisGame() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlatformFriend">();
	}
	static class URH_PlatformFriend* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlatformFriend>();
	}
};
static_assert(alignof(URH_PlatformFriend) == 0x000008, "Wrong alignment on URH_PlatformFriend");
static_assert(sizeof(URH_PlatformFriend) == 0x000070, "Wrong size on URH_PlatformFriend");
static_assert(offsetof(URH_PlatformFriend, PlayerPlatformId) == 0x000028, "Member 'URH_PlatformFriend::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, DisplayName) == 0x000040, "Member 'URH_PlatformFriend::DisplayName' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, RichPresenceInfo) == 0x000050, "Member 'URH_PlatformFriend::RichPresenceInfo' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, Joinable) == 0x000060, "Member 'URH_PlatformFriend::Joinable' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, PlayingGame) == 0x000061, "Member 'URH_PlatformFriend::PlayingGame' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, PlayingThisGame) == 0x000062, "Member 'URH_PlatformFriend::PlayingThisGame' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, Online) == 0x000063, "Member 'URH_PlatformFriend::Online' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, DoNotDisturb) == 0x000064, "Member 'URH_PlatformFriend::DoNotDisturb' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, Friend) == 0x000065, "Member 'URH_PlatformFriend::Friend' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, Blocked) == 0x000066, "Member 'URH_PlatformFriend::Blocked' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, PendingFriendRequestToYou) == 0x000067, "Member 'URH_PlatformFriend::PendingFriendRequestToYou' has a wrong offset!");
static_assert(offsetof(URH_PlatformFriend, PendingFriendRequestFromYou) == 0x000068, "Member 'URH_PlatformFriend::PendingFriendRequestFromYou' has a wrong offset!");

// Class RallyHereIntegration.RH_RHFriendAndPlatformFriend
// 0x00A0 (0x00C8 - 0x0028)
class URH_RHFriendAndPlatformFriend final : public UObject
{
public:
	TMulticastInlineDelegate<void(class URH_PlayerInfoSubobject* Subobject)> BLUEPRINT_OnPresenceUpdatedDelegate; // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x60];                                      // 0x0038(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_PlatformFriend*>             PlatformFriends;                                   // 0x0098(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x20];                                      // 0x00A8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AcknowledgeFriendUpdate();
	void BLUEPRINT_GetLastKnownDisplayNameAsync(const struct FTimespan& StaleThreshold, bool bForceRefresh, ERHAPI_Platform PreferredPlatformType, const TDelegate<void(bool bSuccess, const class FString& DisplayName)>& Delegate);
	void BLUEPRINT_GetRHPlayerUuidAsync(const TDelegate<void(bool bSuccess, const struct FGuid& PlayerUuid)>& Delegate);

	bool AreFriends() const;
	bool ArePlatformFriends() const;
	bool AreRHFriends() const;
	bool AwaitingFriendshipResponse() const;
	bool CanViewPlatformProfile() const;
	bool FriendRequestSent() const;
	class URH_FriendSubsystem* GetFriendSubsystem() const;
	class FString GetLastKnownDisplayName(ERHAPI_Platform PreferredPlatformType) const;
	const struct FDateTime GetLastModifiedOn() const;
	class FString GetNotes() const;
	class URH_PlatformFriend* GetPlatformFriend(ERHAPI_Platform Platform) const;
	class URH_PlatformFriend* GetPlatformFriendAtIndex(int32 Index_0) const;
	class URH_PlatformFriend* GetPlatformFriendBase(ERHAPI_Platform Platform) const;
	const TArray<class URH_PlatformFriend*> GetPlatformFriends() const;
	const struct FRH_PlayerAndPlatformInfo GetPlayerAndPlatformInfo() const;
	class URH_PlayerInfo* GetPlayerInfo() const;
	ERHAPI_FriendshipStatus GetPreviousStatus() const;
	const struct FGuid GetRHPlayerUuid() const;
	ERHAPI_FriendshipStatus GetStatus() const;
	bool HaveAnyRelationship() const;
	bool HavePlatformRelationship() const;
	bool HaveRhRelationship() const;
	bool IsDND() const;
	bool IsOnline() const;
	bool IsPlayingThisGame() const;
	bool OtherDeclinedFriendship() const;
	bool OtherIsAwaitingFriendshipResponse() const;
	bool PendingFriendRequest() const;
	bool RHFriendRequestSent() const;
	bool RhPendingFriendRequest() const;
	bool ViewPlatformProfile() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_RHFriendAndPlatformFriend">();
	}
	static class URH_RHFriendAndPlatformFriend* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_RHFriendAndPlatformFriend>();
	}
};
static_assert(alignof(URH_RHFriendAndPlatformFriend) == 0x000008, "Wrong alignment on URH_RHFriendAndPlatformFriend");
static_assert(sizeof(URH_RHFriendAndPlatformFriend) == 0x0000C8, "Wrong size on URH_RHFriendAndPlatformFriend");
static_assert(offsetof(URH_RHFriendAndPlatformFriend, BLUEPRINT_OnPresenceUpdatedDelegate) == 0x000028, "Member 'URH_RHFriendAndPlatformFriend::BLUEPRINT_OnPresenceUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_RHFriendAndPlatformFriend, PlatformFriends) == 0x000098, "Member 'URH_RHFriendAndPlatformFriend::PlatformFriends' has a wrong offset!");

// Class RallyHereIntegration.RH_BootstrappingSettings
// 0x0010 (0x0038 - 0x0028)
class URH_BootstrappingSettings final : public UObject
{
public:
	float                                         PollIntervalFinalizer;                             // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PollLogIntervalFinalizer;                          // 0x002C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPollCountFinalizer;                             // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_BootstrappingSettings">();
	}
	static class URH_BootstrappingSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_BootstrappingSettings>();
	}
};
static_assert(alignof(URH_BootstrappingSettings) == 0x000008, "Wrong alignment on URH_BootstrappingSettings");
static_assert(sizeof(URH_BootstrappingSettings) == 0x000038, "Wrong size on URH_BootstrappingSettings");
static_assert(offsetof(URH_BootstrappingSettings, PollIntervalFinalizer) == 0x000028, "Member 'URH_BootstrappingSettings::PollIntervalFinalizer' has a wrong offset!");
static_assert(offsetof(URH_BootstrappingSettings, PollLogIntervalFinalizer) == 0x00002C, "Member 'URH_BootstrappingSettings::PollLogIntervalFinalizer' has a wrong offset!");
static_assert(offsetof(URH_BootstrappingSettings, MaxPollCountFinalizer) == 0x000030, "Member 'URH_BootstrappingSettings::MaxPollCountFinalizer' has a wrong offset!");

// Class RallyHereIntegration.RH_GameInstanceSubsystem
// 0x0100 (0x0130 - 0x0030)
class URH_GameInstanceSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_GameInstanceSubsystemPlugin*> SubsystemPlugins;                                 // 0x0050(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class URH_GameInstanceSessionSubsystem*       SessionSubsystem;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_SessionBrowserCache*                SessionSearchCache;                                // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_MatchmakingBrowserCache*            MatchmakingCache;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_GameInstanceServerBootstrapper*     ServerBootstrapper;                                // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_GameInstanceClientBootstrapper*     ClientBootstrapper;                                // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerInfoSubsystem*                PlayerInfoSubsystem;                               // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_CatalogSubsystem*                   CatalogSubsystem;                                  // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_ConfigSubsystem*                    ConfigSubsystem;                                   // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_SettingsSubsystem*                  SettingsSubsystem;                                 // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_MatchSubsystem*                     MatchSubsystem;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_RemoteFileSubsystem*                RemoteFileSubsystem;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_GuideSubsystem*                     GuideSubsystem;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_LeaderboardSubsystem*               LeaderboardSubsystem;                              // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 LastKnownIPAddress;                                // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8[0x30];                                      // 0x00D8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnabled;                                          // 0x0108(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableSessionBrowser;                             // 0x0109(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableMatchmakingBrowser;                         // 0x010A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableGameSessions;                               // 0x010B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableServerBootstrapper;                         // 0x010C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableClientBootstrapper;                         // 0x010D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10E[0x22];                                     // 0x010E(0x0022)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_CustomEndpoint(const struct FRH_CustomEndpointRequestWrapper& Request, const TDelegate<void(const struct FRH_CustomEndpointResponseWrapper& CustomResponseWrapper)>& Delegate);

	class URH_CatalogSubsystem* GetCatalogSubsystem() const;
	class URH_GameInstanceClientBootstrapper* GetClientBootstrapper() const;
	class URH_ConfigSubsystem* GetConfigSubsystem() const;
	class URH_GuideSubsystem* GetGuideSubsystem() const;
	class FString GetLastKnownIPAddress() const;
	class URH_LeaderboardSubsystem* GetLeaderboardSubsystem() const;
	class URH_MatchmakingBrowserCache* GetMatchmakingCache() const;
	class URH_MatchSubsystem* GetMatchSubsystem() const;
	class URH_PlayerInfoSubsystem* GetPlayerInfoSubsystem() const;
	class URH_RemoteFileSubsystem* GetRemoteFileSubsystem() const;
	class URH_GameInstanceServerBootstrapper* GetServerBootstrapper() const;
	class URH_SessionBrowserCache* GetSessionSearchCache() const;
	class URH_GameInstanceSessionSubsystem* GetSessionSubsystem() const;
	class URH_SettingsSubsystem* GetSettingsSubsystem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameInstanceSubsystem">();
	}
	static class URH_GameInstanceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GameInstanceSubsystem>();
	}
};
static_assert(alignof(URH_GameInstanceSubsystem) == 0x000008, "Wrong alignment on URH_GameInstanceSubsystem");
static_assert(sizeof(URH_GameInstanceSubsystem) == 0x000130, "Wrong size on URH_GameInstanceSubsystem");
static_assert(offsetof(URH_GameInstanceSubsystem, SubsystemPlugins) == 0x000050, "Member 'URH_GameInstanceSubsystem::SubsystemPlugins' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, SessionSubsystem) == 0x000060, "Member 'URH_GameInstanceSubsystem::SessionSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, SessionSearchCache) == 0x000068, "Member 'URH_GameInstanceSubsystem::SessionSearchCache' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, MatchmakingCache) == 0x000070, "Member 'URH_GameInstanceSubsystem::MatchmakingCache' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, ServerBootstrapper) == 0x000078, "Member 'URH_GameInstanceSubsystem::ServerBootstrapper' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, ClientBootstrapper) == 0x000080, "Member 'URH_GameInstanceSubsystem::ClientBootstrapper' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, PlayerInfoSubsystem) == 0x000088, "Member 'URH_GameInstanceSubsystem::PlayerInfoSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, CatalogSubsystem) == 0x000090, "Member 'URH_GameInstanceSubsystem::CatalogSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, ConfigSubsystem) == 0x000098, "Member 'URH_GameInstanceSubsystem::ConfigSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, SettingsSubsystem) == 0x0000A0, "Member 'URH_GameInstanceSubsystem::SettingsSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, MatchSubsystem) == 0x0000A8, "Member 'URH_GameInstanceSubsystem::MatchSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, RemoteFileSubsystem) == 0x0000B0, "Member 'URH_GameInstanceSubsystem::RemoteFileSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, GuideSubsystem) == 0x0000B8, "Member 'URH_GameInstanceSubsystem::GuideSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, LeaderboardSubsystem) == 0x0000C0, "Member 'URH_GameInstanceSubsystem::LeaderboardSubsystem' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, LastKnownIPAddress) == 0x0000C8, "Member 'URH_GameInstanceSubsystem::LastKnownIPAddress' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnabled) == 0x000108, "Member 'URH_GameInstanceSubsystem::bEnabled' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnableSessionBrowser) == 0x000109, "Member 'URH_GameInstanceSubsystem::bEnableSessionBrowser' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnableMatchmakingBrowser) == 0x00010A, "Member 'URH_GameInstanceSubsystem::bEnableMatchmakingBrowser' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnableGameSessions) == 0x00010B, "Member 'URH_GameInstanceSubsystem::bEnableGameSessions' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnableServerBootstrapper) == 0x00010C, "Member 'URH_GameInstanceSubsystem::bEnableServerBootstrapper' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSubsystem, bEnableClientBootstrapper) == 0x00010D, "Member 'URH_GameInstanceSubsystem::bEnableClientBootstrapper' has a wrong offset!");

// Class RallyHereIntegration.RH_GameInstanceServerBootstrapper
// 0x0B28 (0x0B50 - 0x0028)
class URH_GameInstanceServerBootstrapper : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(ERH_ServerBootstrapFlowStep OldStep, ERH_ServerBootstrapFlowStep NewStep)> BLUEPRINT_OnBootstrapStepChanged; // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x18];                                      // 0x0048(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	ERH_ServerBootstrapMode                       BootstrapMode;                                     // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERH_ServerBootstrapFlowStep                   BootstrapStep;                                     // 0x0061(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentRecycleCount;                               // 0x0064(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0xA48];                                     // 0x0068(0x0A48)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FRHAPI_SessionTemplate> Templates;                                    // 0x0AB0(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B00[0x18];                                     // 0x0B00(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_OnlineSession*                      RHSession;                                         // 0x0B18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DefaultAutoCreateSessionType;                      // 0x0B20(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DefaultAutoCreateRegion;                           // 0x0B30(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERH_ServerBootstrapMode                       DefaultBootstrapMode;                              // 0x0B40(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B41[0x3];                                      // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRecycleCount;                                   // 0x0B44(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMultiSessionServerMode;                           // 0x0B48(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReplaceSIGTERMHandler;                            // 0x0B49(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4A[0x6];                                      // 0x0B4A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RemoveSessionById(const class FString& SessionId);

	ERH_ServerBootstrapMode GetBootstrapMode() const;
	ERH_ServerBootstrapFlowStep GetBootstrapStep() const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByPlatformSessionId(const struct FUniqueNetIdRepl& PlatformSessionId) const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByRHSessionId(const class FString& SessionId) const;
	class URH_OnlineSession* GetSession() const;
	class URH_SessionView* GetSessionById(const class FString& SessionId) const;
	bool GetTemplate(const class FString& Type, struct FRHAPI_SessionTemplate* Template) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameInstanceServerBootstrapper">();
	}
	static class URH_GameInstanceServerBootstrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GameInstanceServerBootstrapper>();
	}
};
static_assert(alignof(URH_GameInstanceServerBootstrapper) == 0x000008, "Wrong alignment on URH_GameInstanceServerBootstrapper");
static_assert(sizeof(URH_GameInstanceServerBootstrapper) == 0x000B50, "Wrong size on URH_GameInstanceServerBootstrapper");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, BLUEPRINT_OnBootstrapStepChanged) == 0x000038, "Member 'URH_GameInstanceServerBootstrapper::BLUEPRINT_OnBootstrapStepChanged' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, BootstrapMode) == 0x000060, "Member 'URH_GameInstanceServerBootstrapper::BootstrapMode' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, BootstrapStep) == 0x000061, "Member 'URH_GameInstanceServerBootstrapper::BootstrapStep' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, CurrentRecycleCount) == 0x000064, "Member 'URH_GameInstanceServerBootstrapper::CurrentRecycleCount' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, Templates) == 0x000AB0, "Member 'URH_GameInstanceServerBootstrapper::Templates' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, RHSession) == 0x000B18, "Member 'URH_GameInstanceServerBootstrapper::RHSession' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, DefaultAutoCreateSessionType) == 0x000B20, "Member 'URH_GameInstanceServerBootstrapper::DefaultAutoCreateSessionType' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, DefaultAutoCreateRegion) == 0x000B30, "Member 'URH_GameInstanceServerBootstrapper::DefaultAutoCreateRegion' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, DefaultBootstrapMode) == 0x000B40, "Member 'URH_GameInstanceServerBootstrapper::DefaultBootstrapMode' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, MaxRecycleCount) == 0x000B44, "Member 'URH_GameInstanceServerBootstrapper::MaxRecycleCount' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, bMultiSessionServerMode) == 0x000B48, "Member 'URH_GameInstanceServerBootstrapper::bMultiSessionServerMode' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceServerBootstrapper, bReplaceSIGTERMHandler) == 0x000B49, "Member 'URH_GameInstanceServerBootstrapper::bReplaceSIGTERMHandler' has a wrong offset!");

// Class RallyHereIntegration.RH_GameInstanceClientBootstrapper
// 0x0000 (0x0028 - 0x0028)
class URH_GameInstanceClientBootstrapper final : public URH_GameInstanceSubsystemPlugin
{
public:
	class URH_OfflineSession* CreateOfflineSession(const class FString& SessionType, const int32 TeamId, const class FString& SessionId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameInstanceClientBootstrapper">();
	}
	static class URH_GameInstanceClientBootstrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GameInstanceClientBootstrapper>();
	}
};
static_assert(alignof(URH_GameInstanceClientBootstrapper) == 0x000008, "Wrong alignment on URH_GameInstanceClientBootstrapper");
static_assert(sizeof(URH_GameInstanceClientBootstrapper) == 0x000028, "Wrong size on URH_GameInstanceClientBootstrapper");

// Class RallyHereIntegration.RH_GameInstanceSessionSubsystem
// 0x0828 (0x0850 - 0x0028)
class URH_GameInstanceSessionSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARH_OnlineBeaconHost* Host)> BLUEPRINT_OnBeaconCreated;      // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_JoinedSession* OldSession, class URH_JoinedSession* NewSession)> BLUEPRINT_OnActiveSessionChanged; // 0x0070(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class URH_JoinedSession*                      DesiredSession;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRH_ActiveSessionState                 ActiveSessionState;                                // 0x0088(0x07A8)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_830[0x20];                                     // 0x0830(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BLUEPRINT_StartJoinInstanceFlow(const TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)>& Delegate);
	void BLUEPRINT_StartLeaveInstanceFlow(bool bAlreadyDisconnected, bool bCheckDesired, const TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)>& Delegate);
	void BLUEPRINT_SyncToSession(class URH_JoinedSession* SessionInfo, const TDelegate<void(class URH_JoinedSession* Session, bool bSuccess, const class FString& Error)>& Delegate);
	void TerminateBackfill();

	class FString GetActiveMatchId() const;
	class URH_JoinedSession* GetActiveSession() const;
	const struct FRH_ActiveSessionState GetActiveSessionState() const;
	class URH_JoinedSession* GetDesiredSession() const;
	ERHAPI_InstanceHealthStatus GetInstanceHealthStatusToReport() const;
	bool GetShouldKeepBackfillAlive() const;
	bool GetShouldKeepInstanceHealthAlive() const;
	bool IsBackfillTerminated() const;
	bool IsLocallyHostedInstance(const struct FRHAPI_InstanceInfo& Instance) const;
	bool IsLocallyHostedSession(const class URH_JoinedSession* Session) const;
	bool IsPlayerLocal(const struct FRHAPI_SessionPlayer& Player) const;
	bool IsReadyToJoinInstance(const class URH_JoinedSession* Session, bool bLog) const;
	bool IsReadyToJoinInstanceWithReason(const class URH_JoinedSession* Session, class FString* Error) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameInstanceSessionSubsystem">();
	}
	static class URH_GameInstanceSessionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GameInstanceSessionSubsystem>();
	}
};
static_assert(alignof(URH_GameInstanceSessionSubsystem) == 0x000008, "Wrong alignment on URH_GameInstanceSessionSubsystem");
static_assert(sizeof(URH_GameInstanceSessionSubsystem) == 0x000850, "Wrong size on URH_GameInstanceSessionSubsystem");
static_assert(offsetof(URH_GameInstanceSessionSubsystem, BLUEPRINT_OnBeaconCreated) == 0x000048, "Member 'URH_GameInstanceSessionSubsystem::BLUEPRINT_OnBeaconCreated' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSessionSubsystem, BLUEPRINT_OnActiveSessionChanged) == 0x000070, "Member 'URH_GameInstanceSessionSubsystem::BLUEPRINT_OnActiveSessionChanged' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSessionSubsystem, DesiredSession) == 0x000080, "Member 'URH_GameInstanceSessionSubsystem::DesiredSession' has a wrong offset!");
static_assert(offsetof(URH_GameInstanceSessionSubsystem, ActiveSessionState) == 0x000088, "Member 'URH_GameInstanceSessionSubsystem::ActiveSessionState' has a wrong offset!");

// Class RallyHereIntegration.RH_GameMode
// 0x0028 (0x03A8 - 0x0380)
class ARH_GameMode final : public AGameMode
{
public:
	float                                         ShutdownOnEmptyDelay;                              // 0x0380(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MatchEndReturnToLobbyDelay;                        // 0x0384(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MatchSpindownDelay;                                // 0x0388(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38C[0x1C];                                     // 0x038C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GameMode">();
	}
	static class ARH_GameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARH_GameMode>();
	}
};
static_assert(alignof(ARH_GameMode) == 0x000008, "Wrong alignment on ARH_GameMode");
static_assert(sizeof(ARH_GameMode) == 0x0003A8, "Wrong size on ARH_GameMode");
static_assert(offsetof(ARH_GameMode, ShutdownOnEmptyDelay) == 0x000380, "Member 'ARH_GameMode::ShutdownOnEmptyDelay' has a wrong offset!");
static_assert(offsetof(ARH_GameMode, MatchEndReturnToLobbyDelay) == 0x000384, "Member 'ARH_GameMode::MatchEndReturnToLobbyDelay' has a wrong offset!");
static_assert(offsetof(ARH_GameMode, MatchSpindownDelay) == 0x000388, "Member 'ARH_GameMode::MatchSpindownDelay' has a wrong offset!");

// Class RallyHereIntegration.RHGamesightHelper
// 0x0010 (0x0038 - 0x0028)
class URHGamesightHelper final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RHGamesightHelper">();
	}
	static class URHGamesightHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URHGamesightHelper>();
	}
};
static_assert(alignof(URHGamesightHelper) == 0x000008, "Wrong alignment on URHGamesightHelper");
static_assert(sizeof(URHGamesightHelper) == 0x000038, "Wrong size on URHGamesightHelper");

// Class RallyHereIntegration.RH_GuideSearch
// 0x07B0 (0x07D8 - 0x0028)
class URH_GuideSearch final : public UObject
{
public:
	TArray<struct FRHAPI_SearchGuideResponse>     ResultPages;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FRH_GuideSearchRequest                 InputRequest;                                      // 0x0038(0x0278)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          bRequestInProgress;                                // 0x02B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B1[0x527];                                    // 0x02B1(0x0527)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BLUEPRINT_RequestNextPage(const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

	const struct FRH_GuideSearchRequest GetInputRequest() const;
	bool GetRequestInProgress() const;
	const TArray<struct FRHAPI_SearchGuideResponse> GetResultPages() const;
	bool HasMorePages() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GuideSearch">();
	}
	static class URH_GuideSearch* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GuideSearch>();
	}
};
static_assert(alignof(URH_GuideSearch) == 0x000008, "Wrong alignment on URH_GuideSearch");
static_assert(sizeof(URH_GuideSearch) == 0x0007D8, "Wrong size on URH_GuideSearch");
static_assert(offsetof(URH_GuideSearch, ResultPages) == 0x000028, "Member 'URH_GuideSearch::ResultPages' has a wrong offset!");
static_assert(offsetof(URH_GuideSearch, InputRequest) == 0x000038, "Member 'URH_GuideSearch::InputRequest' has a wrong offset!");
static_assert(offsetof(URH_GuideSearch, bRequestInProgress) == 0x0002B0, "Member 'URH_GuideSearch::bRequestInProgress' has a wrong offset!");

// Class RallyHereIntegration.RH_GuideSubsystem
// 0x0060 (0x0088 - 0x0028)
class URH_GuideSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	TMap<struct FGuid, struct FRHAPI_GuideFull>   Guides;                                            // 0x0028(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class URH_GuideSearch*>                Searches;                                          // 0x0078(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_CreateGuide(const struct FRHAPI_GuideCreateRequest& Request, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)>& Delegate);
	void BLUEPRINT_DeleteGuide(const struct FGuid& GuideId, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)>& Delegate);
	void BLUEPRINT_GetGuideAsync(const struct FGuid& GuideId, bool bIgnoreCache, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FRHAPI_GuideFull& Guide)>& Delegate);
	void BLUEPRINT_UpdateGuide(const struct FGuid& GuideId, const struct FRHAPI_GuideCreateRequest& Request, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, const struct FGuid& GuideId)>& Delegate);
	class URH_GuideSearch* CreateGuideSearch(const struct FRH_GuideSearchRequest& InRequest);
	void RemoveAllGuideSearches();
	bool RemoveCachedGuide(const struct FGuid& GuideId);
	void RemoveGuideSearch(class URH_GuideSearch* GuideSearch);
	void RemoveGuideSearchAt(int32 Index_0);

	bool GetGuide(const struct FGuid& GuideId, struct FRHAPI_GuideFull* OutGuide) const;
	const TArray<class URH_GuideSearch*> GetGuideSearches() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_GuideSubsystem">();
	}
	static class URH_GuideSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_GuideSubsystem>();
	}
};
static_assert(alignof(URH_GuideSubsystem) == 0x000008, "Wrong alignment on URH_GuideSubsystem");
static_assert(sizeof(URH_GuideSubsystem) == 0x000088, "Wrong size on URH_GuideSubsystem");
static_assert(offsetof(URH_GuideSubsystem, Guides) == 0x000028, "Member 'URH_GuideSubsystem::Guides' has a wrong offset!");
static_assert(offsetof(URH_GuideSubsystem, Searches) == 0x000078, "Member 'URH_GuideSubsystem::Searches' has a wrong offset!");

// Class RallyHereIntegration.RH_IntegrationSettings
// 0x05D8 (0x0610 - 0x0038)
class URH_IntegrationSettings final : public UDeveloperSettings
{
public:
	struct FRH_EnvironmentConfiguration           DefaultEnvironmentConfiguration;                   // 0x0038(0x0040)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FRH_EnvironmentConfiguration>   EnvironmentConfigurations;                         // 0x0078(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BaseURLCommandLineKeys;                            // 0x0098(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EnvironmentCommandLineKeys;                        // 0x00B8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x10];                                      // 0x00C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         DefaultOSSCommandLineKeys;                         // 0x00D8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x10];                                      // 0x00E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ClientIdCommandLineKeys;                           // 0x00F8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ClientSecretCommandLineKeys;                       // 0x0118(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FName                                   EnvironmentOSSName;                                // 0x0128(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutomaticallyPollConfigurationData;               // 0x0130(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutomaticallyApplyHotfixData;                     // 0x0131(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHotfixTestValue;                                  // 0x0132(0x0001)(Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoStartSessionsAfterJoin;                       // 0x0133(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoJoinPlatformSessionsAfterUserChange;          // 0x0134(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoMakeSessionsJoinableOnHostMapLoadComplete;    // 0x0135(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSecurityTokenForJoining;                       // 0x0136(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireImportedPlayerIdsForJoining;               // 0x0137(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireValidPlayerIdsForJoining;                  // 0x0138(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoWatchPlayersOnSessionActive;                  // 0x0139(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERH_HostMapLoadMethod                         HostMapLoadMethod;                                 // 0x013A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         HostMapURLOptionsWhitelist;                        // 0x0140(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         PlayerMatchRecentlyPlayedWithPageSize;             // 0x0150(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerMatchesPageSize;                             // 0x0154(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerMatchesMaxPageCount;                         // 0x0158(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              PlayerMatchesMaxAge;                               // 0x0160(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCreateMatches;                                // 0x0168(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoAddConnectedPlayersToMatches;                 // 0x0169(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCloseMatchOnSessionInactive;                  // 0x016A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCreateInventorySessionOnLogin;                // 0x016B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoProcessPlatformEntitlementsOnLogin;           // 0x016C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoProcessPlatformEntitlementsOnReactivate;      // 0x016D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoProcessPlatformEntitlementsOnResume;          // 0x016E(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16F[0x1];                                      // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WebRequestsMaxSimultaneousRequests;                // 0x0170(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestsDefaultRetryCount;                      // 0x0174(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestsDefaultRetryTimeout;                    // 0x0178(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestsTrackedRequestsCountLimit;              // 0x017C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestsBurstCountThreshold;                    // 0x0180(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestsBurstTimeThresholdInSeconds;            // 0x0184(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebRequestMaxSanitizedContentLength;               // 0x0188(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ClientDeviceIpEndpoint;                            // 0x0190(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         LocalPlayerLoginSubsystemClass;                    // 0x01A0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         AdSubsystemClass;                                  // 0x01C0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         FriendSubsystemClass;                              // 0x01E0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         LocalPlayerSessionSubsystemClass;                  // 0x0200(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         SessionPlatformSyncerClass;                        // 0x0220(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         LocalPlayerPresenceSubsystemClass;                 // 0x0240(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         PurgeSubsystemClass;                               // 0x0260(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         EntitlementSubsystemClass;                         // 0x0280(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         GameInstanceSessionInfoSubsystemClass;             // 0x02A0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         GameInstanceServerBootstrapperClass;               // 0x02C0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         GameInstanceClientBootstrapperClass;               // 0x02E0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         PlayerInfoSubsystemClass;                          // 0x0300(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         PlayerInfoClass;                                   // 0x0320(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         CatalogSubsystemClass;                             // 0x0340(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         ConfigSubsystemClass;                              // 0x0360(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         SettingsSubsystemClass;                            // 0x0380(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         SessionBrowserCacheClass;                          // 0x03A0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         MatchmakingBrowserCacheClass;                      // 0x03C0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         MatchSubsystemClass;                               // 0x03E0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         RemoteFileSubsystemClass;                          // 0x0400(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         GuideSubsystemClass;                               // 0x0420(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         LeaderboardSubsystemClass;                         // 0x0440(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalPlayerSubsystemSandboxing;                   // 0x0460(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoUploadServerFiles;                            // 0x0461(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoUploadServerFilesChance;                       // 0x0464(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoUploadLogFiles;                               // 0x0468(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoUploadTraceFiles;                             // 0x0469(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BeginNewAdSessionPriority;                         // 0x046C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FindAdOppertunitiesPriority;                       // 0x0470(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpdateAdOppertunitiesPriority;                     // 0x0474(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AuthLogoutPriority;                                // 0x0478(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AuthLoginPriority;                                 // 0x047C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogAllPriority;                             // 0x0480(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogXpAllPriority;                           // 0x0484(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogItemPriority;                            // 0x0488(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogLootPriority;                            // 0x048C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogInventoryBucketUseRuleSetsAllPriority;   // 0x0490(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogPricePointsAllPriority;                  // 0x0494(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogTimeFramesAllPriority;                   // 0x0498(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogVendorPriority;                          // 0x049C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetCatalogVendorsAllPriority;                      // 0x04A0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FetchAppSettingsPriority;                          // 0x04A4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProcessPlatformEntitlementsPriority;               // 0x04A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RetrievePlatformEntitlementsPriority;              // 0x04AC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FetchFriendListPriority;                           // 0x04B0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FetchFriendPriority;                               // 0x04B4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddFriendPriority;                                 // 0x04B8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RemoveFriendPriority;                              // 0x04BC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddFriendNotesPriority;                            // 0x04C0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeleteFriendNotesPriority;                         // 0x04C4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FetchBlockedListPriority;                          // 0x04C8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FetchBlockedPlayerPriority;                        // 0x04CC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlockUnblockPlayerPriority;                        // 0x04D0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryCreateSessionPriority;                    // 0x04D4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryGetSessionPriority;                       // 0x04D8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryGetPriority;                              // 0x04DC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryCreatePriority;                           // 0x04E0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryUpdatePriority;                           // 0x04E4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryCreateOrderPriority;                      // 0x04E8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InventoryGetOrdersPriority;                        // 0x04EC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NotificationPollSelfPriority;                      // 0x04F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NotificationPollOtherPriority;                     // 0x04F4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NotificationCreatePriority;                        // 0x04F8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PresenceUpdatePriority;                            // 0x04FC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PresenceGetSelfPriority;                           // 0x0500(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PresenceGetOtherPriority;                          // 0x0504(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PresenceGetSettingsPriority;                       // 0x0508(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PurgeQueuePriority;                                // 0x050C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PurgeGetStatusPriority;                            // 0x0510(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetAllQueueInfoPriority;                           // 0x0514(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetMatchmakingTemplatePriority;                    // 0x0518(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetMapGameInfoPriority;                            // 0x051C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RankingGetPriority;                                // 0x0520(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RankingUpdatePriority;                             // 0x0524(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeserterGetPriority;                               // 0x0528(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeserterSetPriority;                               // 0x052C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionPollPriority;                               // 0x0530(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionJoinPriority;                               // 0x0534(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionLeavePriority;                              // 0x0538(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionInvitePriority;                             // 0x053C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionKickPriority;                               // 0x0540(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionLeaderChangePriority;                       // 0x0544(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionChangeTeamsPriority;                        // 0x0548(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionLeaveQueuePriority;                         // 0x054C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionGivePermissionPriority;                     // 0x0550(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionRemovePermissionPriority;                   // 0x0554(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionRequestInstancePriority;                    // 0x0558(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionEndInstancePriority;                        // 0x055C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionStartMatchPriority;                         // 0x0560(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionEndMatchPriority;                           // 0x0564(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionUpdateSessionInfoPriority;                  // 0x0568(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionUpdateInstanceInfoPriority;                 // 0x056C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionUpdateBrowserInfoPriority;                  // 0x0570(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionDeleteBrowserInfoPriority;                  // 0x0574(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionDeletePriority;                             // 0x0578(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionInstanceHealthUpdatePriority;               // 0x057C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionBackfillUpdatePriority;                     // 0x0580(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionUpdateWithPlatformSessionPriority;          // 0x0584(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionGetTemplatePriority;                        // 0x0588(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionGetByAllocationIdPriority;                  // 0x058C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionGetBySessionIdPriority;                     // 0x0590(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionGetByTypePriority;                          // 0x0594(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionsGetOtherPriority;                          // 0x0598(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionVoipLoginTokenPriority;                     // 0x059C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionVoipActionTokenPriority;                    // 0x05A0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SettingsGetPriority;                               // 0x05A4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SettingsGetTypesPriority;                          // 0x05A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SettingsUpdatePriority;                            // 0x05AC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetRegionsPriority;                                // 0x05B0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SessionAuditPriority;                              // 0x05B4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UsersLookupPlayerPriority;                         // 0x05B8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UsersGetLinkedPlatformsPriority;                   // 0x05BC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EventsReceiveEventPriority;                        // 0x05C0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchesGetOtherPriority;                           // 0x05C4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchesSearchPriority;                             // 0x05C8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchesLookupPriority;                             // 0x05CC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchesUpdatePriority;                             // 0x05D0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchesUpdatePlayerPriority;                       // 0x05D4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchTimelineGetPriority;                          // 0x05D8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchTimelineUploadPriority;                       // 0x05DC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PexReportPriority;                                 // 0x05E0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetPlayerReportsSentPriority;                      // 0x05E4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetPlayerReportsReceivedPriority;                  // 0x05E8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CreatePlayerReportPriority;                        // 0x05EC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FileUploadPriority;                                // 0x05F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FileDownloadPriority;                              // 0x05F4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FileBrowsePriority;                                // 0x05F8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FileDeletePriority;                                // 0x05FC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GuideSearchGuidesPriority;                         // 0x0600(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GuideFavoritePriority;                             // 0x0604(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchRecentlyPlayedWith;                           // 0x0608(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LeaderboardConfigPriority;                         // 0x060C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_IntegrationSettings">();
	}
	static class URH_IntegrationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_IntegrationSettings>();
	}
};
static_assert(alignof(URH_IntegrationSettings) == 0x000008, "Wrong alignment on URH_IntegrationSettings");
static_assert(sizeof(URH_IntegrationSettings) == 0x000610, "Wrong size on URH_IntegrationSettings");
static_assert(offsetof(URH_IntegrationSettings, DefaultEnvironmentConfiguration) == 0x000038, "Member 'URH_IntegrationSettings::DefaultEnvironmentConfiguration' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, EnvironmentConfigurations) == 0x000078, "Member 'URH_IntegrationSettings::EnvironmentConfigurations' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, BaseURLCommandLineKeys) == 0x000098, "Member 'URH_IntegrationSettings::BaseURLCommandLineKeys' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, EnvironmentCommandLineKeys) == 0x0000B8, "Member 'URH_IntegrationSettings::EnvironmentCommandLineKeys' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, DefaultOSSCommandLineKeys) == 0x0000D8, "Member 'URH_IntegrationSettings::DefaultOSSCommandLineKeys' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, ClientIdCommandLineKeys) == 0x0000F8, "Member 'URH_IntegrationSettings::ClientIdCommandLineKeys' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, ClientSecretCommandLineKeys) == 0x000118, "Member 'URH_IntegrationSettings::ClientSecretCommandLineKeys' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, EnvironmentOSSName) == 0x000128, "Member 'URH_IntegrationSettings::EnvironmentOSSName' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutomaticallyPollConfigurationData) == 0x000130, "Member 'URH_IntegrationSettings::bAutomaticallyPollConfigurationData' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutomaticallyApplyHotfixData) == 0x000131, "Member 'URH_IntegrationSettings::bAutomaticallyApplyHotfixData' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bHotfixTestValue) == 0x000132, "Member 'URH_IntegrationSettings::bHotfixTestValue' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoStartSessionsAfterJoin) == 0x000133, "Member 'URH_IntegrationSettings::bAutoStartSessionsAfterJoin' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoJoinPlatformSessionsAfterUserChange) == 0x000134, "Member 'URH_IntegrationSettings::bAutoJoinPlatformSessionsAfterUserChange' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoMakeSessionsJoinableOnHostMapLoadComplete) == 0x000135, "Member 'URH_IntegrationSettings::bAutoMakeSessionsJoinableOnHostMapLoadComplete' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bUseSecurityTokenForJoining) == 0x000136, "Member 'URH_IntegrationSettings::bUseSecurityTokenForJoining' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bRequireImportedPlayerIdsForJoining) == 0x000137, "Member 'URH_IntegrationSettings::bRequireImportedPlayerIdsForJoining' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bRequireValidPlayerIdsForJoining) == 0x000138, "Member 'URH_IntegrationSettings::bRequireValidPlayerIdsForJoining' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoWatchPlayersOnSessionActive) == 0x000139, "Member 'URH_IntegrationSettings::bAutoWatchPlayersOnSessionActive' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, HostMapLoadMethod) == 0x00013A, "Member 'URH_IntegrationSettings::HostMapLoadMethod' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, HostMapURLOptionsWhitelist) == 0x000140, "Member 'URH_IntegrationSettings::HostMapURLOptionsWhitelist' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerMatchRecentlyPlayedWithPageSize) == 0x000150, "Member 'URH_IntegrationSettings::PlayerMatchRecentlyPlayedWithPageSize' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerMatchesPageSize) == 0x000154, "Member 'URH_IntegrationSettings::PlayerMatchesPageSize' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerMatchesMaxPageCount) == 0x000158, "Member 'URH_IntegrationSettings::PlayerMatchesMaxPageCount' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerMatchesMaxAge) == 0x000160, "Member 'URH_IntegrationSettings::PlayerMatchesMaxAge' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoCreateMatches) == 0x000168, "Member 'URH_IntegrationSettings::bAutoCreateMatches' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoAddConnectedPlayersToMatches) == 0x000169, "Member 'URH_IntegrationSettings::bAutoAddConnectedPlayersToMatches' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoCloseMatchOnSessionInactive) == 0x00016A, "Member 'URH_IntegrationSettings::bAutoCloseMatchOnSessionInactive' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoCreateInventorySessionOnLogin) == 0x00016B, "Member 'URH_IntegrationSettings::bAutoCreateInventorySessionOnLogin' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoProcessPlatformEntitlementsOnLogin) == 0x00016C, "Member 'URH_IntegrationSettings::bAutoProcessPlatformEntitlementsOnLogin' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoProcessPlatformEntitlementsOnReactivate) == 0x00016D, "Member 'URH_IntegrationSettings::bAutoProcessPlatformEntitlementsOnReactivate' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoProcessPlatformEntitlementsOnResume) == 0x00016E, "Member 'URH_IntegrationSettings::bAutoProcessPlatformEntitlementsOnResume' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsMaxSimultaneousRequests) == 0x000170, "Member 'URH_IntegrationSettings::WebRequestsMaxSimultaneousRequests' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsDefaultRetryCount) == 0x000174, "Member 'URH_IntegrationSettings::WebRequestsDefaultRetryCount' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsDefaultRetryTimeout) == 0x000178, "Member 'URH_IntegrationSettings::WebRequestsDefaultRetryTimeout' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsTrackedRequestsCountLimit) == 0x00017C, "Member 'URH_IntegrationSettings::WebRequestsTrackedRequestsCountLimit' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsBurstCountThreshold) == 0x000180, "Member 'URH_IntegrationSettings::WebRequestsBurstCountThreshold' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestsBurstTimeThresholdInSeconds) == 0x000184, "Member 'URH_IntegrationSettings::WebRequestsBurstTimeThresholdInSeconds' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, WebRequestMaxSanitizedContentLength) == 0x000188, "Member 'URH_IntegrationSettings::WebRequestMaxSanitizedContentLength' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, ClientDeviceIpEndpoint) == 0x000190, "Member 'URH_IntegrationSettings::ClientDeviceIpEndpoint' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, LocalPlayerLoginSubsystemClass) == 0x0001A0, "Member 'URH_IntegrationSettings::LocalPlayerLoginSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AdSubsystemClass) == 0x0001C0, "Member 'URH_IntegrationSettings::AdSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FriendSubsystemClass) == 0x0001E0, "Member 'URH_IntegrationSettings::FriendSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, LocalPlayerSessionSubsystemClass) == 0x000200, "Member 'URH_IntegrationSettings::LocalPlayerSessionSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionPlatformSyncerClass) == 0x000220, "Member 'URH_IntegrationSettings::SessionPlatformSyncerClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, LocalPlayerPresenceSubsystemClass) == 0x000240, "Member 'URH_IntegrationSettings::LocalPlayerPresenceSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PurgeSubsystemClass) == 0x000260, "Member 'URH_IntegrationSettings::PurgeSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, EntitlementSubsystemClass) == 0x000280, "Member 'URH_IntegrationSettings::EntitlementSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GameInstanceSessionInfoSubsystemClass) == 0x0002A0, "Member 'URH_IntegrationSettings::GameInstanceSessionInfoSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GameInstanceServerBootstrapperClass) == 0x0002C0, "Member 'URH_IntegrationSettings::GameInstanceServerBootstrapperClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GameInstanceClientBootstrapperClass) == 0x0002E0, "Member 'URH_IntegrationSettings::GameInstanceClientBootstrapperClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerInfoSubsystemClass) == 0x000300, "Member 'URH_IntegrationSettings::PlayerInfoSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PlayerInfoClass) == 0x000320, "Member 'URH_IntegrationSettings::PlayerInfoClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, CatalogSubsystemClass) == 0x000340, "Member 'URH_IntegrationSettings::CatalogSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, ConfigSubsystemClass) == 0x000360, "Member 'URH_IntegrationSettings::ConfigSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SettingsSubsystemClass) == 0x000380, "Member 'URH_IntegrationSettings::SettingsSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionBrowserCacheClass) == 0x0003A0, "Member 'URH_IntegrationSettings::SessionBrowserCacheClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchmakingBrowserCacheClass) == 0x0003C0, "Member 'URH_IntegrationSettings::MatchmakingBrowserCacheClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchSubsystemClass) == 0x0003E0, "Member 'URH_IntegrationSettings::MatchSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, RemoteFileSubsystemClass) == 0x000400, "Member 'URH_IntegrationSettings::RemoteFileSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GuideSubsystemClass) == 0x000420, "Member 'URH_IntegrationSettings::GuideSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, LeaderboardSubsystemClass) == 0x000440, "Member 'URH_IntegrationSettings::LeaderboardSubsystemClass' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bLocalPlayerSubsystemSandboxing) == 0x000460, "Member 'URH_IntegrationSettings::bLocalPlayerSubsystemSandboxing' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoUploadServerFiles) == 0x000461, "Member 'URH_IntegrationSettings::bAutoUploadServerFiles' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AutoUploadServerFilesChance) == 0x000464, "Member 'URH_IntegrationSettings::AutoUploadServerFilesChance' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoUploadLogFiles) == 0x000468, "Member 'URH_IntegrationSettings::bAutoUploadLogFiles' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, bAutoUploadTraceFiles) == 0x000469, "Member 'URH_IntegrationSettings::bAutoUploadTraceFiles' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, BeginNewAdSessionPriority) == 0x00046C, "Member 'URH_IntegrationSettings::BeginNewAdSessionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FindAdOppertunitiesPriority) == 0x000470, "Member 'URH_IntegrationSettings::FindAdOppertunitiesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, UpdateAdOppertunitiesPriority) == 0x000474, "Member 'URH_IntegrationSettings::UpdateAdOppertunitiesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AuthLogoutPriority) == 0x000478, "Member 'URH_IntegrationSettings::AuthLogoutPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AuthLoginPriority) == 0x00047C, "Member 'URH_IntegrationSettings::AuthLoginPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogAllPriority) == 0x000480, "Member 'URH_IntegrationSettings::GetCatalogAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogXpAllPriority) == 0x000484, "Member 'URH_IntegrationSettings::GetCatalogXpAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogItemPriority) == 0x000488, "Member 'URH_IntegrationSettings::GetCatalogItemPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogLootPriority) == 0x00048C, "Member 'URH_IntegrationSettings::GetCatalogLootPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogInventoryBucketUseRuleSetsAllPriority) == 0x000490, "Member 'URH_IntegrationSettings::GetCatalogInventoryBucketUseRuleSetsAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogPricePointsAllPriority) == 0x000494, "Member 'URH_IntegrationSettings::GetCatalogPricePointsAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogTimeFramesAllPriority) == 0x000498, "Member 'URH_IntegrationSettings::GetCatalogTimeFramesAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogVendorPriority) == 0x00049C, "Member 'URH_IntegrationSettings::GetCatalogVendorPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetCatalogVendorsAllPriority) == 0x0004A0, "Member 'URH_IntegrationSettings::GetCatalogVendorsAllPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FetchAppSettingsPriority) == 0x0004A4, "Member 'URH_IntegrationSettings::FetchAppSettingsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, ProcessPlatformEntitlementsPriority) == 0x0004A8, "Member 'URH_IntegrationSettings::ProcessPlatformEntitlementsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, RetrievePlatformEntitlementsPriority) == 0x0004AC, "Member 'URH_IntegrationSettings::RetrievePlatformEntitlementsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FetchFriendListPriority) == 0x0004B0, "Member 'URH_IntegrationSettings::FetchFriendListPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FetchFriendPriority) == 0x0004B4, "Member 'URH_IntegrationSettings::FetchFriendPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AddFriendPriority) == 0x0004B8, "Member 'URH_IntegrationSettings::AddFriendPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, RemoveFriendPriority) == 0x0004BC, "Member 'URH_IntegrationSettings::RemoveFriendPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, AddFriendNotesPriority) == 0x0004C0, "Member 'URH_IntegrationSettings::AddFriendNotesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, DeleteFriendNotesPriority) == 0x0004C4, "Member 'URH_IntegrationSettings::DeleteFriendNotesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FetchBlockedListPriority) == 0x0004C8, "Member 'URH_IntegrationSettings::FetchBlockedListPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FetchBlockedPlayerPriority) == 0x0004CC, "Member 'URH_IntegrationSettings::FetchBlockedPlayerPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, BlockUnblockPlayerPriority) == 0x0004D0, "Member 'URH_IntegrationSettings::BlockUnblockPlayerPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryCreateSessionPriority) == 0x0004D4, "Member 'URH_IntegrationSettings::InventoryCreateSessionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryGetSessionPriority) == 0x0004D8, "Member 'URH_IntegrationSettings::InventoryGetSessionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryGetPriority) == 0x0004DC, "Member 'URH_IntegrationSettings::InventoryGetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryCreatePriority) == 0x0004E0, "Member 'URH_IntegrationSettings::InventoryCreatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryUpdatePriority) == 0x0004E4, "Member 'URH_IntegrationSettings::InventoryUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryCreateOrderPriority) == 0x0004E8, "Member 'URH_IntegrationSettings::InventoryCreateOrderPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, InventoryGetOrdersPriority) == 0x0004EC, "Member 'URH_IntegrationSettings::InventoryGetOrdersPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, NotificationPollSelfPriority) == 0x0004F0, "Member 'URH_IntegrationSettings::NotificationPollSelfPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, NotificationPollOtherPriority) == 0x0004F4, "Member 'URH_IntegrationSettings::NotificationPollOtherPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, NotificationCreatePriority) == 0x0004F8, "Member 'URH_IntegrationSettings::NotificationCreatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PresenceUpdatePriority) == 0x0004FC, "Member 'URH_IntegrationSettings::PresenceUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PresenceGetSelfPriority) == 0x000500, "Member 'URH_IntegrationSettings::PresenceGetSelfPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PresenceGetOtherPriority) == 0x000504, "Member 'URH_IntegrationSettings::PresenceGetOtherPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PresenceGetSettingsPriority) == 0x000508, "Member 'URH_IntegrationSettings::PresenceGetSettingsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PurgeQueuePriority) == 0x00050C, "Member 'URH_IntegrationSettings::PurgeQueuePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PurgeGetStatusPriority) == 0x000510, "Member 'URH_IntegrationSettings::PurgeGetStatusPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetAllQueueInfoPriority) == 0x000514, "Member 'URH_IntegrationSettings::GetAllQueueInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetMatchmakingTemplatePriority) == 0x000518, "Member 'URH_IntegrationSettings::GetMatchmakingTemplatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetMapGameInfoPriority) == 0x00051C, "Member 'URH_IntegrationSettings::GetMapGameInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, RankingGetPriority) == 0x000520, "Member 'URH_IntegrationSettings::RankingGetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, RankingUpdatePriority) == 0x000524, "Member 'URH_IntegrationSettings::RankingUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, DeserterGetPriority) == 0x000528, "Member 'URH_IntegrationSettings::DeserterGetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, DeserterSetPriority) == 0x00052C, "Member 'URH_IntegrationSettings::DeserterSetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionPollPriority) == 0x000530, "Member 'URH_IntegrationSettings::SessionPollPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionJoinPriority) == 0x000534, "Member 'URH_IntegrationSettings::SessionJoinPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionLeavePriority) == 0x000538, "Member 'URH_IntegrationSettings::SessionLeavePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionInvitePriority) == 0x00053C, "Member 'URH_IntegrationSettings::SessionInvitePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionKickPriority) == 0x000540, "Member 'URH_IntegrationSettings::SessionKickPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionLeaderChangePriority) == 0x000544, "Member 'URH_IntegrationSettings::SessionLeaderChangePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionChangeTeamsPriority) == 0x000548, "Member 'URH_IntegrationSettings::SessionChangeTeamsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionLeaveQueuePriority) == 0x00054C, "Member 'URH_IntegrationSettings::SessionLeaveQueuePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionGivePermissionPriority) == 0x000550, "Member 'URH_IntegrationSettings::SessionGivePermissionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionRemovePermissionPriority) == 0x000554, "Member 'URH_IntegrationSettings::SessionRemovePermissionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionRequestInstancePriority) == 0x000558, "Member 'URH_IntegrationSettings::SessionRequestInstancePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionEndInstancePriority) == 0x00055C, "Member 'URH_IntegrationSettings::SessionEndInstancePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionStartMatchPriority) == 0x000560, "Member 'URH_IntegrationSettings::SessionStartMatchPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionEndMatchPriority) == 0x000564, "Member 'URH_IntegrationSettings::SessionEndMatchPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionUpdateSessionInfoPriority) == 0x000568, "Member 'URH_IntegrationSettings::SessionUpdateSessionInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionUpdateInstanceInfoPriority) == 0x00056C, "Member 'URH_IntegrationSettings::SessionUpdateInstanceInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionUpdateBrowserInfoPriority) == 0x000570, "Member 'URH_IntegrationSettings::SessionUpdateBrowserInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionDeleteBrowserInfoPriority) == 0x000574, "Member 'URH_IntegrationSettings::SessionDeleteBrowserInfoPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionDeletePriority) == 0x000578, "Member 'URH_IntegrationSettings::SessionDeletePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionInstanceHealthUpdatePriority) == 0x00057C, "Member 'URH_IntegrationSettings::SessionInstanceHealthUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionBackfillUpdatePriority) == 0x000580, "Member 'URH_IntegrationSettings::SessionBackfillUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionUpdateWithPlatformSessionPriority) == 0x000584, "Member 'URH_IntegrationSettings::SessionUpdateWithPlatformSessionPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionGetTemplatePriority) == 0x000588, "Member 'URH_IntegrationSettings::SessionGetTemplatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionGetByAllocationIdPriority) == 0x00058C, "Member 'URH_IntegrationSettings::SessionGetByAllocationIdPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionGetBySessionIdPriority) == 0x000590, "Member 'URH_IntegrationSettings::SessionGetBySessionIdPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionGetByTypePriority) == 0x000594, "Member 'URH_IntegrationSettings::SessionGetByTypePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionsGetOtherPriority) == 0x000598, "Member 'URH_IntegrationSettings::SessionsGetOtherPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionVoipLoginTokenPriority) == 0x00059C, "Member 'URH_IntegrationSettings::SessionVoipLoginTokenPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionVoipActionTokenPriority) == 0x0005A0, "Member 'URH_IntegrationSettings::SessionVoipActionTokenPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SettingsGetPriority) == 0x0005A4, "Member 'URH_IntegrationSettings::SettingsGetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SettingsGetTypesPriority) == 0x0005A8, "Member 'URH_IntegrationSettings::SettingsGetTypesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SettingsUpdatePriority) == 0x0005AC, "Member 'URH_IntegrationSettings::SettingsUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetRegionsPriority) == 0x0005B0, "Member 'URH_IntegrationSettings::GetRegionsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, SessionAuditPriority) == 0x0005B4, "Member 'URH_IntegrationSettings::SessionAuditPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, UsersLookupPlayerPriority) == 0x0005B8, "Member 'URH_IntegrationSettings::UsersLookupPlayerPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, UsersGetLinkedPlatformsPriority) == 0x0005BC, "Member 'URH_IntegrationSettings::UsersGetLinkedPlatformsPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, EventsReceiveEventPriority) == 0x0005C0, "Member 'URH_IntegrationSettings::EventsReceiveEventPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchesGetOtherPriority) == 0x0005C4, "Member 'URH_IntegrationSettings::MatchesGetOtherPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchesSearchPriority) == 0x0005C8, "Member 'URH_IntegrationSettings::MatchesSearchPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchesLookupPriority) == 0x0005CC, "Member 'URH_IntegrationSettings::MatchesLookupPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchesUpdatePriority) == 0x0005D0, "Member 'URH_IntegrationSettings::MatchesUpdatePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchesUpdatePlayerPriority) == 0x0005D4, "Member 'URH_IntegrationSettings::MatchesUpdatePlayerPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchTimelineGetPriority) == 0x0005D8, "Member 'URH_IntegrationSettings::MatchTimelineGetPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchTimelineUploadPriority) == 0x0005DC, "Member 'URH_IntegrationSettings::MatchTimelineUploadPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, PexReportPriority) == 0x0005E0, "Member 'URH_IntegrationSettings::PexReportPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetPlayerReportsSentPriority) == 0x0005E4, "Member 'URH_IntegrationSettings::GetPlayerReportsSentPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GetPlayerReportsReceivedPriority) == 0x0005E8, "Member 'URH_IntegrationSettings::GetPlayerReportsReceivedPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, CreatePlayerReportPriority) == 0x0005EC, "Member 'URH_IntegrationSettings::CreatePlayerReportPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FileUploadPriority) == 0x0005F0, "Member 'URH_IntegrationSettings::FileUploadPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FileDownloadPriority) == 0x0005F4, "Member 'URH_IntegrationSettings::FileDownloadPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FileBrowsePriority) == 0x0005F8, "Member 'URH_IntegrationSettings::FileBrowsePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, FileDeletePriority) == 0x0005FC, "Member 'URH_IntegrationSettings::FileDeletePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GuideSearchGuidesPriority) == 0x000600, "Member 'URH_IntegrationSettings::GuideSearchGuidesPriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, GuideFavoritePriority) == 0x000604, "Member 'URH_IntegrationSettings::GuideFavoritePriority' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, MatchRecentlyPlayedWith) == 0x000608, "Member 'URH_IntegrationSettings::MatchRecentlyPlayedWith' has a wrong offset!");
static_assert(offsetof(URH_IntegrationSettings, LeaderboardConfigPriority) == 0x00060C, "Member 'URH_IntegrationSettings::LeaderboardConfigPriority' has a wrong offset!");

// Class RallyHereIntegration.RH_LeaderboardSubsystem
// 0x0168 (0x0190 - 0x0028)
class URH_LeaderboardSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	TMap<class FString, struct FRHAPI_LeaderboardConfig> LeaderboardConfigs;                         // 0x0028(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FRHAPI_LeaderboardPage> CachedPages;                                  // 0x0078(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_C8[0x50];                                      // 0x00C8(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FRHAPI_LeaderboardMetaData> CachedMetaData;                           // 0x0118(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRHAPI_LeaderboardEntry                CachedPositionEntry;                               // 0x0168(0x0028)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_GetAllConfigAsync(const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardConfigList* ConfigList)>& Delegate);
	void BLUEPRINT_GetLeaderboardAsync(const class FString& LeaderboardId, const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardPage* LeaderboardPage)>& Delegate);
	void BLUEPRINT_GetLeaderboardMetaDataAsync(const class FString& LeaderboardId, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardMetaData* LeaderboardMetaData)>& Delegate);
	void BLUEPRINT_GetLeaderboardPageAsync(const class FString& LeaderboardId, const class FString& Cursor, const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardPage* LeaderboardPage)>& Delegate, int32 PageSize);
	void BLUEPRINT_GetLeaderboardPositionAsync(const class FString& LeaderboardId, int32 position, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo, struct FRHAPI_LeaderboardEntry* LeaderboardEntry)>& Delegate);

	bool GetCachedLeaderboard(const class FString& LeaderboardId, struct FRH_LeaderboardResults* Results) const;
	bool GetCachedLeaderboardConfig(const class FString& LeaderboardId, struct FRHAPI_LeaderboardConfig* CachedConfig) const;
	bool GetCachedLeaderboardConfigs(TMap<class FString, struct FRHAPI_LeaderboardConfig>* OutConfigMap) const;
	bool GetCachedLeaderboardMetaData(const class FString& LeaderboardId, struct FRHAPI_LeaderboardMetaData* OutMetaData) const;
	bool GetCachedLeaderboardPage(const class FString& LeaderboardId, struct FRHAPI_LeaderboardPage* CachedPage) const;
	bool GetCachedLeaderboardPosition(struct FRHAPI_LeaderboardEntry* OutEntry) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LeaderboardSubsystem">();
	}
	static class URH_LeaderboardSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LeaderboardSubsystem>();
	}
};
static_assert(alignof(URH_LeaderboardSubsystem) == 0x000008, "Wrong alignment on URH_LeaderboardSubsystem");
static_assert(sizeof(URH_LeaderboardSubsystem) == 0x000190, "Wrong size on URH_LeaderboardSubsystem");
static_assert(offsetof(URH_LeaderboardSubsystem, LeaderboardConfigs) == 0x000028, "Member 'URH_LeaderboardSubsystem::LeaderboardConfigs' has a wrong offset!");
static_assert(offsetof(URH_LeaderboardSubsystem, CachedPages) == 0x000078, "Member 'URH_LeaderboardSubsystem::CachedPages' has a wrong offset!");
static_assert(offsetof(URH_LeaderboardSubsystem, CachedMetaData) == 0x000118, "Member 'URH_LeaderboardSubsystem::CachedMetaData' has a wrong offset!");
static_assert(offsetof(URH_LeaderboardSubsystem, CachedPositionEntry) == 0x000168, "Member 'URH_LeaderboardSubsystem::CachedPositionEntry' has a wrong offset!");

// Class RallyHereIntegration.RH_LocalPlayerInterface
// 0x0000 (0x0000 - 0x0000)
class IRH_LocalPlayerInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerInterface">();
	}
	static class IRH_LocalPlayerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRH_LocalPlayerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IRH_LocalPlayerInterface) == 0x000001, "Wrong alignment on IRH_LocalPlayerInterface");
static_assert(sizeof(IRH_LocalPlayerInterface) == 0x000001, "Wrong size on IRH_LocalPlayerInterface");

// Class RallyHereIntegration.RH_LocalPlayer
// 0x0008 (0x02B8 - 0x02B0)
class URH_LocalPlayer : public ULocalPlayer
{
public:
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayer">();
	}
	static class URH_LocalPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayer>();
	}
};
static_assert(alignof(URH_LocalPlayer) == 0x000008, "Wrong alignment on URH_LocalPlayer");
static_assert(sizeof(URH_LocalPlayer) == 0x0002B8, "Wrong size on URH_LocalPlayer");

// Class RallyHereIntegration.RH_IpConnectionInterface
// 0x0000 (0x0000 - 0x0000)
class IRH_IpConnectionInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_IpConnectionInterface">();
	}
	static class IRH_IpConnectionInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRH_IpConnectionInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IRH_IpConnectionInterface) == 0x000001, "Wrong alignment on IRH_IpConnectionInterface");
static_assert(sizeof(IRH_IpConnectionInterface) == 0x000001, "Wrong size on IRH_IpConnectionInterface");

// Class RallyHereIntegration.RH_IpConnection
// 0x0030 (0x1EB8 - 0x1E88)
class URH_IpConnection final : public UIpConnection
{
public:
	uint8                                         Pad_1E88[0x20];                                    // 0x1E88(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_IpConnection* Connection)> OnConnectionDestroyedDel;     // 0x1EA8(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_IpConnection">();
	}
	static class URH_IpConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_IpConnection>();
	}
};
static_assert(alignof(URH_IpConnection) == 0x000008, "Wrong alignment on URH_IpConnection");
static_assert(sizeof(URH_IpConnection) == 0x001EB8, "Wrong size on URH_IpConnection");
static_assert(offsetof(URH_IpConnection, OnConnectionDestroyedDel) == 0x001EA8, "Member 'URH_IpConnection::OnConnectionDestroyedDel' has a wrong offset!");

// Class RallyHereIntegration.RH_LocalPlayerLoginSubsystem
// 0x0180 (0x01A8 - 0x0028)
class URH_LocalPlayerLoginSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FRH_LoginResult& Result)> BLUEPRINT_OnLoginComplete;  // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BLUEPRINT_OnCrossplaySettingChanged;               // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BLUEPRINT_OnCommunicationSettingChanged;           // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BLUEPRINT_OnUserGeneratedContentSettingChanged;    // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   LoginOSSName;                                      // 0x00C8(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NicknameOSSName;                                   // 0x00D0(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginAllowStoredRefreshToken;                     // 0x00D8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginDuringPartialInstall;                        // 0x00D9(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSRequireLoginUIFirst;                      // 0x00DA(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNicknameOSSRequireLoginUIFirst;                   // 0x00DB(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSRequireOnlinePlayToLogin;                 // 0x00DC(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNicknameOSSRequireOnlinePlayToLogin;              // 0x00DD(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSPromptAccountUpgradeIfInsufficient;       // 0x00DE(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNicknameOSSPromptAccountUpgradeIfInsufficient;    // 0x00DF(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSRequireValidUserIdForFailedLogin;         // 0x00E0(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNicknameOSSRequireValidUserIdForFailedLogin;      // 0x00E1(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLogoutAndRetryLoginIfRefreshLoginFailed;          // 0x00E2(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSUseIDTokenAsPortalParentAccessToken;      // 0x00E3(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoginOSSUseIDTokenAsPortalAccessToken;            // 0x00E4(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResolveRallyHereBaseURLAfterOSSLogin;             // 0x00E5(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SavedCredentialPrefix;                             // 0x00E8(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         IgnoreSavedCredentialsCommandLineKeys;             // 0x00F8(0x0010)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0xA0];                                     // 0x0108(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerLoginSubsystem">();
	}
	static class URH_LocalPlayerLoginSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayerLoginSubsystem>();
	}
};
static_assert(alignof(URH_LocalPlayerLoginSubsystem) == 0x000008, "Wrong alignment on URH_LocalPlayerLoginSubsystem");
static_assert(sizeof(URH_LocalPlayerLoginSubsystem) == 0x0001A8, "Wrong size on URH_LocalPlayerLoginSubsystem");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, BLUEPRINT_OnLoginComplete) == 0x000040, "Member 'URH_LocalPlayerLoginSubsystem::BLUEPRINT_OnLoginComplete' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, BLUEPRINT_OnCrossplaySettingChanged) == 0x000068, "Member 'URH_LocalPlayerLoginSubsystem::BLUEPRINT_OnCrossplaySettingChanged' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, BLUEPRINT_OnCommunicationSettingChanged) == 0x000090, "Member 'URH_LocalPlayerLoginSubsystem::BLUEPRINT_OnCommunicationSettingChanged' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, BLUEPRINT_OnUserGeneratedContentSettingChanged) == 0x0000B8, "Member 'URH_LocalPlayerLoginSubsystem::BLUEPRINT_OnUserGeneratedContentSettingChanged' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, LoginOSSName) == 0x0000C8, "Member 'URH_LocalPlayerLoginSubsystem::LoginOSSName' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, NicknameOSSName) == 0x0000D0, "Member 'URH_LocalPlayerLoginSubsystem::NicknameOSSName' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginAllowStoredRefreshToken) == 0x0000D8, "Member 'URH_LocalPlayerLoginSubsystem::bLoginAllowStoredRefreshToken' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginDuringPartialInstall) == 0x0000D9, "Member 'URH_LocalPlayerLoginSubsystem::bLoginDuringPartialInstall' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSRequireLoginUIFirst) == 0x0000DA, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSRequireLoginUIFirst' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bNicknameOSSRequireLoginUIFirst) == 0x0000DB, "Member 'URH_LocalPlayerLoginSubsystem::bNicknameOSSRequireLoginUIFirst' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSRequireOnlinePlayToLogin) == 0x0000DC, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSRequireOnlinePlayToLogin' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bNicknameOSSRequireOnlinePlayToLogin) == 0x0000DD, "Member 'URH_LocalPlayerLoginSubsystem::bNicknameOSSRequireOnlinePlayToLogin' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSPromptAccountUpgradeIfInsufficient) == 0x0000DE, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSPromptAccountUpgradeIfInsufficient' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bNicknameOSSPromptAccountUpgradeIfInsufficient) == 0x0000DF, "Member 'URH_LocalPlayerLoginSubsystem::bNicknameOSSPromptAccountUpgradeIfInsufficient' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSRequireValidUserIdForFailedLogin) == 0x0000E0, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSRequireValidUserIdForFailedLogin' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bNicknameOSSRequireValidUserIdForFailedLogin) == 0x0000E1, "Member 'URH_LocalPlayerLoginSubsystem::bNicknameOSSRequireValidUserIdForFailedLogin' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLogoutAndRetryLoginIfRefreshLoginFailed) == 0x0000E2, "Member 'URH_LocalPlayerLoginSubsystem::bLogoutAndRetryLoginIfRefreshLoginFailed' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSUseIDTokenAsPortalParentAccessToken) == 0x0000E3, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSUseIDTokenAsPortalParentAccessToken' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bLoginOSSUseIDTokenAsPortalAccessToken) == 0x0000E4, "Member 'URH_LocalPlayerLoginSubsystem::bLoginOSSUseIDTokenAsPortalAccessToken' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, bResolveRallyHereBaseURLAfterOSSLogin) == 0x0000E5, "Member 'URH_LocalPlayerLoginSubsystem::bResolveRallyHereBaseURLAfterOSSLogin' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, SavedCredentialPrefix) == 0x0000E8, "Member 'URH_LocalPlayerLoginSubsystem::SavedCredentialPrefix' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerLoginSubsystem, IgnoreSavedCredentialsCommandLineKeys) == 0x0000F8, "Member 'URH_LocalPlayerLoginSubsystem::IgnoreSavedCredentialsCommandLineKeys' has a wrong offset!");

// Class RallyHereIntegration.RH_LocalPlayerPresenceSubsystem
// 0x00A8 (0x00D0 - 0x0028)
class URH_LocalPlayerPresenceSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_PlayerPresenceUpdateSelf        DesiredPresenceState;                              // 0x0038(0x0080)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetDesiredCustomData(const TMap<class FString, class FString>& NewCustomData);
	void SetDesiredDoNotDisturb(bool NewDoNotDisturb);
	void SetDesiredMessage(const class FString& NewMessage, bool bImmediateRefresh);
	void SetDesiredPresence(const struct FRHAPI_PlayerPresenceUpdateSelf& NewPresenceState);
	void SetDesiredStatus(ERHAPI_OnlineStatus NewStatus);
	void StartRefreshTimer();
	void StopRefreshTimer();

	const TMap<class FString, class FString> GetDesiredCustomData() const;
	bool GetDesiredDoNotDisturb() const;
	class FString GetDesiredMessage() const;
	const struct FRHAPI_PlayerPresenceUpdateSelf GetDesiredPresence() const;
	ERHAPI_OnlineStatus GetDesiredStatus() const;
	bool IsRefreshTimerActive(float* TimeRemaining) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerPresenceSubsystem">();
	}
	static class URH_LocalPlayerPresenceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayerPresenceSubsystem>();
	}
};
static_assert(alignof(URH_LocalPlayerPresenceSubsystem) == 0x000008, "Wrong alignment on URH_LocalPlayerPresenceSubsystem");
static_assert(sizeof(URH_LocalPlayerPresenceSubsystem) == 0x0000D0, "Wrong size on URH_LocalPlayerPresenceSubsystem");
static_assert(offsetof(URH_LocalPlayerPresenceSubsystem, DesiredPresenceState) == 0x000038, "Member 'URH_LocalPlayerPresenceSubsystem::DesiredPresenceState' has a wrong offset!");

// Class RallyHereIntegration.RH_LocalPlayerSubsystem
// 0x0100 (0x0130 - 0x0030)
class URH_LocalPlayerSubsystem final : public ULocalPlayerSubsystem
{
public:
	uint8                                         Pad_30[0x48];                                      // 0x0030(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BLUEPRINT_OnLoginOrTokenRefreshFailed;             // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class URH_LocalPlayerSubsystemPlugin*> SubsystemPlugins;                                  // 0x0088(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class URH_SandboxedSubsystemPlugin*>   SandboxedSubsystemPlugins;                         // 0x0098(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class URH_LocalPlayerLoginSubsystem*          LoginSubsystem;                                    // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_AdSubsystem*                        AdSubsystem;                                       // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_FriendSubsystem*                    FriendSubsystem;                                   // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_LocalPlayerSessionSubsystem*        SessionSubsystem;                                  // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_LocalPlayerPresenceSubsystem*       PresenceSubsystem;                                 // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PurgeSubsystem*                     PurgeSubsystem;                                    // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_EntitlementSubsystem*               EntitlementSubsystem;                              // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerInfoSubsystem*                SandboxedPlayerInfoSubsystem;                      // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x48];                                      // 0x00E8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_CustomEndpoint(const struct FRH_CustomEndpointRequestWrapper& Request, const TDelegate<void(const struct FRH_CustomEndpointResponseWrapper& CustomResponseWrapper)>& Delegate);

	class URH_AdSubsystem* GetAdSubsystem() const;
	class URH_EntitlementSubsystem* GetEntitlementSubsystem() const;
	class URH_FriendSubsystem* GetFriendSubsystem() const;
	class URH_PlayerInfo* GetLocalPlayerInfo() const;
	class URH_LocalPlayerLoginSubsystem* GetLoginSubsystem() const;
	class URH_PlayerInfoSubsystem* GetPlayerInfoSubsystem() const;
	class URH_PlayerNotifications* GetPlayerNotifications() const;
	struct FRH_PlayerPlatformId GetPlayerPlatformId() const;
	class URH_LocalPlayerPresenceSubsystem* GetPresenceSubsystem() const;
	class URH_PurgeSubsystem* GetPurgeSubsystem() const;
	class URH_LocalPlayerSessionSubsystem* GetSessionSubsystem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerSubsystem">();
	}
	static class URH_LocalPlayerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayerSubsystem>();
	}
};
static_assert(alignof(URH_LocalPlayerSubsystem) == 0x000008, "Wrong alignment on URH_LocalPlayerSubsystem");
static_assert(sizeof(URH_LocalPlayerSubsystem) == 0x000130, "Wrong size on URH_LocalPlayerSubsystem");
static_assert(offsetof(URH_LocalPlayerSubsystem, BLUEPRINT_OnLoginOrTokenRefreshFailed) == 0x000078, "Member 'URH_LocalPlayerSubsystem::BLUEPRINT_OnLoginOrTokenRefreshFailed' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, SubsystemPlugins) == 0x000088, "Member 'URH_LocalPlayerSubsystem::SubsystemPlugins' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, SandboxedSubsystemPlugins) == 0x000098, "Member 'URH_LocalPlayerSubsystem::SandboxedSubsystemPlugins' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, LoginSubsystem) == 0x0000A8, "Member 'URH_LocalPlayerSubsystem::LoginSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, AdSubsystem) == 0x0000B0, "Member 'URH_LocalPlayerSubsystem::AdSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, FriendSubsystem) == 0x0000B8, "Member 'URH_LocalPlayerSubsystem::FriendSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, SessionSubsystem) == 0x0000C0, "Member 'URH_LocalPlayerSubsystem::SessionSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, PresenceSubsystem) == 0x0000C8, "Member 'URH_LocalPlayerSubsystem::PresenceSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, PurgeSubsystem) == 0x0000D0, "Member 'URH_LocalPlayerSubsystem::PurgeSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, EntitlementSubsystem) == 0x0000D8, "Member 'URH_LocalPlayerSubsystem::EntitlementSubsystem' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSubsystem, SandboxedPlayerInfoSubsystem) == 0x0000E0, "Member 'URH_LocalPlayerSubsystem::SandboxedPlayerInfoSubsystem' has a wrong offset!");

// Class RallyHereIntegration.RH_LocalPlayerSessionSubsystem
// 0x0400 (0x0428 - 0x0028)
class URH_LocalPlayerSessionSubsystem : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionUpdatedDelegate; // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionAddedDelegate; // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionRemovedDelegate; // 0x0050(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionExpirationCompleteDelegate; // 0x0060(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bSuccess)> BLUEPRINT_OnLoginPollSessionsCompleteDelegate;     // 0x0070(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FRH_ErrorInfo& ErrorInfo)> BLUEPRINT_OnFailedToJoinPlatformSessionDelegate; // 0x0080(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0xA0];                                      // 0x0090(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FRHAPI_SessionTemplate> Templates;                                    // 0x0130(0x0050)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_180[0x158];                                    // 0x0180(0x0158)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class URH_SessionView*>   Sessions;                                          // 0x02D8(0x0050)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x10];                                     // 0x0328(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class URH_SessionView*>   ExpiringSessions;                                  // 0x0338(0x0050)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x50];                                     // 0x0388(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class URH_PlatformSessionSyncer*> PlatformSyncers;                           // 0x03D8(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_CreateOrJoinSessionByType(const struct FRHAPI_CreateOrJoinRequest& CreateParams, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_JoinSessionById(const class FString& SessionId, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_JoinSessionByIdEx(const class FString& SessionId, const struct FRHAPI_SelfSessionPlayerUpdateRequest& JoinDetails, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchForSessions(const struct FRH_SessionBrowserSearchParams& Params_0, const TDelegate<void(bool bSuccess, const struct FRH_SessionBrowserSearchResult& SearchResult)>& Delegate);
	void ForcePollForUpdate(bool bClearETag);
	bool IsInSession(const class FString& SessionId);
	void RemoveSessionById(const class FString& SessionId);
	void StartPolling();
	void StopPolling();

	class URH_JoinedSession* GetFirstActiveSession() const;
	class URH_InvitedSession* GetFirstInvitedSessionByType(const class FString& Type) const;
	class URH_JoinedSession* GetFirstJoinedSessionByType(const class FString& Type) const;
	class URH_SessionView* GetFirstSessionByType(const class FString& Type) const;
	TArray<class URH_InvitedSession*> GetInvitedSessionsByType(const class FString& Type) const;
	TArray<class URH_JoinedSession*> GetJoinedSessionsByType(const class FString& Type) const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByPlatformSessionId(const struct FUniqueNetIdRepl& PlatformSessionId) const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByRHSessionId(const class FString& SessionId) const;
	float GetPollTimeRemaining() const;
	class URH_SessionView* GetSessionById(const class FString& SessionId) const;
	TArray<class URH_SessionView*> GetSessions() const;
	TArray<class URH_SessionView*> GetSessionsByType(const class FString& Type) const;
	bool GetTemplate(const class FString& Type, struct FRHAPI_SessionTemplate* Template) const;
	TArray<struct FRHAPI_SessionTemplate> GetTemplates() const;
	bool HasInitialSessionData() const;
	bool IsJoiningPlatformSession() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_LocalPlayerSessionSubsystem">();
	}
	static class URH_LocalPlayerSessionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_LocalPlayerSessionSubsystem>();
	}
};
static_assert(alignof(URH_LocalPlayerSessionSubsystem) == 0x000008, "Wrong alignment on URH_LocalPlayerSessionSubsystem");
static_assert(sizeof(URH_LocalPlayerSessionSubsystem) == 0x000428, "Wrong size on URH_LocalPlayerSessionSubsystem");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnSessionUpdatedDelegate) == 0x000030, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnSessionUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnSessionAddedDelegate) == 0x000040, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnSessionAddedDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnSessionRemovedDelegate) == 0x000050, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnSessionRemovedDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnSessionExpirationCompleteDelegate) == 0x000060, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnSessionExpirationCompleteDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnLoginPollSessionsCompleteDelegate) == 0x000070, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnLoginPollSessionsCompleteDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, BLUEPRINT_OnFailedToJoinPlatformSessionDelegate) == 0x000080, "Member 'URH_LocalPlayerSessionSubsystem::BLUEPRINT_OnFailedToJoinPlatformSessionDelegate' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, Templates) == 0x000130, "Member 'URH_LocalPlayerSessionSubsystem::Templates' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, Sessions) == 0x0002D8, "Member 'URH_LocalPlayerSessionSubsystem::Sessions' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, ExpiringSessions) == 0x000338, "Member 'URH_LocalPlayerSessionSubsystem::ExpiringSessions' has a wrong offset!");
static_assert(offsetof(URH_LocalPlayerSessionSubsystem, PlatformSyncers) == 0x0003D8, "Member 'URH_LocalPlayerSessionSubsystem::PlatformSyncers' has a wrong offset!");

// Class RallyHereIntegration.RH_MatchmakingQueueInfo
// 0x0098 (0x00C0 - 0x0028)
class URH_MatchmakingQueueInfo final : public UObject
{
public:
	uint8                                         Pad_28[0x98];                                      // 0x0028(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FString GetQueueId() const;
	const struct FRHAPI_QueueConfigV2 GetQueueInfo() const;
	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_MatchmakingQueueInfo">();
	}
	static class URH_MatchmakingQueueInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_MatchmakingQueueInfo>();
	}
};
static_assert(alignof(URH_MatchmakingQueueInfo) == 0x000008, "Wrong alignment on URH_MatchmakingQueueInfo");
static_assert(sizeof(URH_MatchmakingQueueInfo) == 0x0000C0, "Wrong size on URH_MatchmakingQueueInfo");

// Class RallyHereIntegration.RH_MatchmakingTemplateGroupInfo
// 0x0090 (0x00B8 - 0x0028)
class URH_MatchmakingTemplateGroupInfo final : public UObject
{
public:
	uint8                                         Pad_28[0x90];                                      // 0x0028(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FRHAPI_MatchMakingTemplateGroupV2 GetInfo() const;
	const TArray<struct FGuid> GetPossibleInstanceRequestTemplateIds() const;
	TSet<int32> GetRequiredItemIds() const;
	const struct FGuid GetTemplateGroupId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_MatchmakingTemplateGroupInfo">();
	}
	static class URH_MatchmakingTemplateGroupInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_MatchmakingTemplateGroupInfo>();
	}
};
static_assert(alignof(URH_MatchmakingTemplateGroupInfo) == 0x000008, "Wrong alignment on URH_MatchmakingTemplateGroupInfo");
static_assert(sizeof(URH_MatchmakingTemplateGroupInfo) == 0x0000B8, "Wrong size on URH_MatchmakingTemplateGroupInfo");

// Class RallyHereIntegration.RH_MatchmakingProfileInfo
// 0x0108 (0x0130 - 0x0028)
class URH_MatchmakingProfileInfo final : public UObject
{
public:
	uint8                                         Pad_28[0x108];                                     // 0x0028(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FRHAPI_MatchMakingProfileV2 GetProfile() const;
	class FString GetProfileId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_MatchmakingProfileInfo">();
	}
	static class URH_MatchmakingProfileInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_MatchmakingProfileInfo>();
	}
};
static_assert(alignof(URH_MatchmakingProfileInfo) == 0x000008, "Wrong alignment on URH_MatchmakingProfileInfo");
static_assert(sizeof(URH_MatchmakingProfileInfo) == 0x000130, "Wrong size on URH_MatchmakingProfileInfo");

// Class RallyHereIntegration.RH_InstanceRequestTemplate
// 0x00B0 (0x00D8 - 0x0028)
class URH_InstanceRequestTemplate final : public UObject
{
public:
	uint8                                         Pad_28[0xB0];                                      // 0x0028(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const TMap<class FString, class FString> GetCustomData() const;
	class FString GetETag() const;
	const struct FRHAPI_InstanceRequestTemplate GetInfo() const;
	const struct FGuid GetInstanceRequestTemplateId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_InstanceRequestTemplate">();
	}
	static class URH_InstanceRequestTemplate* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_InstanceRequestTemplate>();
	}
};
static_assert(alignof(URH_InstanceRequestTemplate) == 0x000008, "Wrong alignment on URH_InstanceRequestTemplate");
static_assert(sizeof(URH_InstanceRequestTemplate) == 0x0000D8, "Wrong size on URH_InstanceRequestTemplate");

// Class RallyHereIntegration.RH_MatchmakingBrowserCache
// 0x01C0 (0x01E8 - 0x0028)
class URH_MatchmakingBrowserCache final : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_MatchmakingBrowserCache* Result)> OnRegionsUpdated;      // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FString, class URH_MatchmakingQueueInfo*> QueueCache;                                 // 0x0050(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class URH_MatchmakingTemplateGroupInfo*> MatchmakingTemplateGroupCache;       // 0x00A0(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, class URH_MatchmakingProfileInfo*> MatchmakingProfileCache;                  // 0x00F0(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class URH_InstanceRequestTemplate*> InstanceRequestTemplateCache;             // 0x0140(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FRHAPI_Region>     RegionsCache;                                      // 0x0190(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                         LastRegionCursor;                                  // 0x01E0(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_SearchInstanceRequestTemplate(const struct FGuid& TemplateId, const TDelegate<void(bool bSuccess, class URH_InstanceRequestTemplate* Result, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchMatchmakingProfile(const class FString& ProfileId, const TDelegate<void(bool bSuccess, class URH_MatchmakingProfileInfo* Result, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchMatchmakingTemplateGroup(const struct FGuid& TemplateId, const TDelegate<void(bool bSuccess, class URH_MatchmakingTemplateGroupInfo* Result, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchQueues(const struct FRH_QueueSearchParams& Params_0, const TDelegate<void(bool bSuccess, const struct FRH_QueueSearchResult& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchRegions(int32 Cursor, const TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_Region>& Result, int32 Cursor, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

	const TArray<class URH_InstanceRequestTemplate*> GetAllInstanceRequestTemplates() const;
	const TArray<class URH_MatchmakingProfileInfo*> GetAllMatchmakingProfiles() const;
	const TArray<class URH_MatchmakingTemplateGroupInfo*> GetAllMatchmakingTemplateGroups() const;
	TArray<class URH_MatchmakingQueueInfo*> GetAllQueues() const;
	TArray<struct FRHAPI_Region> GetAllRegions() const;
	class URH_InstanceRequestTemplate* GetInstanceRequestTemplate(const struct FGuid& InstanceRequestTemplateId) const;
	class URH_MatchmakingProfileInfo* GetMatchmakingProfile(const class FString& ProfileId) const;
	class URH_MatchmakingTemplateGroupInfo* GetMatchmakingTemplateGroup(const struct FGuid& TemplateGroupId) const;
	class URH_MatchmakingQueueInfo* GetQueue(const class FString& QueueId) const;
	bool GetRegion(const class FString& RegionId, struct FRHAPI_Region* OutRegion) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_MatchmakingBrowserCache">();
	}
	static class URH_MatchmakingBrowserCache* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_MatchmakingBrowserCache>();
	}
};
static_assert(alignof(URH_MatchmakingBrowserCache) == 0x000008, "Wrong alignment on URH_MatchmakingBrowserCache");
static_assert(sizeof(URH_MatchmakingBrowserCache) == 0x0001E8, "Wrong size on URH_MatchmakingBrowserCache");
static_assert(offsetof(URH_MatchmakingBrowserCache, OnRegionsUpdated) == 0x000040, "Member 'URH_MatchmakingBrowserCache::OnRegionsUpdated' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, QueueCache) == 0x000050, "Member 'URH_MatchmakingBrowserCache::QueueCache' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, MatchmakingTemplateGroupCache) == 0x0000A0, "Member 'URH_MatchmakingBrowserCache::MatchmakingTemplateGroupCache' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, MatchmakingProfileCache) == 0x0000F0, "Member 'URH_MatchmakingBrowserCache::MatchmakingProfileCache' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, InstanceRequestTemplateCache) == 0x000140, "Member 'URH_MatchmakingBrowserCache::InstanceRequestTemplateCache' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, RegionsCache) == 0x000190, "Member 'URH_MatchmakingBrowserCache::RegionsCache' has a wrong offset!");
static_assert(offsetof(URH_MatchmakingBrowserCache, LastRegionCursor) == 0x0001E0, "Member 'URH_MatchmakingBrowserCache::LastRegionCursor' has a wrong offset!");

// Class RallyHereIntegration.RH_MatchSubsystem
// 0x0068 (0x0090 - 0x0028)
class URH_MatchSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	TMap<class FString, struct FRHAPI_MatchWithPlayers> MatchesCache;                                // 0x0028(0x0050)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static struct FRH_RemoteFileApiDirectory GetMatchDeveloperFileDirectory(const class FString& MatchID);
	static struct FRH_RemoteFileApiDirectory GetMatchFileDirectory(const class FString& MatchID);

	void BLUEPRINT_CreateMatch(const struct FRHAPI_MatchRequest& Match, const TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetMatchAsync(const class FString& MatchID, bool bIgnoreCache, const TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SearchMatches(const struct FRH_MatchSearchParams& Params_0, const TDelegate<void(bool bSuccess, const struct FRH_MatchSearchResult& SearchResult, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateMatch(const class FString& MatchID, const struct FRHAPI_MatchRequest& Match, const TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateMatchPlayer(const class FString& MatchID, const struct FGuid& PlayerId, const struct FRHAPI_MatchPlayerRequest& Player, const TDelegate<void(bool bSuccess, const struct FRHAPI_MatchPlayerWithMatch& Match, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateMatchSegment(const class FString& MatchID, const class FString& SegmentID, const struct FRHAPI_MatchSegmentPatchRequest& Segment, const TDelegate<void(bool bSuccess, const struct FRHAPI_MatchWithPlayers& Match, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void ClearMatchesCache();
	bool GetMatch(const class FString& MatchID, struct FRHAPI_MatchWithPlayers* OutMatch);

	const TMap<class FString, struct FRHAPI_MatchWithPlayers> GetAllMatches() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_MatchSubsystem">();
	}
	static class URH_MatchSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_MatchSubsystem>();
	}
};
static_assert(alignof(URH_MatchSubsystem) == 0x000008, "Wrong alignment on URH_MatchSubsystem");
static_assert(sizeof(URH_MatchSubsystem) == 0x000090, "Wrong size on URH_MatchSubsystem");
static_assert(offsetof(URH_MatchSubsystem, MatchesCache) == 0x000028, "Member 'URH_MatchSubsystem::MatchesCache' has a wrong offset!");

// Class RallyHereIntegration.RH_PlatformSessionSyncer
// 0x01C0 (0x01E8 - 0x0028)
class URH_PlatformSessionSyncer final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_PlatformSessionSyncer* Syncer)> BLUEPRINT_OnCleanupComplete; // 0x0040(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_PlatformSessionSyncer* Syncer, ESyncActionState OldState, ESyncActionState NewState)> BLUEPRINT_OnStateChanged; // 0x0068(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RHSessionId;                                       // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   OSSSessionName;                                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERHAPI_Platform                               RHPlatform;                                        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x13F];                                     // 0x00A9(0x013F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool EndPlatformSession();
	bool StartPlatformSession();

	ESyncActionState GetCurrentSyncActionState() const;
	bool GetPlatformSessionIdFromPlatformSession(struct FUniqueNetIdRepl* PlatformSessionId) const;
	bool GetPlatformSessionIdFromRHSession(struct FUniqueNetIdRepl* PlatformSessionId) const;
	class FName GetPlatformSessionName() const;
	class URH_JoinedSession* GetRHSession() const;
	class FString GetRHSessionId() const;
	TScriptInterface<class IRH_SessionOwnerInterface> GetSessionOwner() const;
	bool IsCleaningUp() const;
	bool IsCleanupComplete() const;
	bool IsLocalPlayerScout() const;
	bool IsSynchronized() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlatformSessionSyncer">();
	}
	static class URH_PlatformSessionSyncer* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlatformSessionSyncer>();
	}
};
static_assert(alignof(URH_PlatformSessionSyncer) == 0x000008, "Wrong alignment on URH_PlatformSessionSyncer");
static_assert(sizeof(URH_PlatformSessionSyncer) == 0x0001E8, "Wrong size on URH_PlatformSessionSyncer");
static_assert(offsetof(URH_PlatformSessionSyncer, BLUEPRINT_OnCleanupComplete) == 0x000040, "Member 'URH_PlatformSessionSyncer::BLUEPRINT_OnCleanupComplete' has a wrong offset!");
static_assert(offsetof(URH_PlatformSessionSyncer, BLUEPRINT_OnStateChanged) == 0x000068, "Member 'URH_PlatformSessionSyncer::BLUEPRINT_OnStateChanged' has a wrong offset!");
static_assert(offsetof(URH_PlatformSessionSyncer, RHSessionId) == 0x000090, "Member 'URH_PlatformSessionSyncer::RHSessionId' has a wrong offset!");
static_assert(offsetof(URH_PlatformSessionSyncer, OSSSessionName) == 0x0000A0, "Member 'URH_PlatformSessionSyncer::OSSSessionName' has a wrong offset!");
static_assert(offsetof(URH_PlatformSessionSyncer, RHPlatform) == 0x0000A8, "Member 'URH_PlatformSessionSyncer::RHPlatform' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXCollectorConfig
// 0x0080 (0x00A8 - 0x0028)
class URH_PEXCollectorConfig : public UObject
{
public:
	bool                                          bEnabled;                                          // 0x0028(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWriteSummaryFile;                                 // 0x0029(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUploadSummaryToPEXAPI;                            // 0x002A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUploadSummaryToFileAPI;                           // 0x002B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWriteTimelineFile;                                // 0x002C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUploadTimelineToFileAPI;                          // 0x002D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StatInterval;                                      // 0x0030(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumIntervalsToIgnoreAfterMapLoadForSummary;        // 0x0034(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TimelineFilePrefix;                                // 0x0038(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SummaryFilePrefix;                                 // 0x0048(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<TSubclassOf<class URH_PEXStatGroup>>     StatGroupsToCapture;                               // 0x0058(0x0050)(Edit, BlueprintVisible, Config, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollectorConfig">();
	}
	static class URH_PEXCollectorConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollectorConfig>();
	}
};
static_assert(alignof(URH_PEXCollectorConfig) == 0x000008, "Wrong alignment on URH_PEXCollectorConfig");
static_assert(sizeof(URH_PEXCollectorConfig) == 0x0000A8, "Wrong size on URH_PEXCollectorConfig");
static_assert(offsetof(URH_PEXCollectorConfig, bEnabled) == 0x000028, "Member 'URH_PEXCollectorConfig::bEnabled' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, bWriteSummaryFile) == 0x000029, "Member 'URH_PEXCollectorConfig::bWriteSummaryFile' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, bUploadSummaryToPEXAPI) == 0x00002A, "Member 'URH_PEXCollectorConfig::bUploadSummaryToPEXAPI' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, bUploadSummaryToFileAPI) == 0x00002B, "Member 'URH_PEXCollectorConfig::bUploadSummaryToFileAPI' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, bWriteTimelineFile) == 0x00002C, "Member 'URH_PEXCollectorConfig::bWriteTimelineFile' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, bUploadTimelineToFileAPI) == 0x00002D, "Member 'URH_PEXCollectorConfig::bUploadTimelineToFileAPI' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, StatInterval) == 0x000030, "Member 'URH_PEXCollectorConfig::StatInterval' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, NumIntervalsToIgnoreAfterMapLoadForSummary) == 0x000034, "Member 'URH_PEXCollectorConfig::NumIntervalsToIgnoreAfterMapLoadForSummary' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, TimelineFilePrefix) == 0x000038, "Member 'URH_PEXCollectorConfig::TimelineFilePrefix' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, SummaryFilePrefix) == 0x000048, "Member 'URH_PEXCollectorConfig::SummaryFilePrefix' has a wrong offset!");
static_assert(offsetof(URH_PEXCollectorConfig, StatGroupsToCapture) == 0x000058, "Member 'URH_PEXCollectorConfig::StatGroupsToCapture' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXCollectorConfig_Client
// 0x0000 (0x00A8 - 0x00A8)
class URH_PEXCollectorConfig_Client final : public URH_PEXCollectorConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollectorConfig_Client">();
	}
	static class URH_PEXCollectorConfig_Client* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollectorConfig_Client>();
	}
};
static_assert(alignof(URH_PEXCollectorConfig_Client) == 0x000008, "Wrong alignment on URH_PEXCollectorConfig_Client");
static_assert(sizeof(URH_PEXCollectorConfig_Client) == 0x0000A8, "Wrong size on URH_PEXCollectorConfig_Client");

// Class RallyHereIntegration.RH_PEXCollectorConfig_Host
// 0x0000 (0x00A8 - 0x00A8)
class URH_PEXCollectorConfig_Host : public URH_PEXCollectorConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollectorConfig_Host">();
	}
	static class URH_PEXCollectorConfig_Host* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollectorConfig_Host>();
	}
};
static_assert(alignof(URH_PEXCollectorConfig_Host) == 0x000008, "Wrong alignment on URH_PEXCollectorConfig_Host");
static_assert(sizeof(URH_PEXCollectorConfig_Host) == 0x0000A8, "Wrong size on URH_PEXCollectorConfig_Host");

// Class RallyHereIntegration.RH_PEXCollectorConfig_DedicatedServer
// 0x0000 (0x00A8 - 0x00A8)
class URH_PEXCollectorConfig_DedicatedServer final : public URH_PEXCollectorConfig_Host
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollectorConfig_DedicatedServer">();
	}
	static class URH_PEXCollectorConfig_DedicatedServer* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollectorConfig_DedicatedServer>();
	}
};
static_assert(alignof(URH_PEXCollectorConfig_DedicatedServer) == 0x000008, "Wrong alignment on URH_PEXCollectorConfig_DedicatedServer");
static_assert(sizeof(URH_PEXCollectorConfig_DedicatedServer) == 0x0000A8, "Wrong size on URH_PEXCollectorConfig_DedicatedServer");

// Class RallyHereIntegration.RH_PEXOwnerInterface
// 0x0000 (0x0000 - 0x0000)
class IRH_PEXOwnerInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXOwnerInterface">();
	}
	static class IRH_PEXOwnerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRH_PEXOwnerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IRH_PEXOwnerInterface) == 0x000001, "Wrong alignment on IRH_PEXOwnerInterface");
static_assert(sizeof(IRH_PEXOwnerInterface) == 0x000001, "Wrong size on IRH_PEXOwnerInterface");

// Class RallyHereIntegration.RH_PEXStatGroup
// 0x0040 (0x0068 - 0x0028)
class URH_PEXStatGroup : public UObject
{
public:
	class FName                                   GroupName;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRH_StatAccumulator>            Stats;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FRH_StatCounter>                Counters;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class URH_PEXStatGroup*>               Children;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bDynamic;                                          // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotForTimeline;                                   // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXStatGroup">();
	}
	static class URH_PEXStatGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXStatGroup>();
	}
};
static_assert(alignof(URH_PEXStatGroup) == 0x000008, "Wrong alignment on URH_PEXStatGroup");
static_assert(sizeof(URH_PEXStatGroup) == 0x000068, "Wrong size on URH_PEXStatGroup");
static_assert(offsetof(URH_PEXStatGroup, GroupName) == 0x000028, "Member 'URH_PEXStatGroup::GroupName' has a wrong offset!");
static_assert(offsetof(URH_PEXStatGroup, Stats) == 0x000030, "Member 'URH_PEXStatGroup::Stats' has a wrong offset!");
static_assert(offsetof(URH_PEXStatGroup, Counters) == 0x000040, "Member 'URH_PEXStatGroup::Counters' has a wrong offset!");
static_assert(offsetof(URH_PEXStatGroup, Children) == 0x000050, "Member 'URH_PEXStatGroup::Children' has a wrong offset!");
static_assert(offsetof(URH_PEXStatGroup, bDynamic) == 0x000060, "Member 'URH_PEXStatGroup::bDynamic' has a wrong offset!");
static_assert(offsetof(URH_PEXStatGroup, bNotForTimeline) == 0x000061, "Member 'URH_PEXStatGroup::bNotForTimeline' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXStatGroupsTopLevel
// 0x0008 (0x0070 - 0x0068)
class URH_PEXStatGroupsTopLevel final : public URH_PEXStatGroup
{
public:
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXStatGroupsTopLevel">();
	}
	static class URH_PEXStatGroupsTopLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXStatGroupsTopLevel>();
	}
};
static_assert(alignof(URH_PEXStatGroupsTopLevel) == 0x000008, "Wrong alignment on URH_PEXStatGroupsTopLevel");
static_assert(sizeof(URH_PEXStatGroupsTopLevel) == 0x000070, "Wrong size on URH_PEXStatGroupsTopLevel");

// Class RallyHereIntegration.RH_PEXCollector
// 0x00A0 (0x00C8 - 0x0028)
class URH_PEXCollector final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PEXCollectorConfig*                 CachedConfig;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CachedMatchId;                                     // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRH_RemoteFileApiDirectory             CachedRemoteFileDirectory;                         // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  CachedPlayerId;                                    // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCachedIsHost;                                     // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasBeenInitialized;                               // 0x0079(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasBeenClosed;                                    // 0x007A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasWrittenSummary;                                // 0x007B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeTracker;                                       // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumRemainingIntervalsToIgnore;                     // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PEXStatGroupsTopLevel*              TopLevelStatGroup;                                 // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TimelineFilePath;                                  // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 SummaryFilePath;                                   // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWantsToUploadStats;                               // 0x00C0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MarkPEXForUpload();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollector">();
	}
	static class URH_PEXCollector* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollector>();
	}
};
static_assert(alignof(URH_PEXCollector) == 0x000008, "Wrong alignment on URH_PEXCollector");
static_assert(sizeof(URH_PEXCollector) == 0x0000C8, "Wrong size on URH_PEXCollector");
static_assert(offsetof(URH_PEXCollector, CachedConfig) == 0x000038, "Member 'URH_PEXCollector::CachedConfig' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, CachedMatchId) == 0x000040, "Member 'URH_PEXCollector::CachedMatchId' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, CachedRemoteFileDirectory) == 0x000050, "Member 'URH_PEXCollector::CachedRemoteFileDirectory' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, CachedPlayerId) == 0x000068, "Member 'URH_PEXCollector::CachedPlayerId' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, bCachedIsHost) == 0x000078, "Member 'URH_PEXCollector::bCachedIsHost' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, bHasBeenInitialized) == 0x000079, "Member 'URH_PEXCollector::bHasBeenInitialized' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, bHasBeenClosed) == 0x00007A, "Member 'URH_PEXCollector::bHasBeenClosed' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, bHasWrittenSummary) == 0x00007B, "Member 'URH_PEXCollector::bHasWrittenSummary' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, TimeTracker) == 0x000080, "Member 'URH_PEXCollector::TimeTracker' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, NumRemainingIntervalsToIgnore) == 0x000088, "Member 'URH_PEXCollector::NumRemainingIntervalsToIgnore' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, TopLevelStatGroup) == 0x000090, "Member 'URH_PEXCollector::TopLevelStatGroup' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, TimelineFilePath) == 0x0000A0, "Member 'URH_PEXCollector::TimelineFilePath' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, SummaryFilePath) == 0x0000B0, "Member 'URH_PEXCollector::SummaryFilePath' has a wrong offset!");
static_assert(offsetof(URH_PEXCollector, bWantsToUploadStats) == 0x0000C0, "Member 'URH_PEXCollector::bWantsToUploadStats' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXPrimaryStats
// 0x0000 (0x0068 - 0x0068)
class URH_PEXPrimaryStats final : public URH_PEXStatGroup
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXPrimaryStats">();
	}
	static class URH_PEXPrimaryStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXPrimaryStats>();
	}
};
static_assert(alignof(URH_PEXPrimaryStats) == 0x000008, "Wrong alignment on URH_PEXPrimaryStats");
static_assert(sizeof(URH_PEXPrimaryStats) == 0x000068, "Wrong size on URH_PEXPrimaryStats");

// Class RallyHereIntegration.RH_PEXNetworkStats_Base
// 0x0000 (0x0068 - 0x0068)
class URH_PEXNetworkStats_Base : public URH_PEXStatGroup
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats_Base">();
	}
	static class URH_PEXNetworkStats_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats_Base>();
	}
};
static_assert(alignof(URH_PEXNetworkStats_Base) == 0x000008, "Wrong alignment on URH_PEXNetworkStats_Base");
static_assert(sizeof(URH_PEXNetworkStats_Base) == 0x000068, "Wrong size on URH_PEXNetworkStats_Base");

// Class RallyHereIntegration.RH_PEXNetworkStats_Global
// 0x0000 (0x0068 - 0x0068)
class URH_PEXNetworkStats_Global final : public URH_PEXNetworkStats_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats_Global">();
	}
	static class URH_PEXNetworkStats_Global* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats_Global>();
	}
};
static_assert(alignof(URH_PEXNetworkStats_Global) == 0x000008, "Wrong alignment on URH_PEXNetworkStats_Global");
static_assert(sizeof(URH_PEXNetworkStats_Global) == 0x000068, "Wrong size on URH_PEXNetworkStats_Global");

// Class RallyHereIntegration.RH_PEXNetworkStats_Connection
// 0x0008 (0x0070 - 0x0068)
class URH_PEXNetworkStats_Connection : public URH_PEXNetworkStats_Base
{
public:
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats_Connection">();
	}
	static class URH_PEXNetworkStats_Connection* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats_Connection>();
	}
};
static_assert(alignof(URH_PEXNetworkStats_Connection) == 0x000008, "Wrong alignment on URH_PEXNetworkStats_Connection");
static_assert(sizeof(URH_PEXNetworkStats_Connection) == 0x000070, "Wrong size on URH_PEXNetworkStats_Connection");

// Class RallyHereIntegration.RH_PEXNetworkStats_Host
// 0x0050 (0x00B8 - 0x0068)
class URH_PEXNetworkStats_Host final : public URH_PEXNetworkStats_Base
{
public:
	TMap<struct FGuid, class URH_PEXNetworkStats_Connection*> PlayerNetworkStats;                    // 0x0068(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats_Host">();
	}
	static class URH_PEXNetworkStats_Host* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats_Host>();
	}
};
static_assert(alignof(URH_PEXNetworkStats_Host) == 0x000008, "Wrong alignment on URH_PEXNetworkStats_Host");
static_assert(sizeof(URH_PEXNetworkStats_Host) == 0x0000B8, "Wrong size on URH_PEXNetworkStats_Host");
static_assert(offsetof(URH_PEXNetworkStats_Host, PlayerNetworkStats) == 0x000068, "Member 'URH_PEXNetworkStats_Host::PlayerNetworkStats' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXNetworkStats_Client
// 0x0000 (0x0070 - 0x0070)
class URH_PEXNetworkStats_Client final : public URH_PEXNetworkStats_Connection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats_Client">();
	}
	static class URH_PEXNetworkStats_Client* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats_Client>();
	}
};
static_assert(alignof(URH_PEXNetworkStats_Client) == 0x000008, "Wrong alignment on URH_PEXNetworkStats_Client");
static_assert(sizeof(URH_PEXNetworkStats_Client) == 0x000070, "Wrong size on URH_PEXNetworkStats_Client");

// Class RallyHereIntegration.RH_PEXNetworkStats
// 0x0018 (0x0080 - 0x0068)
class URH_PEXNetworkStats final : public URH_PEXStatGroup
{
public:
	class URH_PEXNetworkStats_Global*             GlobalNetworkStats;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PEXNetworkStats_Client*             ClientNetworkStats;                                // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URH_PEXNetworkStats_Host*               HostNetworkStats;                                  // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXNetworkStats">();
	}
	static class URH_PEXNetworkStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXNetworkStats>();
	}
};
static_assert(alignof(URH_PEXNetworkStats) == 0x000008, "Wrong alignment on URH_PEXNetworkStats");
static_assert(sizeof(URH_PEXNetworkStats) == 0x000080, "Wrong size on URH_PEXNetworkStats");
static_assert(offsetof(URH_PEXNetworkStats, GlobalNetworkStats) == 0x000068, "Member 'URH_PEXNetworkStats::GlobalNetworkStats' has a wrong offset!");
static_assert(offsetof(URH_PEXNetworkStats, ClientNetworkStats) == 0x000070, "Member 'URH_PEXNetworkStats::ClientNetworkStats' has a wrong offset!");
static_assert(offsetof(URH_PEXNetworkStats, HostNetworkStats) == 0x000078, "Member 'URH_PEXNetworkStats::HostNetworkStats' has a wrong offset!");

// Class RallyHereIntegration.RH_PEXGameStats
// 0x0000 (0x0068 - 0x0068)
class URH_PEXGameStats final : public URH_PEXStatGroup
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXGameStats">();
	}
	static class URH_PEXGameStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXGameStats>();
	}
};
static_assert(alignof(URH_PEXGameStats) == 0x000008, "Wrong alignment on URH_PEXGameStats");
static_assert(sizeof(URH_PEXGameStats) == 0x000068, "Wrong size on URH_PEXGameStats");

// Class RallyHereIntegration.RH_PEXBlueprintableStats
// 0x0000 (0x0068 - 0x0068)
class URH_PEXBlueprintableStats final : public URH_PEXStatGroup
{
public:
	void BLUEPRINT_CapturePerFrameStats(const TScriptInterface<class IRH_PEXOwnerInterface>& Owner);
	void BLUEPRINT_CapturePerSecondStats(const TScriptInterface<class IRH_PEXOwnerInterface>& Owner);
	void CaptureCounterValue(class FName StatName, float Value);
	void CaptureStatValue(class FName StatName, float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXBlueprintableStats">();
	}
	static class URH_PEXBlueprintableStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXBlueprintableStats>();
	}
};
static_assert(alignof(URH_PEXBlueprintableStats) == 0x000008, "Wrong alignment on URH_PEXBlueprintableStats");
static_assert(sizeof(URH_PEXBlueprintableStats) == 0x000068, "Wrong size on URH_PEXBlueprintableStats");

// Class RallyHereIntegration.RH_PEXCollectorConfig_Test
// 0x0000 (0x00A8 - 0x00A8)
class URH_PEXCollectorConfig_Test final : public URH_PEXCollectorConfig_Host
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PEXCollectorConfig_Test">();
	}
	static class URH_PEXCollectorConfig_Test* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PEXCollectorConfig_Test>();
	}
};
static_assert(alignof(URH_PEXCollectorConfig_Test) == 0x000008, "Wrong alignment on URH_PEXCollectorConfig_Test");
static_assert(sizeof(URH_PEXCollectorConfig_Test) == 0x0000A8, "Wrong size on URH_PEXCollectorConfig_Test");

// Class RallyHereIntegration.RH_TestPEXOwner
// 0x0B60 (0x0B88 - 0x0028)
class URH_TestPEXOwner final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  PlayerId;                                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MatchID;                                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSendReportsToAPI;                                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0xB37];                                     // 0x0051(0x0B37)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_TestPEXOwner">();
	}
	static class URH_TestPEXOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_TestPEXOwner>();
	}
};
static_assert(alignof(URH_TestPEXOwner) == 0x000008, "Wrong alignment on URH_TestPEXOwner");
static_assert(sizeof(URH_TestPEXOwner) == 0x000B88, "Wrong size on URH_TestPEXOwner");
static_assert(offsetof(URH_TestPEXOwner, PlayerId) == 0x000030, "Member 'URH_TestPEXOwner::PlayerId' has a wrong offset!");
static_assert(offsetof(URH_TestPEXOwner, MatchID) == 0x000040, "Member 'URH_TestPEXOwner::MatchID' has a wrong offset!");
static_assert(offsetof(URH_TestPEXOwner, bSendReportsToAPI) == 0x000050, "Member 'URH_TestPEXOwner::bSendReportsToAPI' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerInfoSubobject
// 0x0088 (0x00B0 - 0x0028)
class URH_PlayerInfoSubobject : public UObject
{
public:
	bool                                          bInitialized;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastUpdated;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Etag;                                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PlayerUuid;                                        // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class URH_PlayerInfoSubobject* Subobject)> BLUEPRINT_OnUpdatedDelegate; // 0x0058(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x48];                                      // 0x0068(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_RequestUpdate(bool bForceUpdate, const TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)>& Delegate);
	void BLUEPRINT_RequestUpdateIfStale(const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)>& Delegate);

	class URH_PlayerInfo* GetPlayerInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerInfoSubobject">();
	}
	static class URH_PlayerInfoSubobject* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerInfoSubobject>();
	}
};
static_assert(alignof(URH_PlayerInfoSubobject) == 0x000008, "Wrong alignment on URH_PlayerInfoSubobject");
static_assert(sizeof(URH_PlayerInfoSubobject) == 0x0000B0, "Wrong size on URH_PlayerInfoSubobject");
static_assert(offsetof(URH_PlayerInfoSubobject, bInitialized) == 0x000028, "Member 'URH_PlayerInfoSubobject::bInitialized' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubobject, LastUpdated) == 0x000030, "Member 'URH_PlayerInfoSubobject::LastUpdated' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubobject, Etag) == 0x000038, "Member 'URH_PlayerInfoSubobject::Etag' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubobject, PlayerUuid) == 0x000048, "Member 'URH_PlayerInfoSubobject::PlayerUuid' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubobject, BLUEPRINT_OnUpdatedDelegate) == 0x000058, "Member 'URH_PlayerInfoSubobject::BLUEPRINT_OnUpdatedDelegate' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerPresence
// 0x0088 (0x0138 - 0x00B0)
class URH_PlayerPresence final : public URH_PlayerInfoSubobject
{
public:
	ERHAPI_OnlineStatus                           Status;                                            // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDoNotDisturb;                                   // 0x00B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            CustomData;                                        // 0x00E8(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerPresence">();
	}
	static class URH_PlayerPresence* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerPresence>();
	}
};
static_assert(alignof(URH_PlayerPresence) == 0x000008, "Wrong alignment on URH_PlayerPresence");
static_assert(sizeof(URH_PlayerPresence) == 0x000138, "Wrong size on URH_PlayerPresence");
static_assert(offsetof(URH_PlayerPresence, Status) == 0x0000B0, "Member 'URH_PlayerPresence::Status' has a wrong offset!");
static_assert(offsetof(URH_PlayerPresence, bIsDoNotDisturb) == 0x0000B1, "Member 'URH_PlayerPresence::bIsDoNotDisturb' has a wrong offset!");
static_assert(offsetof(URH_PlayerPresence, Message) == 0x0000B8, "Member 'URH_PlayerPresence::Message' has a wrong offset!");
static_assert(offsetof(URH_PlayerPresence, Platform) == 0x0000C8, "Member 'URH_PlayerPresence::Platform' has a wrong offset!");
static_assert(offsetof(URH_PlayerPresence, DisplayName) == 0x0000D8, "Member 'URH_PlayerPresence::DisplayName' has a wrong offset!");
static_assert(offsetof(URH_PlayerPresence, CustomData) == 0x0000E8, "Member 'URH_PlayerPresence::CustomData' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerSettings
// 0x0050 (0x0100 - 0x00B0)
class URH_PlayerSettings final : public URH_PlayerInfoSubobject
{
public:
	TMap<class FString, struct FRH_PlayerSettingsDataWrapper> PlayerSettingsByTypeId;                // 0x00B0(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_DeletePlayerSetting(const class FString& SettingTypeId, const class FString& Key, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetPlayerSetting(const class FString& SettingTypeId, const class FString& Key, const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)>& Delegate);
	void BLUEPRINT_GetPlayerSettingsForKeys(const class FString& SettingTypeId, const TArray<class FString>& Keys, const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)>& Delegate);
	void BLUEPRINT_SetPlayerSetting(const class FString& SettingTypeId, const class FString& Key, const struct FRHAPI_SetSinglePlayerSettingRequest& Document, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& UpdatedSettings, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate, const struct FRH_ObjectVersionCheck& VersionCheck);

	const TMap<class FString, struct FRH_PlayerSettingsDataWrapper> GetAllStoredPlayerSettings() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerSettings">();
	}
	static class URH_PlayerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerSettings>();
	}
};
static_assert(alignof(URH_PlayerSettings) == 0x000008, "Wrong alignment on URH_PlayerSettings");
static_assert(sizeof(URH_PlayerSettings) == 0x000100, "Wrong size on URH_PlayerSettings");
static_assert(offsetof(URH_PlayerSettings, PlayerSettingsByTypeId) == 0x0000B0, "Member 'URH_PlayerSettings::PlayerSettingsByTypeId' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerSessions
// 0x0070 (0x0120 - 0x00B0)
class URH_PlayerSessions final : public URH_PlayerInfoSubobject
{
public:
	struct FRHAPI_PlayerSessions                  Sessions;                                          // 0x00B0(0x0070)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerSessions">();
	}
	static class URH_PlayerSessions* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerSessions>();
	}
};
static_assert(alignof(URH_PlayerSessions) == 0x000008, "Wrong alignment on URH_PlayerSessions");
static_assert(sizeof(URH_PlayerSessions) == 0x000120, "Wrong size on URH_PlayerSessions");
static_assert(offsetof(URH_PlayerSessions, Sessions) == 0x0000B0, "Member 'URH_PlayerSessions::Sessions' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerDeserter
// 0x0050 (0x0100 - 0x00B0)
class URH_PlayerDeserter final : public URH_PlayerInfoSubobject
{
public:
	TMap<class FString, struct FRHAPI_PlayerDeserterStatus> DeserterStatus;                          // 0x00B0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void BLUEPRINT_ClearAllDeserterStatus(const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_ClearDeserterStatus(const class FString& DeserterId, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SetDeserterStatus(const class FString& DeserterId, const struct FRHAPI_DeserterUpdateRequest& NewDeserterStatus, const TDelegate<void(bool bSuccess, class URH_PlayerInfoSubobject* Subobject)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerDeserter">();
	}
	static class URH_PlayerDeserter* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerDeserter>();
	}
};
static_assert(alignof(URH_PlayerDeserter) == 0x000008, "Wrong alignment on URH_PlayerDeserter");
static_assert(sizeof(URH_PlayerDeserter) == 0x000100, "Wrong size on URH_PlayerDeserter");
static_assert(offsetof(URH_PlayerDeserter, DeserterStatus) == 0x0000B0, "Member 'URH_PlayerDeserter::DeserterStatus' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerMatches
// 0x0060 (0x0110 - 0x00B0)
class URH_PlayerMatches final : public URH_PlayerInfoSubobject
{
public:
	int32                                         PollPageSize;                                      // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PollMaxPageCount;                                  // 0x00B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              PollMaxAge;                                        // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FRHAPI_MatchPlayerWithMatch> Matches;                                 // 0x00C0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerMatches">();
	}
	static class URH_PlayerMatches* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerMatches>();
	}
};
static_assert(alignof(URH_PlayerMatches) == 0x000008, "Wrong alignment on URH_PlayerMatches");
static_assert(sizeof(URH_PlayerMatches) == 0x000110, "Wrong size on URH_PlayerMatches");
static_assert(offsetof(URH_PlayerMatches, PollPageSize) == 0x0000B0, "Member 'URH_PlayerMatches::PollPageSize' has a wrong offset!");
static_assert(offsetof(URH_PlayerMatches, PollMaxPageCount) == 0x0000B4, "Member 'URH_PlayerMatches::PollMaxPageCount' has a wrong offset!");
static_assert(offsetof(URH_PlayerMatches, PollMaxAge) == 0x0000B8, "Member 'URH_PlayerMatches::PollMaxAge' has a wrong offset!");
static_assert(offsetof(URH_PlayerMatches, Matches) == 0x0000C0, "Member 'URH_PlayerMatches::Matches' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerReports
// 0x0020 (0x00D0 - 0x00B0)
class URH_PlayerReports final : public URH_PlayerInfoSubobject
{
public:
	TArray<struct FRHAPI_PlayerReport>            ReportsSent;                                       // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRHAPI_PlayerReport>            ReportsReceived;                                   // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_CreateReport(const struct FRHAPI_PlayerReportCreate& Report, const TDelegate<void(bool bSuccess, const struct FRHAPI_PlayerReport& Report, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetReportsReceivedAsync(const class FString& Cursor, const int32 PageSize, const TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerReport>& PlayerReports, const class FString& Cursor, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetReportsSentAsync(const class FString& Cursor, const int32 PageSize, const TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerReport>& PlayerReports, const class FString& Cursor, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

	TArray<struct FRHAPI_PlayerReport> GetReportsReceived() const;
	TArray<struct FRHAPI_PlayerReport> GetReportsSent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerReports">();
	}
	static class URH_PlayerReports* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerReports>();
	}
};
static_assert(alignof(URH_PlayerReports) == 0x000008, "Wrong alignment on URH_PlayerReports");
static_assert(sizeof(URH_PlayerReports) == 0x0000D0, "Wrong size on URH_PlayerReports");
static_assert(offsetof(URH_PlayerReports, ReportsSent) == 0x0000B0, "Member 'URH_PlayerReports::ReportsSent' has a wrong offset!");
static_assert(offsetof(URH_PlayerReports, ReportsReceived) == 0x0000C0, "Member 'URH_PlayerReports::ReportsReceived' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerRecentlyPlayedWith
// 0x0010 (0x00C0 - 0x00B0)
class URH_PlayerRecentlyPlayedWith final : public URH_PlayerInfoSubobject
{
public:
	TArray<struct FRHAPI_RecentlyPlayedPlayer>    RecentlyPlayedWith;                                // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	const TArray<struct FRHAPI_RecentlyPlayedPlayer> GetRecentlyPlayedWith() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerRecentlyPlayedWith">();
	}
	static class URH_PlayerRecentlyPlayedWith* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerRecentlyPlayedWith>();
	}
};
static_assert(alignof(URH_PlayerRecentlyPlayedWith) == 0x000008, "Wrong alignment on URH_PlayerRecentlyPlayedWith");
static_assert(sizeof(URH_PlayerRecentlyPlayedWith) == 0x0000C0, "Wrong size on URH_PlayerRecentlyPlayedWith");
static_assert(offsetof(URH_PlayerRecentlyPlayedWith, RecentlyPlayedWith) == 0x0000B0, "Member 'URH_PlayerRecentlyPlayedWith::RecentlyPlayedWith' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerGuideEngagement
// 0x0050 (0x0100 - 0x00B0)
class URH_PlayerGuideEngagement final : public URH_PlayerInfoSubobject
{
public:
	TMap<struct FGuid, struct FRHAPI_EntityGuideEngagement> GuideEngagement;                         // 0x00B0(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_AddGuideToFavorites(const struct FGuid& GuideId, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetGuideEngagementAsync(const TArray<struct FGuid>& GuideIDs, const TDelegate<void(bool bSuccess, const struct FRHAPI_ManyEntityGuideEngagement& Engagement, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_RateGuide(const struct FGuid& GuideId, int32 Rating, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_RemoveGuideFromFavorites(const struct FGuid& GuideId, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

	const TMap<struct FGuid, struct FRHAPI_EntityGuideEngagement> GetGuideEngagement() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerGuideEngagement">();
	}
	static class URH_PlayerGuideEngagement* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerGuideEngagement>();
	}
};
static_assert(alignof(URH_PlayerGuideEngagement) == 0x000008, "Wrong alignment on URH_PlayerGuideEngagement");
static_assert(sizeof(URH_PlayerGuideEngagement) == 0x000100, "Wrong size on URH_PlayerGuideEngagement");
static_assert(offsetof(URH_PlayerGuideEngagement, GuideEngagement) == 0x0000B0, "Member 'URH_PlayerGuideEngagement::GuideEngagement' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerPlatformInfo
// 0x0028 (0x0050 - 0x0028)
class URH_PlayerPlatformInfo final : public UObject
{
public:
	struct FRH_PlayerPlatformId                   PlayerPlatformId;                                  // 0x0028(0x0018)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class FString GetLastKnownDisplayName() const;
	ERHAPI_Platform GetPlatform() const;
	class FString GetPlatformUserId() const;
	const struct FRH_PlayerPlatformId GetPlayerPlatformId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerPlatformInfo">();
	}
	static class URH_PlayerPlatformInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerPlatformInfo>();
	}
};
static_assert(alignof(URH_PlayerPlatformInfo) == 0x000008, "Wrong alignment on URH_PlayerPlatformInfo");
static_assert(sizeof(URH_PlayerPlatformInfo) == 0x000050, "Wrong size on URH_PlayerPlatformInfo");
static_assert(offsetof(URH_PlayerPlatformInfo, PlayerPlatformId) == 0x000028, "Member 'URH_PlayerPlatformInfo::PlayerPlatformId' has a wrong offset!");
static_assert(offsetof(URH_PlayerPlatformInfo, DisplayName) == 0x000040, "Member 'URH_PlayerPlatformInfo::DisplayName' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerInfo
// 0x00D0 (0x00F8 - 0x0028)
class URH_PlayerInfo : public UObject
{
public:
	struct FGuid                                  RHPlayerUuid;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRH_PlayerPlatformId>           LinkedPlayerPlatforms;                             // 0x0038(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class URH_PlayerPresence*                     PlayerPresence;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerSettings*                     PlayerSettings;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerSessions*                     PlayerSessions;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerDeserter*                     PlayerDeserter;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerMatches*                      PlayerMatches;                                     // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerRecentlyPlayedWith*           PlayerRecentlyPlayedWith;                          // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerReports*                      PlayerReports;                                     // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerGuideEngagement*              PlayerGuideEngagement;                             // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerInventory*                    PlayerInventory;                                   // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URH_PlayerNotifications*                PlayerNotifications;                               // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, struct FRHAPI_PlayerRankResponseV2> PlayerRankingsByRankingId;               // 0x0098(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x10];                                      // 0x00E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_DeletePlayerSetting(const class FString& SettingTypeId, const class FString& Key, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GetLastKnownDisplayNameAsync(const class URH_LocalPlayerSubsystem* LocalPlayerSubsystem, const struct FTimespan& StaleThreshold, bool bForceRefresh, ERHAPI_Platform PreferredPlatformType, const TDelegate<void(bool bSuccess, const class FString& DisplayName)>& Delegate);
	void BLUEPRINT_GetLinkedPlatformInfo(const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const TArray<class URH_PlayerPlatformInfo*>& Platforms)>& Delegate);
	void BLUEPRINT_GetPlayerRankings(const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerRankResponseV2>& PlayerRankingInfo)>& Delegate);
	void BLUEPRINT_GetPlayerSettings(const class FString& SettingTypeId, const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)>& Delegate);
	void BLUEPRINT_GetPlayerSettingsForKeys(const class FString& SettingTypeId, const TArray<class FString>& Keys, const struct FTimespan& StaleThreshold, bool bForceRefresh, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& Response)>& Delegate);
	void BLUEPRINT_SetPlayerSetting(const class FString& SettingTypeId, const class FString& Key, const struct FRHAPI_SetSinglePlayerSettingRequest& Document, const TDelegate<void(bool bSuccess, const struct FRH_PlayerSettingsDataWrapper& UpdatedSettings, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdatePlayerRanking(const class FString& RankId, const struct FRHAPI_PlayerRankUpdateRequest& RankData, const TDelegate<void(bool bSuccess, const TArray<struct FRHAPI_PlayerRankResponseV2>& PlayerRankingInfo)>& Delegate);
	TArray<struct FRH_PlayerPlatformId> GetPlayerPlatformIds();
	struct FGuid GetRHPlayerUuid();
	void StartStreamingNotifications();
	void StopStreamingNotifications(bool bClearCache);

	bool BLUEPRINT_GetLastKnownDisplayName(ERHAPI_Platform PreferredPlatformType, class FString* OutDisplayName) const;
	const TMap<class FString, struct FRHAPI_PlayerRankResponseV2> GetAllStoredPlayerRankings() const;
	const TMap<class FString, struct FRH_PlayerSettingsDataWrapper> GetAllStoredPlayerSettings() const;
	class URH_PlayerDeserter* GetDeserter() const;
	class URH_PlayerGuideEngagement* GetGuideEngagement() const;
	class URH_PlayerMatches* GetMatches() const;
	class URH_PlayerInfoSubsystem* GetPlayerInfoSubsystem() const;
	class URH_PlayerInventory* GetPlayerInventory() const;
	class URH_PlayerNotifications* GetPlayerNotifications() const;
	class URH_PlayerPlatformInfo* GetPlayerPlatformInfo(const struct FRH_PlayerPlatformId& PlayerPlatformId) const;
	TArray<class URH_PlayerPlatformInfo*> GetPlayerPlatforms() const;
	class URH_PlayerPresence* GetPresence() const;
	class URH_PlayerRecentlyPlayedWith* GetRecentlyPlayedWith() const;
	class URH_PlayerReports* GetReports() const;
	class URH_PlayerSessions* GetSessions() const;
	class URH_PlayerSettings* GetSettings() const;
	bool IsUsingLegacyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerInfo">();
	}
	static class URH_PlayerInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerInfo>();
	}
};
static_assert(alignof(URH_PlayerInfo) == 0x000008, "Wrong alignment on URH_PlayerInfo");
static_assert(sizeof(URH_PlayerInfo) == 0x0000F8, "Wrong size on URH_PlayerInfo");
static_assert(offsetof(URH_PlayerInfo, RHPlayerUuid) == 0x000028, "Member 'URH_PlayerInfo::RHPlayerUuid' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, LinkedPlayerPlatforms) == 0x000038, "Member 'URH_PlayerInfo::LinkedPlayerPlatforms' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerPresence) == 0x000048, "Member 'URH_PlayerInfo::PlayerPresence' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerSettings) == 0x000050, "Member 'URH_PlayerInfo::PlayerSettings' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerSessions) == 0x000058, "Member 'URH_PlayerInfo::PlayerSessions' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerDeserter) == 0x000060, "Member 'URH_PlayerInfo::PlayerDeserter' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerMatches) == 0x000068, "Member 'URH_PlayerInfo::PlayerMatches' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerRecentlyPlayedWith) == 0x000070, "Member 'URH_PlayerInfo::PlayerRecentlyPlayedWith' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerReports) == 0x000078, "Member 'URH_PlayerInfo::PlayerReports' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerGuideEngagement) == 0x000080, "Member 'URH_PlayerInfo::PlayerGuideEngagement' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerInventory) == 0x000088, "Member 'URH_PlayerInfo::PlayerInventory' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerNotifications) == 0x000090, "Member 'URH_PlayerInfo::PlayerNotifications' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfo, PlayerRankingsByRankingId) == 0x000098, "Member 'URH_PlayerInfo::PlayerRankingsByRankingId' has a wrong offset!");

// Class RallyHereIntegration.RH_SandboxedSubsystemPlugin
// 0x0000 (0x0028 - 0x0028)
class URH_SandboxedSubsystemPlugin : public URH_GameInstanceSubsystemPlugin
{
public:
	class URH_LocalPlayerSubsystem* GetLocalPlayerSubsystem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SandboxedSubsystemPlugin">();
	}
	static class URH_SandboxedSubsystemPlugin* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_SandboxedSubsystemPlugin>();
	}
};
static_assert(alignof(URH_SandboxedSubsystemPlugin) == 0x000008, "Wrong alignment on URH_SandboxedSubsystemPlugin");
static_assert(sizeof(URH_SandboxedSubsystemPlugin) == 0x000028, "Wrong size on URH_SandboxedSubsystemPlugin");

// Class RallyHereIntegration.RH_PlayerInfoSubsystem
// 0x0100 (0x0128 - 0x0028)
class URH_PlayerInfoSubsystem final : public URH_SandboxedSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class URH_PlayerInfo>             PlayerInfoClassOverride;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class URH_PlayerInfo*>     PlayerInfos;                                       // 0x0038(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<struct FRH_PlayerPlatformId, class URH_PlayerPlatformInfo*> PlayerPlatformInfos;            // 0x0088(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<struct FRH_PlayerPlatformId, struct FGuid> PlayerPlatformIdToUuidMap;                       // 0x00D8(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_LookupPlayer(const class FString& PlayerName, const TDelegate<void(bool bSuccess, const TArray<class URH_PlayerInfo*>& PlayerInfo)>& Delegate);
	void BLUEPRINT_LookupPlayerByPlatformUserId(const struct FRH_PlayerPlatformId& PlayerPlatformId, const TDelegate<void(bool bSuccess, const TArray<class URH_PlayerInfo*>& PlayerInfo)>& Delegate);
	class URH_PlayerInfo* GetOrCreatePlayerInfo(const struct FGuid& PlayerUuid);
	class URH_PlayerPlatformInfo* GetOrCreatePlayerPlatformInfo(const struct FRH_PlayerPlatformId& PlayerPlatformId);
	class URH_PlayerInfo* RemovePlayerInfoFromCache(const struct FGuid& PlayerUuid);

	class URH_PlayerInfo* FindPlayerInfoByPlatformId(const struct FRH_PlayerPlatformId& PlayerPlatformId) const;
	class URH_PlayerInfo* GetPlayerInfo(const struct FGuid& PlayerUuid) const;
	const TMap<struct FGuid, class URH_PlayerInfo*> GetPlayerInfos() const;
	class URH_PlayerPlatformInfo* GetPlayerPlatformInfo(const struct FRH_PlayerPlatformId& PlayerPlatformId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerInfoSubsystem">();
	}
	static class URH_PlayerInfoSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerInfoSubsystem>();
	}
};
static_assert(alignof(URH_PlayerInfoSubsystem) == 0x000008, "Wrong alignment on URH_PlayerInfoSubsystem");
static_assert(sizeof(URH_PlayerInfoSubsystem) == 0x000128, "Wrong size on URH_PlayerInfoSubsystem");
static_assert(offsetof(URH_PlayerInfoSubsystem, PlayerInfoClassOverride) == 0x000030, "Member 'URH_PlayerInfoSubsystem::PlayerInfoClassOverride' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubsystem, PlayerInfos) == 0x000038, "Member 'URH_PlayerInfoSubsystem::PlayerInfos' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubsystem, PlayerPlatformInfos) == 0x000088, "Member 'URH_PlayerInfoSubsystem::PlayerPlatformInfos' has a wrong offset!");
static_assert(offsetof(URH_PlayerInfoSubsystem, PlayerPlatformIdToUuidMap) == 0x0000D8, "Member 'URH_PlayerInfoSubsystem::PlayerPlatformIdToUuidMap' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerInventory
// 0x0188 (0x01B0 - 0x0028)
class URH_PlayerInventory final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const TArray<int32>& ItemIds, class URH_PlayerInfo* PlayerInfo)> OnInventoryCacheUpdatedBP; // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xE0];                                      // 0x0050(0x00E0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRHAPI_PlayerOrder>             CachedOrderResults;                                // 0x0130(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class URH_PlayerOrderWatch*                   OrderWatch;                                        // 0x0140(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class URH_PendingOrder*>               PendingOrders;                                     // 0x0148(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FRH_InventorySession                   InventorySession;                                  // 0x0158(0x0038)(Protected, NativeAccessSpecifierProtected)
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0190(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReceivedInventoryNotification;                    // 0x0198(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReceivedPendingInventoryNotification;             // 0x0199(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19A[0x16];                                     // 0x019A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_AddPendingOrdersFromEntitlementResult(const struct FRHAPI_PlatformEntitlementProcessResult& EntitlementResult, const TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)>& Delegate);
	void BLUEPRINT_AddPendingOrdersFromEntitlementsArray(TArray<struct FRHAPI_PlatformEntitlement>* Entitlements, const TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)>& Delegate);
	void BLUEPRINT_ClearOrderWatch(const TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)>& Delegate);
	void BLUEPRINT_CreateInventory(const struct FGuid& ClientOrderReferenceId, const TArray<struct FRH_CreateInventory>& CreateInventories, const TDelegate<void(bool bSuccess)>& Delegate, const ERHAPI_Source Source);
	void BLUEPRINT_CreateInventorySession(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_CreateInventorySessionForPlatform(const ERHAPI_InventoryPlatform Platform, const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_CreateInventoryWithoutClientOrderRefId(const TArray<struct FRH_CreateInventory>& CreateInventories, const TDelegate<void(bool bSuccess)>& Delegate, const ERHAPI_Source Source);
	void BLUEPRINT_CreateNewPlayerOrder(ERHAPI_Source OrderSource, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate);
	void BLUEPRINT_CreateNewPlayerOrder2(ERHAPI_Source OrderSource, bool IsTransaction, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate);
	void BLUEPRINT_CreatePlayerOrder(ERHAPI_PlayerOrderEntryType FillType, ERHAPI_Source OrderSource, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const TArray<class URH_PlayerOrderEntry*>& OrderEntries, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate);
	void BLUEPRINT_GetInventory(const struct FTimespan& StaleThresold, bool bForce, const TArray<int32>& ItemIds, const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetInventoryCount(const int32& ItemId, const TDelegate<void(int32 InstanceCount)>& Delegate);
	void BLUEPRINT_GetInventorySession(const TDelegate<void(bool bSuccess)>& Delegate);
	void BLUEPRINT_GetItemLevelsAsync(const TArray<int32>& ItemIds, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_IsInventoryItemOwned(const int32& ItemId, const TDelegate<void(bool IsValid)>& Delegate);
	void BLUEPRINT_IsInventoryItemRented(const int32& ItemId, const TDelegate<void(bool IsValid)>& Delegate);
	void BLUEPRINT_RedeemPromoCode(const class FString& PromoCode, const TDelegate<void(const class URH_PlayerInfo* PlayerInfo, const class FString& PromoCode, const struct FRHAPI_PlayerOrder& OrderResult)>& Delegate);
	void BLUEPRINT_SetOrderWatch(const TDelegate<void(const TArray<struct FRHAPI_PlayerOrder>& OrderResults)>& Delegate);
	void BLUEPRINT_UpdateInventory(const struct FGuid& ClientOrderReferenceId, const TArray<struct FRH_UpdateInventory>& UpdateInventories, const TDelegate<void(bool bSuccess)>& Delegate, const ERHAPI_Source Source);
	void BLUEPRINT_UpdateInventoryWithoutClientOrderRefId(const TArray<struct FRH_UpdateInventory>& UpdateInventories, const TDelegate<void(bool bSuccess)>& Delegate, const ERHAPI_Source Source);

	const TArray<struct FRH_ItemInventory> GetAllCachedInventory() const;
	bool GetCachedInventoryForInventoryId(const struct FGuid& InventoryId, struct FRH_ItemInventory* Item) const;
	const TArray<struct FRH_ItemInventory> GetCachedInventoryForItem(const int32& ItemId) const;
	const TArray<struct FRH_ItemInventory> GetCachedInventoryForItems(const TArray<int32>& ItemIds) const;
	const TArray<struct FRH_ItemInventory> GetCachedInventoryForItemsAndTypes(const TArray<int32>& ItemIds, const TArray<ERHAPI_InventoryType>& Types) const;
	const TArray<struct FRH_ItemInventory> GetCachedInventoryForType(const ERHAPI_InventoryType& Type) const;
	const struct FRH_InventorySession GetCachedInventorySession() const;
	const TMap<int32, struct FRHAPI_InventoryLevel> GetCachedItemLevels() const;
	const TArray<struct FRHAPI_PlayerOrder> GetOrderResults() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerInventory">();
	}
	static class URH_PlayerInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerInventory>();
	}
};
static_assert(alignof(URH_PlayerInventory) == 0x000008, "Wrong alignment on URH_PlayerInventory");
static_assert(sizeof(URH_PlayerInventory) == 0x0001B0, "Wrong size on URH_PlayerInventory");
static_assert(offsetof(URH_PlayerInventory, OnInventoryCacheUpdatedBP) == 0x000040, "Member 'URH_PlayerInventory::OnInventoryCacheUpdatedBP' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, CachedOrderResults) == 0x000130, "Member 'URH_PlayerInventory::CachedOrderResults' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, OrderWatch) == 0x000140, "Member 'URH_PlayerInventory::OrderWatch' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, PendingOrders) == 0x000148, "Member 'URH_PlayerInventory::PendingOrders' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, InventorySession) == 0x000158, "Member 'URH_PlayerInventory::InventorySession' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, PlayerInfo) == 0x000190, "Member 'URH_PlayerInventory::PlayerInfo' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, bReceivedInventoryNotification) == 0x000198, "Member 'URH_PlayerInventory::bReceivedInventoryNotification' has a wrong offset!");
static_assert(offsetof(URH_PlayerInventory, bReceivedPendingInventoryNotification) == 0x000199, "Member 'URH_PlayerInventory::bReceivedPendingInventoryNotification' has a wrong offset!");

// Class RallyHereIntegration.RH_PendingOrder
// 0x0010 (0x0038 - 0x0028)
class URH_PendingOrder : public UObject
{
public:
	class FString                                 OrderId;                                           // 0x0028(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PendingOrder">();
	}
	static class URH_PendingOrder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PendingOrder>();
	}
};
static_assert(alignof(URH_PendingOrder) == 0x000008, "Wrong alignment on URH_PendingOrder");
static_assert(sizeof(URH_PendingOrder) == 0x000038, "Wrong size on URH_PendingOrder");
static_assert(offsetof(URH_PendingOrder, OrderId) == 0x000028, "Member 'URH_PendingOrder::OrderId' has a wrong offset!");

// Class RallyHereIntegration.RH_PendingPromoCodeOrder
// 0x0030 (0x0068 - 0x0038)
class URH_PendingPromoCodeOrder final : public URH_PendingOrder
{
public:
	class FString                                 PromoCode;                                         // 0x0038(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PendingPromoCodeOrder">();
	}
	static class URH_PendingPromoCodeOrder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PendingPromoCodeOrder>();
	}
};
static_assert(alignof(URH_PendingPromoCodeOrder) == 0x000008, "Wrong alignment on URH_PendingPromoCodeOrder");
static_assert(sizeof(URH_PendingPromoCodeOrder) == 0x000068, "Wrong size on URH_PendingPromoCodeOrder");
static_assert(offsetof(URH_PendingPromoCodeOrder, PromoCode) == 0x000038, "Member 'URH_PendingPromoCodeOrder::PromoCode' has a wrong offset!");

// Class RallyHereIntegration.RH_PendingInventoryUpdateOrder
// 0x0020 (0x0058 - 0x0038)
class URH_PendingInventoryUpdateOrder final : public URH_PendingOrder
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PendingInventoryUpdateOrder">();
	}
	static class URH_PendingInventoryUpdateOrder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PendingInventoryUpdateOrder>();
	}
};
static_assert(alignof(URH_PendingInventoryUpdateOrder) == 0x000008, "Wrong alignment on URH_PendingInventoryUpdateOrder");
static_assert(sizeof(URH_PendingInventoryUpdateOrder) == 0x000058, "Wrong size on URH_PendingInventoryUpdateOrder");

// Class RallyHereIntegration.RH_PendingPlayerOrder
// 0x0030 (0x0068 - 0x0038)
class URH_PendingPlayerOrder final : public URH_PendingOrder
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_PlayerOrderEntry*>           OrderEntries;                                      // 0x0058(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PendingPlayerOrder">();
	}
	static class URH_PendingPlayerOrder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PendingPlayerOrder>();
	}
};
static_assert(alignof(URH_PendingPlayerOrder) == 0x000008, "Wrong alignment on URH_PendingPlayerOrder");
static_assert(sizeof(URH_PendingPlayerOrder) == 0x000068, "Wrong size on URH_PendingPlayerOrder");
static_assert(offsetof(URH_PendingPlayerOrder, OrderEntries) == 0x000058, "Member 'URH_PendingPlayerOrder::OrderEntries' has a wrong offset!");

// Class RallyHereIntegration.RH_PendingOrderDetailsOrder
// 0x0020 (0x0058 - 0x0038)
class URH_PendingOrderDetailsOrder final : public URH_PendingOrder
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PendingOrderDetailsOrder">();
	}
	static class URH_PendingOrderDetailsOrder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PendingOrderDetailsOrder>();
	}
};
static_assert(alignof(URH_PendingOrderDetailsOrder) == 0x000008, "Wrong alignment on URH_PendingOrderDetailsOrder");
static_assert(sizeof(URH_PendingOrderDetailsOrder) == 0x000058, "Wrong size on URH_PendingOrderDetailsOrder");

// Class RallyHereIntegration.RH_PlayerOrderWatch
// 0x0048 (0x0070 - 0x0028)
class URH_PlayerOrderWatch final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_InventoryPageMeta               LastRequestMeta;                                   // 0x0038(0x0038)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerOrderWatch">();
	}
	static class URH_PlayerOrderWatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerOrderWatch>();
	}
};
static_assert(alignof(URH_PlayerOrderWatch) == 0x000008, "Wrong alignment on URH_PlayerOrderWatch");
static_assert(sizeof(URH_PlayerOrderWatch) == 0x000070, "Wrong size on URH_PlayerOrderWatch");
static_assert(offsetof(URH_PlayerOrderWatch, LastRequestMeta) == 0x000038, "Member 'URH_PlayerOrderWatch::LastRequestMeta' has a wrong offset!");

// Class RallyHereIntegration.RH_PlayerOrderEntry
// 0x03F8 (0x0420 - 0x0028)
class URH_PlayerOrderEntry final : public UObject
{
public:
	ERHAPI_PlayerOrderEntryType                   FillType;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_Loot                            LootItem;                                          // 0x0030(0x0358)(Edit, Transient, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         LootId;                                            // 0x0388(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x038C(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExternalTransactionId;                             // 0x0390(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PriceItemId;                                       // 0x03A0(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x03A4(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRHAPI_PurchasePriceCurrency>   Prices;                                            // 0x03A8(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         CouponItemId;                                      // 0x03B8(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            CustomData;                                        // 0x03C0(0x0050)(Edit, Transient, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ERHAPI_InventorySelector                      Selector;                                          // 0x0410(0x0001)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_InventoryOperation                     Operation;                                         // 0x0411(0x0001)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERHAPI_XpQuantityTransform                    XpQuantityTransform;                               // 0x0412(0x0001)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_413[0x1];                                      // 0x0413(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HardQuantityMaximum;                               // 0x0414(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QuantityMultInvItemId;                             // 0x0418(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeFrameId;                                       // 0x041C(0x0004)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	const int32 GetCouponItemId() const;
	class FString GetExternalTransactionId() const;
	ERHAPI_PlayerOrderEntryType GetFillType() const;
	const int32 GetLootId() const;
	const struct FRHAPI_Loot GetLootItem() const;
	int32 GetPrice() const;
	const int32 GetPriceItemId() const;
	const TArray<struct FRHAPI_PurchasePriceCurrency> GetPrices() const;
	int32 GetQuantity() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerOrderEntry">();
	}
	static class URH_PlayerOrderEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerOrderEntry>();
	}
};
static_assert(alignof(URH_PlayerOrderEntry) == 0x000008, "Wrong alignment on URH_PlayerOrderEntry");
static_assert(sizeof(URH_PlayerOrderEntry) == 0x000420, "Wrong size on URH_PlayerOrderEntry");
static_assert(offsetof(URH_PlayerOrderEntry, FillType) == 0x000028, "Member 'URH_PlayerOrderEntry::FillType' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, LootItem) == 0x000030, "Member 'URH_PlayerOrderEntry::LootItem' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, LootId) == 0x000388, "Member 'URH_PlayerOrderEntry::LootId' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, Quantity) == 0x00038C, "Member 'URH_PlayerOrderEntry::Quantity' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, ExternalTransactionId) == 0x000390, "Member 'URH_PlayerOrderEntry::ExternalTransactionId' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, PriceItemId) == 0x0003A0, "Member 'URH_PlayerOrderEntry::PriceItemId' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, Price) == 0x0003A4, "Member 'URH_PlayerOrderEntry::Price' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, Prices) == 0x0003A8, "Member 'URH_PlayerOrderEntry::Prices' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, CouponItemId) == 0x0003B8, "Member 'URH_PlayerOrderEntry::CouponItemId' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, CustomData) == 0x0003C0, "Member 'URH_PlayerOrderEntry::CustomData' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, Selector) == 0x000410, "Member 'URH_PlayerOrderEntry::Selector' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, Operation) == 0x000411, "Member 'URH_PlayerOrderEntry::Operation' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, XpQuantityTransform) == 0x000412, "Member 'URH_PlayerOrderEntry::XpQuantityTransform' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, HardQuantityMaximum) == 0x000414, "Member 'URH_PlayerOrderEntry::HardQuantityMaximum' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, QuantityMultInvItemId) == 0x000418, "Member 'URH_PlayerOrderEntry::QuantityMultInvItemId' has a wrong offset!");
static_assert(offsetof(URH_PlayerOrderEntry, TimeFrameId) == 0x00041C, "Member 'URH_PlayerOrderEntry::TimeFrameId' has a wrong offset!");

// Class RallyHereIntegration.RH_InventoryBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class URH_InventoryBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddCustomDataToItemInventory(struct FRH_ItemInventory* ItemInventory, const class FString& Key, const class FString& Value);
	static bool CheckIfInventoryExpires(const struct FRH_ItemInventory& ItemInventory);
	static class FString FindCustomDataOnItemInventory(const struct FRH_ItemInventory& ItemInventory, const class FString& Key);
	static bool GetInventoryExpiration(const struct FRH_ItemInventory& ItemInventory, struct FDateTime* DateTimeOut);
	static bool InitCreateInventoryWithItemInventoryValues(const struct FRH_CreateInventory& CreateInventory, const struct FRH_ItemInventory& ItemInventory);
	static bool InitUpdateInventoryWithItemInventoryValues(const struct FRH_UpdateInventory& UpdateInventory, const struct FRH_ItemInventory& ItemInventory);
	static void RemoveCustomDataFromItemInventory(struct FRH_ItemInventory* ItemInventory, const class FString& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_InventoryBlueprintLibrary">();
	}
	static class URH_InventoryBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_InventoryBlueprintLibrary>();
	}
};
static_assert(alignof(URH_InventoryBlueprintLibrary) == 0x000008, "Wrong alignment on URH_InventoryBlueprintLibrary");
static_assert(sizeof(URH_InventoryBlueprintLibrary) == 0x000028, "Wrong size on URH_InventoryBlueprintLibrary");

// Class RallyHereIntegration.RH_PlayerNotifications
// 0x00E8 (0x0110 - 0x0028)
class URH_PlayerNotifications final : public UObject
{
public:
	TMulticastInlineDelegate<void(const struct FRHAPI_Notification& Notification, const class FString& APIName, const TArray<class FString>& APIParams)> OnNotificationStreamedDynamic; // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x68];                                      // 0x0038(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	EFRH_NotificationPollingTypes                 PollingType;                                       // 0x00A0(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x17];                                      // 0x00A1(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  StreamingPlayerUuid;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 StreamingCursor;                                   // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsStreaming;                                      // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRHAPI_Notification>            StreamingHistory;                                  // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                         StreamingHistorySize;                              // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x00F8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextLongPollDelay;                                 // 0x0100(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxLongPollDelay;                                  // 0x0104(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                           LongPollDeferralHandle;                            // 0x0108(0x0008)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BLUEPRINT_CreateNotification(const struct FGuid& PlayerUuid, const class FString& Message, const class FString& RhUrl, const TMap<class FString, class FString>& CustomData, const TDelegate<void(bool bSuccess, const class FString& NotificationId, const struct FRH_ErrorInfo& Resp)>& Delegate);
	void ClearStreamingHistory();
	void SetStreamingHistorySize(int32 Size);
	void StartStreamingLatestNotifications(const class FString& Cursor);
	void StopStreamingLatestNotifications(bool bClearCache);

	class FString GetStreamingCursor() const;
	const TArray<struct FRHAPI_Notification> GetStreamingHistory() const;
	int32 GetStreamingHistorySize() const;
	const struct FGuid GetStreamingPlayerUuid() const;
	bool IsStreaming() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PlayerNotifications">();
	}
	static class URH_PlayerNotifications* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PlayerNotifications>();
	}
};
static_assert(alignof(URH_PlayerNotifications) == 0x000008, "Wrong alignment on URH_PlayerNotifications");
static_assert(sizeof(URH_PlayerNotifications) == 0x000110, "Wrong size on URH_PlayerNotifications");
static_assert(offsetof(URH_PlayerNotifications, OnNotificationStreamedDynamic) == 0x000028, "Member 'URH_PlayerNotifications::OnNotificationStreamedDynamic' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, PollingType) == 0x0000A0, "Member 'URH_PlayerNotifications::PollingType' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, StreamingPlayerUuid) == 0x0000B8, "Member 'URH_PlayerNotifications::StreamingPlayerUuid' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, StreamingCursor) == 0x0000C8, "Member 'URH_PlayerNotifications::StreamingCursor' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, bIsStreaming) == 0x0000D8, "Member 'URH_PlayerNotifications::bIsStreaming' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, StreamingHistory) == 0x0000E0, "Member 'URH_PlayerNotifications::StreamingHistory' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, StreamingHistorySize) == 0x0000F0, "Member 'URH_PlayerNotifications::StreamingHistorySize' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, PlayerInfo) == 0x0000F8, "Member 'URH_PlayerNotifications::PlayerInfo' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, NextLongPollDelay) == 0x000100, "Member 'URH_PlayerNotifications::NextLongPollDelay' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, MaxLongPollDelay) == 0x000104, "Member 'URH_PlayerNotifications::MaxLongPollDelay' has a wrong offset!");
static_assert(offsetof(URH_PlayerNotifications, LongPollDeferralHandle) == 0x000108, "Member 'URH_PlayerNotifications::LongPollDeferralHandle' has a wrong offset!");

// Class RallyHereIntegration.RH_PollingSettings
// 0x0028 (0x0060 - 0x0038)
class URH_PollingSettings final : public UDeveloperSettings
{
public:
	TArray<struct FRH_PollTimerSetting>           PollingIntervals;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FRH_PollTimerSetting                   DefaultPollingTimer;                               // 0x0048(0x0018)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PollingSettings">();
	}
	static class URH_PollingSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PollingSettings>();
	}
};
static_assert(alignof(URH_PollingSettings) == 0x000008, "Wrong alignment on URH_PollingSettings");
static_assert(sizeof(URH_PollingSettings) == 0x000060, "Wrong size on URH_PollingSettings");
static_assert(offsetof(URH_PollingSettings, PollingIntervals) == 0x000038, "Member 'URH_PollingSettings::PollingIntervals' has a wrong offset!");
static_assert(offsetof(URH_PollingSettings, DefaultPollingTimer) == 0x000048, "Member 'URH_PollingSettings::DefaultPollingTimer' has a wrong offset!");

// Class RallyHereIntegration.RH_RallyHerePropertiesBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class URH_RallyHerePropertiesBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool EqualEqual_FRH_ItemId(const struct FRH_ItemId& A, const struct FRH_ItemId& B);
	static bool EqualEqual_FRH_LegacyIdToGuid(const struct FRH_LegacyIdToGuid& A, const struct FRH_LegacyIdToGuid& B);
	static bool EqualEqual_FRH_LootId(const struct FRH_LootId& A, const struct FRH_LootId& B);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_RallyHerePropertiesBlueprintLibrary">();
	}
	static class URH_RallyHerePropertiesBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_RallyHerePropertiesBlueprintLibrary>();
	}
};
static_assert(alignof(URH_RallyHerePropertiesBlueprintLibrary) == 0x000008, "Wrong alignment on URH_RallyHerePropertiesBlueprintLibrary");
static_assert(sizeof(URH_RallyHerePropertiesBlueprintLibrary) == 0x000028, "Wrong size on URH_RallyHerePropertiesBlueprintLibrary");

// Class RallyHereIntegration.RH_PurgeSubsystem
// 0x0040 (0x0068 - 0x0028)
class URH_PurgeSubsystem final : public URH_LocalPlayerSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x40];                                      // 0x0028(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BLUEPRINT_DequeueMeForPurge(const TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)>& Delegate);
	bool BLUEPRINT_EnqueueMeForPurge(const TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)>& Delegate);
	bool BLUEPRINT_EnqueueMeForPurgeWithPurgeTime(const struct FDateTime& PurgeTime, const TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)>& Delegate);
	bool BLUEPRINT_PurgeMeImmediately(const TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)>& Delegate);
	bool BLUEPRINT_QueryMyPurgeStatus(const TDelegate<void(bool bSuccess, const struct FRHAPI_PurgeResponse& PurgeStatus, const struct FRH_ErrorInfo& Error)>& Delegate);

	struct FRHAPI_PurgeResponse GetMyPurgeStatus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_PurgeSubsystem">();
	}
	static class URH_PurgeSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_PurgeSubsystem>();
	}
};
static_assert(alignof(URH_PurgeSubsystem) == 0x000008, "Wrong alignment on URH_PurgeSubsystem");
static_assert(sizeof(URH_PurgeSubsystem) == 0x000068, "Wrong size on URH_PurgeSubsystem");

// Class RallyHereIntegration.RH_RemoteFileSubsystem
// 0x0050 (0x0078 - 0x0028)
class URH_RemoteFileSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_DeleteFile(const struct FRH_RemoteFileApiDirectory& Directory, const class FString& RemoteFileName, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_DownloadAllFiles(const struct FRH_RemoteFileApiDirectory& Directory, const class FString& LocalDirectory, bool bUseCachedList, const TDelegate<void(bool bSuccess, const TArray<class FString>& DownloadedFileNames, const TArray<class FString>& FailedFileNames, const TArray<struct FRH_ErrorInfo>& ErrorInfo)>& Delegate);
	void BLUEPRINT_DownloadFile(const struct FRH_RemoteFileApiDirectory& Directory, const class FString& RemoteFileName, const class FString& LocalFilePath, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_LookupFileList(const struct FRH_RemoteFileApiDirectory& Directory, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UploadFile(const struct FRH_RemoteFileApiDirectory& Directory, const class FString& RemoteFileName, const class FString& LocalFilePath, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	bool ListFiles(const struct FRH_RemoteFileApiDirectory& Directory, struct FRHAPI_FileListResponse* OutFileList);

	const TMap<struct FRH_RemoteFileApiDirectory, struct FRHAPI_FileListResponse> GetFileListCache() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_RemoteFileSubsystem">();
	}
	static class URH_RemoteFileSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_RemoteFileSubsystem>();
	}
};
static_assert(alignof(URH_RemoteFileSubsystem) == 0x000008, "Wrong alignment on URH_RemoteFileSubsystem");
static_assert(sizeof(URH_RemoteFileSubsystem) == 0x000078, "Wrong size on URH_RemoteFileSubsystem");

// Class RallyHereIntegration.RH_SessionBrowserCache
// 0x00C0 (0x00E8 - 0x0028)
class URH_SessionBrowserCache final : public URH_SandboxedSubsystemPlugin
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FRHAPI_SessionTemplate> Templates;                                    // 0x0030(0x0050)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class URH_SessionView*>   Sessions;                                          // 0x0098(0x0050)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)

public:
	void BLUEPRINT_Search(const struct FRH_SessionBrowserSearchParams& Params_0, TDelegate<void(bool bSuccess, const struct FRH_SessionBrowserSearchResult& SearchResult)> Delegate);
	void RemoveSessionById(const class FString& SessionId);

	class URH_PlatformSessionSyncer* GetPlatformSyncerByPlatformSessionId(const struct FUniqueNetIdRepl& PlatformSessionId) const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByRHSessionId(const class FString& SessionId) const;
	class URH_PlayerInfoSubsystem* GetPlayerInfoSubsystem() const;
	class URH_SessionView* GetSessionById(const class FString& SessionId) const;
	bool GetTemplate(const class FString& Type, struct FRHAPI_SessionTemplate* Template) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SessionBrowserCache">();
	}
	static class URH_SessionBrowserCache* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_SessionBrowserCache>();
	}
};
static_assert(alignof(URH_SessionBrowserCache) == 0x000008, "Wrong alignment on URH_SessionBrowserCache");
static_assert(sizeof(URH_SessionBrowserCache) == 0x0000E8, "Wrong size on URH_SessionBrowserCache");
static_assert(offsetof(URH_SessionBrowserCache, Templates) == 0x000030, "Member 'URH_SessionBrowserCache::Templates' has a wrong offset!");
static_assert(offsetof(URH_SessionBrowserCache, Sessions) == 0x000098, "Member 'URH_SessionBrowserCache::Sessions' has a wrong offset!");

// Class RallyHereIntegration.RH_SessionView
// 0x0A20 (0x0A48 - 0x0028)
class URH_SessionView : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionUpdatedDelegate; // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession)> BLUEPRINT_OnSessionNotFoundDelegate; // 0x0068(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession, const struct FRH_SessionMemberStatusState& OldStatus, const struct FRH_SessionMemberStatusState& NewStatus)> BLUEPRINT_OnSessionMemberStateChangedDelegate; // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x760];                                     // 0x00A0(0x0760)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHAPI_SessionTemplate                 Template;                                          // 0x0800(0x0218)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A18[0x30];                                     // 0x0A18(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BLUEPRINT_ForcePollForUpdate(bool bClearETag, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void DeferPolling();
	float GetPollTimeRemaining();
	void StartPolling();
	void StopPolling();

	TMap<class FString, class FString> GetBrowserCustomData() const;
	TMap<class FString, class FString> GetCustomData() const;
	bool GetCustomDataValue(const class FString& Key, class FString* OutValue) const;
	class FString GetETag() const;
	TMap<class FString, class FString> GetInstanceCustomData() const;
	bool GetInstanceCustomDataValue(const class FString& Key, class FString* OutValue) const;
	bool GetPlatformSession(ERHAPI_Platform Platform, struct FRHAPI_PlatformSession* OutPlatformSession) const;
	const struct FRHAPI_Session GetSessionData() const;
	class FString GetSessionId() const;
	bool GetSessionLeader(struct FRHAPI_SessionPlayer* OutPlayer) const;
	TScriptInterface<class IRH_SessionOwnerInterface> GetSessionOwner() const;
	bool GetSessionPlayer(const struct FGuid& PlayerUuid, struct FRHAPI_SessionPlayer* OutPlayer) const;
	int32 GetSessionPlayerCount() const;
	class FString GetSessionType() const;
	struct FRHAPI_SessionTemplate GetTemplate() const;
	bool IsCreatedByMatchmaking() const;
	bool IsInQueue() const;
	bool IsJoined() const;
	bool IsOffline() const;
	bool IsOnline() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SessionView">();
	}
	static class URH_SessionView* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_SessionView>();
	}
};
static_assert(alignof(URH_SessionView) == 0x000008, "Wrong alignment on URH_SessionView");
static_assert(sizeof(URH_SessionView) == 0x000A48, "Wrong size on URH_SessionView");
static_assert(offsetof(URH_SessionView, BLUEPRINT_OnSessionUpdatedDelegate) == 0x000040, "Member 'URH_SessionView::BLUEPRINT_OnSessionUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(URH_SessionView, BLUEPRINT_OnSessionNotFoundDelegate) == 0x000068, "Member 'URH_SessionView::BLUEPRINT_OnSessionNotFoundDelegate' has a wrong offset!");
static_assert(offsetof(URH_SessionView, BLUEPRINT_OnSessionMemberStateChangedDelegate) == 0x000090, "Member 'URH_SessionView::BLUEPRINT_OnSessionMemberStateChangedDelegate' has a wrong offset!");
static_assert(offsetof(URH_SessionView, Template) == 0x000800, "Member 'URH_SessionView::Template' has a wrong offset!");

// Class RallyHereIntegration.RH_InvitedSession
// 0x0000 (0x0A48 - 0x0A48)
class URH_InvitedSession final : public URH_SessionView
{
public:
	void BLUEPRINT_Join(const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_Leave(const class FString& LeaveReason, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_QueryInviterBlockedOnPlatformAsync(const TDelegate<void(bool bIsBlocked)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_InvitedSession">();
	}
	static class URH_InvitedSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_InvitedSession>();
	}
};
static_assert(alignof(URH_InvitedSession) == 0x000008, "Wrong alignment on URH_InvitedSession");
static_assert(sizeof(URH_InvitedSession) == 0x000A48, "Wrong size on URH_InvitedSession");

// Class RallyHereIntegration.RH_JoinedSession
// 0x0180 (0x0BC8 - 0x0A48)
class URH_JoinedSession : public URH_SessionView
{
public:
	uint8                                         Pad_A48[0x18];                                     // 0x0A48(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class URH_SessionView* UpdatedSession, class URH_PlayerPresence* Presence)> BLUEPRINT_OnSessionMemberPresenceChangedDelegate; // 0x0A60(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x0A70(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWatchingPlayers;                                  // 0x0A71(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A72[0x156];                                    // 0x0A72(0x0156)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FString GetClientVersionForSession();

	void BLUEPRINT_AcknowledgeBackfill(bool bEnable, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_ChangePlayerTeam(const struct FGuid& PlayerUuid, int32 Team, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	class AOnlineBeaconClient* BLUEPRINT_CreateBeacon(class ULocalPlayer* Player, TSubclassOf<class AOnlineBeaconClient> BeaconClass);
	void BLUEPRINT_DeleteBackfill(const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_DeleteSession(const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_EndInstance(const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_EnqueueUpdateInstanceInfo(const TDelegate<void(class URH_JoinedSession* Session)>& Delegate);
	void BLUEPRINT_GenerateVoipActionToken(ERHAPI_VivoxSessionActionSingle VivoxAction, ERHAPI_VoipSessionType VoipSessionType, const TDelegate<void(bool bSuccess, const struct FRHAPI_VoipTokenResponse& VoipToken, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GenerateVoipLoginToken(const TDelegate<void(bool bSuccess, const struct FRHAPI_VoipTokenResponse& VoipToken, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_GivePlayerPermission(const struct FGuid& PlayerUuid, const ERHAPI_IntraSessionPermissions& Permission, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_InviteOtherSession(class FString& InvitedSessionId, const struct FRHAPI_PlayerInviteRequest& SessionInviteRequest, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_InvitePlayer(const struct FGuid& PlayerUuid, int32 Team, const TMap<class FString, class FString>& CustomData, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_JoinOtherSession(class FString& TargetSessionId, const struct FRHAPI_PlayerInviteRequest& SessionInviteRequest, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_KickOtherSession(class FString& KickedSessionId, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_KickPlayer(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_Leave(const class FString& LeaveReason, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_QueryPlayerBlockedOnPlatformAsync(const struct FGuid& PlayerUuid, const TDelegate<void(bool bIsBlocked)>& Delegate);
	void BLUEPRINT_RemovePlayerPermission(const struct FGuid& PlayerUuid, const ERHAPI_IntraSessionPermissions& Permission, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_RequestInstance(const struct FRHAPI_InstanceRequest& InstanceRequest, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SetLeader(const struct FGuid& PlayerUuid, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_SwapPlayerTeams(const struct FGuid& PlayerUuidA, const struct FGuid& PlayerUuidB, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateBrowserInfo(bool bEnable, const TMap<class FString, class FString>& CustomData, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateInstanceHealth(ERHAPI_InstanceHealthStatus HealthStatus, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateInstanceInfo(const struct FRHAPI_InstanceInfoUpdate& Update, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdatePlayerCustomData(const struct FGuid& PlayerUuid, const TMap<class FString, class FString>& CustomData, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_UpdateSessionInfo(const struct FRHAPI_SessionUpdate& Update, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	struct FRHAPI_InstanceInfoUpdate GetInstanceUpdateInfo();
	void SetWatchingPlayers(bool bWatch);

	void BLUEPRINT_EmitAuditEvent(const struct FRHAPI_CreateAuditRequest& AuditEvent, const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate) const;
	struct FRHAPI_InstanceInfoUpdate GetInstanceUpdateInfoDefaults() const;
	class URH_PlatformSessionSyncer* GetPlatformSyncer() const;
	struct FRHAPI_SessionUpdate GetSessionUpdateInfoDefaults() const;
	bool IsActive() const;
	bool IsBeaconSession() const;
	bool IsSyncedWithPlatform() const;
	bool IsWatchingPlayers() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_JoinedSession">();
	}
	static class URH_JoinedSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_JoinedSession>();
	}
};
static_assert(alignof(URH_JoinedSession) == 0x000008, "Wrong alignment on URH_JoinedSession");
static_assert(sizeof(URH_JoinedSession) == 0x000BC8, "Wrong size on URH_JoinedSession");
static_assert(offsetof(URH_JoinedSession, BLUEPRINT_OnSessionMemberPresenceChangedDelegate) == 0x000A60, "Member 'URH_JoinedSession::BLUEPRINT_OnSessionMemberPresenceChangedDelegate' has a wrong offset!");
static_assert(offsetof(URH_JoinedSession, bIsActive) == 0x000A70, "Member 'URH_JoinedSession::bIsActive' has a wrong offset!");
static_assert(offsetof(URH_JoinedSession, bWatchingPlayers) == 0x000A71, "Member 'URH_JoinedSession::bWatchingPlayers' has a wrong offset!");

// Class RallyHereIntegration.RH_OfflineSession
// 0x0000 (0x0BC8 - 0x0BC8)
class URH_OfflineSession final : public URH_JoinedSession
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_OfflineSession">();
	}
	static class URH_OfflineSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_OfflineSession>();
	}
};
static_assert(alignof(URH_OfflineSession) == 0x000008, "Wrong alignment on URH_OfflineSession");
static_assert(sizeof(URH_OfflineSession) == 0x000BC8, "Wrong size on URH_OfflineSession");

// Class RallyHereIntegration.RH_OnlineSession
// 0x0008 (0x0BD0 - 0x0BC8)
class URH_OnlineSession final : public URH_JoinedSession
{
public:
	uint8                                         Pad_BC8[0x8];                                      // 0x0BC8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BLUEPRINT_CreateOrJoinByType(const struct FRHAPI_CreateOrJoinRequest& CreateParams, TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	static void BLUEPRINT_JoinById(const class FString& SessionId, TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	static void BLUEPRINT_JoinByIdEx(const class FString& SessionId, const struct FRHAPI_SelfSessionPlayerUpdateRequest& JoinDetails, TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	static struct FRHAPI_SelfSessionPlayerUpdateRequest GetJoinDetailDefaults(TScriptInterface<class IRH_SessionOwnerInterface> SessionOwner);

	void BLUEPRINT_JoinQueue(const class FString& QueueId, const TArray<class FString>& MatchmakingTags, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_JoinQueueEx(const struct FRHAPI_QueueJoinRequest& Request, const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	void BLUEPRINT_LeaveQueue(const TDelegate<void(bool bSuccess, class URH_SessionView* SessionData, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_OnlineSession">();
	}
	static class URH_OnlineSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_OnlineSession>();
	}
};
static_assert(alignof(URH_OnlineSession) == 0x000008, "Wrong alignment on URH_OnlineSession");
static_assert(sizeof(URH_OnlineSession) == 0x000BD0, "Wrong size on URH_OnlineSession");

// Class RallyHereIntegration.RH_SessionOwnerInterface
// 0x0000 (0x0000 - 0x0000)
class IRH_SessionOwnerInterface final
{
public:
	void RemoveSessionById(const class FString& SessionId);

	class URH_LocalPlayerSubsystem* GetLocalPlayerSubsystem() const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByPlatformSessionId(const struct FUniqueNetIdRepl& SessionId) const;
	class URH_PlatformSessionSyncer* GetPlatformSyncerByRHSessionId(const class FString& SessionId) const;
	class URH_PlayerInfoSubsystem* GetPlayerInfoSubsystem() const;
	class URH_SessionView* GetSessionById(const class FString& SessionId) const;
	bool GetTemplate(const class FString& Type, struct FRHAPI_SessionTemplate* Template) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SessionOwnerInterface">();
	}
	static class IRH_SessionOwnerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRH_SessionOwnerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IRH_SessionOwnerInterface) == 0x000001, "Wrong alignment on IRH_SessionOwnerInterface");
static_assert(sizeof(IRH_SessionOwnerInterface) == 0x000001, "Wrong size on IRH_SessionOwnerInterface");

// Class RallyHereIntegration.RH_SettingsSubsystem
// 0x0050 (0x0078 - 0x0028)
class URH_SettingsSubsystem final : public URH_GameInstanceSubsystemPlugin
{
public:
	TMap<class FString, struct FRHAPI_SettingType> CachedSettingsTypes;                              // 0x0028(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void BLUEPRINT_GetSettingTypes(const TDelegate<void(bool bSuccess, const struct FRH_ErrorInfo& ErrorInfo)>& Delegate);
	const TMap<class FString, struct FRHAPI_SettingType> GetCachedSettingTypes();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RH_SettingsSubsystem">();
	}
	static class URH_SettingsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URH_SettingsSubsystem>();
	}
};
static_assert(alignof(URH_SettingsSubsystem) == 0x000008, "Wrong alignment on URH_SettingsSubsystem");
static_assert(sizeof(URH_SettingsSubsystem) == 0x000078, "Wrong size on URH_SettingsSubsystem");
static_assert(offsetof(URH_SettingsSubsystem, CachedSettingsTypes) == 0x000028, "Member 'URH_SettingsSubsystem::CachedSettingsTypes' has a wrong offset!");

}

