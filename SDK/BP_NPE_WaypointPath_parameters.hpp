#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_WaypointPath

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.CleanupSpawnedElements
// 0x0028 (0x0028 - 0x0000)
struct BP_NPE_WaypointPath_C_CleanupSpawnedElements final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_WaypointSpline_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_CleanupSpawnedElements) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_CleanupSpawnedElements");
static_assert(sizeof(BP_NPE_WaypointPath_C_CleanupSpawnedElements) == 0x000028, "Wrong size on BP_NPE_WaypointPath_C_CleanupSpawnedElements");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_CleanupSpawnedElements, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_NPE_WaypointPath_C_CleanupSpawnedElements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.ExecuteUbergraph_BP_NPE_WaypointPath
// 0x0008 (0x0008 - 0x0000)
struct BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleOn;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath) == 0x000004, "Wrong alignment on BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath");
static_assert(sizeof(BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath) == 0x000008, "Wrong size on BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath");
static_assert(offsetof(BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath, EntryPoint) == 0x000000, "Member 'BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath, K2Node_CustomEvent_ToggleOn) == 0x000005, "Member 'BP_NPE_WaypointPath_C_ExecuteUbergraph_BP_NPE_WaypointPath::K2Node_CustomEvent_ToggleOn' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.GetCachedWaypointSet
// 0x0028 (0x0028 - 0x0000)
struct BP_NPE_WaypointPath_C_GetCachedWaypointSet final
{
public:
	class ATestWaypointSet_C*                     WaypointSet;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATestWaypointSet_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class ATestWaypointSet_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_GetCachedWaypointSet) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_GetCachedWaypointSet");
static_assert(sizeof(BP_NPE_WaypointPath_C_GetCachedWaypointSet) == 0x000028, "Wrong size on BP_NPE_WaypointPath_C_GetCachedWaypointSet");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetCachedWaypointSet, WaypointSet) == 0x000000, "Member 'BP_NPE_WaypointPath_C_GetCachedWaypointSet::WaypointSet' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetCachedWaypointSet, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_NPE_WaypointPath_C_GetCachedWaypointSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetCachedWaypointSet, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_NPE_WaypointPath_C_GetCachedWaypointSet::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetCachedWaypointSet, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_WaypointPath_C_GetCachedWaypointSet::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.GetLaneWaypointsPath
// 0x0150 (0x0150 - 0x0000)
struct BP_NPE_WaypointPath_C_GetLaneWaypointsPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AHWWaypoint*>                    Avoid;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FVector>                        PathPoints;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AHWWaypoint*>                    OutLaneWaypoints;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWWaypoint*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestWaypointSet_C*                     CallFunc_GetCachedWaypointSet_WaypointSet;         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickPathFromWaypoints_ReturnValue;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_GetLaneWaypointsPath");
static_assert(sizeof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath) == 0x000150, "Wrong size on BP_NPE_WaypointPath_C_GetLaneWaypointsPath");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, Path) == 0x000000, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::Path' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, Avoid) == 0x000010, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::Avoid' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, PathPoints) == 0x000020, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::PathPoints' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, OutLaneWaypoints) == 0x000030, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::OutLaneWaypoints' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000A8, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B0, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000C8, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000F8, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_GetCachedWaypointSet_WaypointSet) == 0x000140, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_GetCachedWaypointSet_WaypointSet' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_PickPathFromWaypoints_ReturnValue) == 0x000148, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_PickPathFromWaypoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_GetLaneWaypointsPath, CallFunc_IsValid_ReturnValue) == 0x000149, "Member 'BP_NPE_WaypointPath_C_GetLaneWaypointsPath::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.MakePath_OnLaneWaypoints
// 0x0090 (0x0090 - 0x0000)
struct BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints final
{
public:
	TArray<struct FVector>                        CachedPathPoints;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        CallFunc_GetLaneWaypointsPath_Path;                // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_WaypointSpline_C*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints");
static_assert(sizeof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints) == 0x000090, "Wrong size on BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CachedPathPoints) == 0x000000, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CachedPathPoints' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_GetLaneWaypointsPath_Path) == 0x000010, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_GetLaneWaypointsPath_Path' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_SelectInt_ReturnValue) == 0x000038, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000060, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_NPE_WaypointPath_C_MakePath_OnLaneWaypoints::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.MakePath_OnNavMesh
// 0x00E0 (0x00E0 - 0x0000)
struct BP_NPE_WaypointPath_C_MakePath_OnNavMesh final
{
public:
	TArray<struct FVector>                        CachedPathPoints;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_WaypointSpline_C*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_MakePath_OnNavMesh");
static_assert(sizeof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh) == 0x0000E0, "Wrong size on BP_NPE_WaypointPath_C_MakePath_OnNavMesh");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CachedPathPoints) == 0x000000, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CachedPathPoints' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_SelectInt_ReturnValue) == 0x000070, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x0000D0, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_MakePath_OnNavMesh, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_NPE_WaypointPath_C_MakePath_OnNavMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.RotateCompass
// 0x01C0 (0x01C0 - 0x0000)
struct BP_NPE_WaypointPath_C_RotateCompass final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_RotateCompass) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_RotateCompass");
static_assert(sizeof(BP_NPE_WaypointPath_C_RotateCompass) == 0x0001C0, "Wrong size on BP_NPE_WaypointPath_C_RotateCompass");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_IsDedicatedServer_ReturnValue) == 0x000040, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_FindLookAtRotation_ReturnValue) == 0x000060, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_RInterpTo_ReturnValue) == 0x0000A8, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000C0, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0001A8, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001B0, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_RotateCompass, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001B8, "Member 'BP_NPE_WaypointPath_C_RotateCompass::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.SetPathToSpline
// 0x0090 (0x0090 - 0x0000)
struct BP_NPE_WaypointPath_C_SetPathToSpline final
{
public:
	class ABP_NPE_WaypointSpline_C*               SplineActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PathPoints;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USplineComponent*                       LocalSplineComponent;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalPrevSplinePoint;                              // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_SetPathToSpline) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_SetPathToSpline");
static_assert(sizeof(BP_NPE_WaypointPath_C_SetPathToSpline) == 0x000090, "Wrong size on BP_NPE_WaypointPath_C_SetPathToSpline");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, SplineActor) == 0x000000, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::SplineActor' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, PathPoints) == 0x000008, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::PathPoints' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, LocalSplineComponent) == 0x000018, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::LocalSplineComponent' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, LocalPrevSplinePoint) == 0x000020, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::LocalPrevSplinePoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000060, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x000080, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SetPathToSpline, CallFunc_BooleanOR_ReturnValue) == 0x000089, "Member 'BP_NPE_WaypointPath_C_SetPathToSpline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.SpawnCompassFX
// 0x0068 (0x0068 - 0x0000)
struct BP_NPE_WaypointPath_C_SpawnCompassFX final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleHalfHeight_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_HW_SpawnNiagaraSystemAttached_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_SpawnCompassFX) == 0x000008, "Wrong alignment on BP_NPE_WaypointPath_C_SpawnCompassFX");
static_assert(sizeof(BP_NPE_WaypointPath_C_SpawnCompassFX) == 0x000068, "Wrong size on BP_NPE_WaypointPath_C_SpawnCompassFX");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_GetCapsuleHalfHeight_ReturnValue) == 0x00002C, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_GetCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_HW_SpawnNiagaraSystemAttached_ReturnValue) == 0x000058, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_HW_SpawnNiagaraSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnCompassFX, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BP_NPE_WaypointPath_C_SpawnCompassFX::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.SpawnSplines
// 0x00A0 (0x00A0 - 0x0000)
struct BP_NPE_WaypointPath_C_SpawnSplines final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPE_WaypointSpline_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_SpawnSplines) == 0x000010, "Wrong alignment on BP_NPE_WaypointPath_C_SpawnSplines");
static_assert(sizeof(BP_NPE_WaypointPath_C_SpawnSplines) == 0x0000A0, "Wrong size on BP_NPE_WaypointPath_C_SpawnSplines");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, Temp_int_Variable) == 0x000000, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000088, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_WaypointPath_C_SpawnSplines, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_NPE_WaypointPath_C_SpawnSplines::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_NPE_WaypointPath.BP_NPE_WaypointPath_C.ToggleWaypointPath
// 0x0001 (0x0001 - 0x0000)
struct BP_NPE_WaypointPath_C_ToggleWaypointPath final
{
public:
	bool                                          ToggleOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_WaypointPath_C_ToggleWaypointPath) == 0x000001, "Wrong alignment on BP_NPE_WaypointPath_C_ToggleWaypointPath");
static_assert(sizeof(BP_NPE_WaypointPath_C_ToggleWaypointPath) == 0x000001, "Wrong size on BP_NPE_WaypointPath_C_ToggleWaypointPath");
static_assert(offsetof(BP_NPE_WaypointPath_C_ToggleWaypointPath, ToggleOn) == 0x000000, "Member 'BP_NPE_WaypointPath_C_ToggleWaypointPath::ToggleOn' has a wrong offset!");

}

