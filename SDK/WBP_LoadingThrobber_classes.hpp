#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoadingThrobber

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LoadingThrobber.WBP_LoadingThrobber_C
// 0x0020 (0x02E0 - 0x02C0)
class UWBP_LoadingThrobber_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_SpinningLoop;                                 // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWImage*                               MeterFill;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AdditiveImage_C*                   WBP_AdditiveImage;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LoadingThrobber(int32 EntryPoint);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LoadingThrobber_C">();
	}
	static class UWBP_LoadingThrobber_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LoadingThrobber_C>();
	}
};
static_assert(alignof(UWBP_LoadingThrobber_C) == 0x000008, "Wrong alignment on UWBP_LoadingThrobber_C");
static_assert(sizeof(UWBP_LoadingThrobber_C) == 0x0002E0, "Wrong size on UWBP_LoadingThrobber_C");
static_assert(offsetof(UWBP_LoadingThrobber_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_LoadingThrobber_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingThrobber_C, Anim_SpinningLoop) == 0x0002C8, "Member 'UWBP_LoadingThrobber_C::Anim_SpinningLoop' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingThrobber_C, MeterFill) == 0x0002D0, "Member 'UWBP_LoadingThrobber_C::MeterFill' has a wrong offset!");
static_assert(offsetof(UWBP_LoadingThrobber_C, WBP_AdditiveImage) == 0x0002D8, "Member 'UWBP_LoadingThrobber_C::WBP_AdditiveImage' has a wrong offset!");

}

