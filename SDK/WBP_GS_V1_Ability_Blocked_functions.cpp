#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_V1_Ability_Blocked

#include "Basic.hpp"

#include "WBP_GS_V1_Ability_Blocked_classes.hpp"
#include "WBP_GS_V1_Ability_Blocked_parameters.hpp"


namespace SDK
{

// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.BlockedChanged
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              OldBlockedReason                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              NewBlockedReason                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::BlockedChanged(const struct FGameplayTag& OldBlockedReason, const struct FGameplayTag& NewBlockedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "BlockedChanged");

	Params::WBP_GS_V1_Ability_Blocked_C_BlockedChanged Parms{};

	Parms.OldBlockedReason = std::move(OldBlockedReason);
	Parms.NewBlockedReason = std::move(NewBlockedReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.BlockedFinished
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              OldBlockedReason                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::BlockedFinished(const struct FGameplayTag& OldBlockedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "BlockedFinished");

	Params::WBP_GS_V1_Ability_Blocked_C_BlockedFinished Parms{};

	Parms.OldBlockedReason = std::move(OldBlockedReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.BlockedStarted
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              BlockedReason                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::BlockedStarted(const struct FGameplayTag& BlockedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "BlockedStarted");

	Params::WBP_GS_V1_Ability_Blocked_C_BlockedStarted Parms{};

	Parms.BlockedReason = std::move(BlockedReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.ExecuteUbergraph_WBP_GS_V1_Ability_Blocked
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::ExecuteUbergraph_WBP_GS_V1_Ability_Blocked(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "ExecuteUbergraph_WBP_GS_V1_Ability_Blocked");

	Params::WBP_GS_V1_Ability_Blocked_C_ExecuteUbergraph_WBP_GS_V1_Ability_Blocked Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.InitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_GS_V1_Ability_Blocked_C::InitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "InitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.PlayBlockAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag&                    BlockedReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::PlayBlockAnimation(struct FGameplayTag& BlockedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "PlayBlockAnimation");

	Params::WBP_GS_V1_Ability_Blocked_C_PlayBlockAnimation Parms{};

	Parms.BlockedReason = std::move(BlockedReason);

	UObject::ProcessEvent(Func, &Parms);

	BlockedReason = std::move(Parms.BlockedReason);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_V1_Ability_Blocked_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "PreConstruct");

	Params::WBP_GS_V1_Ability_Blocked_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_V1_Ability_Blocked.WBP_GS_V1_Ability_Blocked_C.SetBlockLayout
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_GS_V1_Ability_Blocked_C::SetBlockLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_V1_Ability_Blocked_C", "SetBlockLayout");

	UObject::ProcessEvent(Func, nullptr);
}

}

