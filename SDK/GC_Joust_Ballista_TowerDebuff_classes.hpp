#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Joust_Ballista_TowerDebuff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Joust_Ballista_TowerDebuff.GC_Joust_Ballista_TowerDebuff_C
// 0x0018 (0x0FF8 - 0x0FE0)
class AGC_Joust_Ballista_TowerDebuff_C final : public AHWGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWNiagaraComponent*                    HWNiagara;                                         // 0x0FE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 My_Target;                                         // 0x0FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_Joust_Ballista_TowerDebuff(int32 EntryPoint);
	void K2_HandleGameplayCue(class AActor* MyTarget, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Joust_Ballista_TowerDebuff_C">();
	}
	static class AGC_Joust_Ballista_TowerDebuff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Joust_Ballista_TowerDebuff_C>();
	}
};
static_assert(alignof(AGC_Joust_Ballista_TowerDebuff_C) == 0x000008, "Wrong alignment on AGC_Joust_Ballista_TowerDebuff_C");
static_assert(sizeof(AGC_Joust_Ballista_TowerDebuff_C) == 0x000FF8, "Wrong size on AGC_Joust_Ballista_TowerDebuff_C");
static_assert(offsetof(AGC_Joust_Ballista_TowerDebuff_C, UberGraphFrame) == 0x000FE0, "Member 'AGC_Joust_Ballista_TowerDebuff_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_Joust_Ballista_TowerDebuff_C, HWNiagara) == 0x000FE8, "Member 'AGC_Joust_Ballista_TowerDebuff_C::HWNiagara' has a wrong offset!");
static_assert(offsetof(AGC_Joust_Ballista_TowerDebuff_C, My_Target) == 0x000FF0, "Member 'AGC_Joust_Ballista_TowerDebuff_C::My_Target' has a wrong offset!");

}

