#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_Spec_TeamPlayer_Friendly

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.CharacterItemChanged
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged final
{
public:
	const class UHWCharacterItem*                 NewCharacterItem;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIconTextureByTag_ReturnValue;          // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged) == 0x000038, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged, NewCharacterItem) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged::NewCharacterItem' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged, CallFunc_GetIconTextureByTag_ReturnValue) == 0x000010, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_CharacterItemChanged::CallFunc_GetIconTextureByTag_ReturnValue' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.CharacterOwnerChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged final
{
public:
	class AHWCharacter_Base*                      NewCharacterOwner;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged) == 0x000008, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged, NewCharacterOwner) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_CharacterOwnerChanged::NewCharacterOwner' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.DisplayCharacterRespawnState
// 0x0098 (0x0098 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState final
{
public:
	bool                                          bIsAlive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainingRespawnTime;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x004C(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	int32                                         K2Node_Select_Default_3;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState) == 0x000098, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, bIsAlive) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::bIsAlive' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, RemainingRespawnTime) == 0x000004, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::RemainingRespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_bool_Variable) == 0x000008, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_bool_Variable_1) == 0x000009, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_byte_Variable) == 0x00000A, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_bool_Variable_2) == 0x00000C, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_byte_Variable_2) == 0x00000D, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_byte_Variable_3) == 0x00000E, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_bool_Variable_3) == 0x00000F, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_int_Variable) == 0x000010, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_int_Variable_1) == 0x000014, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_bool_Variable_4) == 0x000018, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_real_Variable) == 0x00001C, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, Temp_real_Variable_1) == 0x000020, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_Select_Default) == 0x00004C, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_Select_Default_1) == 0x000060, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_Select_Default_2) == 0x000061, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, CallFunc_FTrunc_ReturnValue) == 0x000064, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_Select_Default_3) == 0x000080, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, K2Node_Select_Default_4) == 0x000084, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000088, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState, CallFunc_FTrunc_A_ImplicitCast) == 0x000090, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_DisplayCharacterRespawnState::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_Event_NewCharacterOwner;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly) == 0x000010, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly, EntryPoint) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly, K2Node_Event_NewCharacterOwner) == 0x000008, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_ExecuteUbergraph_WBP_G_Spec_TeamPlayer_Friendly::K2Node_Event_NewCharacterOwner' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.InitializeWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget) == 0x000008, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_InitializeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.Update Selection
// 0x0003 (0x0003 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invert;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection) == 0x000001, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection) == 0x000003, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection, Selected) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection::Selected' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection, Invert) == 0x000001, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection::Invert' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_Update_Selection::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.UpdateCharacterRespawnTime
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime final
{
public:
	float                                         RemainingRespawnTime;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime) == 0x000028, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime, RemainingRespawnTime) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime::RemainingRespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime, CallFunc_FTrunc_ReturnValue) == 0x000004, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdateCharacterRespawnTime::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.UpdatePlayerName
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName final
{
public:
	class URH_PlayerInfo*                         PlayerInfo;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BLUEPRINT_GetLastKnownDisplayName_OutDisplayName; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BLUEPRINT_GetLastKnownDisplayName_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName) == 0x000038, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName, PlayerInfo) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName::PlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName, CallFunc_BLUEPRINT_GetLastKnownDisplayName_OutDisplayName) == 0x000008, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName::CallFunc_BLUEPRINT_GetLastKnownDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName, CallFunc_BLUEPRINT_GetLastKnownDisplayName_ReturnValue) == 0x000018, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName::CallFunc_BLUEPRINT_GetLastKnownDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.UpdatePlayerPlatformIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon final
{
public:
	ERHPlatformDisplayType                        NewPlatform;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon) == 0x000001, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon) == 0x000001, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon, NewPlatform) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_UpdatePlayerPlatformIcon::NewPlatform' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.GetAttributeWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets final
{
public:
	TArray<class UHWGameplayAttributeWidget*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayAttributeWidget*>     K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets) == 0x000020, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetAttributeWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.GetCharacterWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets final
{
public:
	TArray<class UHWCharacterWidget*>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWCharacterWidget*>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets) == 0x000020, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetCharacterWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_G_Spec_TeamPlayer_Friendly.WBP_G_Spec_TeamPlayer_Friendly_C.GetEffectWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets final
{
public:
	TArray<class UHWGameplayEffectWidget*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayEffectWidget*>        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets) == 0x000008, "Wrong alignment on WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets");
static_assert(sizeof(WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets) == 0x000020, "Wrong size on WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_Spec_TeamPlayer_Friendly_C_GetEffectWidgets::K2Node_MakeArray_Array' has a wrong offset!");

}

