#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_StoreItemDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature final
{
public:
	class UHWStoreItemDisplayWidget*              PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature, PipWidget) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_BndEvt__WBP_S_StoreItemDisplay_SkinVariants_K2Node_ComponentBoundEvent_3_HWOnStorePipRequestSelect__DelegateSignature::PipWidget' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.DisplayLoadingState
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_StoreItemDisplay_C_DisplayLoadingState final
{
public:
	bool                                          bIsLoading;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_DisplayLoadingState) == 0x000001, "Wrong alignment on WBP_S_StoreItemDisplay_C_DisplayLoadingState");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_DisplayLoadingState) == 0x000001, "Wrong size on WBP_S_StoreItemDisplay_C_DisplayLoadingState");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_DisplayLoadingState, bIsLoading) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_DisplayLoadingState::bIsLoading' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.ExecuteUbergraph_WBP_S_StoreItemDisplay
// 0x0028 (0x0028 - 0x0000)
struct WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_1;       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x000C(0x0008)(NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWStoreItemDisplayWidget*              K2Node_ComponentBoundEvent_PipWidget;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           CallFunc_GetStoreItem_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay) == 0x000028, "Wrong size on WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, EntryPoint) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, CallFunc_GetCurrentInputState_ReturnValue) == 0x000004, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, CallFunc_GetCurrentInputState_ReturnValue_1) == 0x000007, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::CallFunc_GetCurrentInputState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000008, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, K2Node_Event_InFocusEvent) == 0x00000C, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, K2Node_ComponentBoundEvent_PipWidget) == 0x000018, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::K2Node_ComponentBoundEvent_PipWidget' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay, CallFunc_GetStoreItem_ReturnValue) == 0x000020, "Member 'WBP_S_StoreItemDisplay_C_ExecuteUbergraph_WBP_S_StoreItemDisplay::CallFunc_GetStoreItem_ReturnValue' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_S_StoreItemDisplay_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnDisplayItem
// 0x0068 (0x0068 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnDisplayItem final
{
public:
	class UHWInventoryItem*                       Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0020(0x0018)()
	struct FGameplayTag                           CallFunc_GetRarityColorTag_OutColorTag;            // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWPlayerInfo*                          CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnedCached_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnDisplayItem) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnDisplayItem");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnDisplayItem) == 0x000068, "Wrong size on WBP_S_StoreItemDisplay_C_OnDisplayItem");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, Item) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, Temp_byte_Variable) == 0x000008, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, Temp_bool_Variable) == 0x00000A, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, K2Node_DynamicCast_AsHWCollection_Item) == 0x000010, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_GetItemName_ReturnValue) == 0x000020, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_GetRarityColorTag_OutColorTag) == 0x000038, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_GetRarityColorTag_OutColorTag' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_GetIconInfoByTag_OutIcon) == 0x000040, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000048, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000050, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, CallFunc_IsOwnedCached_ReturnValue) == 0x000058, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::CallFunc_IsOwnedCached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, K2Node_Select_Default) == 0x000059, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayItem, K2Node_Select_Default_1) == 0x000060, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayItem::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnDisplayPrice
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnDisplayPrice final
{
public:
	class URHStoreItemPrice*                      PriceItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PriceGroupTag;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnDisplayPrice) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnDisplayPrice");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnDisplayPrice) == 0x000010, "Wrong size on WBP_S_StoreItemDisplay_C_OnDisplayPrice");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayPrice, PriceItem) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayPrice::PriceItem' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplayPrice, PriceGroupTag) == 0x000008, "Member 'WBP_S_StoreItemDisplay_C_OnDisplayPrice::PriceGroupTag' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnDisplaySelectedVariantItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem final
{
public:
	const class URHStoreItem*                     Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem) == 0x000008, "Wrong size on WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem, Item) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySelectedVariantItem::Item' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnDisplaySkinVariants
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants final
{
public:
	const class UHWSkinItem*                      BaseSkin;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants) == 0x000010, "Wrong size on WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, BaseSkin) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::BaseSkin' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, Temp_bool_Variable) == 0x000008, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, Temp_byte_Variable) == 0x00000A, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants, K2Node_Select_Default) == 0x00000C, "Member 'WBP_S_StoreItemDisplay_C_OnDisplaySkinVariants::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.OnSelectedStateChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_StoreItemDisplay_C_OnSelectedStateChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged) == 0x000001, "Wrong alignment on WBP_S_StoreItemDisplay_C_OnSelectedStateChanged");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged) == 0x000005, "Wrong size on WBP_S_StoreItemDisplay_C_OnSelectedStateChanged");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged, bIsSelected) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_OnSelectedStateChanged::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_StoreItemDisplay_C_OnSelectedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_StoreItemDisplay_C_OnSelectedStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_StoreItemDisplay_C_OnSelectedStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_OnSelectedStateChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_StoreItemDisplay_C_OnSelectedStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_StoreItemDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_StoreItemDisplay_C_PreConstruct");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_StoreItemDisplay_C_PreConstruct");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_S_StoreItemDisplay.WBP_S_StoreItemDisplay_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_StoreItemDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

