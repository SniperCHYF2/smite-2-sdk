#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_V1_CooldownOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GS_V1_CooldownOverlay.WBP_GS_V1_CooldownOverlay_C
// 0x0050 (0x0718 - 0x06C8)
class UWBP_GS_V1_CooldownOverlay_C final : public UHWGameplayEffectCooldownWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWTextBlock*                           AbilityCooldownText;                               // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               AbilityLockedOverlay;                              // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             Container;                                         // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CooldownMask;                                      // 0x06F0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void CooldownFinished();
	void CooldownStarted(float RemainingTime);
	void CooldownTimeUpdated(float OldRemainingTime, float NewRemainingTime);
	void ExecuteUbergraph_WBP_GS_V1_CooldownOverlay(int32 EntryPoint);
	void InitializeWidget();
	void OnAssociatedEquipmentAmmoChanged(int32 PreviousAmmoCount, int32 NewAmmoCount);
	void PreConstruct(bool IsDesignTime);
	void Set_Cooldown_Text_Alignment_and_Size(EHorizontalAlignment Horizontal_Alignment, EVerticalAlignment Vertical_Alignment, int32 FontSize, double BottomPadding);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateCooldownDisplay();
	void UpdateCooldownText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GS_V1_CooldownOverlay_C">();
	}
	static class UWBP_GS_V1_CooldownOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GS_V1_CooldownOverlay_C>();
	}
};
static_assert(alignof(UWBP_GS_V1_CooldownOverlay_C) == 0x000008, "Wrong alignment on UWBP_GS_V1_CooldownOverlay_C");
static_assert(sizeof(UWBP_GS_V1_CooldownOverlay_C) == 0x000718, "Wrong size on UWBP_GS_V1_CooldownOverlay_C");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, UberGraphFrame) == 0x0006C8, "Member 'UWBP_GS_V1_CooldownOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, AbilityCooldownText) == 0x0006D0, "Member 'UWBP_GS_V1_CooldownOverlay_C::AbilityCooldownText' has a wrong offset!");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, AbilityLockedOverlay) == 0x0006D8, "Member 'UWBP_GS_V1_CooldownOverlay_C::AbilityLockedOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, Container) == 0x0006E0, "Member 'UWBP_GS_V1_CooldownOverlay_C::Container' has a wrong offset!");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, MaterialInstance) == 0x0006E8, "Member 'UWBP_GS_V1_CooldownOverlay_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_GS_V1_CooldownOverlay_C, CooldownMask) == 0x0006F0, "Member 'UWBP_GS_V1_CooldownOverlay_C::CooldownMask' has a wrong offset!");

}

