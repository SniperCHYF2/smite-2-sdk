#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GiftsComponent

#include "Basic.hpp"

#include "BP_GiftsComponent_classes.hpp"
#include "BP_GiftsComponent_parameters.hpp"


namespace SDK
{

// Function BP_GiftsComponent.BP_GiftsComponent_C.BindToGameModeEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::BindToGameModeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "BindToGameModeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.BindToPlayerDeaths
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::BindToPlayerDeaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "BindToPlayerDeaths");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.ChaosTicketsUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::ChaosTicketsUpdated(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "ChaosTicketsUpdated");

	Params::BP_GiftsComponent_C_ChaosTicketsUpdated Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.ExecuteUbergraph_BP_GiftsComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::ExecuteUbergraph_BP_GiftsComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "ExecuteUbergraph_BP_GiftsComponent");

	Params::BP_GiftsComponent_C_ExecuteUbergraph_BP_GiftsComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.GamePhaseChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PhaseTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   PhaseStartTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PhaseDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::GamePhaseChanged(const struct FGameplayTag& PhaseTag, float PhaseStartTime, float PhaseDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "GamePhaseChanged");

	Params::BP_GiftsComponent_C_GamePhaseChanged Parms{};

	Parms.PhaseTag = std::move(PhaseTag);
	Parms.PhaseStartTime = PhaseStartTime;
	Parms.PhaseDuration = PhaseDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.GatherFavorZones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::GatherFavorZones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "GatherFavorZones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.GetRandomZone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_Gifts_C*>&             Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ABP_Gifts_C**                     Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::GetRandomZone(TArray<class ABP_Gifts_C*>& Array, class ABP_Gifts_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "GetRandomZone");

	Params::BP_GiftsComponent_C_GetRandomZone Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.OrderTicketsUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::OrderTicketsUpdated(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "OrderTicketsUpdated");

	Params::BP_GiftsComponent_C_OrderTicketsUpdated Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.PlayerDied
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHWTeamState*                     Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AHWPlayerState*                   TeamMember                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FDamageEventData&          DeathEventData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_GiftsComponent_C::PlayerDied(class AHWTeamState* Team, class AHWPlayerState* TeamMember, const struct FDamageEventData& DeathEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "PlayerDied");

	Params::BP_GiftsComponent_C_PlayerDied Parms{};

	Parms.Team = Team;
	Parms.TeamMember = TeamMember;
	Parms.DeathEventData = std::move(DeathEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_GiftsComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.ReduceFavorTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::ReduceFavorTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "ReduceFavorTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.SpawnChaosFavor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::SpawnChaosFavor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "SpawnChaosFavor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.SpawnNeutralFavor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::SpawnNeutralFavor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "SpawnNeutralFavor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.SpawnOrderFavor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::SpawnOrderFavor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "SpawnOrderFavor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.StartChaosTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OverrideTimer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OverrideTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::StartChaosTimer(bool OverrideTimer, double OverrideTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "StartChaosTimer");

	Params::BP_GiftsComponent_C_StartChaosTimer Parms{};

	Parms.OverrideTimer = OverrideTimer;
	Parms.OverrideTime = OverrideTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.StartFavorTimers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::StartFavorTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "StartFavorTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.StartNeutralTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OverrideTimer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OverrideTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::StartNeutralTimer(bool OverrideTimer, double OverrideTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "StartNeutralTimer");

	Params::BP_GiftsComponent_C_StartNeutralTimer Parms{};

	Parms.OverrideTimer = OverrideTimer;
	Parms.OverrideTime = OverrideTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.StartOrderTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OverrideTimer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OverrideTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GiftsComponent_C::StartOrderTimer(bool OverrideTimer, double OverrideTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "StartOrderTimer");

	Params::BP_GiftsComponent_C_StartOrderTimer Parms{};

	Parms.OverrideTimer = OverrideTimer;
	Parms.OverrideTime = OverrideTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GiftsComponent.BP_GiftsComponent_C.StopFavorTimers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GiftsComponent_C::StopFavorTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GiftsComponent_C", "StopFavorTimers");

	UObject::ProcessEvent(Func, nullptr);
}

}

