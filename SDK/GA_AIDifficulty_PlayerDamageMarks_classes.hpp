#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AIDifficulty_PlayerDamageMarks

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AIDifficulty_PlayerDamageMarks.GA_AIDifficulty_PlayerDamageMarks_C
// 0x0010 (0x0D80 - 0x0D70)
class UGA_AIDifficulty_PlayerDamageMarks_C final : public UHWAbility_Passive
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          AbilityDamageOnly;                                 // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_AIDifficulty_PlayerDamageMarks(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnDamageTaken(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue);
	void OnDealtDamage(const struct FGameplayTagContainer& EffectTags, const struct FDamageCalcInfo& DamageCalcInfo, class UHWAbilitySystemComponent* BroadcastingAbilitySystemComponent, const EHWAdjustAttributeEventType AdjustAttributeEventType, const float BaseDamageValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AIDifficulty_PlayerDamageMarks_C">();
	}
	static class UGA_AIDifficulty_PlayerDamageMarks_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AIDifficulty_PlayerDamageMarks_C>();
	}
};
static_assert(alignof(UGA_AIDifficulty_PlayerDamageMarks_C) == 0x000008, "Wrong alignment on UGA_AIDifficulty_PlayerDamageMarks_C");
static_assert(sizeof(UGA_AIDifficulty_PlayerDamageMarks_C) == 0x000D80, "Wrong size on UGA_AIDifficulty_PlayerDamageMarks_C");
static_assert(offsetof(UGA_AIDifficulty_PlayerDamageMarks_C, UberGraphFrame) == 0x000D70, "Member 'UGA_AIDifficulty_PlayerDamageMarks_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_AIDifficulty_PlayerDamageMarks_C, AbilityDamageOnly) == 0x000D78, "Member 'UGA_AIDifficulty_PlayerDamageMarks_C::AbilityDamageOnly' has a wrong offset!");

}

