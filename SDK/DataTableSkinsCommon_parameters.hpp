#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataTableSkinsCommon

#include "Basic.hpp"

#include "DataTableSkinsCommon_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTable
// 0x0010 (0x0010 - 0x0000)
struct DynamicSkinTable_AddDataTable final
{
public:
	class UDataTable*                             InTable;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPriority;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DynamicSkinTable_AddDataTable) == 0x000008, "Wrong alignment on DynamicSkinTable_AddDataTable");
static_assert(sizeof(DynamicSkinTable_AddDataTable) == 0x000010, "Wrong size on DynamicSkinTable_AddDataTable");
static_assert(offsetof(DynamicSkinTable_AddDataTable, InTable) == 0x000000, "Member 'DynamicSkinTable_AddDataTable::InTable' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_AddDataTable, InPriority) == 0x000008, "Member 'DynamicSkinTable_AddDataTable::InPriority' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTables
// 0x0010 (0x0010 - 0x0000)
struct DynamicSkinTable_AddDataTables final
{
public:
	TArray<struct FDataTableInfo>                 InTableInfos;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_AddDataTables) == 0x000008, "Wrong alignment on DynamicSkinTable_AddDataTables");
static_assert(sizeof(DynamicSkinTable_AddDataTables) == 0x000010, "Wrong size on DynamicSkinTable_AddDataTables");
static_assert(offsetof(DynamicSkinTable_AddDataTables, InTableInfos) == 0x000000, "Member 'DynamicSkinTable_AddDataTables::InTableInfos' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.AddDataTableWithQuery
// 0x0058 (0x0058 - 0x0000)
struct DynamicSkinTable_AddDataTableWithQuery final
{
public:
	class UDataTable*                             InTable;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPriority;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      InQuery;                                           // 0x0010(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_AddDataTableWithQuery) == 0x000008, "Wrong alignment on DynamicSkinTable_AddDataTableWithQuery");
static_assert(sizeof(DynamicSkinTable_AddDataTableWithQuery) == 0x000058, "Wrong size on DynamicSkinTable_AddDataTableWithQuery");
static_assert(offsetof(DynamicSkinTable_AddDataTableWithQuery, InTable) == 0x000000, "Member 'DynamicSkinTable_AddDataTableWithQuery::InTable' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_AddDataTableWithQuery, InPriority) == 0x000008, "Member 'DynamicSkinTable_AddDataTableWithQuery::InPriority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_AddDataTableWithQuery, InQuery) == 0x000010, "Member 'DynamicSkinTable_AddDataTableWithQuery::InQuery' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.RemoveDataTable
// 0x0008 (0x0008 - 0x0000)
struct DynamicSkinTable_RemoveDataTable final
{
public:
	class UDataTable*                             InTable;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_RemoveDataTable) == 0x000008, "Wrong alignment on DynamicSkinTable_RemoveDataTable");
static_assert(sizeof(DynamicSkinTable_RemoveDataTable) == 0x000008, "Wrong size on DynamicSkinTable_RemoveDataTable");
static_assert(offsetof(DynamicSkinTable_RemoveDataTable, InTable) == 0x000000, "Member 'DynamicSkinTable_RemoveDataTable::InTable' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.RemoveDataTables
// 0x0010 (0x0010 - 0x0000)
struct DynamicSkinTable_RemoveDataTables final
{
public:
	TArray<class UDataTable*>                     InTables;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_RemoveDataTables) == 0x000008, "Wrong alignment on DynamicSkinTable_RemoveDataTables");
static_assert(sizeof(DynamicSkinTable_RemoveDataTables) == 0x000010, "Wrong size on DynamicSkinTable_RemoveDataTables");
static_assert(offsetof(DynamicSkinTable_RemoveDataTables, InTables) == 0x000000, "Member 'DynamicSkinTable_RemoveDataTables::InTables' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAllKeywords
// 0x0050 (0x0050 - 0x0000)
struct DynamicSkinTable_GetAllKeywords final
{
public:
	TSet<struct FAssetRequestKey>                 InOutKeywords;                                     // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAllKeywords) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAllKeywords");
static_assert(sizeof(DynamicSkinTable_GetAllKeywords) == 0x000050, "Wrong size on DynamicSkinTable_GetAllKeywords");
static_assert(offsetof(DynamicSkinTable_GetAllKeywords, InOutKeywords) == 0x000000, "Member 'DynamicSkinTable_GetAllKeywords::InOutKeywords' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimAimOffset
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetAnimAimOffset final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAnimAimOffset) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAnimAimOffset");
static_assert(sizeof(DynamicSkinTable_GetAnimAimOffset) == 0x000028, "Wrong size on DynamicSkinTable_GetAnimAimOffset");
static_assert(offsetof(DynamicSkinTable_GetAnimAimOffset, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetAnimAimOffset::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimAimOffset, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetAnimAimOffset::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimAimOffset, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetAnimAimOffset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimationAsset
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetAnimationAsset final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAnimationAsset) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAnimationAsset");
static_assert(sizeof(DynamicSkinTable_GetAnimationAsset) == 0x000028, "Wrong size on DynamicSkinTable_GetAnimationAsset");
static_assert(offsetof(DynamicSkinTable_GetAnimationAsset, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetAnimationAsset::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimationAsset, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetAnimationAsset::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimationAsset, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetAnimationAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimBlendSpace
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetAnimBlendSpace final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAnimBlendSpace) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAnimBlendSpace");
static_assert(sizeof(DynamicSkinTable_GetAnimBlendSpace) == 0x000028, "Wrong size on DynamicSkinTable_GetAnimBlendSpace");
static_assert(offsetof(DynamicSkinTable_GetAnimBlendSpace, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetAnimBlendSpace::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimBlendSpace, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetAnimBlendSpace::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimBlendSpace, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetAnimBlendSpace::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimMontage
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetAnimMontage final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAnimMontage) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAnimMontage");
static_assert(sizeof(DynamicSkinTable_GetAnimMontage) == 0x000028, "Wrong size on DynamicSkinTable_GetAnimMontage");
static_assert(offsetof(DynamicSkinTable_GetAnimMontage, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetAnimMontage::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimMontage, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetAnimMontage::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimMontage, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetAnimMontage::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetAnimSequence
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetAnimSequence final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetAnimSequence) == 0x000008, "Wrong alignment on DynamicSkinTable_GetAnimSequence");
static_assert(sizeof(DynamicSkinTable_GetAnimSequence) == 0x000028, "Wrong size on DynamicSkinTable_GetAnimSequence");
static_assert(offsetof(DynamicSkinTable_GetAnimSequence, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetAnimSequence::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimSequence, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetAnimSequence::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetAnimSequence, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetAnimSequence::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetBool
// 0x0024 (0x0024 - 0x0000)
struct DynamicSkinTable_GetBool final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DynamicSkinTable_GetBool) == 0x000004, "Wrong alignment on DynamicSkinTable_GetBool");
static_assert(sizeof(DynamicSkinTable_GetBool) == 0x000024, "Wrong size on DynamicSkinTable_GetBool");
static_assert(offsetof(DynamicSkinTable_GetBool, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetBool::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetBool, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetBool::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetBool, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetBool::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetClass
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetClass final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetClass) == 0x000008, "Wrong alignment on DynamicSkinTable_GetClass");
static_assert(sizeof(DynamicSkinTable_GetClass) == 0x000028, "Wrong size on DynamicSkinTable_GetClass");
static_assert(offsetof(DynamicSkinTable_GetClass, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetClass::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetClass, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetClass::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetClass, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetClass::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetDataAsset
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetDataAsset final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetDataAsset) == 0x000008, "Wrong alignment on DynamicSkinTable_GetDataAsset");
static_assert(sizeof(DynamicSkinTable_GetDataAsset) == 0x000028, "Wrong size on DynamicSkinTable_GetDataAsset");
static_assert(offsetof(DynamicSkinTable_GetDataAsset, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetDataAsset::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetDataAsset, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetDataAsset::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetDataAsset, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetDataAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetFloat
// 0x0024 (0x0024 - 0x0000)
struct DynamicSkinTable_GetFloat final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetFloat) == 0x000004, "Wrong alignment on DynamicSkinTable_GetFloat");
static_assert(sizeof(DynamicSkinTable_GetFloat) == 0x000024, "Wrong size on DynamicSkinTable_GetFloat");
static_assert(offsetof(DynamicSkinTable_GetFloat, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetFloat::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetFloat, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetFloat::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetFloat, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetFloat::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetInt
// 0x0024 (0x0024 - 0x0000)
struct DynamicSkinTable_GetInt final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetInt) == 0x000004, "Wrong alignment on DynamicSkinTable_GetInt");
static_assert(sizeof(DynamicSkinTable_GetInt) == 0x000024, "Wrong size on DynamicSkinTable_GetInt");
static_assert(offsetof(DynamicSkinTable_GetInt, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetInt::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetInt, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetInt::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetInt, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetInt::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetLinearColor
// 0x0030 (0x0030 - 0x0000)
struct DynamicSkinTable_GetLinearColor final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetLinearColor) == 0x000004, "Wrong alignment on DynamicSkinTable_GetLinearColor");
static_assert(sizeof(DynamicSkinTable_GetLinearColor) == 0x000030, "Wrong size on DynamicSkinTable_GetLinearColor");
static_assert(offsetof(DynamicSkinTable_GetLinearColor, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetLinearColor::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetLinearColor, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetLinearColor::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetLinearColor, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetLinearColor::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetMaterialInterface
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetMaterialInterface final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetMaterialInterface) == 0x000008, "Wrong alignment on DynamicSkinTable_GetMaterialInterface");
static_assert(sizeof(DynamicSkinTable_GetMaterialInterface) == 0x000028, "Wrong size on DynamicSkinTable_GetMaterialInterface");
static_assert(offsetof(DynamicSkinTable_GetMaterialInterface, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetMaterialInterface::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetMaterialInterface, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetMaterialInterface::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetMaterialInterface, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetMaterialInterface::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetMetaSoundSource
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetMetaSoundSource final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMetaSoundSource*                       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetMetaSoundSource) == 0x000008, "Wrong alignment on DynamicSkinTable_GetMetaSoundSource");
static_assert(sizeof(DynamicSkinTable_GetMetaSoundSource) == 0x000028, "Wrong size on DynamicSkinTable_GetMetaSoundSource");
static_assert(offsetof(DynamicSkinTable_GetMetaSoundSource, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetMetaSoundSource::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetMetaSoundSource, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetMetaSoundSource::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetMetaSoundSource, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetMetaSoundSource::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetNameField
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetNameField final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetNameField) == 0x000004, "Wrong alignment on DynamicSkinTable_GetNameField");
static_assert(sizeof(DynamicSkinTable_GetNameField) == 0x000028, "Wrong size on DynamicSkinTable_GetNameField");
static_assert(offsetof(DynamicSkinTable_GetNameField, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetNameField::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetNameField, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetNameField::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetNameField, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetNameField::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetNiagaraSystem
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetNiagaraSystem final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetNiagaraSystem) == 0x000008, "Wrong alignment on DynamicSkinTable_GetNiagaraSystem");
static_assert(sizeof(DynamicSkinTable_GetNiagaraSystem) == 0x000028, "Wrong size on DynamicSkinTable_GetNiagaraSystem");
static_assert(offsetof(DynamicSkinTable_GetNiagaraSystem, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetNiagaraSystem::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetNiagaraSystem, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetNiagaraSystem::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetNiagaraSystem, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetNiagaraSystem::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetPhysicsAsset
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetPhysicsAsset final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetPhysicsAsset) == 0x000008, "Wrong alignment on DynamicSkinTable_GetPhysicsAsset");
static_assert(sizeof(DynamicSkinTable_GetPhysicsAsset) == 0x000028, "Wrong size on DynamicSkinTable_GetPhysicsAsset");
static_assert(offsetof(DynamicSkinTable_GetPhysicsAsset, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetPhysicsAsset::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetPhysicsAsset, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetPhysicsAsset::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetPhysicsAsset, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetPhysicsAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetPoseAsset
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetPoseAsset final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAsset*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetPoseAsset) == 0x000008, "Wrong alignment on DynamicSkinTable_GetPoseAsset");
static_assert(sizeof(DynamicSkinTable_GetPoseAsset) == 0x000028, "Wrong size on DynamicSkinTable_GetPoseAsset");
static_assert(offsetof(DynamicSkinTable_GetPoseAsset, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetPoseAsset::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetPoseAsset, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetPoseAsset::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetPoseAsset, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetPoseAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetSkeletalMesh
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetSkeletalMesh final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetSkeletalMesh) == 0x000008, "Wrong alignment on DynamicSkinTable_GetSkeletalMesh");
static_assert(sizeof(DynamicSkinTable_GetSkeletalMesh) == 0x000028, "Wrong size on DynamicSkinTable_GetSkeletalMesh");
static_assert(offsetof(DynamicSkinTable_GetSkeletalMesh, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetSkeletalMesh::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetSkeletalMesh, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetSkeletalMesh::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetSkeletalMesh, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetSkeletalMesh::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetStaticMesh
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetStaticMesh final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetStaticMesh) == 0x000008, "Wrong alignment on DynamicSkinTable_GetStaticMesh");
static_assert(sizeof(DynamicSkinTable_GetStaticMesh) == 0x000028, "Wrong size on DynamicSkinTable_GetStaticMesh");
static_assert(offsetof(DynamicSkinTable_GetStaticMesh, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetStaticMesh::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetStaticMesh, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetStaticMesh::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetStaticMesh, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetStaticMesh::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.GetTexture
// 0x0028 (0x0028 - 0x0000)
struct DynamicSkinTable_GetTexture final
{
public:
	struct FAssetRequestKey                       AssetRequestKey;                                   // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_GetTexture) == 0x000008, "Wrong alignment on DynamicSkinTable_GetTexture");
static_assert(sizeof(DynamicSkinTable_GetTexture) == 0x000028, "Wrong size on DynamicSkinTable_GetTexture");
static_assert(offsetof(DynamicSkinTable_GetTexture, AssetRequestKey) == 0x000000, "Member 'DynamicSkinTable_GetTexture::AssetRequestKey' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetTexture, Priority) == 0x00001C, "Member 'DynamicSkinTable_GetTexture::Priority' has a wrong offset!");
static_assert(offsetof(DynamicSkinTable_GetTexture, ReturnValue) == 0x000020, "Member 'DynamicSkinTable_GetTexture::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.DynamicSkinTable.IsTablePendingAssetLoad
// 0x0001 (0x0001 - 0x0000)
struct DynamicSkinTable_IsTablePendingAssetLoad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicSkinTable_IsTablePendingAssetLoad) == 0x000001, "Wrong alignment on DynamicSkinTable_IsTablePendingAssetLoad");
static_assert(sizeof(DynamicSkinTable_IsTablePendingAssetLoad) == 0x000001, "Wrong size on DynamicSkinTable_IsTablePendingAssetLoad");
static_assert(offsetof(DynamicSkinTable_IsTablePendingAssetLoad, ReturnValue) == 0x000000, "Member 'DynamicSkinTable_IsTablePendingAssetLoad::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.AddParent
// 0x0008 (0x0008 - 0x0000)
struct MultiSkinObject_AddParent final
{
public:
	class UMultiSkinObject*                       InParent;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_AddParent) == 0x000008, "Wrong alignment on MultiSkinObject_AddParent");
static_assert(sizeof(MultiSkinObject_AddParent) == 0x000008, "Wrong size on MultiSkinObject_AddParent");
static_assert(offsetof(MultiSkinObject_AddParent, InParent) == 0x000000, "Member 'MultiSkinObject_AddParent::InParent' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.RemoveParent
// 0x0008 (0x0008 - 0x0000)
struct MultiSkinObject_RemoveParent final
{
public:
	class UMultiSkinObject*                       InParent;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_RemoveParent) == 0x000008, "Wrong alignment on MultiSkinObject_RemoveParent");
static_assert(sizeof(MultiSkinObject_RemoveParent) == 0x000008, "Wrong size on MultiSkinObject_RemoveParent");
static_assert(offsetof(MultiSkinObject_RemoveParent, InParent) == 0x000000, "Member 'MultiSkinObject_RemoveParent::InParent' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.SubscribeToKeyword
// 0x001C (0x001C - 0x0000)
struct MultiSkinObject_SubscribeToKeyword final
{
public:
	struct FAssetRequestKey                       InKeyword;                                         // 0x0000(0x001C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_SubscribeToKeyword) == 0x000004, "Wrong alignment on MultiSkinObject_SubscribeToKeyword");
static_assert(sizeof(MultiSkinObject_SubscribeToKeyword) == 0x00001C, "Wrong size on MultiSkinObject_SubscribeToKeyword");
static_assert(offsetof(MultiSkinObject_SubscribeToKeyword, InKeyword) == 0x000000, "Member 'MultiSkinObject_SubscribeToKeyword::InKeyword' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.SubscribeToKeywords
// 0x0010 (0x0010 - 0x0000)
struct MultiSkinObject_SubscribeToKeywords final
{
public:
	TArray<struct FAssetRequestKey>               InKeywords;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_SubscribeToKeywords) == 0x000008, "Wrong alignment on MultiSkinObject_SubscribeToKeywords");
static_assert(sizeof(MultiSkinObject_SubscribeToKeywords) == 0x000010, "Wrong size on MultiSkinObject_SubscribeToKeywords");
static_assert(offsetof(MultiSkinObject_SubscribeToKeywords, InKeywords) == 0x000000, "Member 'MultiSkinObject_SubscribeToKeywords::InKeywords' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.UnsubscribeToKeyword
// 0x001C (0x001C - 0x0000)
struct MultiSkinObject_UnsubscribeToKeyword final
{
public:
	struct FAssetRequestKey                       InKeyword;                                         // 0x0000(0x001C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_UnsubscribeToKeyword) == 0x000004, "Wrong alignment on MultiSkinObject_UnsubscribeToKeyword");
static_assert(sizeof(MultiSkinObject_UnsubscribeToKeyword) == 0x00001C, "Wrong size on MultiSkinObject_UnsubscribeToKeyword");
static_assert(offsetof(MultiSkinObject_UnsubscribeToKeyword, InKeyword) == 0x000000, "Member 'MultiSkinObject_UnsubscribeToKeyword::InKeyword' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.UnsubscribeToKeywords
// 0x0010 (0x0010 - 0x0000)
struct MultiSkinObject_UnsubscribeToKeywords final
{
public:
	TArray<struct FAssetRequestKey>               InKeywords;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_UnsubscribeToKeywords) == 0x000008, "Wrong alignment on MultiSkinObject_UnsubscribeToKeywords");
static_assert(sizeof(MultiSkinObject_UnsubscribeToKeywords) == 0x000010, "Wrong size on MultiSkinObject_UnsubscribeToKeywords");
static_assert(offsetof(MultiSkinObject_UnsubscribeToKeywords, InKeywords) == 0x000000, "Member 'MultiSkinObject_UnsubscribeToKeywords::InKeywords' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAllSkinKeywords
// 0x0050 (0x0050 - 0x0000)
struct MultiSkinObject_GetAllSkinKeywords final
{
public:
	TSet<struct FAssetRequestKey>                 InOutKeywords;                                     // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetAllSkinKeywords) == 0x000008, "Wrong alignment on MultiSkinObject_GetAllSkinKeywords");
static_assert(sizeof(MultiSkinObject_GetAllSkinKeywords) == 0x000050, "Wrong size on MultiSkinObject_GetAllSkinKeywords");
static_assert(offsetof(MultiSkinObject_GetAllSkinKeywords, InOutKeywords) == 0x000000, "Member 'MultiSkinObject_GetAllSkinKeywords::InOutKeywords' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimAimOffset
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetAnimAimOffset final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetAnimAimOffset) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimAimOffset");
static_assert(sizeof(MultiSkinObject_GetAnimAimOffset) == 0x000028, "Wrong size on MultiSkinObject_GetAnimAimOffset");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffset, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimAimOffset::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffset, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimAimOffset::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffset, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetAnimAimOffset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimAimOffsetWithAdditionalInfo
// 0x0038 (0x0038 - 0x0000)
struct MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                   OutAsset;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetAdditionalInfo*               OutInfo;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo");
static_assert(sizeof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo) == 0x000038, "Wrong size on MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo, OutAsset) == 0x000020, "Member 'MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo::OutAsset' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo, OutInfo) == 0x000028, "Member 'MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo, ReturnValue) == 0x000030, "Member 'MultiSkinObject_GetAnimAimOffsetWithAdditionalInfo::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimBlendSpace
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetAnimBlendSpace final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetAnimBlendSpace) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimBlendSpace");
static_assert(sizeof(MultiSkinObject_GetAnimBlendSpace) == 0x000028, "Wrong size on MultiSkinObject_GetAnimBlendSpace");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpace, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimBlendSpace::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpace, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimBlendSpace::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpace, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetAnimBlendSpace::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimBlendSpaceWithAdditionalInfo
// 0x0038 (0x0038 - 0x0000)
struct MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            OutAsset;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceAdditionalInfo*              OutInfo;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo");
static_assert(sizeof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo) == 0x000038, "Wrong size on MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo, OutAsset) == 0x000020, "Member 'MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo::OutAsset' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo, OutInfo) == 0x000028, "Member 'MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo, ReturnValue) == 0x000030, "Member 'MultiSkinObject_GetAnimBlendSpaceWithAdditionalInfo::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimMontage
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetAnimMontage final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetAnimMontage) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimMontage");
static_assert(sizeof(MultiSkinObject_GetAnimMontage) == 0x000028, "Wrong size on MultiSkinObject_GetAnimMontage");
static_assert(offsetof(MultiSkinObject_GetAnimMontage, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimMontage::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontage, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimMontage::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontage, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetAnimMontage::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimMontageWithAdditionalInfo
// 0x0038 (0x0038 - 0x0000)
struct MultiSkinObject_GetAnimMontageWithAdditionalInfo final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           OutAsset;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontageAdditionalInfo*             OutInfo;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetAnimMontageWithAdditionalInfo) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimMontageWithAdditionalInfo");
static_assert(sizeof(MultiSkinObject_GetAnimMontageWithAdditionalInfo) == 0x000038, "Wrong size on MultiSkinObject_GetAnimMontageWithAdditionalInfo");
static_assert(offsetof(MultiSkinObject_GetAnimMontageWithAdditionalInfo, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimMontageWithAdditionalInfo::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontageWithAdditionalInfo, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimMontageWithAdditionalInfo::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontageWithAdditionalInfo, OutAsset) == 0x000020, "Member 'MultiSkinObject_GetAnimMontageWithAdditionalInfo::OutAsset' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontageWithAdditionalInfo, OutInfo) == 0x000028, "Member 'MultiSkinObject_GetAnimMontageWithAdditionalInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimMontageWithAdditionalInfo, ReturnValue) == 0x000030, "Member 'MultiSkinObject_GetAnimMontageWithAdditionalInfo::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimSequence
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetAnimSequence final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetAnimSequence) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimSequence");
static_assert(sizeof(MultiSkinObject_GetAnimSequence) == 0x000028, "Wrong size on MultiSkinObject_GetAnimSequence");
static_assert(offsetof(MultiSkinObject_GetAnimSequence, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimSequence::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequence, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimSequence::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequence, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetAnimSequence::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetAnimSequenceWithAdditionalInfo
// 0x0038 (0x0038 - 0x0000)
struct MultiSkinObject_GetAnimSequenceWithAdditionalInfo final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          OutAsset;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceAdditionalInfo*            OutInfo;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo) == 0x000008, "Wrong alignment on MultiSkinObject_GetAnimSequenceWithAdditionalInfo");
static_assert(sizeof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo) == 0x000038, "Wrong size on MultiSkinObject_GetAnimSequenceWithAdditionalInfo");
static_assert(offsetof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetAnimSequenceWithAdditionalInfo::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo, Priority) == 0x00001C, "Member 'MultiSkinObject_GetAnimSequenceWithAdditionalInfo::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo, OutAsset) == 0x000020, "Member 'MultiSkinObject_GetAnimSequenceWithAdditionalInfo::OutAsset' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo, OutInfo) == 0x000028, "Member 'MultiSkinObject_GetAnimSequenceWithAdditionalInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetAnimSequenceWithAdditionalInfo, ReturnValue) == 0x000030, "Member 'MultiSkinObject_GetAnimSequenceWithAdditionalInfo::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetBool
// 0x0024 (0x0024 - 0x0000)
struct MultiSkinObject_GetBool final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetBool) == 0x000004, "Wrong alignment on MultiSkinObject_GetBool");
static_assert(sizeof(MultiSkinObject_GetBool) == 0x000024, "Wrong size on MultiSkinObject_GetBool");
static_assert(offsetof(MultiSkinObject_GetBool, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetBool::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetBool, Priority) == 0x00001C, "Member 'MultiSkinObject_GetBool::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetBool, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetBool::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetClass
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetClass final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetClass) == 0x000008, "Wrong alignment on MultiSkinObject_GetClass");
static_assert(sizeof(MultiSkinObject_GetClass) == 0x000028, "Wrong size on MultiSkinObject_GetClass");
static_assert(offsetof(MultiSkinObject_GetClass, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetClass::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetClass, Priority) == 0x00001C, "Member 'MultiSkinObject_GetClass::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetClass, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetClass::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetDataAsset
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetDataAsset final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetDataAsset) == 0x000008, "Wrong alignment on MultiSkinObject_GetDataAsset");
static_assert(sizeof(MultiSkinObject_GetDataAsset) == 0x000028, "Wrong size on MultiSkinObject_GetDataAsset");
static_assert(offsetof(MultiSkinObject_GetDataAsset, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetDataAsset::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetDataAsset, Priority) == 0x00001C, "Member 'MultiSkinObject_GetDataAsset::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetDataAsset, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetDataAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetFloat
// 0x0024 (0x0024 - 0x0000)
struct MultiSkinObject_GetFloat final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetFloat) == 0x000004, "Wrong alignment on MultiSkinObject_GetFloat");
static_assert(sizeof(MultiSkinObject_GetFloat) == 0x000024, "Wrong size on MultiSkinObject_GetFloat");
static_assert(offsetof(MultiSkinObject_GetFloat, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetFloat::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetFloat, Priority) == 0x00001C, "Member 'MultiSkinObject_GetFloat::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetFloat, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetFloat::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetInt
// 0x0024 (0x0024 - 0x0000)
struct MultiSkinObject_GetInt final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetInt) == 0x000004, "Wrong alignment on MultiSkinObject_GetInt");
static_assert(sizeof(MultiSkinObject_GetInt) == 0x000024, "Wrong size on MultiSkinObject_GetInt");
static_assert(offsetof(MultiSkinObject_GetInt, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetInt::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetInt, Priority) == 0x00001C, "Member 'MultiSkinObject_GetInt::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetInt, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetInt::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetLinearColor
// 0x0030 (0x0030 - 0x0000)
struct MultiSkinObject_GetLinearColor final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetLinearColor) == 0x000004, "Wrong alignment on MultiSkinObject_GetLinearColor");
static_assert(sizeof(MultiSkinObject_GetLinearColor) == 0x000030, "Wrong size on MultiSkinObject_GetLinearColor");
static_assert(offsetof(MultiSkinObject_GetLinearColor, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetLinearColor::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetLinearColor, Priority) == 0x00001C, "Member 'MultiSkinObject_GetLinearColor::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetLinearColor, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetLinearColor::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetMaterialInterface
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetMaterialInterface final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetMaterialInterface) == 0x000008, "Wrong alignment on MultiSkinObject_GetMaterialInterface");
static_assert(sizeof(MultiSkinObject_GetMaterialInterface) == 0x000028, "Wrong size on MultiSkinObject_GetMaterialInterface");
static_assert(offsetof(MultiSkinObject_GetMaterialInterface, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetMaterialInterface::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetMaterialInterface, Priority) == 0x00001C, "Member 'MultiSkinObject_GetMaterialInterface::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetMaterialInterface, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetMaterialInterface::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetMetaSoundSource
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetMetaSoundSource final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMetaSoundSource*                       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetMetaSoundSource) == 0x000008, "Wrong alignment on MultiSkinObject_GetMetaSoundSource");
static_assert(sizeof(MultiSkinObject_GetMetaSoundSource) == 0x000028, "Wrong size on MultiSkinObject_GetMetaSoundSource");
static_assert(offsetof(MultiSkinObject_GetMetaSoundSource, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetMetaSoundSource::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetMetaSoundSource, Priority) == 0x00001C, "Member 'MultiSkinObject_GetMetaSoundSource::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetMetaSoundSource, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetMetaSoundSource::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetNameField
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetNameField final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetNameField) == 0x000004, "Wrong alignment on MultiSkinObject_GetNameField");
static_assert(sizeof(MultiSkinObject_GetNameField) == 0x000028, "Wrong size on MultiSkinObject_GetNameField");
static_assert(offsetof(MultiSkinObject_GetNameField, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetNameField::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetNameField, Priority) == 0x00001C, "Member 'MultiSkinObject_GetNameField::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetNameField, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetNameField::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetNiagaraSystem
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetNiagaraSystem final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetNiagaraSystem) == 0x000008, "Wrong alignment on MultiSkinObject_GetNiagaraSystem");
static_assert(sizeof(MultiSkinObject_GetNiagaraSystem) == 0x000028, "Wrong size on MultiSkinObject_GetNiagaraSystem");
static_assert(offsetof(MultiSkinObject_GetNiagaraSystem, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetNiagaraSystem::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetNiagaraSystem, Priority) == 0x00001C, "Member 'MultiSkinObject_GetNiagaraSystem::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetNiagaraSystem, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetNiagaraSystem::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetPhysicsAsset
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetPhysicsAsset final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetPhysicsAsset) == 0x000008, "Wrong alignment on MultiSkinObject_GetPhysicsAsset");
static_assert(sizeof(MultiSkinObject_GetPhysicsAsset) == 0x000028, "Wrong size on MultiSkinObject_GetPhysicsAsset");
static_assert(offsetof(MultiSkinObject_GetPhysicsAsset, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetPhysicsAsset::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPhysicsAsset, Priority) == 0x00001C, "Member 'MultiSkinObject_GetPhysicsAsset::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPhysicsAsset, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetPhysicsAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetPoseAsset
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetPoseAsset final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAsset*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetPoseAsset) == 0x000008, "Wrong alignment on MultiSkinObject_GetPoseAsset");
static_assert(sizeof(MultiSkinObject_GetPoseAsset) == 0x000028, "Wrong size on MultiSkinObject_GetPoseAsset");
static_assert(offsetof(MultiSkinObject_GetPoseAsset, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetPoseAsset::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAsset, Priority) == 0x00001C, "Member 'MultiSkinObject_GetPoseAsset::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAsset, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetPoseAsset::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetPoseAssetWithAdditionalInfo
// 0x0038 (0x0038 - 0x0000)
struct MultiSkinObject_GetPoseAssetWithAdditionalInfo final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAsset*                             OutAsset;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoseAssetAdditionalInfo*               OutInfo;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiSkinObject_GetPoseAssetWithAdditionalInfo) == 0x000008, "Wrong alignment on MultiSkinObject_GetPoseAssetWithAdditionalInfo");
static_assert(sizeof(MultiSkinObject_GetPoseAssetWithAdditionalInfo) == 0x000038, "Wrong size on MultiSkinObject_GetPoseAssetWithAdditionalInfo");
static_assert(offsetof(MultiSkinObject_GetPoseAssetWithAdditionalInfo, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetPoseAssetWithAdditionalInfo::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAssetWithAdditionalInfo, Priority) == 0x00001C, "Member 'MultiSkinObject_GetPoseAssetWithAdditionalInfo::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAssetWithAdditionalInfo, OutAsset) == 0x000020, "Member 'MultiSkinObject_GetPoseAssetWithAdditionalInfo::OutAsset' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAssetWithAdditionalInfo, OutInfo) == 0x000028, "Member 'MultiSkinObject_GetPoseAssetWithAdditionalInfo::OutInfo' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetPoseAssetWithAdditionalInfo, ReturnValue) == 0x000030, "Member 'MultiSkinObject_GetPoseAssetWithAdditionalInfo::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetSkeletalMesh
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetSkeletalMesh final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetSkeletalMesh) == 0x000008, "Wrong alignment on MultiSkinObject_GetSkeletalMesh");
static_assert(sizeof(MultiSkinObject_GetSkeletalMesh) == 0x000028, "Wrong size on MultiSkinObject_GetSkeletalMesh");
static_assert(offsetof(MultiSkinObject_GetSkeletalMesh, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetSkeletalMesh::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetSkeletalMesh, Priority) == 0x00001C, "Member 'MultiSkinObject_GetSkeletalMesh::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetSkeletalMesh, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetSkeletalMesh::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetStaticMesh
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetStaticMesh final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetStaticMesh) == 0x000008, "Wrong alignment on MultiSkinObject_GetStaticMesh");
static_assert(sizeof(MultiSkinObject_GetStaticMesh) == 0x000028, "Wrong size on MultiSkinObject_GetStaticMesh");
static_assert(offsetof(MultiSkinObject_GetStaticMesh, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetStaticMesh::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetStaticMesh, Priority) == 0x00001C, "Member 'MultiSkinObject_GetStaticMesh::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetStaticMesh, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetStaticMesh::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.MultiSkinObject.GetTexture
// 0x0028 (0x0028 - 0x0000)
struct MultiSkinObject_GetTexture final
{
public:
	struct FAssetRequestKey                       RequestKey;                                        // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiSkinObject_GetTexture) == 0x000008, "Wrong alignment on MultiSkinObject_GetTexture");
static_assert(sizeof(MultiSkinObject_GetTexture) == 0x000028, "Wrong size on MultiSkinObject_GetTexture");
static_assert(offsetof(MultiSkinObject_GetTexture, RequestKey) == 0x000000, "Member 'MultiSkinObject_GetTexture::RequestKey' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetTexture, Priority) == 0x00001C, "Member 'MultiSkinObject_GetTexture::Priority' has a wrong offset!");
static_assert(offsetof(MultiSkinObject_GetTexture, ReturnValue) == 0x000020, "Member 'MultiSkinObject_GetTexture::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.StaticSetForcedLOD
// 0x0010 (0x0010 - 0x0000)
struct SkinnableSkeletalMeshComponent_StaticSetForcedLOD final
{
public:
	class USkinnedMeshComponent*                  InMeshComp;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InForcedLOD;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableSkeletalMeshComponent_StaticSetForcedLOD) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_StaticSetForcedLOD");
static_assert(sizeof(SkinnableSkeletalMeshComponent_StaticSetForcedLOD) == 0x000010, "Wrong size on SkinnableSkeletalMeshComponent_StaticSetForcedLOD");
static_assert(offsetof(SkinnableSkeletalMeshComponent_StaticSetForcedLOD, InMeshComp) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_StaticSetForcedLOD::InMeshComp' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_StaticSetForcedLOD, InForcedLOD) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_StaticSetForcedLOD::InForcedLOD' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentMaterialOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById");
static_assert(sizeof(SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById, ParameterId) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById, MaterialInterface) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById, ReturnValue) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentMaterialOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentScalarOverrideById
// 0x000C (0x000C - 0x0000)
struct SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById");
static_assert(sizeof(SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById) == 0x00000C, "Wrong size on SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById, ParameterId) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById, ParameterValue) == 0x000004, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById, ReturnValue) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentScalarOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentTextureOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ParameterValue;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById");
static_assert(sizeof(SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById, ParameterId) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById, ParameterValue) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById, ReturnValue) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentTextureOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.ChangePersistentVectorOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x0004(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById");
static_assert(sizeof(SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById, ParameterId) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById, ParameterValue) == 0x000004, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById, ReturnValue) == 0x000014, "Member 'SkinnableSkeletalMeshComponent_ChangePersistentVectorOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.RemovePersistentMaterialParameter
// 0x0004 (0x0004 - 0x0000)
struct SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter");
static_assert(sizeof(SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter) == 0x000004, "Wrong size on SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter");
static_assert(offsetof(SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter, ParameterId) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_RemovePersistentMaterialParameter::ParameterId' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetAnimClassKeyword
// 0x0010 (0x0010 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetAnimClassKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              InFailSafeAnimClass;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetAnimClassKeyword) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetAnimClassKeyword");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetAnimClassKeyword) == 0x000010, "Wrong size on SkinnableSkeletalMeshComponent_SetAnimClassKeyword");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetAnimClassKeyword, InKeyword) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetAnimClassKeyword::InKeyword' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetAnimClassKeyword, InFailSafeAnimClass) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetAnimClassKeyword::InFailSafeAnimClass' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetForcedLOD_Skinned
// 0x0004 (0x0004 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned final
{
public:
	int32                                         InNewForcedLOD;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned) == 0x000004, "Wrong size on SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned, InNewForcedLOD) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetForcedLOD_Skinned::InNewForcedLOD' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentMaterialOverride
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride, MaterialSlot) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride, MaterialInterface) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride, bForceNewOverride) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride, ReturnValue) == 0x000014, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverride::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentMaterialOverrideOnAllSlots
// 0x0010 (0x0010 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots final
{
public:
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots) == 0x000010, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots, MaterialInterface) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots, bForceNewOverride) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots, ReturnValue) == 0x00000C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentMaterialOverrideOnAllSlots::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentScalarParameter
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentScalarParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentScalarParameter");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentScalarParameter");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter, MaterialSlot) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter, ParameterName) == 0x000004, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter, ParameterValue) == 0x00000C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter, bForceNewOverride) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameter, ReturnValue) == 0x000014, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentScalarParameterOnAllMaterials
// 0x0014 (0x0014 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials) == 0x000014, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials, bForceNewOverride) == 0x00000C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials, ReturnValue) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_SetPersistentScalarParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentTextureParameter
// 0x0020 (0x0020 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentTextureParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ParameterValue;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentTextureParameter");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter) == 0x000020, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentTextureParameter");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter, MaterialSlot) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter, ParameterName) == 0x000004, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter, ParameterValue) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter, bForceNewOverride) == 0x000018, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameter, ReturnValue) == 0x00001C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentTextureParameterOnAllMaterials
// 0x0018 (0x0018 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               ParameterValue;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials) == 0x000018, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials, bForceNewOverride) == 0x000010, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials, ReturnValue) == 0x000014, "Member 'SkinnableSkeletalMeshComponent_SetPersistentTextureParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentVectorParameter
// 0x0024 (0x0024 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentVectorParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x000C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentVectorParameter");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter) == 0x000024, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentVectorParameter");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter, MaterialSlot) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter, ParameterName) == 0x000004, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter, ParameterValue) == 0x00000C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter, bForceNewOverride) == 0x00001C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameter, ReturnValue) == 0x000020, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPersistentVectorParameterOnAllMaterials
// 0x0020 (0x0020 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials) == 0x000004, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials) == 0x000020, "Wrong size on SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials, bForceNewOverride) == 0x000018, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials, ReturnValue) == 0x00001C, "Member 'SkinnableSkeletalMeshComponent_SetPersistentVectorParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetPhysicsAssetKeyword
// 0x0010 (0x0010 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          InFailSafePhysicsAsset;                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword) == 0x000010, "Wrong size on SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword, InKeyword) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword::InKeyword' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword, InFailSafePhysicsAsset) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetPhysicsAssetKeyword::InFailSafePhysicsAsset' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.SetSkeletalMeshKeyword
// 0x0010 (0x0010 - 0x0000)
struct SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          InFailSafeSkeletalMesh;                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword");
static_assert(sizeof(SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword) == 0x000010, "Wrong size on SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword, InKeyword) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword::InKeyword' has a wrong offset!");
static_assert(offsetof(SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword, InFailSafeSkeletalMesh) == 0x000008, "Member 'SkinnableSkeletalMeshComponent_SetSkeletalMeshKeyword::InFailSafeSkeletalMesh' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableSkeletalMeshComponent.GetSkinObject
// 0x0008 (0x0008 - 0x0000)
struct SkinnableSkeletalMeshComponent_GetSkinObject final
{
public:
	class UMultiSkinObject*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableSkeletalMeshComponent_GetSkinObject) == 0x000008, "Wrong alignment on SkinnableSkeletalMeshComponent_GetSkinObject");
static_assert(sizeof(SkinnableSkeletalMeshComponent_GetSkinObject) == 0x000008, "Wrong size on SkinnableSkeletalMeshComponent_GetSkinObject");
static_assert(offsetof(SkinnableSkeletalMeshComponent_GetSkinObject, ReturnValue) == 0x000000, "Member 'SkinnableSkeletalMeshComponent_GetSkinObject::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.AddSkeletalMeshKeyword
// 0x0008 (0x0008 - 0x0000)
struct SkinnableMergedMeshComponent_AddSkeletalMeshKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableMergedMeshComponent_AddSkeletalMeshKeyword) == 0x000004, "Wrong alignment on SkinnableMergedMeshComponent_AddSkeletalMeshKeyword");
static_assert(sizeof(SkinnableMergedMeshComponent_AddSkeletalMeshKeyword) == 0x000008, "Wrong size on SkinnableMergedMeshComponent_AddSkeletalMeshKeyword");
static_assert(offsetof(SkinnableMergedMeshComponent_AddSkeletalMeshKeyword, InKeyword) == 0x000000, "Member 'SkinnableMergedMeshComponent_AddSkeletalMeshKeyword::InKeyword' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.RemoveSkeletalMeshKeyword
// 0x0008 (0x0008 - 0x0000)
struct SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword) == 0x000004, "Wrong alignment on SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword");
static_assert(sizeof(SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword) == 0x000008, "Wrong size on SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword");
static_assert(offsetof(SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword, InKeyword) == 0x000000, "Member 'SkinnableMergedMeshComponent_RemoveSkeletalMeshKeyword::InKeyword' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableMergedMeshComponent.SetSkeletalMeshKeywords
// 0x0018 (0x0018 - 0x0000)
struct SkinnableMergedMeshComponent_SetSkeletalMeshKeywords final
{
public:
	TArray<class FName>                           InKeywords;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          InFailSafeSkeletalMesh;                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableMergedMeshComponent_SetSkeletalMeshKeywords) == 0x000008, "Wrong alignment on SkinnableMergedMeshComponent_SetSkeletalMeshKeywords");
static_assert(sizeof(SkinnableMergedMeshComponent_SetSkeletalMeshKeywords) == 0x000018, "Wrong size on SkinnableMergedMeshComponent_SetSkeletalMeshKeywords");
static_assert(offsetof(SkinnableMergedMeshComponent_SetSkeletalMeshKeywords, InKeywords) == 0x000000, "Member 'SkinnableMergedMeshComponent_SetSkeletalMeshKeywords::InKeywords' has a wrong offset!");
static_assert(offsetof(SkinnableMergedMeshComponent_SetSkeletalMeshKeywords, InFailSafeSkeletalMesh) == 0x000010, "Member 'SkinnableMergedMeshComponent_SetSkeletalMeshKeywords::InFailSafeSkeletalMesh' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentMaterialOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById");
static_assert(sizeof(SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById, ParameterId) == 0x000000, "Member 'SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById, MaterialInterface) == 0x000008, "Member 'SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById, ReturnValue) == 0x000010, "Member 'SkinnableStaticMeshComponent_ChangePersistentMaterialOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentScalarOverrideById
// 0x000C (0x000C - 0x0000)
struct SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById");
static_assert(sizeof(SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById) == 0x00000C, "Wrong size on SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById, ParameterId) == 0x000000, "Member 'SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById, ParameterValue) == 0x000004, "Member 'SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById, ReturnValue) == 0x000008, "Member 'SkinnableStaticMeshComponent_ChangePersistentScalarOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentTextureOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ParameterValue;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById");
static_assert(sizeof(SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById, ParameterId) == 0x000000, "Member 'SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById, ParameterValue) == 0x000008, "Member 'SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById, ReturnValue) == 0x000010, "Member 'SkinnableStaticMeshComponent_ChangePersistentTextureOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.ChangePersistentVectorOverrideById
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x0004(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById");
static_assert(sizeof(SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById, ParameterId) == 0x000000, "Member 'SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById::ParameterId' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById, ParameterValue) == 0x000004, "Member 'SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById, ReturnValue) == 0x000014, "Member 'SkinnableStaticMeshComponent_ChangePersistentVectorOverrideById::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.RemovePersistentMaterialParameter
// 0x0004 (0x0004 - 0x0000)
struct SkinnableStaticMeshComponent_RemovePersistentMaterialParameter final
{
public:
	int32                                         ParameterId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_RemovePersistentMaterialParameter) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_RemovePersistentMaterialParameter");
static_assert(sizeof(SkinnableStaticMeshComponent_RemovePersistentMaterialParameter) == 0x000004, "Wrong size on SkinnableStaticMeshComponent_RemovePersistentMaterialParameter");
static_assert(offsetof(SkinnableStaticMeshComponent_RemovePersistentMaterialParameter, ParameterId) == 0x000000, "Member 'SkinnableStaticMeshComponent_RemovePersistentMaterialParameter::ParameterId' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentMaterialOverride
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentMaterialOverride final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentMaterialOverride");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_SetPersistentMaterialOverride");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride, MaterialSlot) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverride::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride, MaterialInterface) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverride::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride, bForceNewOverride) == 0x000010, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverride::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverride, ReturnValue) == 0x000014, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverride::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentMaterialOverrideOnAllSlots
// 0x0010 (0x0010 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots final
{
public:
	class UMaterialInterface*                     MaterialInterface;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots) == 0x000010, "Wrong size on SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots, MaterialInterface) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots::MaterialInterface' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots, bForceNewOverride) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots, ReturnValue) == 0x00000C, "Member 'SkinnableStaticMeshComponent_SetPersistentMaterialOverrideOnAllSlots::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentScalarParameter
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentScalarParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentScalarParameter) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentScalarParameter");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentScalarParameter) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_SetPersistentScalarParameter");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameter, MaterialSlot) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameter, ParameterName) == 0x000004, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameter, ParameterValue) == 0x00000C, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameter, bForceNewOverride) == 0x000010, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameter, ReturnValue) == 0x000014, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentScalarParameterOnAllMaterials
// 0x0014 (0x0014 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials) == 0x000014, "Wrong size on SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials, bForceNewOverride) == 0x00000C, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials, ReturnValue) == 0x000010, "Member 'SkinnableStaticMeshComponent_SetPersistentScalarParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentTextureParameter
// 0x0020 (0x0020 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentTextureParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ParameterValue;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentTextureParameter) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentTextureParameter");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentTextureParameter) == 0x000020, "Wrong size on SkinnableStaticMeshComponent_SetPersistentTextureParameter");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameter, MaterialSlot) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameter, ParameterName) == 0x000004, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameter, ParameterValue) == 0x000010, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameter, bForceNewOverride) == 0x000018, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameter, ReturnValue) == 0x00001C, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentTextureParameterOnAllMaterials
// 0x0018 (0x0018 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               ParameterValue;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials) == 0x000018, "Wrong size on SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials, bForceNewOverride) == 0x000010, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials, ReturnValue) == 0x000014, "Member 'SkinnableStaticMeshComponent_SetPersistentTextureParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentVectorParameter
// 0x0024 (0x0024 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentVectorParameter final
{
public:
	int32                                         MaterialSlot;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x000C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentVectorParameter) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentVectorParameter");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentVectorParameter) == 0x000024, "Wrong size on SkinnableStaticMeshComponent_SetPersistentVectorParameter");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameter, MaterialSlot) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameter::MaterialSlot' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameter, ParameterName) == 0x000004, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameter, ParameterValue) == 0x00000C, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameter, bForceNewOverride) == 0x00001C, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameter::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameter, ReturnValue) == 0x000020, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameter::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetPersistentVectorParameterOnAllMaterials
// 0x0020 (0x0020 - 0x0000)
struct SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNewOverride;                                 // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials) == 0x000004, "Wrong alignment on SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials");
static_assert(sizeof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials) == 0x000020, "Wrong size on SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials, ParameterName) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials, ParameterValue) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials::ParameterValue' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials, bForceNewOverride) == 0x000018, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials::bForceNewOverride' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials, ReturnValue) == 0x00001C, "Member 'SkinnableStaticMeshComponent_SetPersistentVectorParameterOnAllMaterials::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.SetStaticMeshKeyword
// 0x0010 (0x0010 - 0x0000)
struct SkinnableStaticMeshComponent_SetStaticMeshKeyword final
{
public:
	class FName                                   InKeyword;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            InFailSafeStaticMesh;                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_SetStaticMeshKeyword) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_SetStaticMeshKeyword");
static_assert(sizeof(SkinnableStaticMeshComponent_SetStaticMeshKeyword) == 0x000010, "Wrong size on SkinnableStaticMeshComponent_SetStaticMeshKeyword");
static_assert(offsetof(SkinnableStaticMeshComponent_SetStaticMeshKeyword, InKeyword) == 0x000000, "Member 'SkinnableStaticMeshComponent_SetStaticMeshKeyword::InKeyword' has a wrong offset!");
static_assert(offsetof(SkinnableStaticMeshComponent_SetStaticMeshKeyword, InFailSafeStaticMesh) == 0x000008, "Member 'SkinnableStaticMeshComponent_SetStaticMeshKeyword::InFailSafeStaticMesh' has a wrong offset!");

// Function DataTableSkinsCommon.SkinnableStaticMeshComponent.GetSkinObject
// 0x0008 (0x0008 - 0x0000)
struct SkinnableStaticMeshComponent_GetSkinObject final
{
public:
	class UMultiSkinObject*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnableStaticMeshComponent_GetSkinObject) == 0x000008, "Wrong alignment on SkinnableStaticMeshComponent_GetSkinObject");
static_assert(sizeof(SkinnableStaticMeshComponent_GetSkinObject) == 0x000008, "Wrong size on SkinnableStaticMeshComponent_GetSkinObject");
static_assert(offsetof(SkinnableStaticMeshComponent_GetSkinObject, ReturnValue) == 0x000000, "Member 'SkinnableStaticMeshComponent_GetSkinObject::ReturnValue' has a wrong offset!");

// Function DataTableSkinsCommon.SkinTagAssetInterface.HandleOnNewSkinTagAsset
// 0x0010 (0x0010 - 0x0000)
struct SkinTagAssetInterface_HandleOnNewSkinTagAsset final
{
public:
	TScriptInterface<class ISkinTagAssetInterface> NewSkinTagAsset;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinTagAssetInterface_HandleOnNewSkinTagAsset) == 0x000008, "Wrong alignment on SkinTagAssetInterface_HandleOnNewSkinTagAsset");
static_assert(sizeof(SkinTagAssetInterface_HandleOnNewSkinTagAsset) == 0x000010, "Wrong size on SkinTagAssetInterface_HandleOnNewSkinTagAsset");
static_assert(offsetof(SkinTagAssetInterface_HandleOnNewSkinTagAsset, NewSkinTagAsset) == 0x000000, "Member 'SkinTagAssetInterface_HandleOnNewSkinTagAsset::NewSkinTagAsset' has a wrong offset!");

// Function DataTableSkinsCommon.SkinTagAssetInterface.HandleOnSkinTagAssetRemoved
// 0x0010 (0x0010 - 0x0000)
struct SkinTagAssetInterface_HandleOnSkinTagAssetRemoved final
{
public:
	TScriptInterface<class ISkinTagAssetInterface> SkinTagAssetToRemove;                             // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinTagAssetInterface_HandleOnSkinTagAssetRemoved) == 0x000008, "Wrong alignment on SkinTagAssetInterface_HandleOnSkinTagAssetRemoved");
static_assert(sizeof(SkinTagAssetInterface_HandleOnSkinTagAssetRemoved) == 0x000010, "Wrong size on SkinTagAssetInterface_HandleOnSkinTagAssetRemoved");
static_assert(offsetof(SkinTagAssetInterface_HandleOnSkinTagAssetRemoved, SkinTagAssetToRemove) == 0x000000, "Member 'SkinTagAssetInterface_HandleOnSkinTagAssetRemoved::SkinTagAssetToRemove' has a wrong offset!");

}

