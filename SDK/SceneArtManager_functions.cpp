#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SceneArtManager

#include "Basic.hpp"

#include "SceneArtManager_classes.hpp"
#include "SceneArtManager_parameters.hpp"


namespace SDK
{

// Function SceneArtManager.SceneArtManager_C.TransitionToNewPlate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                NewMaterialInstance                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASceneArtManager_C::TransitionToNewPlate(class UMaterialInstance* NewMaterialInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "TransitionToNewPlate");

	Params::SceneArtManager_C_TransitionToNewPlate Parms{};

	Parms.NewMaterialInstance = NewMaterialInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.TransitionNewMatCollectionTreatment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MaterialCollectionParam                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASceneArtManager_C::TransitionNewMatCollectionTreatment(const class FString& MaterialCollectionParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "TransitionNewMatCollectionTreatment");

	Params::SceneArtManager_C_TransitionNewMatCollectionTreatment Parms{};

	Parms.MaterialCollectionParam = std::move(MaterialCollectionParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ASceneArtManager_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SceneArtManager.SceneArtManager_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ASceneArtManager_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SceneArtManager.SceneArtManager_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ASceneArtManager_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SceneArtManager.SceneArtManager_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ASceneArtManager_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SceneArtManager.SceneArtManager_C.SetPlate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                NewMaterialInstance                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASceneArtManager_C::SetPlate(class UMaterialInstance* NewMaterialInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "SetPlate");

	Params::SceneArtManager_C_SetPlate Parms{};

	Parms.NewMaterialInstance = NewMaterialInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.SetMaterialCollection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MaterialCollectionParam                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASceneArtManager_C::SetMaterialCollection(const class FString& MaterialCollectionParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "SetMaterialCollection");

	Params::SceneArtManager_C_SetMaterialCollection Parms{};

	Parms.MaterialCollectionParam = std::move(MaterialCollectionParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.SetMatCollection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialParameterCollection*     MatCollection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             ParamOn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ParamOff                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASceneArtManager_C::SetMatCollection(class UMaterialParameterCollection* MatCollection, class FName ParamOn, class FName ParamOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "SetMatCollection");

	Params::SceneArtManager_C_SetMatCollection Parms{};

	Parms.MatCollection = MatCollection;
	Parms.ParamOn = ParamOn;
	Parms.ParamOff = ParamOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASceneArtManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SceneArtManager.SceneArtManager_C.ExecuteUbergraph_SceneArtManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASceneArtManager_C::ExecuteUbergraph_SceneArtManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "ExecuteUbergraph_SceneArtManager");

	Params::SceneArtManager_C_ExecuteUbergraph_SceneArtManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SceneArtManager.SceneArtManager_C.DefaultPlate
// (BlueprintCallable, BlueprintEvent)

void ASceneArtManager_C::DefaultPlate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneArtManager_C", "DefaultPlate");

	UObject::ProcessEvent(Func, nullptr);
}

}

