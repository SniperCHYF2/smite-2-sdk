#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIFunctionLibrary

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_classes.hpp"
#include "Hemingway_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass UIFunctionLibrary.UIFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UUIFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void FormatSecondsToHighestTimerText(int64 Seconds, const class FText& WeekOverride, const class FText& WeeksOverride, const class FText& DayOverride, const class FText& DaysOverride, const class FText& HourOverride, const class FText& HoursOverride, bool UseOverrides, class UObject* __WorldContext, class FText* Timer_Text);
	static void FormatSecondsToTimerText(double Seconds, int32 Minute_Digits, bool ShowTenths, class UObject* __WorldContext, class FText* Timer_Text);
	static void GetCharacterRoleDescription(ECharacterRole CharacterRole, class UObject* __WorldContext, class FText* SoftIcon);
	static void GetCharacterRoleIcon(ECharacterRole CharacterRole, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon);
	static void GetCharacterRoleIconSmall(ECharacterRole CharacterRole, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon);
	static void GetCharacterRoleName(ECharacterRole CharacterRole, class UObject* __WorldContext, class FText* SoftIcon);
	static void GetColorByName(class FName ColorName, class UObject* __WorldContext, bool* HasFound, struct FLinearColor* Color);
	static void GetEnemyColor(class UObject* __WorldContext, struct FLinearColor* Return_Value);
	static void GetFontByName(class FName FontName, class UObject* __WorldContext, bool* HasFound, struct FSlateFontInfo* FontInfo);
	static void GetFormattedTimeSpan(struct FTimespan& Timespan, bool Shorthand, class UObject* __WorldContext, class FText* Text);
	static void GetFormattedTimeSpanFirstValue(struct FTimespan& Timespan, bool Shorthand, class UObject* __WorldContext, class FText* Text);
	static void GetFriendlyColor(class UObject* __WorldContext, struct FLinearColor* Return_Value);
	static void GetGameModeDescription(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, class FText* GameModeDesc);
	static void GetGameModeIcon(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon);
	static void GetGameModeName(const struct FGameplayTag& GameModeTag, class UObject* __WorldContext, class FText* GameModeName);
	static void GetHUDCommon(class UObject* __WorldContext, class ARHHUDCommon** HUD_Common);
	static void GetIconForGamepadButton(const struct FKey& Button, class UObject* __WorldContext, class UTexture2D** Icon);
	static void GetInputTypeIcon(uint8 InputType, class UObject* __WorldContext, class UTexture2D** Texture);
	static void GetItemType(class UPlatformInventoryItem* InventoryItem, class UObject* __WorldContext, class FText* ItemType);
	static void GetPlatformIconByDisplayType(ERHPlatformDisplayType Platform, class UObject* __WorldContext, class UTexture2D** Icon);
	static void GetPlatformViewProfileText(class UObject* __WorldContext, class FText* Return_Value);
	static void GetS1MasteryNum(int32 MasteryRank, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* SoftIcon);
	static void GetSettingsDataFactory(class UObject* __WorldContext, class URHSettingsDataFactory** SettingsDataFactory);
	static void GetTeamColor(int32 TeamNum, int32 OwningPlayerNum, class UObject* __WorldContext, struct FLinearColor* Team_Color, bool* Found_Color);
	static void GetTeamName(int32 TeamNum, bool Abbreviate, class UObject* __WorldContext, class FText* TeamName);
	static void IsLocalActionSaved(class FName ActionName, class UObject* __WorldContext, bool* ActionSaved);
	static void SaveLocalAction(class FName ActionName, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIFunctionLibrary_C">();
	}
	static class UUIFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFunctionLibrary_C>();
	}
};
static_assert(alignof(UUIFunctionLibrary_C) == 0x000008, "Wrong alignment on UUIFunctionLibrary_C");
static_assert(sizeof(UUIFunctionLibrary_C) == 0x000028, "Wrong size on UUIFunctionLibrary_C");

}

