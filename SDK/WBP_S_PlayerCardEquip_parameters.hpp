#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_PlayerCardEquip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.DisplayBadgeEquipPreview
// 0x0038 (0x0038 - 0x0000)
struct WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview final
{
public:
	TArray<class UHWCollectionItem*>              InBadgeItems;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UHWCollectionItem*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      CallFunc_Array_Get_Item_2;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview) == 0x000008, "Wrong alignment on WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview) == 0x000038, "Wrong size on WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, InBadgeItems) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::InBadgeItems' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_Array_Get_Item_2) == 0x000028, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'WBP_S_PlayerCardEquip_C_DisplayBadgeEquipPreview::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.DisplayTrackerEquipPreview
// 0x0030 (0x0030 - 0x0000)
struct WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview final
{
public:
	TArray<class UHWCollectionItem*>              InTrackerItems;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UHWCollectionItem*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWCollectionItem*                      CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview) == 0x000008, "Wrong alignment on WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview) == 0x000030, "Wrong size on WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview, InTrackerItems) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview::InTrackerItems' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_S_PlayerCardEquip_C_DisplayTrackerEquipPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.ExecuteUbergraph_WBP_S_PlayerCardEquip
// 0x001C (0x001C - 0x0000)
struct WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip) == 0x000004, "Wrong alignment on WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip) == 0x00001C, "Wrong size on WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip, EntryPoint) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip, CallFunc_GetCurrentInputState_ReturnValue) == 0x000018, "Member 'WBP_S_PlayerCardEquip_C_ExecuteUbergraph_WBP_S_PlayerCardEquip::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.HandleInputStateChanged
// 0x0006 (0x0006 - 0x0000)
struct WBP_S_PlayerCardEquip_C_HandleInputStateChanged final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged) == 0x000001, "Wrong alignment on WBP_S_PlayerCardEquip_C_HandleInputStateChanged");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged) == 0x000006, "Wrong size on WBP_S_PlayerCardEquip_C_HandleInputStateChanged");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, InputState) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::InputState' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, Temp_byte_Variable) == 0x000003, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_HandleInputStateChanged, K2Node_Select_Default) == 0x000005, "Member 'WBP_S_PlayerCardEquip_C_HandleInputStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_PlayerCardEquip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_PlayerCardEquip_C_PreConstruct");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_PlayerCardEquip_C_PreConstruct");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.SetGodLoadout
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_PlayerCardEquip_C_SetGodLoadout final
{
public:
	const class UHWCharacterItem*                 InGodItem;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_SetGodLoadout) == 0x000008, "Wrong alignment on WBP_S_PlayerCardEquip_C_SetGodLoadout");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_SetGodLoadout) == 0x000008, "Wrong size on WBP_S_PlayerCardEquip_C_SetGodLoadout");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_SetGodLoadout, InGodItem) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_SetGodLoadout::InGodItem' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.UpdateEquipState
// 0x002C (0x002C - 0x0000)
struct WBP_S_PlayerCardEquip_C_UpdateEquipState final
{
public:
	EHWPlayerCardEquipState                       InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_UpdateEquipState) == 0x000001, "Wrong alignment on WBP_S_PlayerCardEquip_C_UpdateEquipState");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_UpdateEquipState) == 0x00002C, "Wrong size on WBP_S_PlayerCardEquip_C_UpdateEquipState");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, InState) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::InState' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable) == 0x000004, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_3) == 0x000008, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_2) == 0x000009, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_4) == 0x00000A, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_5) == 0x00000B, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_3) == 0x00000C, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_6) == 0x00000D, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_7) == 0x00000E, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_4) == 0x00000F, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_8) == 0x000010, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_9) == 0x000011, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_5) == 0x000012, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_10) == 0x000013, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_11) == 0x000014, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default) == 0x000015, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_12) == 0x000016, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_13) == 0x000017, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_6) == 0x000018, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001A, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_1) == 0x00001B, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001C, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_2) == 0x00001D, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_14) == 0x00001E, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00001F, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_3) == 0x000020, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000021, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_byte_Variable_15) == 0x000022, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_4) == 0x000023, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000024, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000025, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000027, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_5) == 0x000028, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_6) == 0x000029, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, Temp_bool_Variable_7) == 0x00002A, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdateEquipState, K2Node_Select_Default_7) == 0x00002B, "Member 'WBP_S_PlayerCardEquip_C_UpdateEquipState::K2Node_Select_Default_7' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.UpdatePromptVisibility
// 0x000A (0x000A - 0x0000)
struct WBP_S_PlayerCardEquip_C_UpdatePromptVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility) == 0x000001, "Wrong alignment on WBP_S_PlayerCardEquip_C_UpdatePromptVisibility");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility) == 0x00000A, "Wrong size on WBP_S_PlayerCardEquip_C_UpdatePromptVisibility");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_GetCurrentInputState_ReturnValue) == 0x000004, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_UpdatePromptVisibility, K2Node_Select_Default) == 0x000009, "Member 'WBP_S_PlayerCardEquip_C_UpdatePromptVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_PlayerCardEquip.WBP_S_PlayerCardEquip_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_PlayerCardEquip_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

