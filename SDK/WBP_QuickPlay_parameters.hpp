#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickPlay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckCustomMatchEnabled
// 0x0004 (0x0004 - 0x0000)
struct WBP_QuickPlay_C_CheckCustomMatchEnabled final
{
public:
	bool                                          CallFunc_IsCustomMatchEnabled_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCustomMatch_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_CheckCustomMatchEnabled) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_CheckCustomMatchEnabled");
static_assert(sizeof(WBP_QuickPlay_C_CheckCustomMatchEnabled) == 0x000004, "Wrong size on WBP_QuickPlay_C_CheckCustomMatchEnabled");
static_assert(offsetof(WBP_QuickPlay_C_CheckCustomMatchEnabled, CallFunc_IsCustomMatchEnabled_ReturnValue) == 0x000000, "Member 'WBP_QuickPlay_C_CheckCustomMatchEnabled::CallFunc_IsCustomMatchEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckCustomMatchEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_QuickPlay_C_CheckCustomMatchEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckCustomMatchEnabled, CallFunc_IsInCustomMatch_ReturnValue) == 0x000002, "Member 'WBP_QuickPlay_C_CheckCustomMatchEnabled::CallFunc_IsInCustomMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckCustomMatchEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_QuickPlay_C_CheckCustomMatchEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckPracticeQueuesStatus
// 0x0048 (0x0048 - 0x0000)
struct WBP_QuickPlay_C_CheckPracticeQueuesStatus final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_QuickPlay_QueueTypeSection_C*      K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_CheckPracticeQueuesStatus) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_CheckPracticeQueuesStatus");
static_assert(sizeof(WBP_QuickPlay_C_CheckPracticeQueuesStatus) == 0x000048, "Wrong size on WBP_QuickPlay_C_CheckPracticeQueuesStatus");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section) == 0x000038, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckPracticeQueuesStatus, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_QuickPlay_C_CheckPracticeQueuesStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckQueuesItemOwnershipRequirement
// 0x0080 (0x0080 - 0x0000)
struct WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickPlay_QueueTypeSection_C*      K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_QuickPlay_QueueButton_C*           K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement");
static_assert(sizeof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement) == 0x000080, "Wrong size on WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section) == 0x000038, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_GetAllChildren_ReturnValue_1) == 0x000050, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button) == 0x000070, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement, CallFunc_Less_IntInt_ReturnValue_1) == 0x000079, "Member 'WBP_QuickPlay_C_CheckQueuesItemOwnershipRequirement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.ExecuteUbergraph_WBP_QuickPlay
// 0x02A0 (0x02A0 - 0x0000)
struct WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NavigateBack_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bForced;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_RegionSelect_Entry_C*>      CallFunc_GetRegionSelectEntries_RegionSelectEntries; // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_RegionSelect_Entry_C*              CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_ScreenToSwitch;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_CanQueue;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_CanControl;                           // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Remove_Top_View_Route_ViewChanged;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_QuickPlay_QueueButton_C*>   K2Node_CustomEvent_QueueButtons;                   // 0x00A0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UWidget*                                K2Node_CustomEvent_Widget;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_Widget_1;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class URHWidget*>                      K2Node_CustomEvent_Buttons;                        // 0x00C0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UWBP_QuickPlay_QueueButton_C*           K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button;  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHWidget*                              CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetQueueId_ReturnValue;                   // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URHWidget*                              CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHWidget*                              CallFunc_Array_Get_Item_3;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHWidget*                              CallFunc_Array_Get_Item_4;                         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_QueueId;                        // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentFocusGroup_OutFocusGroup;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentFocusGroup_ReturnValue;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedQueueId_ReturnValue;           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_1;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNext)>                   K2Node_CreateDelegate_OutputDelegate_8;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectedRegionValid_Return;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectedRegionValid_Return_1;           // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x01D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01E4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x01EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue;    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue;         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveViewRoute_ReturnValue;              // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue_1;  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue_1;       // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue_2;  // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue_2;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisplayQueueInfoForQueueId_ReturnValue;   // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SpecialQueue;                   // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsHovered;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisplayQueueInfoForQueueId_ReturnValue_1; // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate_13;           // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNext)>                   K2Node_CreateDelegate_OutputDelegate_15;           // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0268(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x0278(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NavigateBack_ReturnValue_1;               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0290(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay");
static_assert(sizeof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay) == 0x0002A0, "Wrong size on WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, EntryPoint) == 0x000000, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD) == 0x000008, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_NavigateBack_ReturnValue) == 0x000011, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_NavigateBack_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1) == 0x000028, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_bForced) == 0x000044, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_bForced' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetRegionSelectEntries_RegionSelectEntries) == 0x000058, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetRegionSelectEntries_RegionSelectEntries' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_ScreenToSwitch) == 0x000080, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_ScreenToSwitch' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Map_Find_Value) == 0x000088, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Map_Find_ReturnValue) == 0x00008C, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_Event_CanQueue) == 0x00008D, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_Event_CanQueue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_Event_CanControl) == 0x00008E, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_Event_CanControl' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2) == 0x000090, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Remove_Top_View_Route_ViewChanged) == 0x000099, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Remove_Top_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetCurrentInputState_ReturnValue) == 0x00009A, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009B, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_QueueButtons) == 0x0000A0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_QueueButtons' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_Widget) == 0x0000B0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_Widget_1) == 0x0000B8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_Buttons) == 0x0000C0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_Buttons' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button) == 0x0000D0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Button' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetQueueId_ReturnValue) == 0x0000E8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetQueueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_Get_Item_4) == 0x000108, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_QueueId) == 0x000110, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_QueueId' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_4) == 0x000120, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetCurrentFocusGroup_OutFocusGroup) == 0x000130, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetCurrentFocusGroup_OutFocusGroup' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetCurrentFocusGroup_ReturnValue) == 0x000134, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetCurrentFocusGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_SetSelectedQueueId_ReturnValue) == 0x000135, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_SetSelectedQueueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_5) == 0x000138, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000148, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000158, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetCurrentInputState_ReturnValue_1) == 0x000160, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetCurrentInputState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_AddUnique_ReturnValue) == 0x000164, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_6) == 0x000168, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_MakeArray_Array) == 0x000178, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_7) == 0x000188, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_8) == 0x000198, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_IsSelectedRegionValid_Return) == 0x0001A8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_IsSelectedRegionValid_Return' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_IsSelectedRegionValid_Return_1) == 0x0001A9, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_IsSelectedRegionValid_Return_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001AC, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001BC, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001C0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001D0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, Temp_int_Variable) == 0x0001E0, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, Temp_int_Variable_1) == 0x0001E4, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0001E8, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001EC, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Map_Find_Value_1) == 0x0001FC, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Map_Find_ReturnValue_1) == 0x000200, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000204, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_bOutSettingValue) == 0x000208, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_bOutSettingValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_ReturnValue) == 0x000209, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_RemoveViewRoute_ReturnValue) == 0x00020A, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_RemoveViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_BooleanAND_ReturnValue) == 0x00020B, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_bOutSettingValue_1) == 0x00020C, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_bOutSettingValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_ReturnValue_1) == 0x00020D, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_BooleanAND_ReturnValue_1) == 0x00020E, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_bOutSettingValue_2) == 0x00020F, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_bOutSettingValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_GetBooleanAppSetting_ReturnValue_2) == 0x000210, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_GetBooleanAppSetting_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_BooleanAND_ReturnValue_2) == 0x000211, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_DisplayQueueInfoForQueueId_ReturnValue) == 0x000212, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_DisplayQueueInfoForQueueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_SpecialQueue) == 0x000218, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_SpecialQueue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CustomEvent_bIsHovered) == 0x000228, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CustomEvent_bIsHovered' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_DisplayQueueInfoForQueueId_ReturnValue_1) == 0x000229, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_DisplayQueueInfoForQueueId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00022A, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_PlayAnimation_ReturnValue) == 0x000230, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_13) == 0x000238, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_14) == 0x000248, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_15) == 0x000258, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_16) == 0x000268, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_CreateDelegate_OutputDelegate_17) == 0x000278, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, CallFunc_NavigateBack_ReturnValue_1) == 0x000288, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::CallFunc_NavigateBack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay, K2Node_MakeArray_Array_1) == 0x000290, "Member 'WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.GoToQueueScreen
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_C_GoToQueueScreen final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_GoToQueueScreen) == 0x000004, "Wrong alignment on WBP_QuickPlay_C_GoToQueueScreen");
static_assert(sizeof(WBP_QuickPlay_C_GoToQueueScreen) == 0x000010, "Wrong size on WBP_QuickPlay_C_GoToQueueScreen");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_BooleanOR_ReturnValue_2) == 0x00000B, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_GoToQueueScreen, CallFunc_BooleanOR_ReturnValue_3) == 0x00000C, "Member 'WBP_QuickPlay_C_GoToQueueScreen::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleCycleBumpers
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_C_HandleCycleBumpers final
{
public:
	bool                                          bNext;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleCycleBumpers) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_HandleCycleBumpers");
static_assert(sizeof(WBP_QuickPlay_C_HandleCycleBumpers) == 0x000001, "Wrong size on WBP_QuickPlay_C_HandleCycleBumpers");
static_assert(offsetof(WBP_QuickPlay_C_HandleCycleBumpers, bNext) == 0x000000, "Member 'WBP_QuickPlay_C_HandleCycleBumpers::bNext' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeHovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickPlay_C_HandleGameModeHovered final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleGameModeHovered) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleGameModeHovered");
static_assert(sizeof(WBP_QuickPlay_C_HandleGameModeHovered) == 0x000008, "Wrong size on WBP_QuickPlay_C_HandleGameModeHovered");
static_assert(offsetof(WBP_QuickPlay_C_HandleGameModeHovered, Widget) == 0x000000, "Member 'WBP_QuickPlay_C_HandleGameModeHovered::Widget' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeSelected
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_C_HandleGameModeSelected final
{
public:
	class FString                                 QueueId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleGameModeSelected) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleGameModeSelected");
static_assert(sizeof(WBP_QuickPlay_C_HandleGameModeSelected) == 0x000010, "Wrong size on WBP_QuickPlay_C_HandleGameModeSelected");
static_assert(offsetof(WBP_QuickPlay_C_HandleGameModeSelected, QueueId) == 0x000000, "Member 'WBP_QuickPlay_C_HandleGameModeSelected::QueueId' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeUnhovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickPlay_C_HandleGameModeUnhovered final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleGameModeUnhovered) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleGameModeUnhovered");
static_assert(sizeof(WBP_QuickPlay_C_HandleGameModeUnhovered) == 0x000008, "Wrong size on WBP_QuickPlay_C_HandleGameModeUnhovered");
static_assert(offsetof(WBP_QuickPlay_C_HandleGameModeUnhovered, Widget) == 0x000000, "Member 'WBP_QuickPlay_C_HandleGameModeUnhovered::Widget' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_C_HandleInputModeChanged final
{
public:
	ERH_INPUT_STATE                               InputMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleInputModeChanged) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_HandleInputModeChanged");
static_assert(sizeof(WBP_QuickPlay_C_HandleInputModeChanged) == 0x000001, "Wrong size on WBP_QuickPlay_C_HandleInputModeChanged");
static_assert(offsetof(WBP_QuickPlay_C_HandleInputModeChanged, InputMode) == 0x000000, "Member 'WBP_QuickPlay_C_HandleInputModeChanged::InputMode' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleOnCustomSectionPopulated
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_C_HandleOnCustomSectionPopulated final
{
public:
	TArray<class URHWidget*>                      Buttons;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_QuickPlay_C_HandleOnCustomSectionPopulated) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleOnCustomSectionPopulated");
static_assert(sizeof(WBP_QuickPlay_C_HandleOnCustomSectionPopulated) == 0x000010, "Wrong size on WBP_QuickPlay_C_HandleOnCustomSectionPopulated");
static_assert(offsetof(WBP_QuickPlay_C_HandleOnCustomSectionPopulated, Buttons) == 0x000000, "Member 'WBP_QuickPlay_C_HandleOnCustomSectionPopulated::Buttons' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleOnQueueSectionPopulated
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_C_HandleOnQueueSectionPopulated final
{
public:
	TArray<class UWBP_QuickPlay_QueueButton_C*>   QueueButtons;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_QuickPlay_C_HandleOnQueueSectionPopulated) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleOnQueueSectionPopulated");
static_assert(sizeof(WBP_QuickPlay_C_HandleOnQueueSectionPopulated) == 0x000010, "Wrong size on WBP_QuickPlay_C_HandleOnQueueSectionPopulated");
static_assert(offsetof(WBP_QuickPlay_C_HandleOnQueueSectionPopulated, QueueButtons) == 0x000000, "Member 'WBP_QuickPlay_C_HandleOnQueueSectionPopulated::QueueButtons' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleRegionSelectRequested
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_C_HandleRegionSelectRequested final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleRegionSelectRequested) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_HandleRegionSelectRequested");
static_assert(sizeof(WBP_QuickPlay_C_HandleRegionSelectRequested) == 0x000001, "Wrong size on WBP_QuickPlay_C_HandleRegionSelectRequested");
static_assert(offsetof(WBP_QuickPlay_C_HandleRegionSelectRequested, bForced) == 0x000000, "Member 'WBP_QuickPlay_C_HandleRegionSelectRequested::bForced' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleSpecialQueueHoverEvent
// 0x0018 (0x0018 - 0x0000)
struct WBP_QuickPlay_C_HandleSpecialQueueHoverEvent final
{
public:
	class FString                                 SpecialQueue;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsHovered;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_HandleSpecialQueueHoverEvent) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_HandleSpecialQueueHoverEvent");
static_assert(sizeof(WBP_QuickPlay_C_HandleSpecialQueueHoverEvent) == 0x000018, "Wrong size on WBP_QuickPlay_C_HandleSpecialQueueHoverEvent");
static_assert(offsetof(WBP_QuickPlay_C_HandleSpecialQueueHoverEvent, SpecialQueue) == 0x000000, "Member 'WBP_QuickPlay_C_HandleSpecialQueueHoverEvent::SpecialQueue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_HandleSpecialQueueHoverEvent, bIsHovered) == 0x000010, "Member 'WBP_QuickPlay_C_HandleSpecialQueueHoverEvent::bIsHovered' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.NavigateBack
// 0x0002 (0x0002 - 0x0000)
struct WBP_QuickPlay_C_NavigateBack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_NavigateBack) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_NavigateBack");
static_assert(sizeof(WBP_QuickPlay_C_NavigateBack) == 0x000002, "Wrong size on WBP_QuickPlay_C_NavigateBack");
static_assert(offsetof(WBP_QuickPlay_C_NavigateBack, ReturnValue) == 0x000000, "Member 'WBP_QuickPlay_C_NavigateBack::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_NavigateBack, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'WBP_QuickPlay_C_NavigateBack::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.OnControlQueuePermissionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_C_OnControlQueuePermissionChanged final
{
public:
	bool                                          CanControl;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_OnControlQueuePermissionChanged) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_OnControlQueuePermissionChanged");
static_assert(sizeof(WBP_QuickPlay_C_OnControlQueuePermissionChanged) == 0x000001, "Wrong size on WBP_QuickPlay_C_OnControlQueuePermissionChanged");
static_assert(offsetof(WBP_QuickPlay_C_OnControlQueuePermissionChanged, CanControl) == 0x000000, "Member 'WBP_QuickPlay_C_OnControlQueuePermissionChanged::CanControl' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.OnKeyDown
// 0x0210 (0x0210 - 0x0000)
struct WBP_QuickPlay_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnKeyDown_ReturnValue;                    // 0x0150(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_OnKeyDown");
static_assert(sizeof(WBP_QuickPlay_C_OnKeyDown) == 0x000210, "Wrong size on WBP_QuickPlay_C_OnKeyDown");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_QuickPlay_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_QuickPlay_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_QuickPlay_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_QuickPlay_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'WBP_QuickPlay_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, CallFunc_OnKeyDown_ReturnValue) == 0x000150, "Member 'WBP_QuickPlay_C_OnKeyDown::CallFunc_OnKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000208, "Member 'WBP_QuickPlay_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.OnKeyUp
// 0x0210 (0x0210 - 0x0000)
struct WBP_QuickPlay_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnKeyUp_ReturnValue;                      // 0x0150(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_OnKeyUp");
static_assert(sizeof(WBP_QuickPlay_C_OnKeyUp) == 0x000210, "Wrong size on WBP_QuickPlay_C_OnKeyUp");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_QuickPlay_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_QuickPlay_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_QuickPlay_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_QuickPlay_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'WBP_QuickPlay_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, CallFunc_OnKeyUp_ReturnValue) == 0x000150, "Member 'WBP_QuickPlay_C_OnKeyUp::CallFunc_OnKeyUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000208, "Member 'WBP_QuickPlay_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_OnKeyUp, CallFunc_BooleanOR_ReturnValue) == 0x000209, "Member 'WBP_QuickPlay_C_OnKeyUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.OnQueuePermissionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_C_OnQueuePermissionChanged final
{
public:
	bool                                          CanQueue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_OnQueuePermissionChanged) == 0x000001, "Wrong alignment on WBP_QuickPlay_C_OnQueuePermissionChanged");
static_assert(sizeof(WBP_QuickPlay_C_OnQueuePermissionChanged) == 0x000001, "Wrong size on WBP_QuickPlay_C_OnQueuePermissionChanged");
static_assert(offsetof(WBP_QuickPlay_C_OnQueuePermissionChanged, CanQueue) == 0x000000, "Member 'WBP_QuickPlay_C_OnQueuePermissionChanged::CanQueue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.ReconcileGameModeButtonEnabling
// 0x0020 (0x0020 - 0x0000)
struct WBP_QuickPlay_C_ReconcileGameModeButtonEnabling final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_QuickPlay_QueueButton_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_ReconcileGameModeButtonEnabling");
static_assert(sizeof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling) == 0x000020, "Wrong size on WBP_QuickPlay_C_ReconcileGameModeButtonEnabling");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_ReconcileGameModeButtonEnabling, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_QuickPlay_C_ReconcileGameModeButtonEnabling::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.SetDefaultFocusForQueues
// 0x0228 (0x0228 - 0x0000)
struct WBP_QuickPlay_C_SetDefaultFocusForQueues final
{
public:
	bool                                          Found_Queue_Focus;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x0030(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue_1;  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetQueueId_ReturnValue;                   // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_QuickPlay_QueueButton_C*           CallFunc_Array_Get_Item;                           // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_QuickPlay_QueueButton_C*           CallFunc_Array_Get_Item_1;                         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetQueueId_ReturnValue_1;                 // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareStrings_ReturnValue;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_SetDefaultFocusForQueues) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_SetDefaultFocusForQueues");
static_assert(sizeof(WBP_QuickPlay_C_SetDefaultFocusForQueues) == 0x000228, "Wrong size on WBP_QuickPlay_C_SetDefaultFocusForQueues");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, Found_Queue_Focus) == 0x000000, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::Found_Queue_Focus' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, Temp_int_Variable) == 0x000010, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetCurrentlySelectedQueue_ReturnValue) == 0x000018, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetCurrentlySelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Map_Find_Value) == 0x000024, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x000030, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x0001C8, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, Temp_bool_Variable) == 0x0001C9, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, K2Node_Select_Default) == 0x0001CC, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetCurrentlySelectedQueue_ReturnValue_1) == 0x0001D0, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetCurrentlySelectedQueue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetQueueId_ReturnValue) == 0x0001D8, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetQueueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_GetQueueId_ReturnValue_1) == 0x000208, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_GetQueueId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_CompareStrings_ReturnValue) == 0x000218, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_CompareStrings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Array_Length_ReturnValue_1) == 0x00021C, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000220, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Greater_IntInt_ReturnValue) == 0x000221, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetDefaultFocusForQueues, CallFunc_Less_IntInt_ReturnValue_1) == 0x000222, "Member 'WBP_QuickPlay_C_SetDefaultFocusForQueues::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.Setup Button Navigation
// 0x0030 (0x0030 - 0x0000)
struct WBP_QuickPlay_C_Setup_Button_Navigation final
{
public:
	TArray<class URHWidget*>                      CustomBrowserButtons;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class URHWidget*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class URHWidget*>                      CallFunc_GetJoinCustomButtons_ReturnValue;         // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class URHWidget*                              CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_Setup_Button_Navigation) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_Setup_Button_Navigation");
static_assert(sizeof(WBP_QuickPlay_C_Setup_Button_Navigation) == 0x000030, "Wrong size on WBP_QuickPlay_C_Setup_Button_Navigation");
static_assert(offsetof(WBP_QuickPlay_C_Setup_Button_Navigation, CustomBrowserButtons) == 0x000000, "Member 'WBP_QuickPlay_C_Setup_Button_Navigation::CustomBrowserButtons' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_Setup_Button_Navigation, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_QuickPlay_C_Setup_Button_Navigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_Setup_Button_Navigation, CallFunc_GetJoinCustomButtons_ReturnValue) == 0x000018, "Member 'WBP_QuickPlay_C_Setup_Button_Navigation::CallFunc_GetJoinCustomButtons_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_Setup_Button_Navigation, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WBP_QuickPlay_C_Setup_Button_Navigation::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.SetupQueueButtons
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_QuickPlay_C_SetupQueueButtons final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class URHWidget*>& Buttons)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UWBP_QuickPlay_QueueButton_C*>& QueueButton)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* Widget)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SpecialQueueName, bool bIsHovered)> K2Node_CreateDelegate_OutputDelegate_7; // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* Widget)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& QueueId)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickPlay_QueueTypeSection_C*      CallFunc_Create_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_SetupQueueButtons) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_SetupQueueButtons");
static_assert(sizeof(WBP_QuickPlay_C_SetupQueueButtons) == 0x0000D8, "Wrong size on WBP_QuickPlay_C_SetupQueueButtons");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_QuickPlay_C_SetupQueueButtons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'WBP_QuickPlay_C_SetupQueueButtons::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_6) == 0x000068, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_7) == 0x000078, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_8) == 0x000088, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_9) == 0x000098, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000A8, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, CallFunc_Create_ReturnValue) == 0x0000B8, "Member 'WBP_QuickPlay_C_SetupQueueButtons::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, K2Node_MakeStruct_Margin) == 0x0000C0, "Member 'WBP_QuickPlay_C_SetupQueueButtons::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_SetupQueueButtons, CallFunc_AddChild_ReturnValue) == 0x0000D0, "Member 'WBP_QuickPlay_C_SetupQueueButtons::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.SwitchFocusGroupToScreen
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickPlay_C_SwitchFocusGroupToScreen final
{
public:
	class UWidget*                                ScreenToSwitch;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_SwitchFocusGroupToScreen) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_SwitchFocusGroupToScreen");
static_assert(sizeof(WBP_QuickPlay_C_SwitchFocusGroupToScreen) == 0x000008, "Wrong size on WBP_QuickPlay_C_SwitchFocusGroupToScreen");
static_assert(offsetof(WBP_QuickPlay_C_SwitchFocusGroupToScreen, ScreenToSwitch) == 0x000000, "Member 'WBP_QuickPlay_C_SwitchFocusGroupToScreen::ScreenToSwitch' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.UpdatePartyStatusForQueues
// 0x0050 (0x0050 - 0x0000)
struct WBP_QuickPlay_C_UpdatePartyStatusForQueues final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ARHHUDCommon*                           CallFunc_GetHUDCommon_HUD_Common;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHPartyManager*                        CallFunc_GetPartyManager_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickPlay_QueueTypeSection_C*      K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInParty_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_UpdatePartyStatusForQueues) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_UpdatePartyStatusForQueues");
static_assert(sizeof(WBP_QuickPlay_C_UpdatePartyStatusForQueues) == 0x000050, "Wrong size on WBP_QuickPlay_C_UpdatePartyStatusForQueues");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_GetHUDCommon_HUD_Common) == 0x000020, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_GetHUDCommon_HUD_Common' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_GetPartyManager_ReturnValue) == 0x000030, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section) == 0x000038, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::K2Node_DynamicCast_AsWBP_Quick_Play_Queue_Type_Section' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_IsInParty_ReturnValue) == 0x000041, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_IsInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000042, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_UpdatePartyStatusForQueues, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_QuickPlay_C_UpdatePartyStatusForQueues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_QuickPlay.WBP_QuickPlay_C.IsSelectedRegionValid
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_QuickPlay_C_IsSelectedRegionValid final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPreferredRegionId_OutRegionId;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPreferredRegionId_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              CallFunc_GetRegionList_OutRegionIdToNameMap;       // 0x0030(0x0050)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0080(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_C_IsSelectedRegionValid) == 0x000008, "Wrong alignment on WBP_QuickPlay_C_IsSelectedRegionValid");
static_assert(sizeof(WBP_QuickPlay_C_IsSelectedRegionValid) == 0x0000A0, "Wrong size on WBP_QuickPlay_C_IsSelectedRegionValid");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, Return) == 0x000000, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::Return' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000008, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, CallFunc_GetPreferredRegionId_OutRegionId) == 0x000018, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::CallFunc_GetPreferredRegionId_OutRegionId' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, CallFunc_GetPreferredRegionId_ReturnValue) == 0x000028, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::CallFunc_GetPreferredRegionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, CallFunc_GetRegionList_OutRegionIdToNameMap) == 0x000030, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::CallFunc_GetRegionList_OutRegionIdToNameMap' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, CallFunc_Map_Find_Value) == 0x000080, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_C_IsSelectedRegionValid, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'WBP_QuickPlay_C_IsSelectedRegionValid::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

