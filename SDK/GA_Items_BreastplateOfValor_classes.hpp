#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_BreastplateOfValor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Items_BreastplateOfValor.GA_Items_BreastplateOfValor_C
// 0x0028 (0x0F00 - 0x0ED8)
class UGA_Items_BreastplateOfValor_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        TotalDamageTaken;                                  // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentThreshold;                                  // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseThreshold;                                     // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PerLevelTreshold;                                  // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Calc_Damage_Threshold();
	void ExecuteUbergraph_GA_Items_BreastplateOfValor(int32 EntryPoint);
	void OnDamaged(const struct FDamageEventData& DamageEventData);
	void SetupListeners();
	void SetupVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Items_BreastplateOfValor_C">();
	}
	static class UGA_Items_BreastplateOfValor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Items_BreastplateOfValor_C>();
	}
};
static_assert(alignof(UGA_Items_BreastplateOfValor_C) == 0x000008, "Wrong alignment on UGA_Items_BreastplateOfValor_C");
static_assert(sizeof(UGA_Items_BreastplateOfValor_C) == 0x000F00, "Wrong size on UGA_Items_BreastplateOfValor_C");
static_assert(offsetof(UGA_Items_BreastplateOfValor_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Items_BreastplateOfValor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Items_BreastplateOfValor_C, TotalDamageTaken) == 0x000EE0, "Member 'UGA_Items_BreastplateOfValor_C::TotalDamageTaken' has a wrong offset!");
static_assert(offsetof(UGA_Items_BreastplateOfValor_C, CurrentThreshold) == 0x000EE8, "Member 'UGA_Items_BreastplateOfValor_C::CurrentThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Items_BreastplateOfValor_C, BaseThreshold) == 0x000EF0, "Member 'UGA_Items_BreastplateOfValor_C::BaseThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Items_BreastplateOfValor_C, PerLevelTreshold) == 0x000EF8, "Member 'UGA_Items_BreastplateOfValor_C::PerLevelTreshold' has a wrong offset!");

}

