#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Item_BlueStonePendant

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Item_BlueStonePendant.GA_Item_BlueStonePendant_C
// 0x0070 (0x0F48 - 0x0ED8)
class UGA_Item_BlueStonePendant_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 Damage_Event_Data_Target;                          // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UHWEquipmentComponent_FiringInstanceTracker* FiringInstanceTrackerComponent;               // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           IncomingEffectContext;                             // 0x0EF0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayAbilitySpecHandle             Ability_Handle;                                    // 0x0F08(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F0C[0x4];                                      // 0x0F0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Ability_Tags;                                      // 0x0F10(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FHWAbilityFiringInstanceId>     OffhandInstanceIDs;                                // 0x0F30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxInstancesToTrack;                               // 0x0F40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHadAppliedBluestonePendant;                       // 0x0F44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Item_BlueStonePendant(int32 EntryPoint);
	void IsAbilityRefire(class UHWGameplayAbility_Enhanced* Ability, bool* IsRefire);
	void IsAbilitySwap(class UHWGameplayAbility_Enhanced* Ability, bool* IsAbilitySwap_0);
	void OnOwnerDealtDamage(const struct FDamageEventData& DamageEventData);
	void SetupListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Item_BlueStonePendant_C">();
	}
	static class UGA_Item_BlueStonePendant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Item_BlueStonePendant_C>();
	}
};
static_assert(alignof(UGA_Item_BlueStonePendant_C) == 0x000008, "Wrong alignment on UGA_Item_BlueStonePendant_C");
static_assert(sizeof(UGA_Item_BlueStonePendant_C) == 0x000F48, "Wrong size on UGA_Item_BlueStonePendant_C");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Item_BlueStonePendant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, Damage_Event_Data_Target) == 0x000EE0, "Member 'UGA_Item_BlueStonePendant_C::Damage_Event_Data_Target' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, FiringInstanceTrackerComponent) == 0x000EE8, "Member 'UGA_Item_BlueStonePendant_C::FiringInstanceTrackerComponent' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, IncomingEffectContext) == 0x000EF0, "Member 'UGA_Item_BlueStonePendant_C::IncomingEffectContext' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, Ability_Handle) == 0x000F08, "Member 'UGA_Item_BlueStonePendant_C::Ability_Handle' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, Ability_Tags) == 0x000F10, "Member 'UGA_Item_BlueStonePendant_C::Ability_Tags' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, OffhandInstanceIDs) == 0x000F30, "Member 'UGA_Item_BlueStonePendant_C::OffhandInstanceIDs' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, MaxInstancesToTrack) == 0x000F40, "Member 'UGA_Item_BlueStonePendant_C::MaxInstancesToTrack' has a wrong offset!");
static_assert(offsetof(UGA_Item_BlueStonePendant_C, bHadAppliedBluestonePendant) == 0x000F44, "Member 'UGA_Item_BlueStonePendant_C::bHadAppliedBluestonePendant' has a wrong offset!");

}

