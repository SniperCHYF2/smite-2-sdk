#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetails_GodAbilityWidget_Small

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.BP_UpdatePipDisplay
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPips;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay) == 0x000004, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay) == 0x000008, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay, CurrentIndex) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay, TotalPips) == 0x000004, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_UpdatePipDisplay::TotalPips' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.DisplayEquipmentItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem final
{
public:
	const class UHWEquipmentItem*                 EquipmentItem;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem) == 0x000008, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem) == 0x000008, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem, EquipmentItem) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_DisplayEquipmentItem::EquipmentItem' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small
// 0x000C (0x000C - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_1;       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small) == 0x000004, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small) == 0x00000C, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, EntryPoint) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, CallFunc_GetCurrentInputState_ReturnValue) == 0x000006, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, CallFunc_GetCurrentInputState_ReturnValue_1) == 0x000007, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::CallFunc_GetCurrentInputState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, K2Node_SwitchEnum_CmpSuccess_1) == 0x000009, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small, CallFunc_IsSelected_ReturnValue) == 0x00000A, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ExecuteUbergraph_WBP_C_GodDetails_GodAbilityWidget_Small::CallFunc_IsSelected_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.HandleOnPipClicked
// 0x0004 (0x0004 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked final
{
public:
	int32                                         PipIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked) == 0x000004, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked) == 0x000004, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked, PipIndex) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_HandleOnPipClicked::PipIndex' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.InitializeWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget final
{
public:
	TDelegate<void(int32 PipIndex)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget) == 0x000018, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_InitializeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.ToggleLoadingState
// 0x0009 (0x0009 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState final
{
public:
	bool                                          bLoading;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState) == 0x000001, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState) == 0x000009, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, bLoading) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::bLoading' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_bool_Variable) == 0x000001, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_byte_Variable) == 0x000002, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, K2Node_Select_Default) == 0x000005, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_ToggleLoadingState::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.UpdateSelectedIndicator
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator) == 0x000001, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator) == 0x000001, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator, bIsSelected) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_UpdateSelectedIndicator::bIsSelected' has a wrong offset!");

// Function WBP_C_GodDetails_GodAbilityWidget_Small.WBP_C_GodDetails_GodAbilityWidget_Small_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_GodDetails_GodAbilityWidget_Small_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

