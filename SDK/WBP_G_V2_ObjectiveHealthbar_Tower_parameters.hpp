#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ObjectiveHealthbar_Tower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Stage;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalStage;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V2_ObjectiveHealthbar_RewardPip_C* CallFunc_Array_Get_Item;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_NewTargetActor;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower) == 0x000028, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, EntryPoint) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, K2Node_CustomEvent_Stage) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::K2Node_CustomEvent_Stage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, K2Node_CustomEvent_FinalStage) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::K2Node_CustomEvent_FinalStage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, K2Node_Event_IsDesignTime) == 0x00001A, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower, K2Node_Event_NewTargetActor) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ExecuteUbergraph_WBP_G_V2_ObjectiveHealthbar_Tower::K2Node_Event_NewTargetActor' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetLeashCapsule
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule final
{
public:
	class UPrimitiveComponent*                    LeashComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule, LeashComponent) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashCapsule::LeashComponent' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetLeashRadius
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius final
{
public:
	double                                        LeashRadius;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius, LeashRadius) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashRadius::LeashRadius' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetLeashVolume
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume final
{
public:
	TSoftObjectPtr<class ATriggerVolume>          LeashVolume;                                       // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume) == 0x000028, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume, LeashVolume) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetLeashVolume::LeashVolume' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetNearbyMinionCount
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount final
{
public:
	int32                                         MinionCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount) == 0x000004, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount, MinionCount) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetNearbyMinionCount::MinionCount' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetStartingWaypoints
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints final
{
public:
	TArray<TSoftObjectPtr<class AWaypoint_C>>     Waypoints;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints) == 0x000010, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints, Waypoints) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetStartingWaypoints::Waypoints' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetTowerCurrentDestructionStage
// 0x0070 (0x0070 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage final
{
public:
	int32                                         DestructionStage;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage) == 0x000070, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, DestructionStage) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::DestructionStage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x00001C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x000024, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_SafeDivide_B_ImplicitCast) == 0x000060, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage, CallFunc_SafeDivide_A_ImplicitCast) == 0x000068, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetTowerCurrentDestructionStage::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.HandleTowerDestructionStageReached
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached final
{
public:
	int32                                         Stage;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalStage;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached, Stage) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached::Stage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached, FinalStage) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_HandleTowerDestructionStageReached::FinalStage' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.PlayShowAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_PlayShowAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.RetrieveTargetActor
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor final
{
public:
	class AActor*                                 CurrentTargetActor_0;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor, CurrentTargetActor_0) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_RetrieveTargetActor::CurrentTargetActor_0' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.SetCharacterDisplay
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay final
{
public:
	const class AHWCharacter_Base*                Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWCharacterItem*                 CharacterItem;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0018(0x0018)()
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay) == 0x000030, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay, Character) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay::Character' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay, CharacterItem) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay::CharacterItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay, CallFunc_GetItemName_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetCharacterDisplay::CallFunc_GetItemName_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.SetUpDividers
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers final
{
public:
	int32                                         NumSegments;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanSpawnRewards;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V2_ObjectiveHealthbar_Divider_C* CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0020(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers) == 0x000038, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, NumSegments) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::NumSegments' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, bCanSpawnRewards) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::bCanSpawnRewards' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, Temp_int_Variable) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, K2Node_MakeStruct_SlateChildSize) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpDividers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.SetUpRewardPips
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips final
{
public:
	int32                                         NumSegments;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasFinalReward;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanSpawnRewards;                                  // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0008(0x0008)(NoDestructor)
	class UWBP_G_V2_ObjectiveHealthbar_RewardPip_C* CallFunc_Create_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips) == 0x000048, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, NumSegments) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::NumSegments' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, bHasFinalReward) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::bHasFinalReward' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, bCanSpawnRewards) == 0x000005, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::bCanSpawnRewards' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_byte_Variable) == 0x000006, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, K2Node_MakeStruct_SlateChildSize) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_int_Variable) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_byte_Variable_1) == 0x000024, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_bool_Variable) == 0x000027, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_byte_Variable_2) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_byte_Variable_3) == 0x000029, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002A, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_BooleanAND_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, K2Node_Select_Default) == 0x000041, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, Temp_bool_Variable_1) == 0x000042, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, K2Node_Select_Default_1) == 0x000043, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_SetUpRewardPips::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.ShowOrHidePrototypeStuff
// 0x0090 (0x0090 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff final
{
public:
	class AHWCharacter_Base*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTowerCurrentDestructionStage_DestructionStage; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Stage, bool FinalStage)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Tower_C*                        K2Node_DynamicCast_AsBP_NPC_Tower;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Stage, bool FinalStage)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff) == 0x000090, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, Character) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::Character' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_GetTowerCurrentDestructionStage_DestructionStage) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_GetTowerCurrentDestructionStage_DestructionStage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, Temp_byte_Variable) == 0x00000C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, Temp_byte_Variable_1) == 0x00000E, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_DynamicCast_AsBP_NPC_Tower) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_DynamicCast_AsBP_NPC_Tower' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000065, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, Temp_bool_Variable) == 0x000066, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000068, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000070, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000080, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff, K2Node_Select_Default) == 0x00008C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_ShowOrHidePrototypeStuff::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.StartCurrentTargetTimer
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer) == 0x000018, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartCurrentTargetTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.StartMinionCounterTimer
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer final
{
public:
	class UHWAbilitySystemComponent*              LocalASC;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetActorAttitudeTowardsLocalPlayer_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer) == 0x000040, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, LocalASC) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::LocalASC' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, CallFunc_GetCharacterOwner_ReturnValue) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::CallFunc_GetCharacterOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, CallFunc_GetActorAttitudeTowardsLocalPlayer_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::CallFunc_GetActorAttitudeTowardsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, CallFunc_GetCharacterOwner_ReturnValue_1) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::CallFunc_GetCharacterOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_StartMinionCounterTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.UpdateCurrentTarget
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget final
{
public:
	class AHWCharacter_Base*                      TargetCharacter;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0049(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacterAbilitySystemActor*         CallFunc_GetCharacterAbilitySystemActor_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWCharacterItem*                 CallFunc_GetCurrentCharacterItem_ReturnValue;      // 0x0058(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIconTextureByTag_ReturnValue;          // 0x0098(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AI_C>             K2Node_DynamicCast_AsBPI_AI;                       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_RetrieveTargetActor_CurrentTargetActor;   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget) == 0x0000E8, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, TargetCharacter) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::TargetCharacter' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_struct_Variable) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_struct_Variable_1) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_struct_Variable_2) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_bool_Variable) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_struct_Variable_3) == 0x000024, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000039, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, Temp_byte_Variable) == 0x000048, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetGenericTeamId_ReturnValue) == 0x000049, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetCharacterAbilitySystemActor_ReturnValue) == 0x000050, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetCharacterAbilitySystemActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetCurrentCharacterItem_ReturnValue) == 0x000058, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetCurrentCharacterItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000060, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_Select_Default) == 0x000068, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000070, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000080, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_Select_Default_1) == 0x000084, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetCharacterOwner_ReturnValue) == 0x000090, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetCharacterOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_GetIconTextureByTag_ReturnValue) == 0x000098, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_GetIconTextureByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_DynamicCast_AsBPI_AI) == 0x0000C0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_DynamicCast_AsBPI_AI' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_RetrieveTargetActor_CurrentTargetActor) == 0x0000D8, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_RetrieveTargetActor_CurrentTargetActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateCurrentTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.UpdateMinionCounter
// 0x0128 (0x0128 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter final
{
public:
	class UTexture2D*                             Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0020(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0014)()
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue_1;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AI_C>             K2Node_DynamicCast_AsBPI_AI;                       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_GetCharacterOwner_ReturnValue_2;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNearbyMinionCount_MinionCount;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter) == 0x000128, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, Temp_object_Variable) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, Temp_object_Variable_1) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_GetCharacterOwner_ReturnValue) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_GetCharacterOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_GetGenericTeamId_ReturnValue) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, Temp_object_Variable_2) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_LinearColorLerp_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000068, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_GetCharacterOwner_ReturnValue_1) == 0x0000E8, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_GetCharacterOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_DynamicCast_AsBPI_AI) == 0x0000F0, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_DynamicCast_AsBPI_AI' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_GetCharacterOwner_ReturnValue_2) == 0x000108, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_GetCharacterOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_GetNearbyMinionCount_MinionCount) == 0x000110, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_GetNearbyMinionCount_MinionCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_IsValid_ReturnValue) == 0x000114, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, Temp_byte_Variable) == 0x000115, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, K2Node_Select_Default) == 0x000118, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000120, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateMinionCounter::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.UpdateNearbyMinionCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewMinionCount;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount, NewCount) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount::NewCount' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount, NewMinionCount) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateNearbyMinionCount::NewMinionCount' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.UpdatePipsFilledStateFromDestructionStage
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage final
{
public:
	int32                                         LastDestructionStage;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_G_V2_ObjectiveHealthbar_RewardPip_C* CallFunc_Array_Get_Item;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage) == 0x000030, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, LastDestructionStage) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::LastDestructionStage' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage, CallFunc_Less_IntInt_ReturnValue_1) == 0x000029, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdatePipsFilledStateFromDestructionStage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.UpdateTargetActor
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor final
{
public:
	class AActor*                                 NewTargetActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor) == 0x000008, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor, NewTargetActor) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_UpdateTargetActor::NewTargetActor' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Tower.WBP_G_V2_ObjectiveHealthbar_Tower_C.GetAttributeWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets final
{
public:
	TArray<class UHWGameplayAttributeWidget*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayAttributeWidget*>     K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets) == 0x000020, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_ObjectiveHealthbar_Tower_C_GetAttributeWidgets::K2Node_MakeArray_Array' has a wrong offset!");

}

