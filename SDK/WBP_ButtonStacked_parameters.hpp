#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ButtonStacked

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.DisableButton
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonStacked_C_DisableButton final
{
public:
	bool                                          bShouldDisable;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_DisableButton) == 0x000001, "Wrong alignment on WBP_ButtonStacked_C_DisableButton");
static_assert(sizeof(WBP_ButtonStacked_C_DisableButton) == 0x000001, "Wrong size on WBP_ButtonStacked_C_DisableButton");
static_assert(offsetof(WBP_ButtonStacked_C_DisableButton, bShouldDisable) == 0x000000, "Member 'WBP_ButtonStacked_C_DisableButton::bShouldDisable' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.ExecuteUbergraph_WBP_ButtonStacked
// 0x0030 (0x0030 - 0x0000)
struct WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldDisable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsActive;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked) == 0x000008, "Wrong alignment on WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked");
static_assert(sizeof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked) == 0x000030, "Wrong size on WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, EntryPoint) == 0x000000, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, Temp_byte_Variable) == 0x000004, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, Temp_bool_Variable) == 0x000007, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, K2Node_CustomEvent_bShouldDisable) == 0x000008, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::K2Node_CustomEvent_bShouldDisable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, Temp_bool_Variable_1) == 0x00000A, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, K2Node_Select_Default) == 0x00000B, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, K2Node_CustomEvent_bIsActive) == 0x00000C, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::K2Node_CustomEvent_bIsActive' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, K2Node_Event_IsDesignTime) == 0x00000D, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_Not_PreBool_ReturnValue_2) == 0x000028, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked, CallFunc_Not_PreBool_ReturnValue_3) == 0x00002A, "Member 'WBP_ButtonStacked_C_ExecuteUbergraph_WBP_ButtonStacked::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.NavigateConfirm
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonStacked_C_NavigateConfirm final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_NavigateConfirm) == 0x000001, "Wrong alignment on WBP_ButtonStacked_C_NavigateConfirm");
static_assert(sizeof(WBP_ButtonStacked_C_NavigateConfirm) == 0x000001, "Wrong size on WBP_ButtonStacked_C_NavigateConfirm");
static_assert(offsetof(WBP_ButtonStacked_C_NavigateConfirm, ReturnValue) == 0x000000, "Member 'WBP_ButtonStacked_C_NavigateConfirm::ReturnValue' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.OnHoveredLogic
// 0x0020 (0x0020 - 0x0000)
struct WBP_ButtonStacked_C_OnHoveredLogic final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_OnHoveredLogic) == 0x000008, "Wrong alignment on WBP_ButtonStacked_C_OnHoveredLogic");
static_assert(sizeof(WBP_ButtonStacked_C_OnHoveredLogic) == 0x000020, "Wrong size on WBP_ButtonStacked_C_OnHoveredLogic");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, IsGamepad) == 0x000000, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::IsGamepad' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, Temp_bool_Variable) == 0x000002, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, K2Node_Select_Default) == 0x000008, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_OnHoveredLogic, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_ButtonStacked_C_OnHoveredLogic::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonStacked_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ButtonStacked_C_PreConstruct");
static_assert(sizeof(WBP_ButtonStacked_C_PreConstruct) == 0x000001, "Wrong size on WBP_ButtonStacked_C_PreConstruct");
static_assert(offsetof(WBP_ButtonStacked_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ButtonStacked_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.SetInitialDisplay
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ButtonStacked_C_SetInitialDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_2;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_2;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_2;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_2;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_2;                   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_3;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_3;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_3;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_3;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_3;                  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_SetInitialDisplay) == 0x000004, "Wrong alignment on WBP_ButtonStacked_C_SetInitialDisplay");
static_assert(sizeof(WBP_ButtonStacked_C_SetInitialDisplay) == 0x0000E0, "Wrong size on WBP_ButtonStacked_C_SetInitialDisplay");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, Temp_bool_Variable) == 0x000000, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_R) == 0x000004, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_G) == 0x000008, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_B) == 0x00000C, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_A) == 0x000010, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_HasFound) == 0x000014, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_Color) == 0x000018, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_R_1) == 0x000038, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_G_1) == 0x00003C, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_B_1) == 0x000040, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_A_1) == 0x000044, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_MakeColor_ReturnValue_1) == 0x000048, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_HasFound_1) == 0x000058, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_HasFound_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_Color_1) == 0x00005C, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_R_2) == 0x00006C, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_R_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_G_2) == 0x000070, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_G_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_B_2) == 0x000074, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_B_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_A_2) == 0x000078, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_A_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_HasFound_2) == 0x00007C, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_HasFound_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_GetColorByName_Color_2) == 0x000080, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_GetColorByName_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_MakeColor_ReturnValue_2) == 0x000090, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_R_3) == 0x0000A0, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_R_3' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_G_3) == 0x0000A4, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_G_3' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_B_3) == 0x0000A8, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_B_3' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_BreakColor_A_3) == 0x0000AC, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_BreakColor_A_3' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, K2Node_Select_Default) == 0x0000B0, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, CallFunc_MakeColor_ReturnValue_3) == 0x0000C0, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::CallFunc_MakeColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetInitialDisplay, K2Node_Select_Default_1) == 0x0000D0, "Member 'WBP_ButtonStacked_C_SetInitialDisplay::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.SetIsActiveState
// 0x0001 (0x0001 - 0x0000)
struct WBP_ButtonStacked_C_SetIsActiveState final
{
public:
	bool                                          bIsActive_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_SetIsActiveState) == 0x000001, "Wrong alignment on WBP_ButtonStacked_C_SetIsActiveState");
static_assert(sizeof(WBP_ButtonStacked_C_SetIsActiveState) == 0x000001, "Wrong size on WBP_ButtonStacked_C_SetIsActiveState");
static_assert(offsetof(WBP_ButtonStacked_C_SetIsActiveState, bIsActive_0) == 0x000000, "Member 'WBP_ButtonStacked_C_SetIsActiveState::bIsActive_0' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.SetVisuallyDisabled
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_ButtonStacked_C_SetVisuallyDisabled final
{
public:
	bool                                          ShouldDisable;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorByName_HasFound_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_SetVisuallyDisabled) == 0x000008, "Wrong alignment on WBP_ButtonStacked_C_SetVisuallyDisabled");
static_assert(sizeof(WBP_ButtonStacked_C_SetVisuallyDisabled) == 0x0000B8, "Wrong size on WBP_ButtonStacked_C_SetVisuallyDisabled");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, ShouldDisable) == 0x000000, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::ShouldDisable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_GetColorByName_HasFound) == 0x000001, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_GetColorByName_Color) == 0x000004, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_R) == 0x000020, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_G) == 0x000024, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_B) == 0x000028, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_A) == 0x00002C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_MakeColor_ReturnValue) == 0x000038, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_GetColorByName_HasFound_1) == 0x000048, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_GetColorByName_HasFound_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_GetColorByName_Color_1) == 0x00004C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_R_1) == 0x00005C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_G_1) == 0x000060, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_B_1) == 0x000064, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_BreakColor_A_1) == 0x000068, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_MakeColor_ReturnValue_1) == 0x00006C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_MakeColor_ReturnValue_2) == 0x00007C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, Temp_bool_Variable) == 0x00008C, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, K2Node_Select_Default) == 0x000090, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_SelectColor_ReturnValue) == 0x0000A0, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0000B0, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ButtonStacked_C_SetVisuallyDisabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x0000B4, "Member 'WBP_ButtonStacked_C_SetVisuallyDisabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_ButtonStacked.WBP_ButtonStacked_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_ButtonStacked_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ButtonStacked_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_ButtonStacked_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_ButtonStacked_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_ButtonStacked_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_ButtonStacked_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_ButtonStacked_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

