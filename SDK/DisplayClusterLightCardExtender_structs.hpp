#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DisplayClusterLightCardExtender

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct DisplayClusterLightCardExtender.DisplayClusterPositionalParams
// 0x0048 (0x0048 - 0x0000)
struct FDisplayClusterPositionalParams final
{
public:
	double                                        DistanceFromCenter;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Longitude;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Latitude;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Spin;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Pitch;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Yaw;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RadialOffset;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Scale;                                             // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDisplayClusterPositionalParams) == 0x000008, "Wrong alignment on FDisplayClusterPositionalParams");
static_assert(sizeof(FDisplayClusterPositionalParams) == 0x000048, "Wrong size on FDisplayClusterPositionalParams");
static_assert(offsetof(FDisplayClusterPositionalParams, DistanceFromCenter) == 0x000000, "Member 'FDisplayClusterPositionalParams::DistanceFromCenter' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Longitude) == 0x000008, "Member 'FDisplayClusterPositionalParams::Longitude' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Latitude) == 0x000010, "Member 'FDisplayClusterPositionalParams::Latitude' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Spin) == 0x000018, "Member 'FDisplayClusterPositionalParams::Spin' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Pitch) == 0x000020, "Member 'FDisplayClusterPositionalParams::Pitch' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Yaw) == 0x000028, "Member 'FDisplayClusterPositionalParams::Yaw' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, RadialOffset) == 0x000030, "Member 'FDisplayClusterPositionalParams::RadialOffset' has a wrong offset!");
static_assert(offsetof(FDisplayClusterPositionalParams, Scale) == 0x000038, "Member 'FDisplayClusterPositionalParams::Scale' has a wrong offset!");

}

