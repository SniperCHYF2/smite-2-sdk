#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_FloatingText_Heal

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_FloatingText_Heal.WBP_G_V1_FloatingText_Heal_C.AnimateNumber
// 0x0108 (0x0108 - 0x0000)
struct WBP_G_V1_FloatingText_Heal_C_AnimateNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 OwnerActor;                                        // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Heal_C_AnimateNumber");
static_assert(sizeof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber) == 0x000108, "Wrong size on WBP_G_V1_FloatingText_Heal_C_AnimateNumber");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber, Number) == 0x000000, "Member 'WBP_G_V1_FloatingText_Heal_C_AnimateNumber::Number' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber, Parameters) == 0x000008, "Member 'WBP_G_V1_FloatingText_Heal_C_AnimateNumber::Parameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber, OwnerActor) == 0x0000E0, "Member 'WBP_G_V1_FloatingText_Heal_C_AnimateNumber::OwnerActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber, CallFunc_Abs_Int_ReturnValue) == 0x0000E8, "Member 'WBP_G_V1_FloatingText_Heal_C_AnimateNumber::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_AnimateNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'WBP_G_V1_FloatingText_Heal_C_AnimateNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Heal.WBP_G_V1_FloatingText_Heal_C.ApplyFontSize
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_FloatingText_Heal_C_ApplyFontSize final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Size_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_Heal_C_ApplyFontSize) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Heal_C_ApplyFontSize");
static_assert(sizeof(WBP_G_V1_FloatingText_Heal_C_ApplyFontSize) == 0x000018, "Wrong size on WBP_G_V1_FloatingText_Heal_C_ApplyFontSize");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_ApplyFontSize, Size) == 0x000000, "Member 'WBP_G_V1_FloatingText_Heal_C_ApplyFontSize::Size' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_ApplyFontSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_G_V1_FloatingText_Heal_C_ApplyFontSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_ApplyFontSize, K2Node_SetFieldsInStruct_Size_ImplicitCast) == 0x000010, "Member 'WBP_G_V1_FloatingText_Heal_C_ApplyFontSize::K2Node_SetFieldsInStruct_Size_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Heal.WBP_G_V1_FloatingText_Heal_C.Play Text Animation
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation");
static_assert(sizeof(WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation) == 0x000010, "Wrong size on WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_G_V1_FloatingText_Heal_C_Play_Text_Animation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_FloatingText_Heal.WBP_G_V1_FloatingText_Heal_C.UpdateNumber
// 0x0108 (0x0108 - 0x0000)
struct WBP_G_V1_FloatingText_Heal_C_UpdateNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 OwnerActor;                                        // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber) == 0x000008, "Wrong alignment on WBP_G_V1_FloatingText_Heal_C_UpdateNumber");
static_assert(sizeof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber) == 0x000108, "Wrong size on WBP_G_V1_FloatingText_Heal_C_UpdateNumber");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber, Number) == 0x000000, "Member 'WBP_G_V1_FloatingText_Heal_C_UpdateNumber::Number' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber, Parameters) == 0x000008, "Member 'WBP_G_V1_FloatingText_Heal_C_UpdateNumber::Parameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber, OwnerActor) == 0x0000E0, "Member 'WBP_G_V1_FloatingText_Heal_C_UpdateNumber::OwnerActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber, CallFunc_Abs_Int_ReturnValue) == 0x0000E8, "Member 'WBP_G_V1_FloatingText_Heal_C_UpdateNumber::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_FloatingText_Heal_C_UpdateNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'WBP_G_V1_FloatingText_Heal_C_UpdateNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

