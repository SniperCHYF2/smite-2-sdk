#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_TeamDisplay_HostileEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.CharacterItemChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged final
{
public:
	const class UHWCharacterItem*                 NewCharacterItem;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged) == 0x000010, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged, NewCharacterItem) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged::NewCharacterItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_CharacterItemChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.DisconnectionStateChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged final
{
public:
	bool                                          bDisconnected;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged) == 0x000001, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged) == 0x000005, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged, bDisconnected) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged::bDisconnected' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisconnectionStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.DisplayCharacterRespawnState
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState final
{
public:
	bool                                          bIsAlive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainingRespawnTime;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState) == 0x000048, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, bIsAlive) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::bIsAlive' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, RemainingRespawnTime) == 0x000004, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::RemainingRespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_byte_Variable) == 0x000008, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_bool_Variable) == 0x000029, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_byte_Variable_2) == 0x00002A, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_byte_Variable_3) == 0x00002B, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_bool_Variable_1) == 0x00002C, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_real_Variable) == 0x000030, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_real_Variable_1) == 0x000034, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, Temp_bool_Variable_2) == 0x000038, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, K2Node_Select_Default) == 0x000039, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, K2Node_Select_Default_1) == 0x00003A, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00003B, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, K2Node_Select_Default_2) == 0x00003C, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000040, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_DisplayCharacterRespawnState::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWCharacterItem*                 K2Node_CustomEvent_Character_Item;                 // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetTextureForExactGameplayTag_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry) == 0x000038, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry, EntryPoint) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry, K2Node_CustomEvent_Character_Item) == 0x000008, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry::K2Node_CustomEvent_Character_Item' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry, CallFunc_GetTextureForExactGameplayTag_ReturnValue) == 0x000010, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_ExecuteUbergraph_WBP_G_V2_TeamDisplay_HostileEntry::CallFunc_GetTextureForExactGameplayTag_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.InitializeWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget) == 0x000008, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_InitializeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.LoadCharacterItemTexture
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture final
{
public:
	const class UHWCharacterItem*                 Character_Item;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture) == 0x000008, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture, Character_Item) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_LoadCharacterItemTexture::Character_Item' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.UpdateCharacterRespawnTime
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime final
{
public:
	float                                         RemainingRespawnTime;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_Timer_Duration_Display_OutText;    // 0x0010(0x0018)()
	double                                        CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime) == 0x000030, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime, RemainingRespawnTime) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime::RemainingRespawnTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000008, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime, CallFunc_Format_Timer_Duration_Display_OutText) == 0x000010, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime::CallFunc_Format_Timer_Duration_Display_OutText' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime, CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast) == 0x000028, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_UpdateCharacterRespawnTime::CallFunc_Format_Timer_Duration_Display_TimerAsSeconds_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.GetAttributeWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets final
{
public:
	TArray<class UHWGameplayAttributeWidget*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayAttributeWidget*>     K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets) == 0x000020, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_GetAttributeWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_G_V2_TeamDisplay_HostileEntry.WBP_G_V2_TeamDisplay_HostileEntry_C.GetEffectWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets final
{
public:
	TArray<class UHWGameplayEffectWidget*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UHWGameplayEffectWidget*>        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets) == 0x000008, "Wrong alignment on WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets");
static_assert(sizeof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets) == 0x000020, "Wrong size on WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets, ReturnValue) == 0x000000, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_G_V2_TeamDisplay_HostileEntry_C_GetEffectWidgets::K2Node_MakeArray_Array' has a wrong offset!");

}

