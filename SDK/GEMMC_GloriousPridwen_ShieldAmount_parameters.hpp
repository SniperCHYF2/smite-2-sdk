#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GEMMC_GloriousPridwen_ShieldAmount

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GEMMC_GloriousPridwen_ShieldAmount.GEMMC_GloriousPridwen_ShieldAmount_C.CalculateBaseMagnitude
// 0x0378 (0x0378 - 0x0000)
struct GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude final
{
public:
	struct FGameplayEffectSpec                    Spec;                                              // 0x0000(0x02A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x02A8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AmountToContribute;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x02B8(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  SourceTags;                                        // 0x02D8(0x0020)(Edit, BlueprintVisible)
	double                                        MagicalProtBase;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PhysicalProtBase;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetTargetAggregatedTags_ReturnValue;      // 0x0308(0x0020)()
	struct FGameplayTagContainer                  CallFunc_GetSourceAggregatedTags_ReturnValue;      // 0x0328(0x0020)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue_1; // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MagicalProtBase_ImplicitCast;   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PhysicalProtBase_ImplicitCast;  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude) == 0x000008, "Wrong alignment on GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude");
static_assert(sizeof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude) == 0x000378, "Wrong size on GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, Spec) == 0x000000, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::Spec' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, ReturnValue) == 0x0002A8, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, AmountToContribute) == 0x0002B0, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::AmountToContribute' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, TargetTags) == 0x0002B8, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::TargetTags' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, SourceTags) == 0x0002D8, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::SourceTags' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, MagicalProtBase) == 0x0002F8, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::MagicalProtBase' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, PhysicalProtBase) == 0x000300, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::PhysicalProtBase' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_GetTargetAggregatedTags_ReturnValue) == 0x000308, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_GetTargetAggregatedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_GetSourceAggregatedTags_ReturnValue) == 0x000328, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_GetSourceAggregatedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000348, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000350, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue) == 0x000358, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue_1) == 0x00035C, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::CallFunc_K2_GetCapturedAttributeMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000360, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, K2Node_VariableSet_MagicalProtBase_ImplicitCast) == 0x000368, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::K2Node_VariableSet_MagicalProtBase_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude, K2Node_VariableSet_PhysicalProtBase_ImplicitCast) == 0x000370, "Member 'GEMMC_GloriousPridwen_ShieldAmount_C_CalculateBaseMagnitude::K2Node_VariableSet_PhysicalProtBase_ImplicitCast' has a wrong offset!");

}

