#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_OrderAcquisition

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "RallyHereIntegration_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.AllowsGodCardDisplay
// 0x001C (0x001C - 0x0000)
struct WBP_S_OrderAcquisition_C_AllowsGodCardDisplay final
{
public:
	EHWCollectionItemType                         InCollectionType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutAllowsDisplay;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemType                         Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay) == 0x000001, "Wrong alignment on WBP_S_OrderAcquisition_C_AllowsGodCardDisplay");
static_assert(sizeof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay) == 0x00001C, "Wrong size on WBP_S_OrderAcquisition_C_AllowsGodCardDisplay");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, InCollectionType) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::InCollectionType' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, OutAllowsDisplay) == 0x000001, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::OutAllowsDisplay' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable) == 0x000003, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_2) == 0x000005, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_3) == 0x000006, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_4) == 0x000007, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_5) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_6) == 0x000009, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_7) == 0x00000A, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_8) == 0x00000B, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_9) == 0x00000C, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_10) == 0x00000D, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_11) == 0x00000E, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_12) == 0x00000F, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_13) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_14) == 0x000011, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_15) == 0x000012, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_16) == 0x000013, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_17) == 0x000014, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_18) == 0x000015, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_19) == 0x000016, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_20) == 0x000017, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_21) == 0x000018, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_22) == 0x000019, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, Temp_bool_Variable_23) == 0x00001A, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_AllowsGodCardDisplay, K2Node_Select_Default) == 0x00001B, "Member 'WBP_S_OrderAcquisition_C_AllowsGodCardDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(sizeof(WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(offsetof(WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_BndEvt__WBP_S_OrderAcquisition_EntryListView_K2Node_ComponentBoundEvent_0_OnListItemSelectionChangedDynamic__DelegateSignature::bIsSelected' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.DisplayCollectionIcon
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_S_OrderAcquisition_C_DisplayCollectionIcon final
{
public:
	class UHWCollectionItem*                      InCollectionItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCharacterItem*                       AssociatedCharacter;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRH_ItemId                             CallFunc_GetDisplayedItemId_ReturnValue;           // 0x0010(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UHWCharacterItem>        CallFunc_GetAssociatedCharacterFull_ReturnValue;   // 0x0028(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWCharacterItem*                 K2Node_DynamicCast_AsHWCharacter_Item;             // 0x0058(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemType                         CallFunc_GetCollectionType_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayAssociatedCharacter_OutShouldDisplay; // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoForDisplay_OutIconInfo;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemType                         CallFunc_GetCollectionType_ReturnValue_1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllowsGodCardDisplay_OutAllowsDisplay;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon_1;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue_1;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoForDisplay_OutIconInfo_1;      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_DisplayCollectionIcon");
static_assert(sizeof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon) == 0x0000A0, "Wrong size on WBP_S_OrderAcquisition_C_DisplayCollectionIcon");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, InCollectionItem) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::InCollectionItem' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, AssociatedCharacter) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetDisplayedItemId_ReturnValue) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetDisplayedItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetAssociatedCharacterFull_ReturnValue) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetAssociatedCharacterFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, K2Node_DynamicCast_AsHWCharacter_Item) == 0x000058, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::K2Node_DynamicCast_AsHWCharacter_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetCollectionType_ReturnValue) == 0x000061, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetCollectionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_ShouldDisplayAssociatedCharacter_OutShouldDisplay) == 0x000062, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_ShouldDisplayAssociatedCharacter_OutShouldDisplay' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_IsValid_ReturnValue) == 0x000063, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoForDisplay_OutIconInfo) == 0x000068, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoForDisplay_OutIconInfo' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetCollectionType_ReturnValue_1) == 0x000070, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetCollectionType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoByTag_OutIcon) == 0x000078, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000080, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_AllowsGodCardDisplay_OutAllowsDisplay) == 0x000081, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_AllowsGodCardDisplay_OutAllowsDisplay' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x000082, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoByTag_OutIcon_1) == 0x000088, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoByTag_OutIcon_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoByTag_ReturnValue_1) == 0x000090, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionIcon, CallFunc_GetIconInfoForDisplay_OutIconInfo_1) == 0x000098, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionIcon::CallFunc_GetIconInfoForDisplay_OutIconInfo_1' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.DisplayCollectionTitle
// 0x0270 (0x0270 - 0x0000)
struct WBP_S_OrderAcquisition_C_DisplayCollectionTitle final
{
public:
	class UHWCollectionItem*                      InCollectionItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemType                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0220(0x0018)()
	class FText                                   CallFunc_GetItemDisplayNameCAPS_ReturnValue;       // 0x0238(0x0018)()
	EHWCollectionItemType                         CallFunc_GetCollectionType_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0258(0x0018)()
};
static_assert(alignof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_DisplayCollectionTitle");
static_assert(sizeof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle) == 0x000270, "Wrong size on WBP_S_OrderAcquisition_C_DisplayCollectionTitle");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, InCollectionItem) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::InCollectionItem' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_byte_Variable) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_1) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_2) == 0x000040, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_3) == 0x000058, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_4) == 0x000070, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_5) == 0x000088, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_6) == 0x0000A0, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_7) == 0x0000B8, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_8) == 0x0000D0, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_9) == 0x0000E8, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_10) == 0x000100, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_11) == 0x000118, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_12) == 0x000130, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_13) == 0x000148, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_14) == 0x000160, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_15) == 0x000178, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_16) == 0x000190, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_17) == 0x0001A8, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_18) == 0x0001C0, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_19) == 0x0001D8, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_20) == 0x0001F0, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_21) == 0x000208, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, Temp_text_Variable_22) == 0x000220, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, CallFunc_GetItemDisplayNameCAPS_ReturnValue) == 0x000238, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::CallFunc_GetItemDisplayNameCAPS_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, CallFunc_GetCollectionType_ReturnValue) == 0x000250, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::CallFunc_GetCollectionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000251, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_DisplayCollectionTitle, K2Node_Select_Default) == 0x000258, "Member 'WBP_S_OrderAcquisition_C_DisplayCollectionTitle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.ExecuteUbergraph_WBP_S_OrderAcquisition
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveViewRoute_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition");
static_assert(sizeof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition) == 0x000018, "Wrong size on WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition, EntryPoint) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition, CallFunc_RemoveViewRoute_ReturnValue) == 0x000004, "Member 'WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition::CallFunc_RemoveViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition, K2Node_ComponentBoundEvent_Item) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition, K2Node_ComponentBoundEvent_bIsSelected) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition::K2Node_ComponentBoundEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000011, "Member 'WBP_S_OrderAcquisition_C_ExecuteUbergraph_WBP_S_OrderAcquisition::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.GetIconInfoForDisplay
// 0x0038 (0x0038 - 0x0000)
struct WBP_S_OrderAcquisition_C_GetIconInfoForDisplay final
{
public:
	class UHWInventoryItem*                       InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              OutIconInfo;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_GetIconInfoForDisplay");
static_assert(sizeof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay) == 0x000038, "Wrong size on WBP_S_OrderAcquisition_C_GetIconInfoForDisplay");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, InItem) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::InItem' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, OutIconInfo) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::OutIconInfo' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, CallFunc_GetItemIconInfo_ReturnValue) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, CallFunc_GetIconInfoByTag_OutIcon) == 0x000018, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000020, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, CallFunc_GetIconInfoByTag_OutIcon_1) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::CallFunc_GetIconInfoByTag_OutIcon_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_GetIconInfoForDisplay, CallFunc_GetIconInfoByTag_ReturnValue_1) == 0x000030, "Member 'WBP_S_OrderAcquisition_C_GetIconInfoForDisplay::CallFunc_GetIconInfoByTag_ReturnValue_1' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.OnDisplayItem
// 0x0068 (0x0068 - 0x0000)
struct WBP_S_OrderAcquisition_C_OnDisplayItem final
{
public:
	class UHWInventoryItem*                       Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCharacterItem*                       AssociatedCharacter;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWCollectionItem*                      K2Node_DynamicCast_AsHWCollection_Item;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetRarityColorTag_OutColorTag;            // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWUIStyleSubsystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRH_ItemId                             CallFunc_GetDisplayedItemId_ReturnValue;           // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorFromPalette_OutColor;             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetColorFromPalette_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_OnDisplayItem) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_OnDisplayItem");
static_assert(sizeof(WBP_S_OrderAcquisition_C_OnDisplayItem) == 0x000068, "Wrong size on WBP_S_OrderAcquisition_C_OnDisplayItem");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, Item) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, AssociatedCharacter) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::AssociatedCharacter' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, K2Node_DynamicCast_AsHWCollection_Item) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::K2Node_DynamicCast_AsHWCollection_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetRarityColorTag_OutColorTag) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetRarityColorTag_OutColorTag' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetDisplayedItemId_ReturnValue) == 0x000040, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetDisplayedItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetColorFromPalette_OutColor) == 0x000054, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetColorFromPalette_OutColor' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItem, CallFunc_GetColorFromPalette_ReturnValue) == 0x000064, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItem::CallFunc_GetColorFromPalette_ReturnValue' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.OnDisplayItemAsCurrency
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency final
{
public:
	class URHCurrency*                            CURRENCY;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetItemIconInfo_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetFullSplash_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           CallFunc_GetDisplayedStoreItem_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLootQuantity_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurrencyImageRow                      CallFunc_GetCurrencyDataForQuantity_Data;          // 0x0028(0x00C8)()
	bool                                          CallFunc_GetCurrencyDataForQuantity_ReturnValue;   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency");
static_assert(sizeof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency) == 0x0000F8, "Wrong size on WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CURRENCY) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CURRENCY' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetItemIconInfo_ReturnValue) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetItemIconInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetFullSplash_ReturnValue) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetFullSplash_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetDisplayedStoreItem_ReturnValue) == 0x000018, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetDisplayedStoreItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetLootQuantity_ReturnValue) == 0x000020, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetLootQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetCurrencyDataForQuantity_Data) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetCurrencyDataForQuantity_Data' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency, CallFunc_GetCurrencyDataForQuantity_ReturnValue) == 0x0000F0, "Member 'WBP_S_OrderAcquisition_C_OnDisplayItemAsCurrency::CallFunc_GetCurrencyDataForQuantity_ReturnValue' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.OnDisplayOrder
// 0x0110 (0x0110 - 0x0000)
struct WBP_S_OrderAcquisition_C_OnDisplayOrder final
{
public:
	const class URHOrder*                         Order;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetHeaderText_ReturnValue;                // 0x0048(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_OnDisplayOrder) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_OnDisplayOrder");
static_assert(sizeof(WBP_S_OrderAcquisition_C_OnDisplayOrder) == 0x000110, "Wrong size on WBP_S_OrderAcquisition_C_OnDisplayOrder");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Order) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Order' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_bool_Variable) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_text_Variable) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_text_Variable_1) == 0x000028, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_bool_Variable_1) == 0x000040, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_byte_Variable) == 0x000041, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, Temp_byte_Variable_1) == 0x000042, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_GetHeaderText_ReturnValue) == 0x000048, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_GetHeaderText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000060, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, K2Node_Select_Default) == 0x0000D0, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, K2Node_Select_Default_1) == 0x000108, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnDisplayOrder, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'WBP_S_OrderAcquisition_C_OnDisplayOrder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.OnShown
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_OrderAcquisition_C_OnShown final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_OnShown) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_OnShown");
static_assert(sizeof(WBP_S_OrderAcquisition_C_OnShown) == 0x000008, "Wrong size on WBP_S_OrderAcquisition_C_OnShown");
static_assert(offsetof(WBP_S_OrderAcquisition_C_OnShown, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_OnShown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.ShouldDisplayAssociatedCharacter
// 0x001C (0x001C - 0x0000)
struct WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter final
{
public:
	EHWCollectionItemType                         InCollectionType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutShouldDisplay;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWCollectionItemType                         Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter) == 0x000001, "Wrong alignment on WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter");
static_assert(sizeof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter) == 0x00001C, "Wrong size on WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, InCollectionType) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::InCollectionType' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, OutShouldDisplay) == 0x000001, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::OutShouldDisplay' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable) == 0x000003, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_2) == 0x000005, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_3) == 0x000006, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_4) == 0x000007, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_5) == 0x000008, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_6) == 0x000009, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_7) == 0x00000A, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_8) == 0x00000B, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_9) == 0x00000C, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_10) == 0x00000D, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_11) == 0x00000E, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_12) == 0x00000F, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_13) == 0x000010, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_14) == 0x000011, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_15) == 0x000012, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_16) == 0x000013, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_17) == 0x000014, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_18) == 0x000015, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_19) == 0x000016, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_20) == 0x000017, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_21) == 0x000018, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_22) == 0x000019, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, Temp_bool_Variable_23) == 0x00001A, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter, K2Node_Select_Default) == 0x00001B, "Member 'WBP_S_OrderAcquisition_C_ShouldDisplayAssociatedCharacter::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_OrderAcquisition.WBP_S_OrderAcquisition_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_OrderAcquisition_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

