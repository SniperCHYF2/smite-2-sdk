#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SquadAI_Leash

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.BindSquadMemberEvents
// 0x0050 (0x0050 - 0x0000)
struct BP_SquadAI_Leash_C_BindSquadMemberEvents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWCharacter_NPC*>               CallFunc_GetMembers_outMembers;                    // 0x0010(0x0010)(ReferenceParm)
	TDelegate<void(const struct FDamageEventData& DamageEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_NPC*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_BindSquadMemberEvents) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_BindSquadMemberEvents");
static_assert(sizeof(BP_SquadAI_Leash_C_BindSquadMemberEvents) == 0x000050, "Wrong size on BP_SquadAI_Leash_C_BindSquadMemberEvents");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_GetMembers_outMembers) == 0x000010, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_GetMembers_outMembers' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x00003C, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000040, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindSquadMemberEvents, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_SquadAI_Leash_C_BindSquadMemberEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.BindToLeashComponentEvents
// 0x0048 (0x0048 - 0x0000)
struct BP_SquadAI_Leash_C_BindToLeashComponentEvents final
{
public:
	class UPrimitiveComponent*                    LocalComponent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate; // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_BindToLeashComponentEvents) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_BindToLeashComponentEvents");
static_assert(sizeof(BP_SquadAI_Leash_C_BindToLeashComponentEvents) == 0x000048, "Wrong size on BP_SquadAI_Leash_C_BindToLeashComponentEvents");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, LocalComponent) == 0x000000, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::LocalComponent' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashComponentEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_SquadAI_Leash_C_BindToLeashComponentEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.BindToLeashVolumeEvents
// 0x0020 (0x0020 - 0x0000)
struct BP_SquadAI_Leash_C_BindToLeashVolumeEvents final
{
public:
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_BindToLeashVolumeEvents) == 0x000004, "Wrong alignment on BP_SquadAI_Leash_C_BindToLeashVolumeEvents");
static_assert(sizeof(BP_SquadAI_Leash_C_BindToLeashVolumeEvents) == 0x000020, "Wrong size on BP_SquadAI_Leash_C_BindToLeashVolumeEvents");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashVolumeEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_SquadAI_Leash_C_BindToLeashVolumeEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_BindToLeashVolumeEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_SquadAI_Leash_C_BindToLeashVolumeEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.CheckInsideLeash
// 0x0038 (0x0038 - 0x0000)
struct BP_SquadAI_Leash_C_CheckInsideLeash final
{
public:
	class AActor*                                 ActorToCheck;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInsideLeash;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlapDetected;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_CheckInsideLeash) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_CheckInsideLeash");
static_assert(sizeof(BP_SquadAI_Leash_C_CheckInsideLeash) == 0x000038, "Wrong size on BP_SquadAI_Leash_C_CheckInsideLeash");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, ActorToCheck) == 0x000000, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::ActorToCheck' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, IsInsideLeash) == 0x000008, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::IsInsideLeash' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, OverlapDetected) == 0x000009, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::OverlapDetected' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, Temp_bool_True_if_break_was_hit_Variable) == 0x00000A, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_IsOverlappingActor_ReturnValue) == 0x000028, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000031, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_CheckInsideLeash, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_SquadAI_Leash_C_CheckInsideLeash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.DropTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_SquadAI_Leash_C_DropTarget final
{
public:
	class AActor*                                 TargetToDrop;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalOtherActor;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_DropTarget) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_DropTarget");
static_assert(sizeof(BP_SquadAI_Leash_C_DropTarget) == 0x000018, "Wrong size on BP_SquadAI_Leash_C_DropTarget");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, TargetToDrop) == 0x000000, "Member 'BP_SquadAI_Leash_C_DropTarget::TargetToDrop' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, LocalOtherActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_DropTarget::LocalOtherActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'BP_SquadAI_Leash_C_DropTarget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, CallFunc_Array_Contains_ReturnValue) == 0x000011, "Member 'BP_SquadAI_Leash_C_DropTarget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000012, "Member 'BP_SquadAI_Leash_C_DropTarget::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_DropTarget, CallFunc_Array_Contains_ReturnValue_1) == 0x000013, "Member 'BP_SquadAI_Leash_C_DropTarget::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.ExecuteUbergraph_BP_SquadAI_Leash
// 0x0048 (0x0048 - 0x0000)
struct BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_GetBotFactory_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_NPC*                       K2Node_Event_Character;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FDamageEventData& DamageEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash");
static_assert(sizeof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash) == 0x000048, "Wrong size on BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, EntryPoint) == 0x000000, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_GetBotFactory_ReturnValue) == 0x000008, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_GetBotFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, K2Node_Event_Character) == 0x000018, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000020, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000028, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_SquadAI_Leash_C_ExecuteUbergraph_BP_SquadAI_Leash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.GetHostileTarget
// 0x0068 (0x0068 - 0x0000)
struct BP_SquadAI_Leash_C_GetHostileTarget final
{
public:
	class AActor*                                 HostileTarget;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LocalHostileTarget;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_SortHostileTargets_HostileTarget;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInsideLeash_IsInsideLeash;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_GetHostileTarget) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_GetHostileTarget");
static_assert(sizeof(BP_SquadAI_Leash_C_GetHostileTarget) == 0x000068, "Wrong size on BP_SquadAI_Leash_C_GetHostileTarget");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, HostileTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::HostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, Success) == 0x000008, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::Success' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, LocalHostileTarget) == 0x000010, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::LocalHostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_SortHostileTargets_HostileTarget) == 0x000020, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_SortHostileTargets_HostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_CheckInsideLeash_IsInsideLeash) == 0x000029, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_CheckInsideLeash_IsInsideLeash' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000039, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000040, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_GetHostileTarget, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000061, "Member 'BP_SquadAI_Leash_C_GetHostileTarget::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.HasHostileTargets
// 0x0002 (0x0002 - 0x0000)
struct BP_SquadAI_Leash_C_HasHostileTargets final
{
public:
	bool                                          HasHostileTargets_0;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_HasHostileTargets) == 0x000001, "Wrong alignment on BP_SquadAI_Leash_C_HasHostileTargets");
static_assert(sizeof(BP_SquadAI_Leash_C_HasHostileTargets) == 0x000002, "Wrong size on BP_SquadAI_Leash_C_HasHostileTargets");
static_assert(offsetof(BP_SquadAI_Leash_C_HasHostileTargets, HasHostileTargets_0) == 0x000000, "Member 'BP_SquadAI_Leash_C_HasHostileTargets::HasHostileTargets_0' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_HasHostileTargets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000001, "Member 'BP_SquadAI_Leash_C_HasHostileTargets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.IsHostileTargetWithinRange
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SquadAI_Leash_C_IsHostileTargetWithinRange final
{
public:
	class AActor*                                 HostileTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWithinRange;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsWithinRange;                                // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LocalDistance;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWCharacter_NPC*>               CallFunc_GetMembers_outMembers;                    // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_IsHostileTargetWithinRange");
static_assert(sizeof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange) == 0x0000A8, "Wrong size on BP_SquadAI_Leash_C_IsHostileTargetWithinRange");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, HostileTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::HostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, Range) == 0x000008, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::Range' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, IsWithinRange) == 0x000010, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::IsWithinRange' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, LocalIsWithinRange) == 0x000011, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::LocalIsWithinRange' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, LocalDistance) == 0x000018, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::LocalDistance' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_GetMembers_outMembers) == 0x000040, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_GetMembers_outMembers' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x000098, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_IsHostileTargetWithinRange, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_SquadAI_Leash_C_IsHostileTargetWithinRange::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.NewHostileTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadAI_Leash_C_NewHostileTarget final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNowInCombat;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_NewHostileTarget) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_NewHostileTarget");
static_assert(sizeof(BP_SquadAI_Leash_C_NewHostileTarget) == 0x000010, "Wrong size on BP_SquadAI_Leash_C_NewHostileTarget");
static_assert(offsetof(BP_SquadAI_Leash_C_NewHostileTarget, NewTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_NewHostileTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_NewHostileTarget, IsNowInCombat) == 0x000008, "Member 'BP_SquadAI_Leash_C_NewHostileTarget::IsNowInCombat' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_NewHostileTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_SquadAI_Leash_C_NewHostileTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnLeashCompEntered_Del
// 0x0108 (0x0108 - 0x0000)
struct BP_SquadAI_Leash_C_OnLeashCompEntered_Del final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnLeashCompEntered_Del");
static_assert(sizeof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del) == 0x000108, "Wrong size on BP_SquadAI_Leash_C_OnLeashCompEntered_Del");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, OverlappedComponent) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, OtherActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, OtherComp) == 0x000010, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, OtherBodyIndex) == 0x000018, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, bFromSweep) == 0x00001C, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompEntered_Del, SweepResult) == 0x000020, "Member 'BP_SquadAI_Leash_C_OnLeashCompEntered_Del::SweepResult' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnLeashCompExited_Del
// 0x0020 (0x0020 - 0x0000)
struct BP_SquadAI_Leash_C_OnLeashCompExited_Del final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnLeashCompExited_Del) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnLeashCompExited_Del");
static_assert(sizeof(BP_SquadAI_Leash_C_OnLeashCompExited_Del) == 0x000020, "Wrong size on BP_SquadAI_Leash_C_OnLeashCompExited_Del");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompExited_Del, OverlappedComponent) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnLeashCompExited_Del::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompExited_Del, OtherActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_OnLeashCompExited_Del::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompExited_Del, OtherComp) == 0x000010, "Member 'BP_SquadAI_Leash_C_OnLeashCompExited_Del::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashCompExited_Del, OtherBodyIndex) == 0x000018, "Member 'BP_SquadAI_Leash_C_OnLeashCompExited_Del::OtherBodyIndex' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnLeashVolEntered_Del
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadAI_Leash_C_OnLeashVolEntered_Del final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnLeashVolEntered_Del) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnLeashVolEntered_Del");
static_assert(sizeof(BP_SquadAI_Leash_C_OnLeashVolEntered_Del) == 0x000010, "Wrong size on BP_SquadAI_Leash_C_OnLeashVolEntered_Del");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashVolEntered_Del, OverlappedActor) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnLeashVolEntered_Del::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashVolEntered_Del, OtherActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_OnLeashVolEntered_Del::OtherActor' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnLeashVolExited_Del
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadAI_Leash_C_OnLeashVolExited_Del final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnLeashVolExited_Del) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnLeashVolExited_Del");
static_assert(sizeof(BP_SquadAI_Leash_C_OnLeashVolExited_Del) == 0x000010, "Wrong size on BP_SquadAI_Leash_C_OnLeashVolExited_Del");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashVolExited_Del, OverlappedActor) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnLeashVolExited_Del::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnLeashVolExited_Del, OtherActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_OnLeashVolExited_Del::OtherActor' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnSquadMemberAdded
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadAI_Leash_C_OnSquadMemberAdded final
{
public:
	class AHWCharacter_NPC*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnSquadMemberAdded) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnSquadMemberAdded");
static_assert(sizeof(BP_SquadAI_Leash_C_OnSquadMemberAdded) == 0x000008, "Wrong size on BP_SquadAI_Leash_C_OnSquadMemberAdded");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberAdded, Character) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnSquadMemberAdded::Character' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.OnSquadMemberDamaged_Del
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del final
{
public:
	struct FDamageEventData                       DamageEventData;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 LocalInstigator;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0078(0x0018)()
	class AActor*                                 CallFunc_EffectContextGetInstigatorActor_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del");
static_assert(sizeof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del) == 0x0000A0, "Wrong size on BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del, DamageEventData) == 0x000000, "Member 'BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del::DamageEventData' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del, LocalInstigator) == 0x000070, "Member 'BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del::LocalInstigator' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del, CallFunc_GetEffectContext_ReturnValue) == 0x000078, "Member 'BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del, CallFunc_EffectContextGetInstigatorActor_ReturnValue) == 0x000090, "Member 'BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del::CallFunc_EffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del, CallFunc_Array_Contains_ReturnValue) == 0x000098, "Member 'BP_SquadAI_Leash_C_OnSquadMemberDamaged_Del::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.RegisterTargetInLeash
// 0x0028 (0x0028 - 0x0000)
struct BP_SquadAI_Leash_C_RegisterTargetInLeash final
{
public:
	class AActor*                                 NewTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0011(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSquadTeamNum_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_RegisterTargetInLeash) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_RegisterTargetInLeash");
static_assert(sizeof(BP_SquadAI_Leash_C_RegisterTargetInLeash) == 0x000028, "Wrong size on BP_SquadAI_Leash_C_RegisterTargetInLeash");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, NewTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::NewTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000008, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, CallFunc_GetGenericTeamId_ReturnValue) == 0x000011, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, CallFunc_GetSquadTeamNum_ReturnValue) == 0x000014, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::CallFunc_GetSquadTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RegisterTargetInLeash, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_SquadAI_Leash_C_RegisterTargetInLeash::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.RepopulateHostileTargetArray
// 0x0048 (0x0048 - 0x0000)
struct BP_SquadAI_Leash_C_RepopulateHostileTargetArray final
{
public:
	class AActor*                                 LocalHostileTarget;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TempHostileTargets;                                // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInsideLeash_IsInsideLeash;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_RepopulateHostileTargetArray");
static_assert(sizeof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray) == 0x000048, "Wrong size on BP_SquadAI_Leash_C_RepopulateHostileTargetArray");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, LocalHostileTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::LocalHostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, TempHostileTargets) == 0x000008, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::TempHostileTargets' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Array_IsEmpty_ReturnValue) == 0x00001C, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_CheckInsideLeash_IsInsideLeash) == 0x000024, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_CheckInsideLeash_IsInsideLeash' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArray, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.RepopulateHostileTargetArrayBasedOnDistance
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance final
{
public:
	int32                                         LocalIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<double, class AActor*>                   DistanceMap;                                       // 0x0008(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         LocalDistance;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LocalHostileTarget;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TempHostileTargets;                                // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_NPC*                       CallFunc_GetSquadLeader_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_NPC*                       CallFunc_GetSquadLeader_ReturnValue_1;             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue_1;    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance");
static_assert(sizeof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance) == 0x0000E8, "Wrong size on BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, LocalIndex) == 0x000000, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, DistanceMap) == 0x000008, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::DistanceMap' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, LocalDistance) == 0x000058, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::LocalDistance' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, LocalHostileTarget) == 0x000060, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::LocalHostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, TempHostileTargets) == 0x000068, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::TempHostileTargets' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_IsEmpty_ReturnValue) == 0x000084, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_GetSquadLeader_ReturnValue) == 0x000090, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_GetSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000098, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000099, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x0000A8, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, Temp_int_Variable) == 0x0000AC, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_GetSquadLeader_ReturnValue_1) == 0x0000B8, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_GetSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_GetHorizontalDistanceTo_ReturnValue_1) == 0x0000C0, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_GetHorizontalDistanceTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'BP_SquadAI_Leash_C_RepopulateHostileTargetArrayBasedOnDistance::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.RetrieveLeash
// 0x0130 (0x0130 - 0x0000)
struct BP_SquadAI_Leash_C_RetrieveLeash final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_GetBotFactory_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_GetComponentsByTag_ReturnValue;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0040(0x0010)(ReferenceParm)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_GetBotFactory_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AI_C>             K2Node_DynamicCast_AsBPI_AI;                       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ATriggerVolume>          CallFunc_GetLeashVolume_LeashVolume;               // 0x00B8(0x0028)(HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x00E0(0x0020)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATriggerVolume*                         K2Node_DynamicCast_AsTrigger_Volume;               // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BotFactory_Leashed_C*               K2Node_DynamicCast_AsBP_Bot_Factory_Leashed;       // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_RetrieveLeash) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_RetrieveLeash");
static_assert(sizeof(BP_SquadAI_Leash_C_RetrieveLeash) == 0x000130, "Wrong size on BP_SquadAI_Leash_C_RetrieveLeash");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Loop_Counter_Variable_2) == 0x000010, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetBotFactory_ReturnValue) == 0x000028, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetBotFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetComponentsByTag_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000040, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_DoesImplementInterface_ReturnValue) == 0x000061, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000068, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000089, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Less_IntInt_ReturnValue_2) == 0x000095, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetBotFactory_ReturnValue_1) == 0x000098, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetBotFactory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_AsBPI_AI) == 0x0000A0, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_AsBPI_AI' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetLeashVolume_LeashVolume) == 0x0000B8, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetLeashVolume_LeashVolume' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_GetAssetTags_ReturnValue) == 0x0000E0, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000100, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_HasTag_ReturnValue) == 0x000108, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_AsTrigger_Volume) == 0x000110, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_AsTrigger_Volume' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, CallFunc_IsValid_ReturnValue_1) == 0x000119, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_AsBP_Bot_Factory_Leashed) == 0x000120, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_AsBP_Bot_Factory_Leashed' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_RetrieveLeash, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_SquadAI_Leash_C_RetrieveLeash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.SelectClosestSuspiciousTarget
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget final
{
public:
	TArray<class AActor*>                         SuspiciousTargets_0;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 SuspciousTarget;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_NPC*                       SquadMember;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewLocalVar;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LocalSuspiciousTargetsArray;                       // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 LocalSelectedSuspciousTarget;                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestDistanceSquared;                            // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AHWCharacter_NPC*>               CallFunc_GetMembers_outMembers;                    // 0x0070(0x0010)(ReferenceParm)
	class AHWCharacter_NPC*                       CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget");
static_assert(sizeof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget) == 0x0000D0, "Wrong size on BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, SuspiciousTargets_0) == 0x000000, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::SuspiciousTargets_0' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, SuspciousTarget) == 0x000010, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::SuspciousTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, Success) == 0x000018, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::Success' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, SquadMember) == 0x000020, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::SquadMember' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, NewLocalVar) == 0x000028, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, LocalSuspiciousTargetsArray) == 0x000030, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::LocalSuspiciousTargetsArray' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, LocalSelectedSuspciousTarget) == 0x000040, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::LocalSelectedSuspciousTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, ClosestDistanceSquared) == 0x000048, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::ClosestDistanceSquared' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_GetMembers_outMembers) == 0x000070, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_GetMembers_outMembers' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000089, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x0000A0, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A8, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x0000C0, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_IsValid_ReturnValue_1) == 0x0000CD, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000CE, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget, CallFunc_BooleanOR_ReturnValue) == 0x0000CF, "Member 'BP_SquadAI_Leash_C_SelectClosestSuspiciousTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SquadAI_Leash.BP_SquadAI_Leash_C.SortHostileTargets
// 0x0078 (0x0078 - 0x0000)
struct BP_SquadAI_Leash_C_SortHostileTargets final
{
public:
	class AActor*                                 HostileTarget;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalActor;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadAI_Leash_C_SortHostileTargets) == 0x000008, "Wrong alignment on BP_SquadAI_Leash_C_SortHostileTargets");
static_assert(sizeof(BP_SquadAI_Leash_C_SortHostileTargets) == 0x000078, "Wrong size on BP_SquadAI_Leash_C_SortHostileTargets");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, HostileTarget) == 0x000000, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::HostileTarget' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, LocalActor) == 0x000008, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::LocalActor' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, Temp) == 0x000010, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::Temp' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x000040, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x000048, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000070, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadAI_Leash_C_SortHostileTargets, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_SquadAI_Leash_C_SortHostileTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

