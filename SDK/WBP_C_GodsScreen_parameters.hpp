#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodsScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.BP_OnHandleBackAction
// 0x0030 (0x0030 - 0x0000)
struct WBP_C_GodsScreen_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContainerDesiredFocusTarget_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterWidget_C*        K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFocusedDescendants_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_BP_OnHandleBackAction) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_BP_OnHandleBackAction");
static_assert(sizeof(WBP_C_GodsScreen_C_BP_OnHandleBackAction) == 0x000030, "Wrong size on WBP_C_GodsScreen_C_BP_OnHandleBackAction");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, CallFunc_GetContainerDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::CallFunc_GetContainerDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, Temp_bool_Variable) == 0x000010, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, K2Node_Select_Default) == 0x000018, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget) == 0x000020, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_OnHandleBackAction, CallFunc_HasFocusedDescendants_ReturnValue) == 0x000029, "Member 'WBP_C_GodsScreen_C_BP_OnHandleBackAction::CallFunc_HasFocusedDescendants_ReturnValue' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.ExecuteUbergraph_WBP_C_GodsScreen
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWGodsScreenGodEntryWidget*            K2Node_Event_Entry;                                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Row;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Column;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen");
static_assert(sizeof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen) == 0x000020, "Wrong size on WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen");
static_assert(offsetof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen, EntryPoint) == 0x000000, "Member 'WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen, K2Node_Event_Entry) == 0x000008, "Member 'WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen::K2Node_Event_Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen, K2Node_Event_Row) == 0x000010, "Member 'WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen::K2Node_Event_Row' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen, K2Node_Event_Column) == 0x000014, "Member 'WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen::K2Node_Event_Column' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen, CallFunc_AddChildToGrid_ReturnValue) == 0x000018, "Member 'WBP_C_GodsScreen_C_ExecuteUbergraph_WBP_C_GodsScreen::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.GodEntryCreated
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_GodsScreen_C_GodEntryCreated final
{
public:
	class UHWGodsScreenGodEntryWidget*            Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_GodEntryCreated) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_GodEntryCreated");
static_assert(sizeof(WBP_C_GodsScreen_C_GodEntryCreated) == 0x000010, "Wrong size on WBP_C_GodsScreen_C_GodEntryCreated");
static_assert(offsetof(WBP_C_GodsScreen_C_GodEntryCreated, Entry) == 0x000000, "Member 'WBP_C_GodsScreen_C_GodEntryCreated::Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_GodEntryCreated, Row) == 0x000008, "Member 'WBP_C_GodsScreen_C_GodEntryCreated::Row' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_GodEntryCreated, Column) == 0x00000C, "Member 'WBP_C_GodsScreen_C_GodEntryCreated::Column' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.HandleFavoriteAction
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_GodsScreen_C_HandleFavoriteAction final
{
public:
	class UWBP_C_GodDisplay_C*                    K2Node_DynamicCast_AsWBP_C_God_Display;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_HandleFavoriteAction) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_HandleFavoriteAction");
static_assert(sizeof(WBP_C_GodsScreen_C_HandleFavoriteAction) == 0x000010, "Wrong size on WBP_C_GodsScreen_C_HandleFavoriteAction");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleFavoriteAction, K2Node_DynamicCast_AsWBP_C_God_Display) == 0x000000, "Member 'WBP_C_GodsScreen_C_HandleFavoriteAction::K2Node_DynamicCast_AsWBP_C_God_Display' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleFavoriteAction, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_C_GodsScreen_C_HandleFavoriteAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.HandleFocusSearch
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_GodsScreen_C_HandleFocusSearch final
{
public:
	class UWBP_C_GodRoster_FilterWidget_C*        K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_HandleFocusSearch) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_HandleFocusSearch");
static_assert(sizeof(WBP_C_GodsScreen_C_HandleFocusSearch) == 0x000010, "Wrong size on WBP_C_GodsScreen_C_HandleFocusSearch");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleFocusSearch, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget) == 0x000000, "Member 'WBP_C_GodsScreen_C_HandleFocusSearch::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleFocusSearch, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_C_GodsScreen_C_HandleFocusSearch::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.HandleToggleFilterAction
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodsScreen_C_HandleToggleFilterAction final
{
public:
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_GodRoster_FilterWidget_C*        K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_HandleToggleFilterAction) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_HandleToggleFilterAction");
static_assert(sizeof(WBP_C_GodsScreen_C_HandleToggleFilterAction) == 0x000018, "Wrong size on WBP_C_GodsScreen_C_HandleToggleFilterAction");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleToggleFilterAction, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000000, "Member 'WBP_C_GodsScreen_C_HandleToggleFilterAction::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleToggleFilterAction, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget) == 0x000008, "Member 'WBP_C_GodsScreen_C_HandleToggleFilterAction::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_HandleToggleFilterAction, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_C_GodsScreen_C_HandleToggleFilterAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.OnGodSelected
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_GodsScreen_C_OnGodSelected final
{
public:
	const class UHWCharacterItem*                 GodItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHWGodsScreenGodEntryWidget*      EntryWidget;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_OnGodSelected) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_OnGodSelected");
static_assert(sizeof(WBP_C_GodsScreen_C_OnGodSelected) == 0x000018, "Wrong size on WBP_C_GodsScreen_C_OnGodSelected");
static_assert(offsetof(WBP_C_GodsScreen_C_OnGodSelected, GodItem) == 0x000000, "Member 'WBP_C_GodsScreen_C_OnGodSelected::GodItem' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_OnGodSelected, EntryWidget) == 0x000008, "Member 'WBP_C_GodsScreen_C_OnGodSelected::EntryWidget' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_OnGodSelected, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_C_GodsScreen_C_OnGodSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_OnGodSelected, CallFunc_AddViewRoute_ReturnValue) == 0x000011, "Member 'WBP_C_GodsScreen_C_OnGodSelected::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.UpdateGodPackUpsell
// 0x0005 (0x0005 - 0x0000)
struct WBP_C_GodsScreen_C_UpdateGodPackUpsell final
{
public:
	bool                                          bHasGodPack;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_UpdateGodPackUpsell) == 0x000001, "Wrong alignment on WBP_C_GodsScreen_C_UpdateGodPackUpsell");
static_assert(sizeof(WBP_C_GodsScreen_C_UpdateGodPackUpsell) == 0x000005, "Wrong size on WBP_C_GodsScreen_C_UpdateGodPackUpsell");
static_assert(offsetof(WBP_C_GodsScreen_C_UpdateGodPackUpsell, bHasGodPack) == 0x000000, "Member 'WBP_C_GodsScreen_C_UpdateGodPackUpsell::bHasGodPack' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_UpdateGodPackUpsell, Temp_bool_Variable) == 0x000001, "Member 'WBP_C_GodsScreen_C_UpdateGodPackUpsell::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_UpdateGodPackUpsell, Temp_byte_Variable) == 0x000002, "Member 'WBP_C_GodsScreen_C_UpdateGodPackUpsell::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_UpdateGodPackUpsell, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_C_GodsScreen_C_UpdateGodPackUpsell::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_UpdateGodPackUpsell, K2Node_Select_Default) == 0x000004, "Member 'WBP_C_GodsScreen_C_UpdateGodPackUpsell::K2Node_Select_Default' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.BP_GetDesiredFocusTarget
// 0x0040 (0x0040 - 0x0000)
struct WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContainerDesiredFocusTarget_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodRoster_FilterWidget_C*        K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget) == 0x000040, "Wrong size on WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, CallFunc_GetContainerDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::CallFunc_GetContainerDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, Temp_bool_Variable) == 0x000018, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget) == 0x000020, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsWBP_C_God_Roster_Filter_Widget' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, K2Node_Select_Default) == 0x000030, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000038, "Member 'WBP_C_GodsScreen_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_GodsScreen.WBP_C_GodsScreen_C.GetViewRedirectOnBackTag
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_GodsScreen_C_GetViewRedirectOnBackTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodsScreen_C_GetViewRedirectOnBackTag) == 0x000004, "Wrong alignment on WBP_C_GodsScreen_C_GetViewRedirectOnBackTag");
static_assert(sizeof(WBP_C_GodsScreen_C_GetViewRedirectOnBackTag) == 0x000008, "Wrong size on WBP_C_GodsScreen_C_GetViewRedirectOnBackTag");
static_assert(offsetof(WBP_C_GodsScreen_C_GetViewRedirectOnBackTag, ReturnValue) == 0x000000, "Member 'WBP_C_GodsScreen_C_GetViewRedirectOnBackTag::ReturnValue' has a wrong offset!");

}

