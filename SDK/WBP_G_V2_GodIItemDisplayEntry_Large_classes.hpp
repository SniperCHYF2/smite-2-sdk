#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GodIItemDisplayEntry_Large

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "HemingwayUI_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "EnhancedInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_GodIItemDisplayEntry_Large.WBP_G_V2_GodIItemDisplayEntry_Large_C
// 0x0118 (0x0860 - 0x0748)
class UWBP_G_V2_GodIItemDisplayEntry_Large_C final : public UHWActivatableEquipmentWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0748(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CooldownCompleteAnim;                              // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ActiveSheen;                                       // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PersistentFiredAnim;                               // 0x0760(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AimingPhaseAnim;                                   // 0x0768(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FiredPhaseAnim;                                    // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PreFirePhaseAnim;                                  // 0x0778(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHWScaleBox*                            AimingScaler;                                      // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           AmmoText;                                          // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWSizeBox*                             AmmoWrapper;                                       // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               CooldownDarken;                                    // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               CooldownPulse;                                     // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URHAsyncImage*                          EquipmentFrame;                                    // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               FiredFlashOverlay;                                 // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWBorder*                              HitArea_Border;                                    // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWButton*                              HitArea_Gamepad;                                   // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      HitAreaWidgetSwitcher;                             // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_S_HUD_MultiPromptWidget_C*         Hotkeys;                                           // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HoverBG;                                           // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               ItemIcon;                                          // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      PhaseSwitcher;                                     // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               PreFireOverlay;                                    // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             StackOverlay;                                      // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           StackText;                                         // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ItemIconMaterial;                                  // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ValueCount;                                        // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValueMaxed;                                        // 0x0814(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_815[0x3];                                      // 0x0815(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CurrentTextureIcon;                                // 0x0818(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UHWEquipmentItem*                       Equipment_Info;                                    // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryHover;                                 // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryDragStart;                             // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SFXInventoryDragEnd;                               // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AmmoEquipIconOverride(const TSoftObjectPtr<class UTexture2D>& OverrideTexture);
	void BndEvt__WBP_Dev_GodIItemDisplayEntry_Smite2_HitArea_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_Dev_GodIItemDisplayEntry_Smite2_HitArea_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_2_OnEffectTrackStarted__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_3_OnEffectTrackEnded__DelegateSignature(const struct FActiveGameplayEffect& ActiveEffect, const struct FHWTrackedEffectData& EffectData);
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_CooldownWidget_K2Node_ComponentBoundEvent_4_OnEffectsUntracked__DelegateSignature();
	void BndEvt__WBP_G_V2_GodIItemDisplayEntry_EFarmer_Dev1_HitArea_Gamepad_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void Check_Item_Fire(ETriggerEvent KeyTriggerEvent);
	void DisplayAbilityPhase_Aiming(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Fired(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_Inactive(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAbilityPhase_PreFire(EHWUIAbilityFlowPhase PreviousPhase);
	void DisplayAmmo(const int32 AmmoCount, const bool bHasEnough, const int32 MaxCount);
	void DisplayEquipment(const class UHWEquipmentItem* EquipmentInfo);
	void DisplayIconOverride(const TSoftObjectPtr<class UTexture2D>& Texture);
	void DisplayInputTag(const struct FGameplayTag& Tag);
	void DisplayIsEquipmentItemComplete(bool bIsComplete);
	void DisplayStackCount(const int32 StackCount, const int32 MaxStackCount);
	void ExecuteUbergraph_WBP_G_V2_GodIItemDisplayEntry_Large(int32 EntryPoint);
	void HandleCompleteSwapAction();
	void HandleInitializeSwapAction();
	void HandlePlayerInputTypeChanged(ERH_INPUT_STATE NewState);
	void InitializeWidget();
	struct FEventReply On_HitArea_Border_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply On_HitArea_Border_MouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnHover();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnUnhover();
	void PlayPhaseAnimation(EHWUIAbilityFlowPhase PreviousPhase, class UWidget* PhaseWidget, class UWidgetAnimation* PhaseAnim, bool bLoopAnimation);
	void PreConstruct(bool IsDesignTime);
	void SetDisplayOrientation(EHWOrientation InOrientation);
	void SFXPlayInventoryDragEnd();
	void SFXPlayInventoryDragStart();
	void StopPhaseAnimation(EHWUIAbilityFlowPhase PhaseAnimation);
	void UninitializeWidget();
	void UpdateActiveSheen();
	void UpdateGrayscale();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_GodIItemDisplayEntry_Large_C">();
	}
	static class UWBP_G_V2_GodIItemDisplayEntry_Large_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_GodIItemDisplayEntry_Large_C>();
	}
};
static_assert(alignof(UWBP_G_V2_GodIItemDisplayEntry_Large_C) == 0x000008, "Wrong alignment on UWBP_G_V2_GodIItemDisplayEntry_Large_C");
static_assert(sizeof(UWBP_G_V2_GodIItemDisplayEntry_Large_C) == 0x000860, "Wrong size on UWBP_G_V2_GodIItemDisplayEntry_Large_C");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, UberGraphFrame) == 0x000748, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, CooldownCompleteAnim) == 0x000750, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::CooldownCompleteAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, ActiveSheen) == 0x000758, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::ActiveSheen' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, PersistentFiredAnim) == 0x000760, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::PersistentFiredAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, AimingPhaseAnim) == 0x000768, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::AimingPhaseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, FiredPhaseAnim) == 0x000770, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::FiredPhaseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, PreFirePhaseAnim) == 0x000778, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::PreFirePhaseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, AimingScaler) == 0x000780, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::AimingScaler' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, AmmoText) == 0x000788, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::AmmoText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, AmmoWrapper) == 0x000790, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::AmmoWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, CooldownDarken) == 0x000798, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::CooldownDarken' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, CooldownPulse) == 0x0007A0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::CooldownPulse' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, EquipmentFrame) == 0x0007A8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::EquipmentFrame' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, FiredFlashOverlay) == 0x0007B0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::FiredFlashOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, HitArea_Border) == 0x0007B8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::HitArea_Border' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, HitArea_Gamepad) == 0x0007C0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::HitArea_Gamepad' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, HitAreaWidgetSwitcher) == 0x0007C8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::HitAreaWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, Hotkeys) == 0x0007D0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::Hotkeys' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, HoverBG) == 0x0007D8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::HoverBG' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, ItemIcon) == 0x0007E0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, PhaseSwitcher) == 0x0007E8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::PhaseSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, PreFireOverlay) == 0x0007F0, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::PreFireOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, StackOverlay) == 0x0007F8, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::StackOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, StackText) == 0x000800, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::StackText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, ItemIconMaterial) == 0x000808, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::ItemIconMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, ValueCount) == 0x000810, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::ValueCount' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, ValueMaxed) == 0x000814, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::ValueMaxed' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, CurrentTextureIcon) == 0x000818, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::CurrentTextureIcon' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, Equipment_Info) == 0x000840, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::Equipment_Info' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, SFXInventoryHover) == 0x000848, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::SFXInventoryHover' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, SFXInventoryDragStart) == 0x000850, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::SFXInventoryDragStart' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_GodIItemDisplayEntry_Large_C, SFXInventoryDragEnd) == 0x000858, "Member 'UWBP_G_V2_GodIItemDisplayEntry_Large_C::SFXInventoryDragEnd' has a wrong offset!");

}

