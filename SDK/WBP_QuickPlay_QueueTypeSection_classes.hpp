#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickPlay_QueueTypeSection

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C
// 0x0120 (0x06D8 - 0x05B8)
class UWBP_QuickPlay_QueueTypeSection_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_C_QueueButton_Standalone_C*        ArenaTutorialButton;                               // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_QueueButton_Standalone_C*        ConquestTutorialButton;                            // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_QueueButton_Custom_C*            CreateCustomButton;                                // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage;                                           // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_1;                                         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HWImage_87;                                        // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_QueueButton_Standalone_C*        PracticeButtonNew;                                 // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           QueueButtonsContainer;                             // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuickPlay_QueueTypeHeader_C*       QueueTypeHeader;                                   // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_C_QueueButton_Standalone_C*        SoloNPETestButton;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const class FString& QueueId)> OnQueueSelected;                    // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnQueueHovered;                            // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnQueueUnhovered;                          // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UWBP_QuickPlay_QueueButton_C*>   QueueButtons;                                      // 0x0640(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMulticastInlineDelegate<void(TArray<class UWBP_QuickPlay_QueueButton_C*>& QueueButton)> OnQueuePopulated; // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCustomMatchSelected;                             // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(TArray<class URHWidget*>& Buttons)> OnCustomMatchPopulated;        // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UHWQueueDataFactory*                    QueueDataFactory;                                  // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnPracticeButtonSelected;                          // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnArenaTutorialSelected;                           // 0x0698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnConquestTutorialSlected;                         // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const class FString& SpecialQueueName, bool bIsHovered)> OnSpecialQueueHoverEvent; // 0x06B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnArenaSoloNPESelected;                            // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_0_ButtonSelected__DelegateSignature();
	void BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature(bool bHovered);
	void BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature(bool bHovered);
	void BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_4_ButtonSelected__DelegateSignature();
	void BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature(bool bHovered);
	void BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_8_ButtonSelected__DelegateSignature();
	void BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature(bool bHovered);
	void BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_6_ButtonSelected__DelegateSignature();
	void BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature(bool bHovered);
	void BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_9_ButtonSelected__DelegateSignature();
	void CheckPracticeQueuesStatus();
	void Construct();
	void ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection(int32 EntryPoint);
	void GetQueueButtons(TArray<class UWBP_QuickPlay_QueueButton_C*>* Buttons);
	void HandleOnQueueClicked(const class FString& QueueId);
	void HandleOnQueueHovered(class UWidget* Widget);
	void HandleOnQueueUnhovered(class UWidget* Widget);
	void HandlePartyDataUpdated();
	void HandlePartyMemberDataUpdated(const struct FRH_PartyMemberData& PartyMember);
	void InitializeWidget();
	void OnInitialized();
	void Populate_Section();
	void PreConstruct(bool IsDesignTime);
	void ResetQueueButtons();
	void UpdateLocalPlayerPartyStatus(bool bIsInParty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_QuickPlay_QueueTypeSection_C">();
	}
	static class UWBP_QuickPlay_QueueTypeSection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_QuickPlay_QueueTypeSection_C>();
	}
};
static_assert(alignof(UWBP_QuickPlay_QueueTypeSection_C) == 0x000008, "Wrong alignment on UWBP_QuickPlay_QueueTypeSection_C");
static_assert(sizeof(UWBP_QuickPlay_QueueTypeSection_C) == 0x0006D8, "Wrong size on UWBP_QuickPlay_QueueTypeSection_C");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, UberGraphFrame) == 0x0005B8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, ArenaTutorialButton) == 0x0005C0, "Member 'UWBP_QuickPlay_QueueTypeSection_C::ArenaTutorialButton' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, ConquestTutorialButton) == 0x0005C8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::ConquestTutorialButton' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, CreateCustomButton) == 0x0005D0, "Member 'UWBP_QuickPlay_QueueTypeSection_C::CreateCustomButton' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, HWImage) == 0x0005D8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::HWImage' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, HWImage_1) == 0x0005E0, "Member 'UWBP_QuickPlay_QueueTypeSection_C::HWImage_1' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, HWImage_87) == 0x0005E8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::HWImage_87' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, PracticeButtonNew) == 0x0005F0, "Member 'UWBP_QuickPlay_QueueTypeSection_C::PracticeButtonNew' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, QueueButtonsContainer) == 0x0005F8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::QueueButtonsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, QueueTypeHeader) == 0x000600, "Member 'UWBP_QuickPlay_QueueTypeSection_C::QueueTypeHeader' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, SoloNPETestButton) == 0x000608, "Member 'UWBP_QuickPlay_QueueTypeSection_C::SoloNPETestButton' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnQueueSelected) == 0x000610, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnQueueSelected' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnQueueHovered) == 0x000620, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnQueueHovered' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnQueueUnhovered) == 0x000630, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnQueueUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, QueueButtons) == 0x000640, "Member 'UWBP_QuickPlay_QueueTypeSection_C::QueueButtons' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnQueuePopulated) == 0x000650, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnQueuePopulated' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnCustomMatchSelected) == 0x000660, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnCustomMatchSelected' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnCustomMatchPopulated) == 0x000670, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnCustomMatchPopulated' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, QueueDataFactory) == 0x000680, "Member 'UWBP_QuickPlay_QueueTypeSection_C::QueueDataFactory' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnPracticeButtonSelected) == 0x000688, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnPracticeButtonSelected' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnArenaTutorialSelected) == 0x000698, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnArenaTutorialSelected' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnConquestTutorialSlected) == 0x0006A8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnConquestTutorialSlected' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnSpecialQueueHoverEvent) == 0x0006B8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnSpecialQueueHoverEvent' has a wrong offset!");
static_assert(offsetof(UWBP_QuickPlay_QueueTypeSection_C, OnArenaSoloNPESelected) == 0x0006C8, "Member 'UWBP_QuickPlay_QueueTypeSection_C::OnArenaSoloNPESelected' has a wrong offset!");

}

