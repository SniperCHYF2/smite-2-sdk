#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GenericButton

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_GenericButton.WBP_S_GenericButton_C
// 0x0090 (0x0648 - 0x05B8)
class UWBP_S_GenericButton_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWImage*                               BGFIll;                                            // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           ButtonText;                                        // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HitArea;                                           // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               HoverOverlay;                                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWOverlay*                             KeyBackground;                                     // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnClicked;                                 // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnHovered;                                 // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnUnhovered;                               // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   DefaultButtonText;                                 // 0x0618(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            BackgroundFillTintColor;                           // 0x0630(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void BndEvt__LoadoutButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__LoadoutButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__LoadoutButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void Do_Hover();
	void Do_Unhover();
	void ExecuteUbergraph_WBP_S_GenericButton(int32 EntryPoint);
	void GamepadConfirm();
	void GamepadHover();
	void GamepadUnhover();
	bool NavigateConfirm();
	void PreConstruct(bool IsDesignTime);
	void SetButtonText(const class FText& ButtonText_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_GenericButton_C">();
	}
	static class UWBP_S_GenericButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_GenericButton_C>();
	}
};
static_assert(alignof(UWBP_S_GenericButton_C) == 0x000008, "Wrong alignment on UWBP_S_GenericButton_C");
static_assert(sizeof(UWBP_S_GenericButton_C) == 0x000648, "Wrong size on UWBP_S_GenericButton_C");
static_assert(offsetof(UWBP_S_GenericButton_C, UberGraphFrame) == 0x0005B8, "Member 'UWBP_S_GenericButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, BGFIll) == 0x0005C0, "Member 'UWBP_S_GenericButton_C::BGFIll' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, ButtonText) == 0x0005C8, "Member 'UWBP_S_GenericButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, HitArea) == 0x0005D0, "Member 'UWBP_S_GenericButton_C::HitArea' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, HoverOverlay) == 0x0005D8, "Member 'UWBP_S_GenericButton_C::HoverOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, KeyBackground) == 0x0005E0, "Member 'UWBP_S_GenericButton_C::KeyBackground' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, OnClicked) == 0x0005E8, "Member 'UWBP_S_GenericButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, OnHovered) == 0x0005F8, "Member 'UWBP_S_GenericButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, OnUnhovered) == 0x000608, "Member 'UWBP_S_GenericButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, DefaultButtonText) == 0x000618, "Member 'UWBP_S_GenericButton_C::DefaultButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_S_GenericButton_C, BackgroundFillTintColor) == 0x000630, "Member 'UWBP_S_GenericButton_C::BackgroundFillTintColor' has a wrong offset!");

}

