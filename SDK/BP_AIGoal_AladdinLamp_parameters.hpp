#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_AladdinLamp

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_AladdinLamp.BP_AIGoal_AladdinLamp_C.CheckPreconditionsBP
// 0x0030 (0x0030 - 0x0000)
struct BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP) == 0x000030, "Wrong size on BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, Temp_bool_Variable) == 0x000009, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000029, "Member 'BP_AIGoal_AladdinLamp_C_CheckPreconditionsBP::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

}

