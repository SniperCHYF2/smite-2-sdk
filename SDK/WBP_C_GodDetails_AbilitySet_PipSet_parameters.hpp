#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_GodDetails_AbilitySet_PipSet

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_C_GodDetails_AbilitySet_PipSet.WBP_C_GodDetails_AbilitySet_PipSet_C.HandleOnPipClicked
// 0x0040 (0x0040 - 0x0000)
struct WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked final
{
public:
	class UWBP_C_GodDetails_AbilitySet_PipEntry_C* PipEntry;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked) == 0x000008, "Wrong alignment on WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked");
static_assert(sizeof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked) == 0x000040, "Wrong size on WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, PipEntry) == 0x000000, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::PipEntry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_HandleOnPipClicked::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetails_AbilitySet_PipSet.WBP_C_GodDetails_AbilitySet_PipSet_C.PreConstruct
// 0x0040 (0x0040 - 0x0000)
struct WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_C_GodDetails_AbilitySet_PipEntry_C* PipEntry)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodDetails_AbilitySet_PipEntry_C* CallFunc_Create_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct) == 0x000008, "Wrong alignment on WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct");
static_assert(sizeof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct) == 0x000040, "Wrong size on WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, Temp_int_Variable) == 0x000020, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000030, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_PreConstruct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_C_GodDetails_AbilitySet_PipSet.WBP_C_GodDetails_AbilitySet_PipSet_C.SetPipStates
// 0x0058 (0x0058 - 0x0000)
struct WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCount;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_C_GodDetails_AbilitySet_PipEntry_C* K2Node_DynamicCast_AsWBP_C_God_Details_Ability_Set_Pip_Entry; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates) == 0x000008, "Wrong alignment on WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates");
static_assert(sizeof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates) == 0x000058, "Wrong size on WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, SelectedIndex) == 0x000000, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::SelectedIndex' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, TotalCount) == 0x000004, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::TotalCount' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, K2Node_DynamicCast_AsWBP_C_God_Details_Ability_Set_Pip_Entry) == 0x000048, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::K2Node_DynamicCast_AsWBP_C_God_Details_Ability_Set_Pip_Entry' has a wrong offset!");
static_assert(offsetof(WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_C_GodDetails_AbilitySet_PipSet_C_SetPipStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

