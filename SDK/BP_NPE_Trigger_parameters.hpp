#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_Trigger

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_Trigger.BP_NPE_Trigger_C.CheckTriggerCondition
// 0x0001 (0x0001 - 0x0000)
struct BP_NPE_Trigger_C_CheckTriggerCondition final
{
public:
	bool                                          ConditionMet;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_Trigger_C_CheckTriggerCondition) == 0x000001, "Wrong alignment on BP_NPE_Trigger_C_CheckTriggerCondition");
static_assert(sizeof(BP_NPE_Trigger_C_CheckTriggerCondition) == 0x000001, "Wrong size on BP_NPE_Trigger_C_CheckTriggerCondition");
static_assert(offsetof(BP_NPE_Trigger_C_CheckTriggerCondition, ConditionMet) == 0x000000, "Member 'BP_NPE_Trigger_C_CheckTriggerCondition::ConditionMet' has a wrong offset!");

// Function BP_NPE_Trigger.BP_NPE_Trigger_C.ExecuteUbergraph_BP_NPE_Trigger
// 0x0058 (0x0058 - 0x0000)
struct BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPE_Checkpoint_C*                   K2Node_DynamicCast_AsBP_NPE_Checkpoint;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_Checkpoint_C*                   K2Node_DynamicCast_AsBP_NPE_Checkpoint_1;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger) == 0x000008, "Wrong alignment on BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger");
static_assert(sizeof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger) == 0x000058, "Wrong size on BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, EntryPoint) == 0x000000, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, K2Node_DynamicCast_AsBP_NPE_Checkpoint) == 0x000028, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::K2Node_DynamicCast_AsBP_NPE_Checkpoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, K2Node_DynamicCast_AsBP_NPE_Checkpoint_1) == 0x000048, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::K2Node_DynamicCast_AsBP_NPE_Checkpoint_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Less_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_NPE_Trigger_C_ExecuteUbergraph_BP_NPE_Trigger::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_Trigger.BP_NPE_Trigger_C.GetCustomNPETriggerTag
// 0x0008 (0x0008 - 0x0000)
struct BP_NPE_Trigger_C_GetCustomNPETriggerTag final
{
public:
	struct FGameplayTag                           CustomTag;                                         // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_Trigger_C_GetCustomNPETriggerTag) == 0x000004, "Wrong alignment on BP_NPE_Trigger_C_GetCustomNPETriggerTag");
static_assert(sizeof(BP_NPE_Trigger_C_GetCustomNPETriggerTag) == 0x000008, "Wrong size on BP_NPE_Trigger_C_GetCustomNPETriggerTag");
static_assert(offsetof(BP_NPE_Trigger_C_GetCustomNPETriggerTag, CustomTag) == 0x000000, "Member 'BP_NPE_Trigger_C_GetCustomNPETriggerTag::CustomTag' has a wrong offset!");

// Function BP_NPE_Trigger.BP_NPE_Trigger_C.Trigger
// 0x0003 (0x0003 - 0x0000)
struct BP_NPE_Trigger_C_Trigger final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_Trigger_C_Trigger) == 0x000001, "Wrong alignment on BP_NPE_Trigger_C_Trigger");
static_assert(sizeof(BP_NPE_Trigger_C_Trigger) == 0x000003, "Wrong size on BP_NPE_Trigger_C_Trigger");
static_assert(offsetof(BP_NPE_Trigger_C_Trigger, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_NPE_Trigger_C_Trigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_Trigger, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_NPE_Trigger_C_Trigger::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_Trigger_C_Trigger, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_NPE_Trigger_C_Trigger::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

