#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_TooltipAbility

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.AddedDescriptionLine
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_AddedDescriptionLine final
{
public:
	class UHWTooltipWidget_AbilityDescription*    AddedLine;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_AddedDescriptionLine) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbility_C_AddedDescriptionLine");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_AddedDescriptionLine) == 0x000020, "Wrong size on WBP_G_V1_TooltipAbility_C_AddedDescriptionLine");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDescriptionLine, AddedLine) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_AddedDescriptionLine::AddedLine' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDescriptionLine, K2Node_MakeStruct_Margin) == 0x000008, "Member 'WBP_G_V1_TooltipAbility_C_AddedDescriptionLine::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDescriptionLine, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'WBP_G_V1_TooltipAbility_C_AddedDescriptionLine::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.AddedDetailLine
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_AddedDetailLine final
{
public:
	class UHWTooltipWidget_AbilityDetail*         AddedLine;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_AddedDetailLine) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbility_C_AddedDetailLine");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_AddedDetailLine) == 0x000010, "Wrong size on WBP_G_V1_TooltipAbility_C_AddedDetailLine");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDetailLine, AddedLine) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_AddedDetailLine::AddedLine' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDetailLine, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'WBP_G_V1_TooltipAbility_C_AddedDetailLine::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.AddedDividerLine
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_AddedDividerLine final
{
public:
	class UHWWidget*                              AddedLine;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_AddedDividerLine) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbility_C_AddedDividerLine");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_AddedDividerLine) == 0x000010, "Wrong size on WBP_G_V1_TooltipAbility_C_AddedDividerLine");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDividerLine, AddedLine) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_AddedDividerLine::AddedLine' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_AddedDividerLine, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'WBP_G_V1_TooltipAbility_C_AddedDividerLine::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.DisplayIcon
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_DisplayIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_DisplayIcon) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbility_C_DisplayIcon");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_DisplayIcon) == 0x000030, "Wrong size on WBP_G_V1_TooltipAbility_C_DisplayIcon");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_DisplayIcon, Icon) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_DisplayIcon::Icon' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_DisplayIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000028, "Member 'WBP_G_V1_TooltipAbility_C_DisplayIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.DisplayRange
// 0x0004 (0x0004 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_DisplayRange final
{
public:
	float                                         Range;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_DisplayRange) == 0x000004, "Wrong alignment on WBP_G_V1_TooltipAbility_C_DisplayRange");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_DisplayRange) == 0x000004, "Wrong size on WBP_G_V1_TooltipAbility_C_DisplayRange");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_DisplayRange, Range) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_DisplayRange::Range' has a wrong offset!");

// Function WBP_G_V1_TooltipAbility.WBP_G_V1_TooltipAbility_C.DisplayTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipAbility_C_DisplayTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_TooltipAbility_C_DisplayTitle) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipAbility_C_DisplayTitle");
static_assert(sizeof(WBP_G_V1_TooltipAbility_C_DisplayTitle) == 0x000018, "Wrong size on WBP_G_V1_TooltipAbility_C_DisplayTitle");
static_assert(offsetof(WBP_G_V1_TooltipAbility_C_DisplayTitle, Title) == 0x000000, "Member 'WBP_G_V1_TooltipAbility_C_DisplayTitle::Title' has a wrong offset!");

}

