#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_GS_UILibrary

#include "Basic.hpp"

#include "BPL_GS_UILibrary_classes.hpp"
#include "BPL_GS_UILibrary_parameters.hpp"


namespace SDK
{

// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.CheckToPlayCanNotFireSound
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_Activate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasRefireTimeRemaining                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOnCooldown                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DoesNotMeetCost                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag&                    BlockTagReason                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          World_Context                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPL_GS_UILibrary_C::CheckToPlayCanNotFireSound(bool Can_Activate, bool HasRefireTimeRemaining, bool IsOnCooldown, bool DoesNotMeetCost, struct FGameplayTag& BlockTagReason, class UObject* World_Context, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "CheckToPlayCanNotFireSound");

	Params::BPL_GS_UILibrary_C_CheckToPlayCanNotFireSound Parms{};

	Parms.Can_Activate = Can_Activate;
	Parms.HasRefireTimeRemaining = HasRefireTimeRemaining;
	Parms.IsOnCooldown = IsOnCooldown;
	Parms.DoesNotMeetCost = DoesNotMeetCost;
	Parms.BlockTagReason = std::move(BlockTagReason);
	Parms.World_Context = World_Context;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	BlockTagReason = std::move(Parms.BlockTagReason);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.Format Timer Duration Display
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHWGameHUD*                       GameHUD                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TimerAsSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisplayFractional                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            OutText                                                (Parm, OutParm)

void UBPL_GS_UILibrary_C::Format_Timer_Duration_Display(class AHWGameHUD* GameHUD, double TimerAsSeconds, bool DisplayFractional, class UObject* __WorldContext, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "Format Timer Duration Display");

	Params::BPL_GS_UILibrary_C_Format_Timer_Duration_Display Parms{};

	Parms.GameHUD = GameHUD;
	Parms.TimerAsSeconds = TimerAsSeconds;
	Parms.DisplayFractional = DisplayFractional;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.GetFloatingNumberAsText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHWFloatingTextWidget*            InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters&          InParameters                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32&                                  InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            OutText                                                (Parm, OutParm)

void UBPL_GS_UILibrary_C::GetFloatingNumberAsText(class UHWFloatingTextWidget* InWidget, struct FGameplayCueParameters& InParameters, int32& InNumber, class UObject* __WorldContext, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "GetFloatingNumberAsText");

	Params::BPL_GS_UILibrary_C_GetFloatingNumberAsText Parms{};

	Parms.InWidget = InWidget;
	Parms.InParameters = std::move(InParameters);
	Parms.InNumber = InNumber;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InParameters = std::move(Parms.InParameters);
	InNumber = Parms.InNumber;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.GetKillstreakTextFromKillstreakTag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              KillstreakTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            KillstreakText                                         (Parm, OutParm)

void UBPL_GS_UILibrary_C::GetKillstreakTextFromKillstreakTag(const struct FGameplayTag& KillstreakTag, class UObject* __WorldContext, bool* bFound, class FText* KillstreakText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "GetKillstreakTextFromKillstreakTag");

	Params::BPL_GS_UILibrary_C_GetKillstreakTextFromKillstreakTag Parms{};

	Parms.KillstreakTag = std::move(KillstreakTag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (KillstreakText != nullptr)
		*KillstreakText = std::move(Parms.KillstreakText);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.GetMultikillTextFromMultikillTag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              MultikillTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            MultikillText                                          (Parm, OutParm)

void UBPL_GS_UILibrary_C::GetMultikillTextFromMultikillTag(const struct FGameplayTag& MultikillTag, class UObject* __WorldContext, bool* bFound, class FText* MultikillText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "GetMultikillTextFromMultikillTag");

	Params::BPL_GS_UILibrary_C_GetMultikillTextFromMultikillTag Parms{};

	Parms.MultikillTag = std::move(MultikillTag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (MultikillText != nullptr)
		*MultikillText = std::move(Parms.MultikillText);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.UILibrary_GetSmiteTeamColorTag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHWSmiteTeamId                          SmiteTeamId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    ColorTag                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBPL_GS_UILibrary_C::UILibrary_GetSmiteTeamColorTag(EHWSmiteTeamId SmiteTeamId, class UObject* __WorldContext, struct FGameplayTag* ColorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "UILibrary_GetSmiteTeamColorTag");

	Params::BPL_GS_UILibrary_C_UILibrary_GetSmiteTeamColorTag Parms{};

	Parms.SmiteTeamId = SmiteTeamId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ColorTag != nullptr)
		*ColorTag = std::move(Parms.ColorTag);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.UILibrary_GetTeamAttitudeColorTag
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETeamAttitude                           Attitude                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    ColorTag                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBPL_GS_UILibrary_C::UILibrary_GetTeamAttitudeColorTag(ETeamAttitude Attitude, class UObject* __WorldContext, struct FGameplayTag* ColorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "UILibrary_GetTeamAttitudeColorTag");

	Params::BPL_GS_UILibrary_C_UILibrary_GetTeamAttitudeColorTag Parms{};

	Parms.Attitude = Attitude;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ColorTag != nullptr)
		*ColorTag = std::move(Parms.ColorTag);
}


// Function BPL_GS_UILibrary.BPL_GS_UILibrary_C.UILibrary_GetTeamColorTag
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGenericTeamId&                  InTeamId                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    ColorTag                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBPL_GS_UILibrary_C::UILibrary_GetTeamColorTag(struct FGenericTeamId& InTeamId, class UObject* __WorldContext, struct FGameplayTag* ColorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_GS_UILibrary_C", "UILibrary_GetTeamColorTag");

	Params::BPL_GS_UILibrary_C_UILibrary_GetTeamColorTag Parms{};

	Parms.InTeamId = std::move(InTeamId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InTeamId = std::move(Parms.InTeamId);

	if (ColorTag != nullptr)
		*ColorTag = std::move(Parms.ColorTag);
}

}

