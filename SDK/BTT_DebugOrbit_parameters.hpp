#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_DebugOrbit

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.Calculate and Cache Orbit Point
// 0x00A8 (0x00A8 - 0x0000)
struct BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point");
static_assert(sizeof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point) == 0x0000A8, "Wrong size on BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, Pawn) == 0x000000, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000020, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000040, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000070, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0000A0, "Member 'BTT_DebugOrbit_C_Calculate_and_Cache_Orbit_Point::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.EvaluateOrbit
// 0x01D0 (0x01D0 - 0x0000)
struct BTT_DebugOrbit_C_EvaluateOrbit final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveDirection;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NextLocation;                                      // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocation;                                   // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ToNext;                                            // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ToCurrent;                                         // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SubstendedRadians;                                 // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceThisTick;                                  // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Asin_ReturnValue;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_EvaluateOrbit) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_EvaluateOrbit");
static_assert(sizeof(BTT_DebugOrbit_C_EvaluateOrbit) == 0x0001D0, "Wrong size on BTT_DebugOrbit_C_EvaluateOrbit");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, Pawn) == 0x000000, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, DeltaTime) == 0x000008, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::DeltaTime' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, Controller) == 0x000010, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::Controller' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, MoveDirection) == 0x000018, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::MoveDirection' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, NextLocation) == 0x000030, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::NextLocation' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CurrentLocation) == 0x000048, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CurrentLocation' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, ToNext) == 0x000060, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::ToNext' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, ToCurrent) == 0x000078, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::ToCurrent' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, SubstendedRadians) == 0x000090, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::SubstendedRadians' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, Radius) == 0x000098, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::Radius' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, DistanceThisTick) == 0x0000A0, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::DistanceThisTick' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C0, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000D8, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F0, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_RadiansToDegrees_ReturnValue) == 0x000120, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_RotateAngleAxis_ReturnValue) == 0x000128, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_GetMovementComponent_ReturnValue) == 0x000140, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_GetMaxSpeed_ReturnValue) == 0x000148, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000150, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_SafeDivide_ReturnValue) == 0x000160, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Asin_ReturnValue) == 0x000168, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Asin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000170, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000188, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Vector_Normal2D_ReturnValue) == 0x000190, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x0001A8, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0001B0, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0001B8, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0001C0, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_EvaluateOrbit, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'BTT_DebugOrbit_C_EvaluateOrbit::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ExecuteUbergraph_BTT_DebugOrbit
// 0x0038 (0x0038 - 0x0000)
struct BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EvaluateOrbit_DeltaTime_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit");
static_assert(sizeof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit) == 0x000038, "Wrong size on BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, EntryPoint) == 0x000000, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, K2Node_Event_OwnerController) == 0x000018, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, CallFunc_IsValid_ReturnValue_1) == 0x00002D, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit, CallFunc_EvaluateOrbit_DeltaTime_ImplicitCast) == 0x000030, "Member 'BTT_DebugOrbit_C_ExecuteUbergraph_BTT_DebugOrbit::CallFunc_EvaluateOrbit_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_DebugOrbit_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_DebugOrbit_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_DebugOrbit_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_DebugOrbit_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_DebugOrbit_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_DebugOrbit_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_DebugOrbit_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_ReceiveTickAI");
static_assert(sizeof(BTT_DebugOrbit_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_DebugOrbit_C_ReceiveTickAI");
static_assert(offsetof(BTT_DebugOrbit_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_DebugOrbit_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_DebugOrbit_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_DebugOrbit_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_DebugOrbit.BTT_DebugOrbit_C.WalkInDirection
// 0x0058 (0x0058 - 0x0000)
struct BTT_DebugOrbit_C_WalkInDirection final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          Controller;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_HeadingAngle_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_DebugOrbit_C_WalkInDirection) == 0x000008, "Wrong alignment on BTT_DebugOrbit_C_WalkInDirection");
static_assert(sizeof(BTT_DebugOrbit_C_WalkInDirection) == 0x000058, "Wrong size on BTT_DebugOrbit_C_WalkInDirection");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, Pawn) == 0x000000, "Member 'BTT_DebugOrbit_C_WalkInDirection::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, Direction) == 0x000008, "Member 'BTT_DebugOrbit_C_WalkInDirection::Direction' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, Controller) == 0x000020, "Member 'BTT_DebugOrbit_C_WalkInDirection::Controller' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, CallFunc_Vector_HeadingAngle_ReturnValue) == 0x000028, "Member 'BTT_DebugOrbit_C_WalkInDirection::CallFunc_Vector_HeadingAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, CallFunc_RadiansToDegrees_ReturnValue) == 0x000030, "Member 'BTT_DebugOrbit_C_WalkInDirection::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BTT_DebugOrbit_C_WalkInDirection::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_DebugOrbit_C_WalkInDirection, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000050, "Member 'BTT_DebugOrbit_C_WalkInDirection::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

}

