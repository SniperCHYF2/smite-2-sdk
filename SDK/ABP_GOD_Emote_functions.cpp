#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GOD_Emote

#include "Basic.hpp"

#include "ABP_GOD_Emote_classes.hpp"
#include "ABP_GOD_Emote_parameters.hpp"


namespace SDK
{

// Function ABP_GOD_Emote.ABP_GOD_Emote_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_GOD_Emote_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "AnimGraph");

	Params::ABP_GOD_Emote_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UABP_GOD_Emote_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UABP_GOD_Emote_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BlueprintUpdateAnimation");

	Params::ABP_GOD_Emote_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_CanTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanTransition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_CanTransition(bool CanTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_CanTransition");

	Params::ABP_GOD_Emote_C_BPI_AN_CanTransition Parms{};

	Parms.CanTransition = CanTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_GenericStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharGenericStance                      Stance_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_GenericStance(ECharGenericStance Stance_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_GenericStance");

	Params::ABP_GOD_Emote_C_BPI_AN_GenericStance Parms{};

	Parms.Stance_State = Stance_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_JumpEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    JumpEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_JumpEnd(bool JumpEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_JumpEnd");

	Params::ABP_GOD_Emote_C_BPI_AN_JumpEnd Parms{};

	Parms.JumpEnd = JumpEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_PassiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharPassiveState                       PassiveState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PassiveValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_PassiveState(ECharPassiveState PassiveState, double PassiveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_PassiveState");

	Params::ABP_GOD_Emote_C_BPI_AN_PassiveState Parms{};

	Parms.PassiveState = PassiveState;
	Parms.PassiveValue = PassiveValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_PlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_PlayRate(double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_PlayRate");

	Params::ABP_GOD_Emote_C_BPI_AN_PlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_AN_RunVariant
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Variant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_AN_RunVariant(bool Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_AN_RunVariant");

	Params::ABP_GOD_Emote_C_BPI_AN_RunVariant Parms{};

	Parms.Variant = Variant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_DisablePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Bone_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Turn_Off                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_DisablePhysics(class FName Bone_Name, bool Turn_Off)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_DisablePhysics");

	Params::ABP_GOD_Emote_C_BPI_ANS_DisablePhysics Parms{};

	Parms.Bone_Name = Bone_Name;
	Parms.Turn_Off = Turn_Off;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_DisableTurnInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableTurnInPlace                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_DisableTurnInPlace(bool DisableTurnInPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_DisableTurnInPlace");

	Params::ABP_GOD_Emote_C_BPI_ANS_DisableTurnInPlace Parms{};

	Parms.DisableTurnInPlace = DisableTurnInPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_EmoteQuery
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EmoteQuery                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_EmoteQuery(bool EmoteQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_EmoteQuery");

	Params::ABP_GOD_Emote_C_BPI_ANS_EmoteQuery Parms{};

	Parms.EmoteQuery = EmoteQuery;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ForceFullBody
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fullbody                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BlendOutTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ForceFullBody(bool Fullbody, double BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ForceFullBody");

	Params::ABP_GOD_Emote_C_BPI_ANS_ForceFullBody Parms{};

	Parms.Fullbody = Fullbody;
	Parms.BlendOutTime = BlendOutTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_HideBlueprintVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_HideBlueprintVFX(bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_HideBlueprintVFX");

	Params::ABP_GOD_Emote_C_BPI_ANS_HideBlueprintVFX Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_PlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_PlayRate(double PlayRate, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_PlayRate");

	Params::ABP_GOD_Emote_C_BPI_ANS_PlayRate Parms{};

	Parms.PlayRate = PlayRate;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_Prop01Lock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_Prop01Lock(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_Prop01Lock");

	Params::ABP_GOD_Emote_C_BPI_ANS_Prop01Lock Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_Prop02Lock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_Prop02Lock(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_Prop02Lock");

	Params::ABP_GOD_Emote_C_BPI_ANS_Prop02Lock Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ScaleCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ScaleValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ScaleCharacter(double ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ScaleCharacter");

	Params::ABP_GOD_Emote_C_BPI_ANS_ScaleCharacter Parms{};

	Parms.ScaleValue = ScaleValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ScaleFromCurve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRigVMFunction_AnimRichCurve&BoneScaleCurve                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             Bone_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ScaleFromCurve(const struct FRigVMFunction_AnimRichCurve& BoneScaleCurve, class FName Bone_Name, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ScaleFromCurve");

	Params::ABP_GOD_Emote_C_BPI_ANS_ScaleFromCurve Parms{};

	Parms.BoneScaleCurve = std::move(BoneScaleCurve);
	Parms.Bone_Name = Bone_Name;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ScaleWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ScaleValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ScaleWeapon(double ScaleValue, int32 Weapon, bool Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ScaleWeapon");

	Params::ABP_GOD_Emote_C_BPI_ANS_ScaleWeapon Parms{};

	Parms.ScaleValue = ScaleValue;
	Parms.Weapon = Weapon;
	Parms.Override = Override;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ShowMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ShowMesh(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ShowMesh");

	Params::ABP_GOD_Emote_C_BPI_ANS_ShowMesh Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_StopMotionWarping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AlphaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_StopMotionWarping(double AlphaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_StopMotionWarping");

	Params::ABP_GOD_Emote_C_BPI_ANS_StopMotionWarping Parms{};

	Parms.AlphaValue = AlphaValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ANS_ToggleBoulder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ANS_ToggleBoulder(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ANS_ToggleBoulder");

	Params::ABP_GOD_Emote_C_BPI_ANS_ToggleBoulder Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_BellonaWeaponOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharGenericStance                      OverrideStance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_BellonaWeaponOverride(bool Override, ECharGenericStance OverrideStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_BellonaWeaponOverride");

	Params::ABP_GOD_Emote_C_BPI_BellonaWeaponOverride Parms{};

	Parms.Override = Override;
	Parms.OverrideStance = OverrideStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_ChildMesh_Outro
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayOutro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_ChildMesh_Outro(bool PlayOutro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_ChildMesh_Outro");

	Params::ABP_GOD_Emote_C_BPI_ChildMesh_Outro Parms{};

	Parms.PlayOutro = PlayOutro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_CombatStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CombatState                           CombatState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_CombatStance(E_CombatState CombatState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_CombatStance");

	Params::ABP_GOD_Emote_C_BPI_CombatStance Parms{};

	Parms.CombatState_0 = CombatState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_Morrigan_Fire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayFire                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_Morrigan_Fire(bool PlayFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_Morrigan_Fire");

	Params::ABP_GOD_Emote_C_BPI_Morrigan_Fire Parms{};

	Parms.PlayFire = PlayFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_Morrigan_PlayIntroA
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayIntro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_Morrigan_PlayIntroA(bool PlayIntro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_Morrigan_PlayIntroA");

	Params::ABP_GOD_Emote_C_BPI_Morrigan_PlayIntroA Parms{};

	Parms.PlayIntro = PlayIntro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_Morrigan_PlayIntroB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayIntro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_Morrigan_PlayIntroB(bool PlayIntro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_Morrigan_PlayIntroB");

	Params::ABP_GOD_Emote_C_BPI_Morrigan_PlayIntroB Parms{};

	Parms.PlayIntro = PlayIntro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_PelvisDirectionFromVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsePelvisDirection                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_PelvisDirectionFromVelocity(bool UsePelvisDirection, double ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_PelvisDirectionFromVelocity");

	Params::ABP_GOD_Emote_C_BPI_PelvisDirectionFromVelocity Parms{};

	Parms.UsePelvisDirection = UsePelvisDirection;
	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.BPI_TailAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AlphaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::BPI_TailAlpha(double AlphaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "BPI_TailAlpha");

	Params::ABP_GOD_Emote_C_BPI_TailAlpha Parms{};

	Parms.AlphaValue = AlphaValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.ExecuteUbergraph_ABP_GOD_Emote
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::ExecuteUbergraph_ABP_GOD_Emote(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "ExecuteUbergraph_ABP_GOD_Emote");

	Params::ABP_GOD_Emote_C_ExecuteUbergraph_ABP_GOD_Emote Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.FidgetTimer
// (BlueprintCallable, BlueprintEvent)

void UABP_GOD_Emote_C::FidgetTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "FidgetTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.IntroMat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Emote_C::IntroMat(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "IntroMat");

	Params::ABP_GOD_Emote_C_IntroMat Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Emote.ABP_GOD_Emote_C.GetSkinnedFiringMontageTag
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              SourceIdTag                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              OriginalFiringMontageTag                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FGameplayTag UABP_GOD_Emote_C::GetSkinnedFiringMontageTag(const struct FGameplayTag& SourceIdTag, const struct FGameplayTag& OriginalFiringMontageTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Emote_C", "GetSkinnedFiringMontageTag");

	Params::ABP_GOD_Emote_C_GetSkinnedFiringMontageTag Parms{};

	Parms.SourceIdTag = std::move(SourceIdTag);
	Parms.OriginalFiringMontageTag = std::move(OriginalFiringMontageTag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

