#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SquadAI_Patrol

#include "Basic.hpp"

#include "BP_SquadAI_Patrol_classes.hpp"
#include "BP_SquadAI_Patrol_parameters.hpp"


namespace SDK
{

// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ApplyPullTimerVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PullTimerDuration                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::ApplyPullTimerVisual(double PullTimerDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ApplyPullTimerVisual");

	Params::BP_SquadAI_Patrol_C_ApplyPullTimerVisual Parms{};

	Parms.PullTimerDuration = PullTimerDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.CancelPatrolWait
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::CancelPatrolWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "CancelPatrolWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ClearCurrentHostile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CurrentHostile                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::ClearCurrentHostile(class AActor* CurrentHostile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ClearCurrentHostile");

	Params::BP_SquadAI_Patrol_C_ClearCurrentHostile Parms{};

	Parms.CurrentHostile = CurrentHostile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ClearDeadHostiles
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::ClearDeadHostiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ClearDeadHostiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ExecuteUbergraph_BP_SquadAI_Patrol
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::ExecuteUbergraph_BP_SquadAI_Patrol(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ExecuteUbergraph_BP_SquadAI_Patrol");

	Params::BP_SquadAI_Patrol_C_ExecuteUbergraph_BP_SquadAI_Patrol Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.FilterByTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     InMustNotHaveTags                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     InMustHaveTags                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::FilterByTags(const struct FGameplayTagContainer& InMustNotHaveTags, const struct FGameplayTagContainer& InMustHaveTags, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "FilterByTags");

	Params::BP_SquadAI_Patrol_C_FilterByTags Parms{};

	Parms.InMustNotHaveTags = std::move(InMustNotHaveTags);
	Parms.InMustHaveTags = std::move(InMustHaveTags);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.GetClosestHostileTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          ClosestTarget                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::GetClosestHostileTarget(class AActor** ClosestTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "GetClosestHostileTarget");

	Params::BP_SquadAI_Patrol_C_GetClosestHostileTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ClosestTarget != nullptr)
		*ClosestTarget = Parms.ClosestTarget;
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.GetHostileTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     MustNotHaveTags                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     MustHaveTags                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor**                          HostileTarget                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::GetHostileTarget(const struct FGameplayTagContainer& MustNotHaveTags, const struct FGameplayTagContainer& MustHaveTags, class AActor** HostileTarget, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "GetHostileTarget");

	Params::BP_SquadAI_Patrol_C_GetHostileTarget Parms{};

	Parms.MustNotHaveTags = std::move(MustNotHaveTags);
	Parms.MustHaveTags = std::move(MustHaveTags);

	UObject::ProcessEvent(Func, &Parms);

	if (HostileTarget != nullptr)
		*HostileTarget = Parms.HostileTarget;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.OnMemberDamaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageEventData&          DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_SquadAI_Patrol_C::OnMemberDamaged(const struct FDamageEventData& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "OnMemberDamaged");

	Params::BP_SquadAI_Patrol_C_OnMemberDamaged Parms{};

	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.OnSquadMemberAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AHWCharacter_NPC*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::OnSquadMemberAdded(class AHWCharacter_NPC* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "OnSquadMemberAdded");

	Params::BP_SquadAI_Patrol_C_OnSquadMemberAdded Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.PullCancelled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::PullCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "PullCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.PullEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::PullEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "PullEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SquadAI_Patrol_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "ReceiveTick");

	Params::BP_SquadAI_Patrol_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.RemovePullTimerVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::RemovePullTimerVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "RemovePullTimerVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.SortHostileTargets
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          HostileTarget                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::SortHostileTargets(class AActor** HostileTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "SortHostileTargets");

	Params::BP_SquadAI_Patrol_C_SortHostileTargets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HostileTarget != nullptr)
		*HostileTarget = Parms.HostileTarget;
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.SquadCombatStatusCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   TagCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHWAbilitySystemComponent*        AbilitySystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::SquadCombatStatusCheck(const struct FGameplayTag& Tag, int32 TagCount, class UHWAbilitySystemComponent* AbilitySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "SquadCombatStatusCheck");

	Params::BP_SquadAI_Patrol_C_SquadCombatStatusCheck Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagCount = TagCount;
	Parms.AbilitySystem = AbilitySystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.StartPatrolWait
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeToWait                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::StartPatrolWait(double TimeToWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "StartPatrolWait");

	Params::BP_SquadAI_Patrol_C_StartPatrolWait Parms{};

	Parms.TimeToWait = TimeToWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.StartPullTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SquadAI_Patrol_C::StartPullTimer(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "StartPullTimer");

	Params::BP_SquadAI_Patrol_C_StartPullTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadAI_Patrol.BP_SquadAI_Patrol_C.WaitComplete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SquadAI_Patrol_C::WaitComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadAI_Patrol_C", "WaitComplete");

	UObject::ProcessEvent(Func, nullptr);
}

}

