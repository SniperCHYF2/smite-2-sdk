#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Play_Seige_TankTower

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Play_Seige_TankTower.BP_AIGoal_Play_Seige_TankTower_C.AreAnyFriendlyMinionsNear
// 0x0060 (0x0060 - 0x0000)
struct BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MinionsAreNear;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0010(0x0020)()
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWCharacter_Base*>              CallFunc_GetAlliesWithinRange_outTargets;          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear");
static_assert(sizeof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear) == 0x000060, "Wrong size on BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, InController) == 0x000000, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, MinionsAreNear) == 0x000008, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::MinionsAreNear' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000038, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, CallFunc_GetAlliesWithinRange_outTargets) == 0x000048, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::CallFunc_GetAlliesWithinRange_outTargets' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AIGoal_Play_Seige_TankTower_C_AreAnyFriendlyMinionsNear::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_TankTower.BP_AIGoal_Play_Seige_TankTower_C.CheckPreconditionsBP
// 0x0060 (0x0060 - 0x0000)
struct BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPercentage_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFrontliner_OutIsFrontLiner;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyFriendlyMinionsNear_MinionsAreNear; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCloseEnoughToPlayActor_ReturnValue;     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentPlayStateEqualTo_ReturnValue;    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP) == 0x000060, "Wrong size on BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000020, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_GetHealthPercentage_ReturnValue) == 0x00002C, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_GetHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_IsFrontliner_OutIsFrontLiner) == 0x000030, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_IsFrontliner_OutIsFrontLiner' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable) == 0x000031, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_IsPlayActorDamageable_bIsPlayActorDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_AreAnyFriendlyMinionsNear_MinionsAreNear) == 0x000032, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_AreAnyFriendlyMinionsNear_MinionsAreNear' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000033, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_IsCloseEnoughToPlayActor_ReturnValue) == 0x000035, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_IsCloseEnoughToPlayActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue) == 0x000038, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00003C, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000044, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_IsCurrentPlayStateEqualTo_ReturnValue) == 0x000045, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_IsCurrentPlayStateEqualTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_BooleanOR_ReturnValue) == 0x000046, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000048, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_AIGoal_Play_Seige_TankTower_C_CheckPreconditionsBP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_TankTower.BP_AIGoal_Play_Seige_TankTower_C.IsFrontliner
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner final
{
public:
	class AHWCharacter_Base*                      InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsFrontLiner;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSoloRole_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSupportRole_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner");
static_assert(sizeof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner) == 0x000010, "Wrong size on BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner, InCharacter) == 0x000000, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner::InCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner, OutIsFrontLiner) == 0x000008, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner::OutIsFrontLiner' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner, CallFunc_IsCharacterSoloRole_ReturnValue) == 0x000009, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner::CallFunc_IsCharacterSoloRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner, CallFunc_IsCharacterSupportRole_ReturnValue) == 0x00000A, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsFrontliner::CallFunc_IsCharacterSupportRole_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Play_Seige_TankTower.BP_AIGoal_Play_Seige_TankTower_C.IsPlayActorDamageable
// 0x0050 (0x0050 - 0x0000)
struct BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable final
{
public:
	class AActor*                                 PlayActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayActorDamageable;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageable;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable) == 0x000008, "Wrong alignment on BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable");
static_assert(sizeof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable) == 0x000050, "Wrong size on BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, PlayActor) == 0x000000, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::PlayActor' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, bIsPlayActorDamageable) == 0x000008, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::bIsPlayActorDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, bDamageable) == 0x000009, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::bDamageable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, K2Node_DynamicCast_AsHWBot_Factory) == 0x000010, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AIGoal_Play_Seige_TankTower_C_IsPlayActorDamageable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

