#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_TutorialQuestTracker

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "S_NPE_QuestConfig_structs.hpp"
#include "S_NPE_QuestConfig_SubObjective_structs.hpp"
#include "S_NPE_Quest_SubObjective_structs.hpp"
#include "S_NPE_Quest_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.AreAllObjectivesCompleted
// 0x0038 (0x0038 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted final
{
public:
	TArray<struct FS_NPE_Quest_SubObjective>      Objectives;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsComplete;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest_SubObjective              CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted) == 0x000038, "Wrong size on BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, Objectives) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::Objectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, bIsComplete) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::bIsComplete' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_NPE_TutorialQuestTracker_C_AreAllObjectivesCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.BeginNPEQuest
// 0x0060 (0x0060 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_BeginNPEQuest final
{
public:
	struct FGameplayTag                           QuestTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x0008(0x0028)(HasGetValueTypeHash)
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_BeginNPEQuest");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest) == 0x000060, "Wrong size on BP_NPE_TutorialQuestTracker_C_BeginNPEQuest");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, QuestTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, K2Node_MakeStruct_S_NPE_Quest) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_BeginNPEQuest, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_NPE_TutorialQuestTracker_C_BeginNPEQuest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.CompleteNPEQuest
// 0x0068 (0x0068 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest final
{
public:
	struct FGameplayTag                           QuestTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNPEQuestGoal_QuestGoal;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x0040(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest) == 0x000068, "Wrong size on BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest, QuestTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest, CallFunc_GetNPEQuestGoal_QuestGoal) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest::CallFunc_GetNPEQuestGoal_QuestGoal' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest, K2Node_MakeStruct_S_NPE_Quest) == 0x000040, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuest::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.CompleteNPEQuestObjective
// 0x00C8 (0x00C8 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective final
{
public:
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FoundQuestTag;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CachedCompletedObjectives;                         // 0x0010(0x0020)(Edit, BlueprintVisible)
	int32                                         LocalClampedProgress;                              // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_FindQuestByObjective_QuestTag;            // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetQuestObjectiveTags_ObjectiveTags;      // 0x0040(0x0020)()
	bool                                          CallFunc_EqualEqual_GameplayTagContainer_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value;                           // 0x0068(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective) == 0x0000C8, "Wrong size on BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, ObjectiveTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, FoundQuestTag) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::FoundQuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CachedCompletedObjectives) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CachedCompletedObjectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, LocalClampedProgress) == 0x000030, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::LocalClampedProgress' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_FindQuestByObjective_QuestTag) == 0x000034, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_FindQuestByObjective_QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x00003C, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_GetQuestObjectiveTags_ObjectiveTags) == 0x000040, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_GetQuestObjectiveTags_ObjectiveTags' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_EqualEqual_GameplayTagContainer_ReturnValue) == 0x000060, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_EqualEqual_GameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_Map_Find_Value) == 0x000068, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_HasTag_ReturnValue) == 0x000091, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, K2Node_MakeStruct_S_NPE_Quest) == 0x000098, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_NPE_TutorialQuestTracker_C_CompleteNPEQuestObjective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.ExecuteUbergraph_BP_NPE_TutorialQuestTracker
// 0x0004 (0x0004 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker) == 0x000004, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker) == 0x000004, "Wrong size on BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker, EntryPoint) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_ExecuteUbergraph_BP_NPE_TutorialQuestTracker::EntryPoint' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.FindQuestByObjective
// 0x00C8 (0x00C8 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_FindQuestByObjective final
{
public:
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           QuestTag;                                          // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_NPE_QuestConfig_SubObjective> CachedObjectives;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig_SubObjective        CallFunc_Array_Get_Item;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig                     CallFunc_Array_Get_Item_1;                         // 0x0070(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_FindQuestByObjective");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective) == 0x0000C8, "Wrong size on BP_NPE_TutorialQuestTracker_C_FindQuestByObjective");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, ObjectiveTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, QuestTag) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CachedObjectives) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CachedObjectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000064, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_FindQuestByObjective, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_NPE_TutorialQuestTracker_C_FindQuestByObjective::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.GetNPEQuestGoal
// 0x0078 (0x0078 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal final
{
public:
	struct FGameplayTag                           QuestTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         QuestGoal;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig                     CallFunc_Array_Get_Item;                           // 0x0020(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal) == 0x000078, "Wrong size on BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, QuestTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, QuestGoal) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::QuestGoal' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000071, "Member 'BP_NPE_TutorialQuestTracker_C_GetNPEQuestGoal::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.GetObjective
// 0x0050 (0x0050 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_GetObjective final
{
public:
	TArray<struct FS_NPE_Quest_SubObjective>      Objectives;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest_SubObjective              bIsComplete;                                       // 0x0018(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest_SubObjective              CallFunc_Array_Get_Item;                           // 0x0034(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_GetObjective) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_GetObjective");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_GetObjective) == 0x000050, "Wrong size on BP_NPE_TutorialQuestTracker_C_GetObjective");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, Objectives) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::Objectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, ObjectiveTag) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, bIsComplete) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::bIsComplete' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjective, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00004C, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjective::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.GetObjectiveGoal
// 0x00B0 (0x00B0 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal final
{
public:
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Goal;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_QuestConfig                     CallFunc_Array_Get_Item;                           // 0x0020(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig_SubObjective        CallFunc_Array_Get_Item_1;                         // 0x0078(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal) == 0x0000B0, "Wrong size on BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, ObjectiveTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, Goal) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::Goal' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000A5, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_NPE_TutorialQuestTracker_C_GetObjectiveGoal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.GetQuestObjectiveTags
// 0x00F0 (0x00F0 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags final
{
public:
	struct FGameplayTag                           QuestTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ObjectiveTags;                                     // 0x0008(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  LocalObjectiveTags;                                // 0x0028(0x0020)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig                     CallFunc_Array_Get_Item;                           // 0x0068(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_QuestConfig_SubObjective        CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags) == 0x0000F0, "Wrong size on BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, QuestTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, ObjectiveTags) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::ObjectiveTags' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, LocalObjectiveTags) == 0x000028, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::LocalObjectiveTags' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000ED, "Member 'BP_NPE_TutorialQuestTracker_C_GetQuestObjectiveTags::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.GiveNPEQuestProgress
// 0x00E8 (0x00E8 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress final
{
public:
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         ProgressIncrement;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FoundQuestTag;                                     // 0x000C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CachedCompletedObjectives;                         // 0x0018(0x0020)(Edit, BlueprintVisible)
	int32                                         LocalClampedProgress;                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_FindQuestByObjective_QuestTag;            // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetObjectiveGoal_Goal;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetQuestObjectiveTags_ObjectiveTags;      // 0x0060(0x0020)()
	bool                                          CallFunc_EqualEqual_GameplayTagContainer_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value_2;                         // 0x0088(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x00B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress) == 0x0000E8, "Wrong size on BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, ObjectiveTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, ProgressIncrement) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::ProgressIncrement' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, FoundQuestTag) == 0x00000C, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::FoundQuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CachedCompletedObjectives) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CachedCompletedObjectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, LocalClampedProgress) == 0x000038, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::LocalClampedProgress' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_FindQuestByObjective_QuestTag) == 0x00003C, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_FindQuestByObjective_QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000044, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_GetObjectiveGoal_Goal) == 0x000048, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_GetObjectiveGoal_Goal' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_Value) == 0x00004C, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_Value_1) == 0x000054, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_ReturnValue_1) == 0x000058, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_GetQuestObjectiveTags_ObjectiveTags) == 0x000060, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_GetQuestObjectiveTags_ObjectiveTags' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_EqualEqual_GameplayTagContainer_ReturnValue) == 0x000080, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_EqualEqual_GameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_Value_2) == 0x000088, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Map_Find_ReturnValue_2) == 0x0000B0, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_HasTag_ReturnValue) == 0x0000B1, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, K2Node_MakeStruct_S_NPE_Quest) == 0x0000B8, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BP_NPE_TutorialQuestTracker_C_GiveNPEQuestProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.IncrementNPEQuestProgress
// 0x00E8 (0x00E8 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress final
{
public:
	struct FGameplayTag                           QuestTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Increment;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalClampedProgress;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNPEQuestGoal_QuestGoal;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x0058(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_GetNPEQuestGoal_QuestGoal_1;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           CallFunc_Map_Find_Value_1;                         // 0x0088(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest_1;                   // 0x00B8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress) == 0x0000E8, "Wrong size on BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, QuestTag) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::QuestTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, Increment) == 0x000008, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::Increment' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, LocalClampedProgress) == 0x00000C, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::LocalClampedProgress' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Max_ReturnValue) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Max_ReturnValue_1) == 0x000014, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_GetNPEQuestGoal_QuestGoal) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_GetNPEQuestGoal_QuestGoal' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Max_ReturnValue_2) == 0x000050, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, K2Node_MakeStruct_S_NPE_Quest) == 0x000058, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_GetNPEQuestGoal_QuestGoal_1) == 0x000080, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_GetNPEQuestGoal_QuestGoal_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Map_Find_Value_1) == 0x000088, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Map_Find_ReturnValue_1) == 0x0000B0, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, K2Node_MakeStruct_S_NPE_Quest_1) == 0x0000B8, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::K2Node_MakeStruct_S_NPE_Quest_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress, CallFunc_Min_ReturnValue) == 0x0000E0, "Member 'BP_NPE_TutorialQuestTracker_C_IncrementNPEQuestProgress::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.IsObjectiveCompleted
// 0x0048 (0x0048 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted final
{
public:
	TArray<struct FS_NPE_Quest_SubObjective>      Objectives;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsComplete;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Quest_SubObjective              CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted) == 0x000048, "Wrong size on BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, Objectives) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::Objectives' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, ObjectiveTag) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, bIsComplete) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::bIsComplete' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000040, "Member 'BP_NPE_TutorialQuestTracker_C_IsObjectiveCompleted::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_TutorialQuestTracker.BP_NPE_TutorialQuestTracker_C.SetNewNPEQuestList
// 0x00A0 (0x00A0 - 0x0000)
struct BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList final
{
public:
	TArray<struct FS_NPE_QuestConfig>             QuestList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Quest                           K2Node_MakeStruct_S_NPE_Quest;                     // 0x0020(0x0028)(HasGetValueTypeHash)
	struct FS_NPE_QuestConfig                     CallFunc_Array_Get_Item;                           // 0x0048(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList) == 0x000008, "Wrong alignment on BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList");
static_assert(sizeof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList) == 0x0000A0, "Wrong size on BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, QuestList) == 0x000000, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::QuestList' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, K2Node_MakeStruct_S_NPE_Quest) == 0x000020, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::K2Node_MakeStruct_S_NPE_Quest' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_NPE_TutorialQuestTracker_C_SetNewNPEQuestList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

