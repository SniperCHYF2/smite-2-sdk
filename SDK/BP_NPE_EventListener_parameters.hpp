#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_EventListener

#include "Basic.hpp"

#include "E_NPE_ObjectiveEvents_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_EventListener.BP_NPE_EventListener_C.ExecuteUbergraph_BP_NPE_EventListener
// 0x0004 (0x0004 - 0x0000)
struct BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener) == 0x000004, "Wrong alignment on BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener");
static_assert(sizeof(BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener) == 0x000004, "Wrong size on BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener");
static_assert(offsetof(BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener, EntryPoint) == 0x000000, "Member 'BP_NPE_EventListener_C_ExecuteUbergraph_BP_NPE_EventListener::EntryPoint' has a wrong offset!");

// Function BP_NPE_EventListener.BP_NPE_EventListener_C.GetCurrentObjectiveState
// 0x0001 (0x0001 - 0x0000)
struct BP_NPE_EventListener_C_GetCurrentObjectiveState final
{
public:
	E_NPE_ObjectiveEvents                         CurrentState;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_EventListener_C_GetCurrentObjectiveState) == 0x000001, "Wrong alignment on BP_NPE_EventListener_C_GetCurrentObjectiveState");
static_assert(sizeof(BP_NPE_EventListener_C_GetCurrentObjectiveState) == 0x000001, "Wrong size on BP_NPE_EventListener_C_GetCurrentObjectiveState");
static_assert(offsetof(BP_NPE_EventListener_C_GetCurrentObjectiveState, CurrentState) == 0x000000, "Member 'BP_NPE_EventListener_C_GetCurrentObjectiveState::CurrentState' has a wrong offset!");

// Function BP_NPE_EventListener.BP_NPE_EventListener_C.GetObjectiveRemainingTime
// 0x0008 (0x0008 - 0x0000)
struct BP_NPE_EventListener_C_GetObjectiveRemainingTime final
{
public:
	double                                        RemainingTime;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_EventListener_C_GetObjectiveRemainingTime) == 0x000008, "Wrong alignment on BP_NPE_EventListener_C_GetObjectiveRemainingTime");
static_assert(sizeof(BP_NPE_EventListener_C_GetObjectiveRemainingTime) == 0x000008, "Wrong size on BP_NPE_EventListener_C_GetObjectiveRemainingTime");
static_assert(offsetof(BP_NPE_EventListener_C_GetObjectiveRemainingTime, RemainingTime) == 0x000000, "Member 'BP_NPE_EventListener_C_GetObjectiveRemainingTime::RemainingTime' has a wrong offset!");

// Function BP_NPE_EventListener.BP_NPE_EventListener_C.GetObjectiveRespawnTime
// 0x0008 (0x0008 - 0x0000)
struct BP_NPE_EventListener_C_GetObjectiveRespawnTime final
{
public:
	double                                        RespawnTime;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_EventListener_C_GetObjectiveRespawnTime) == 0x000008, "Wrong alignment on BP_NPE_EventListener_C_GetObjectiveRespawnTime");
static_assert(sizeof(BP_NPE_EventListener_C_GetObjectiveRespawnTime) == 0x000008, "Wrong size on BP_NPE_EventListener_C_GetObjectiveRespawnTime");
static_assert(offsetof(BP_NPE_EventListener_C_GetObjectiveRespawnTime, RespawnTime) == 0x000000, "Member 'BP_NPE_EventListener_C_GetObjectiveRespawnTime::RespawnTime' has a wrong offset!");

}

