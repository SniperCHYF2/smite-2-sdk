#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PopupManager

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "RallyHereStart_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PopupManager.PopupManager_C.ButtonPressed
// 0x0008 (0x0008 - 0x0000)
struct PopupManager_C_ButtonPressed final
{
public:
	class UWidget*                                Index_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_ButtonPressed) == 0x000008, "Wrong alignment on PopupManager_C_ButtonPressed");
static_assert(sizeof(PopupManager_C_ButtonPressed) == 0x000008, "Wrong size on PopupManager_C_ButtonPressed");
static_assert(offsetof(PopupManager_C_ButtonPressed, Index_0) == 0x000000, "Member 'PopupManager_C_ButtonPressed::Index_0' has a wrong offset!");

// Function PopupManager.PopupManager_C.ExecuteUbergraph_PopupManager
// 0x0140 (0x0140 - 0x0000)
struct PopupManager_C_ExecuteUbergraph_PopupManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTopViewFromRH_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_Index;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_StandardButton_02_C*               K2Node_DynamicCast_AsWBP_Standard_Button_02;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHPopupConfig                         K2Node_Event_popupData;                            // 0x0020(0x0108)(ContainsInstancedReference)
	class UWidget*                                K2Node_CustomEvent_InIndex;                        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_ExecuteUbergraph_PopupManager) == 0x000008, "Wrong alignment on PopupManager_C_ExecuteUbergraph_PopupManager");
static_assert(sizeof(PopupManager_C_ExecuteUbergraph_PopupManager) == 0x000140, "Wrong size on PopupManager_C_ExecuteUbergraph_PopupManager");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, EntryPoint) == 0x000000, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, CallFunc_IsTopViewFromRH_ReturnValue) == 0x000004, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::CallFunc_IsTopViewFromRH_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, K2Node_CustomEvent_Index) == 0x000008, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, K2Node_DynamicCast_AsWBP_Standard_Button_02) == 0x000010, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::K2Node_DynamicCast_AsWBP_Standard_Button_02' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, K2Node_Event_popupData) == 0x000020, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::K2Node_Event_popupData' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, K2Node_CustomEvent_InIndex) == 0x000128, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::K2Node_CustomEvent_InIndex' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, CallFunc_Array_Find_ReturnValue) == 0x000130, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_ExecuteUbergraph_PopupManager, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'PopupManager_C_ExecuteUbergraph_PopupManager::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.HandleCancelButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct PopupManager_C_HandleCancelButtonClicked final
{
public:
	class UWidget*                                InIndex;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_HandleCancelButtonClicked) == 0x000008, "Wrong alignment on PopupManager_C_HandleCancelButtonClicked");
static_assert(sizeof(PopupManager_C_HandleCancelButtonClicked) == 0x000008, "Wrong size on PopupManager_C_HandleCancelButtonClicked");
static_assert(offsetof(PopupManager_C_HandleCancelButtonClicked, InIndex) == 0x000000, "Member 'PopupManager_C_HandleCancelButtonClicked::InIndex' has a wrong offset!");

// Function PopupManager.PopupManager_C.IsTopViewFromRH
// 0x0068 (0x0068 - 0x0000)
struct PopupManager_C_IsTopViewFromRH final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue;              // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FViewRoute                             CallFunc_GetViewRoute_ViewRoute;                   // 0x0018(0x0048)()
	bool                                          CallFunc_GetViewRoute_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_IsTopViewFromRH) == 0x000008, "Wrong alignment on PopupManager_C_IsTopViewFromRH");
static_assert(sizeof(PopupManager_C_IsTopViewFromRH) == 0x000068, "Wrong size on PopupManager_C_IsTopViewFromRH");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, ReturnValue) == 0x000000, "Member 'PopupManager_C_IsTopViewFromRH::ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, CallFunc_GetViewManager_ReturnValue) == 0x000008, "Member 'PopupManager_C_IsTopViewFromRH::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, CallFunc_GetTopViewRoute_ReturnValue) == 0x000010, "Member 'PopupManager_C_IsTopViewFromRH::CallFunc_GetTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, CallFunc_GetViewRoute_ViewRoute) == 0x000018, "Member 'PopupManager_C_IsTopViewFromRH::CallFunc_GetViewRoute_ViewRoute' has a wrong offset!");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, CallFunc_GetViewRoute_ReturnValue) == 0x000060, "Member 'PopupManager_C_IsTopViewFromRH::CallFunc_GetViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_IsTopViewFromRH, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'PopupManager_C_IsTopViewFromRH::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.NavigateBack
// 0x0001 (0x0001 - 0x0000)
struct PopupManager_C_NavigateBack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_NavigateBack) == 0x000001, "Wrong alignment on PopupManager_C_NavigateBack");
static_assert(sizeof(PopupManager_C_NavigateBack) == 0x000001, "Wrong size on PopupManager_C_NavigateBack");
static_assert(offsetof(PopupManager_C_NavigateBack, ReturnValue) == 0x000000, "Member 'PopupManager_C_NavigateBack::ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.OnHide
// 0x0018 (0x0018 - 0x0000)
struct PopupManager_C_OnHide final
{
public:
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_PopOverrideRoute_ReturnValue;             // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_OnHide) == 0x000008, "Wrong alignment on PopupManager_C_OnHide");
static_assert(sizeof(PopupManager_C_OnHide) == 0x000018, "Wrong size on PopupManager_C_OnHide");
static_assert(offsetof(PopupManager_C_OnHide, CallFunc_GetInputManager_ReturnValue) == 0x000000, "Member 'PopupManager_C_OnHide::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnHide, CallFunc_IsActivated_ReturnValue) == 0x000008, "Member 'PopupManager_C_OnHide::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnHide, CallFunc_PopOverrideRoute_ReturnValue) == 0x00000C, "Member 'PopupManager_C_OnHide::CallFunc_PopOverrideRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnHide, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PopupManager_C_OnHide::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.OnKeyDown
// 0x02C8 (0x02C8 - 0x0000)
struct PopupManager_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0138(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnKeyDown_ReturnValue;                    // 0x0158(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0210(0x00B8)()
};
static_assert(alignof(PopupManager_C_OnKeyDown) == 0x000008, "Wrong alignment on PopupManager_C_OnKeyDown");
static_assert(sizeof(PopupManager_C_OnKeyDown) == 0x0002C8, "Wrong size on PopupManager_C_OnKeyDown");
static_assert(offsetof(PopupManager_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'PopupManager_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'PopupManager_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'PopupManager_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, CallFunc_IsVisible_ReturnValue) == 0x000130, "Member 'PopupManager_C_OnKeyDown::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000138, "Member 'PopupManager_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, CallFunc_Array_Contains_ReturnValue) == 0x000150, "Member 'PopupManager_C_OnKeyDown::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, CallFunc_OnKeyDown_ReturnValue) == 0x000158, "Member 'PopupManager_C_OnKeyDown::CallFunc_OnKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000210, "Member 'PopupManager_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.OnKeyUp
// 0x02C0 (0x02C0 - 0x0000)
struct PopupManager_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_OnKeyUp_ReturnValue;                      // 0x0208(0x00B8)()
};
static_assert(alignof(PopupManager_C_OnKeyUp) == 0x000008, "Wrong alignment on PopupManager_C_OnKeyUp");
static_assert(sizeof(PopupManager_C_OnKeyUp) == 0x0002C0, "Wrong size on PopupManager_C_OnKeyUp");
static_assert(offsetof(PopupManager_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'PopupManager_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'PopupManager_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'PopupManager_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'PopupManager_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, CallFunc_IsVisible_ReturnValue) == 0x000148, "Member 'PopupManager_C_OnKeyUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, CallFunc_Array_Contains_ReturnValue) == 0x000149, "Member 'PopupManager_C_OnKeyUp::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000150, "Member 'PopupManager_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnKeyUp, CallFunc_OnKeyUp_ReturnValue) == 0x000208, "Member 'PopupManager_C_OnKeyUp::CallFunc_OnKeyUp_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.OnShown
// 0x0070 (0x0070 - 0x0000)
struct PopupManager_C_OnShown final
{
public:
	bool                                          CallFunc_IsLobbyHUD_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetButtonForInputAction_Button;           // 0x0018(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonForInputAction_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetGamepadCancelButton_ReturnValue;       // 0x0038(0x0018)(HasGetValueTypeHash)
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_OnShown) == 0x000008, "Wrong alignment on PopupManager_C_OnShown");
static_assert(sizeof(PopupManager_C_OnShown) == 0x000070, "Wrong size on PopupManager_C_OnShown");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_IsLobbyHUD_ReturnValue) == 0x000000, "Member 'PopupManager_C_OnShown::CallFunc_IsLobbyHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetInputManager_ReturnValue) == 0x000008, "Member 'PopupManager_C_OnShown::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'PopupManager_C_OnShown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetButtonForInputAction_Button) == 0x000018, "Member 'PopupManager_C_OnShown::CallFunc_GetButtonForInputAction_Button' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetButtonForInputAction_ReturnValue) == 0x000030, "Member 'PopupManager_C_OnShown::CallFunc_GetButtonForInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'PopupManager_C_OnShown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_IsInputKeyDown_ReturnValue) == 0x000032, "Member 'PopupManager_C_OnShown::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetGamepadCancelButton_ReturnValue) == 0x000038, "Member 'PopupManager_C_OnShown::CallFunc_GetGamepadCancelButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetInputManager_ReturnValue_1) == 0x000050, "Member 'PopupManager_C_OnShown::CallFunc_GetInputManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_IsInputKeyDown_ReturnValue_1) == 0x000058, "Member 'PopupManager_C_OnShown::CallFunc_IsInputKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'PopupManager_C_OnShown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_GetViewManager_ReturnValue) == 0x000060, "Member 'PopupManager_C_OnShown::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_OnShown, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000068, "Member 'PopupManager_C_OnShown::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupButtons
// 0x00C0 (0x00C0 - 0x0000)
struct PopupManager_C_SetupButtons final
{
public:
	TArray<struct FRHPopupButtonConfig>           ButtonInfo;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x001C(0x0008)(NoDestructor)
	TDelegate<void(class UWidget* Widget)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* Widget)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHPopupButtonConfig                   CallFunc_Array_Get_Item;                           // 0x0048(0x0038)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StandardButton_02_C*               CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_StandardButton_02_C*               CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupButtons) == 0x000008, "Wrong alignment on PopupManager_C_SetupButtons");
static_assert(sizeof(PopupManager_C_SetupButtons) == 0x0000C0, "Wrong size on PopupManager_C_SetupButtons");
static_assert(offsetof(PopupManager_C_SetupButtons, ButtonInfo) == 0x000000, "Member 'PopupManager_C_SetupButtons::ButtonInfo' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PopupManager_C_SetupButtons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PopupManager_C_SetupButtons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PopupManager_C_SetupButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, K2Node_MakeStruct_SlateChildSize) == 0x00001C, "Member 'PopupManager_C_SetupButtons::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'PopupManager_C_SetupButtons::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'PopupManager_C_SetupButtons::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Array_Get_Item) == 0x000048, "Member 'PopupManager_C_SetupButtons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'PopupManager_C_SetupButtons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, K2Node_SwitchEnum_CmpSuccess) == 0x000084, "Member 'PopupManager_C_SetupButtons::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'PopupManager_C_SetupButtons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'PopupManager_C_SetupButtons::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'PopupManager_C_SetupButtons::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Create_ReturnValue) == 0x000098, "Member 'PopupManager_C_SetupButtons::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'PopupManager_C_SetupButtons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, K2Node_MakeStruct_Margin) == 0x0000A4, "Member 'PopupManager_C_SetupButtons::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupButtons, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000B8, "Member 'PopupManager_C_SetupButtons::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupDescription
// 0x0020 (0x0020 - 0x0000)
struct PopupManager_C_SetupDescription final
{
public:
	class FText                                   NewDescText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupDescription) == 0x000008, "Wrong alignment on PopupManager_C_SetupDescription");
static_assert(sizeof(PopupManager_C_SetupDescription) == 0x000020, "Wrong size on PopupManager_C_SetupDescription");
static_assert(offsetof(PopupManager_C_SetupDescription, NewDescText) == 0x000000, "Member 'PopupManager_C_SetupDescription::NewDescText' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupDescription, Temp_bool_Variable) == 0x000018, "Member 'PopupManager_C_SetupDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupDescription, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'PopupManager_C_SetupDescription::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupDescription, Temp_byte_Variable) == 0x00001A, "Member 'PopupManager_C_SetupDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupDescription, Temp_byte_Variable_1) == 0x00001B, "Member 'PopupManager_C_SetupDescription::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupDescription, K2Node_Select_Default) == 0x00001C, "Member 'PopupManager_C_SetupDescription::K2Node_Select_Default' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupHeader
// 0x0020 (0x0020 - 0x0000)
struct PopupManager_C_SetupHeader final
{
public:
	class FText                                   NewHeaderText;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupHeader) == 0x000008, "Wrong alignment on PopupManager_C_SetupHeader");
static_assert(sizeof(PopupManager_C_SetupHeader) == 0x000020, "Wrong size on PopupManager_C_SetupHeader");
static_assert(offsetof(PopupManager_C_SetupHeader, NewHeaderText) == 0x000000, "Member 'PopupManager_C_SetupHeader::NewHeaderText' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupHeader, Temp_bool_Variable) == 0x000018, "Member 'PopupManager_C_SetupHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupHeader, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'PopupManager_C_SetupHeader::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupHeader, Temp_byte_Variable) == 0x00001A, "Member 'PopupManager_C_SetupHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupHeader, Temp_byte_Variable_1) == 0x00001B, "Member 'PopupManager_C_SetupHeader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupHeader, K2Node_Select_Default) == 0x00001C, "Member 'PopupManager_C_SetupHeader::K2Node_Select_Default' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupSubHeaderText
// 0x0020 (0x0020 - 0x0000)
struct PopupManager_C_SetupSubHeaderText final
{
public:
	class FText                                   NewSubHeaderText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupSubHeaderText) == 0x000008, "Wrong alignment on PopupManager_C_SetupSubHeaderText");
static_assert(sizeof(PopupManager_C_SetupSubHeaderText) == 0x000020, "Wrong size on PopupManager_C_SetupSubHeaderText");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, NewSubHeaderText) == 0x000000, "Member 'PopupManager_C_SetupSubHeaderText::NewSubHeaderText' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, Temp_byte_Variable) == 0x000018, "Member 'PopupManager_C_SetupSubHeaderText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'PopupManager_C_SetupSubHeaderText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, Temp_byte_Variable_1) == 0x00001A, "Member 'PopupManager_C_SetupSubHeaderText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, Temp_bool_Variable) == 0x00001B, "Member 'PopupManager_C_SetupSubHeaderText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupSubHeaderText, K2Node_Select_Default) == 0x00001C, "Member 'PopupManager_C_SetupSubHeaderText::K2Node_Select_Default' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupTextEntry
// 0x0028 (0x0028 - 0x0000)
struct PopupManager_C_SetupTextEntry final
{
public:
	bool                                          HasTextEntry;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefaultEntryText;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupTextEntry) == 0x000008, "Wrong alignment on PopupManager_C_SetupTextEntry");
static_assert(sizeof(PopupManager_C_SetupTextEntry) == 0x000028, "Wrong size on PopupManager_C_SetupTextEntry");
static_assert(offsetof(PopupManager_C_SetupTextEntry, HasTextEntry) == 0x000000, "Member 'PopupManager_C_SetupTextEntry::HasTextEntry' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupTextEntry, DefaultEntryText) == 0x000008, "Member 'PopupManager_C_SetupTextEntry::DefaultEntryText' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupTextEntry, Temp_bool_Variable) == 0x000020, "Member 'PopupManager_C_SetupTextEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupTextEntry, Temp_byte_Variable) == 0x000021, "Member 'PopupManager_C_SetupTextEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupTextEntry, Temp_byte_Variable_1) == 0x000022, "Member 'PopupManager_C_SetupTextEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupTextEntry, K2Node_Select_Default) == 0x000023, "Member 'PopupManager_C_SetupTextEntry::K2Node_Select_Default' has a wrong offset!");

// Function PopupManager.PopupManager_C.SetupWarningText
// 0x0020 (0x0020 - 0x0000)
struct PopupManager_C_SetupWarningText final
{
public:
	class FText                                   NewWarningText;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_SetupWarningText) == 0x000008, "Wrong alignment on PopupManager_C_SetupWarningText");
static_assert(sizeof(PopupManager_C_SetupWarningText) == 0x000020, "Wrong size on PopupManager_C_SetupWarningText");
static_assert(offsetof(PopupManager_C_SetupWarningText, NewWarningText) == 0x000000, "Member 'PopupManager_C_SetupWarningText::NewWarningText' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupWarningText, Temp_bool_Variable) == 0x000018, "Member 'PopupManager_C_SetupWarningText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupWarningText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'PopupManager_C_SetupWarningText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupWarningText, Temp_byte_Variable) == 0x00001A, "Member 'PopupManager_C_SetupWarningText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupWarningText, Temp_byte_Variable_1) == 0x00001B, "Member 'PopupManager_C_SetupWarningText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_SetupWarningText, K2Node_Select_Default) == 0x00001C, "Member 'PopupManager_C_SetupWarningText::K2Node_Select_Default' has a wrong offset!");

// Function PopupManager.PopupManager_C.ShowPopup
// 0x0108 (0x0108 - 0x0000)
struct PopupManager_C_ShowPopup final
{
public:
	struct FRHPopupConfig                         popupData;                                         // 0x0000(0x0108)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(PopupManager_C_ShowPopup) == 0x000008, "Wrong alignment on PopupManager_C_ShowPopup");
static_assert(sizeof(PopupManager_C_ShowPopup) == 0x000108, "Wrong size on PopupManager_C_ShowPopup");
static_assert(offsetof(PopupManager_C_ShowPopup, popupData) == 0x000000, "Member 'PopupManager_C_ShowPopup::popupData' has a wrong offset!");

// Function PopupManager.PopupManager_C.UpdateTopViewRoute
// 0x0088 (0x0088 - 0x0000)
struct PopupManager_C_UpdateTopViewRoute final
{
public:
	bool                                          bIsShowing;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHWidget*                              CallFunc_GetTopViewRouteWidget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue;              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue_1;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue_1;            // 0x0028(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTopViewFromRH_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViewRoute                             CallFunc_GetViewRoute_ViewRoute;                   // 0x0038(0x0048)()
	bool                                          CallFunc_GetViewRoute_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_UpdateTopViewRoute) == 0x000008, "Wrong alignment on PopupManager_C_UpdateTopViewRoute");
static_assert(sizeof(PopupManager_C_UpdateTopViewRoute) == 0x000088, "Wrong size on PopupManager_C_UpdateTopViewRoute");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, bIsShowing) == 0x000000, "Member 'PopupManager_C_UpdateTopViewRoute::bIsShowing' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetViewManager_ReturnValue) == 0x000008, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetTopViewRouteWidget_ReturnValue) == 0x000010, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetTopViewRouteWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetTopViewRoute_ReturnValue) == 0x000018, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetViewManager_ReturnValue_1) == 0x000020, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetViewManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetTopViewRoute_ReturnValue_1) == 0x000028, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetTopViewRoute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_IsTopViewFromRH_ReturnValue) == 0x000030, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_IsTopViewFromRH_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetViewRoute_ViewRoute) == 0x000038, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetViewRoute_ViewRoute' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_GetViewRoute_ReturnValue) == 0x000080, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_GetViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_UpdateTopViewRoute, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'PopupManager_C_UpdateTopViewRoute::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PopupManager.PopupManager_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct PopupManager_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_StandardButton_02_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PopupManager_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on PopupManager_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(PopupManager_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on PopupManager_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(PopupManager_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'PopupManager_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(PopupManager_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000008, "Member 'PopupManager_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");

}

