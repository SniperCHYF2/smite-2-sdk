#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_NimbleRing

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Items_NimbleRing.GA_Items_NimbleRing_C.Changed_310F86F8493260305D0D94B6A4DF9E09
// 0x0048 (0x0048 - 0x0000)
struct GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09 final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                OwningAbilitySystem;                               // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09) == 0x000008, "Wrong alignment on GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09");
static_assert(sizeof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09) == 0x000048, "Wrong size on GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09");
static_assert(offsetof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09, Attribute) == 0x000000, "Member 'GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09::Attribute' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09, NewValue) == 0x000038, "Member 'GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09::NewValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09, OldValue) == 0x00003C, "Member 'GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09::OldValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09, OwningAbilitySystem) == 0x000040, "Member 'GA_Items_NimbleRing_C_Changed_310F86F8493260305D0D94B6A4DF9E09::OwningAbilitySystem' has a wrong offset!");

// Function GA_Items_NimbleRing.GA_Items_NimbleRing_C.ExecuteUbergraph_GA_Items_NimbleRing
// 0x0158 (0x0158 - 0x0000)
struct GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute_1;                    // 0x0020(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                K2Node_CustomEvent_OwningAbilitySystem_1;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0078(0x0038)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitAttributeChanged*     CallFunc_WaitForAttributeChanged_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x00D0(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                K2Node_CustomEvent_OwningAbilitySystem;            // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveEffectValid_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing) == 0x000008, "Wrong alignment on GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing");
static_assert(sizeof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing) == 0x000158, "Wrong size on GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, EntryPoint) == 0x000000, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_Attribute_1) == 0x000020, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_Attribute_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_NewValue_1) == 0x000058, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_OldValue_1) == 0x00005C, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_OwningAbilitySystem_1) == 0x000060, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_OwningAbilitySystem_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, Temp_object_Variable) == 0x000068, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, Temp_real_Variable) == 0x000070, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, Temp_real_Variable_1) == 0x000074, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, Temp_struct_Variable) == 0x000078, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000B0, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B8, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_WaitForAttributeChanged_ReturnValue) == 0x0000C8, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_WaitForAttributeChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_Attribute) == 0x0000D0, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_NewValue) == 0x000108, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_OldValue) == 0x00010C, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, K2Node_CustomEvent_OwningAbilitySystem) == 0x000110, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::K2Node_CustomEvent_OwningAbilitySystem' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000120, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000128, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_GetFloatAttribute_ReturnValue) == 0x00012C, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_IsActiveEffectValid_ReturnValue) == 0x000130, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_IsActiveEffectValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000138, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000140, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_FTrunc_ReturnValue) == 0x000144, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000148, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'GA_Items_NimbleRing_C_ExecuteUbergraph_GA_Items_NimbleRing::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_Items_NimbleRing.GA_Items_NimbleRing_C.UpdatedInt
// 0x0048 (0x0048 - 0x0000)
struct GA_Items_NimbleRing_C_UpdatedInt final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                OwningAbilitySystem;                               // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Items_NimbleRing_C_UpdatedInt) == 0x000008, "Wrong alignment on GA_Items_NimbleRing_C_UpdatedInt");
static_assert(sizeof(GA_Items_NimbleRing_C_UpdatedInt) == 0x000048, "Wrong size on GA_Items_NimbleRing_C_UpdatedInt");
static_assert(offsetof(GA_Items_NimbleRing_C_UpdatedInt, Attribute) == 0x000000, "Member 'GA_Items_NimbleRing_C_UpdatedInt::Attribute' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_UpdatedInt, NewValue) == 0x000038, "Member 'GA_Items_NimbleRing_C_UpdatedInt::NewValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_UpdatedInt, OldValue) == 0x00003C, "Member 'GA_Items_NimbleRing_C_UpdatedInt::OldValue' has a wrong offset!");
static_assert(offsetof(GA_Items_NimbleRing_C_UpdatedInt, OwningAbilitySystem) == 0x000040, "Member 'GA_Items_NimbleRing_C_UpdatedInt::OwningAbilitySystem' has a wrong offset!");

}

