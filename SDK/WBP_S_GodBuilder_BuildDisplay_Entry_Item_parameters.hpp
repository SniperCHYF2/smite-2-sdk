#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_BuildDisplay_Entry_Item

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.DoHover
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover) == 0x000008, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoHover::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.DoUnhover
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover) == 0x000008, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_DoUnhover::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InSlotTextVisibility;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item) == 0x000004, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item) == 0x000008, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item, EntryPoint) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item, K2Node_Event_InSlotTextVisibility) == 0x000005, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Entry_Item::K2Node_Event_InSlotTextVisibility' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct) == 0x000001, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.SetIsInteractable
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable final
{
public:
	bool                                          bIsInteractable;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable) == 0x000001, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable) == 0x000005, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable, bIsInteractable) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable::bIsInteractable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsInteractable::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.SetIsSelected
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected final
{
public:
	bool                                          bInIsSelected;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected) == 0x000001, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected) == 0x000005, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected, bInIsSelected) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected::bInIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetIsSelected::K2Node_Select_Default' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.SetSlotTextVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility final
{
public:
	ESlateVisibility                              InSlotTextVisibility;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility) == 0x000001, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility) == 0x000001, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility, InSlotTextVisibility) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetSlotTextVisibility::InSlotTextVisibility' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.SetStrokeAndOpacity
// 0x0018 (0x0018 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity) == 0x000018, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_bool_Variable) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_byte_Variable) == 0x000001, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, K2Node_Select_Default) == 0x000010, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, K2Node_Select_Default_1) == 0x000011, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000014, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_SetStrokeAndOpacity::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.UpdateDisplayedItem
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem final
{
public:
	class UHWEquipmentItem*                       HardDisplayedItem;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWEquipmentItem*                       K2Node_DynamicCast_AsHWEquipment_Item;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWEquipmentItem*                       K2Node_DynamicCast_AsHWEquipment_Item_1;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem) == 0x0000C0, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, HardDisplayedItem) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::HardDisplayedItem' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, Temp_byte_Variable) == 0x000008, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, Temp_bool_Variable) == 0x00000A, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, Temp_softobject_Variable) == 0x000010, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_Select_Default) == 0x000040, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000070, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_AsHWEquipment_Item) == 0x000078, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_AsHWEquipment_Item' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_AsTexture_2D) == 0x000088, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, Temp_bool_Variable_1) == 0x000091, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000098, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_Select_Default_1) == 0x0000A0, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_AsHWEquipment_Item_1) == 0x0000A8, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_AsHWEquipment_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B8, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_UpdateDisplayedItem::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_S_GodBuilder_BuildDisplay_Entry_Item.WBP_S_GodBuilder_BuildDisplay_Entry_Item_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_S_GodBuilder_BuildDisplay_Entry_Item_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

