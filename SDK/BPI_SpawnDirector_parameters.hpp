#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SpawnDirector

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_SpawnDirector.BPI_SpawnDirector_C.OnSpawnDirectorInitialized
// 0x0008 (0x0008 - 0x0000)
struct BPI_SpawnDirector_C_OnSpawnDirectorInitialized final
{
public:
	class ABP_SpawnDirector_C*                    SpawnDirector;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SpawnDirector_C_OnSpawnDirectorInitialized) == 0x000008, "Wrong alignment on BPI_SpawnDirector_C_OnSpawnDirectorInitialized");
static_assert(sizeof(BPI_SpawnDirector_C_OnSpawnDirectorInitialized) == 0x000008, "Wrong size on BPI_SpawnDirector_C_OnSpawnDirectorInitialized");
static_assert(offsetof(BPI_SpawnDirector_C_OnSpawnDirectorInitialized, SpawnDirector) == 0x000000, "Member 'BPI_SpawnDirector_C_OnSpawnDirectorInitialized::SpawnDirector' has a wrong offset!");

// Function BPI_SpawnDirector.BPI_SpawnDirector_C.OnSpawnWave
// 0x0004 (0x0004 - 0x0000)
struct BPI_SpawnDirector_C_OnSpawnWave final
{
public:
	int32                                         WaveIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_SpawnDirector_C_OnSpawnWave) == 0x000004, "Wrong alignment on BPI_SpawnDirector_C_OnSpawnWave");
static_assert(sizeof(BPI_SpawnDirector_C_OnSpawnWave) == 0x000004, "Wrong size on BPI_SpawnDirector_C_OnSpawnWave");
static_assert(offsetof(BPI_SpawnDirector_C_OnSpawnWave, WaveIndex) == 0x000000, "Member 'BPI_SpawnDirector_C_OnSpawnWave::WaveIndex' has a wrong offset!");

}

