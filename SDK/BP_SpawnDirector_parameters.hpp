#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnDirector

#include "Basic.hpp"

#include "EFactoryDifficulty_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "S_SpawnManager_WaveDifficulty_structs.hpp"


namespace SDK::Params
{

// Function BP_SpawnDirector.BP_SpawnDirector_C.BeginSpawning
// 0x0008 (0x0008 - 0x0000)
struct BP_SpawnDirector_C_BeginSpawning final
{
public:
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_BeginSpawning) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_BeginSpawning");
static_assert(sizeof(BP_SpawnDirector_C_BeginSpawning) == 0x000008, "Wrong size on BP_SpawnDirector_C_BeginSpawning");
static_assert(offsetof(BP_SpawnDirector_C_BeginSpawning, CallFunc_Now_ReturnValue) == 0x000000, "Member 'BP_SpawnDirector_C_BeginSpawning::CallFunc_Now_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.ExecuteUbergraph_BP_SpawnDirector
// 0x0040 (0x0040 - 0x0000)
struct BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NewPhase)> K2Node_CreateDelegate_OutputDelegate;       // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentGamePhaseTag_ReturnValue;       // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector");
static_assert(sizeof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector) == 0x000040, "Wrong size on BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, EntryPoint) == 0x000000, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, CallFunc_GetHWGameState_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, CallFunc_GetHWGameState_ReturnValue_1) == 0x000028, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::CallFunc_GetHWGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, CallFunc_GetCurrentGamePhaseTag_ReturnValue) == 0x000030, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::CallFunc_GetCurrentGamePhaseTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_SpawnDirector_C_ExecuteUbergraph_BP_SpawnDirector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.FilterOutNagaTeamSpawns
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SpawnDirector_C_FilterOutNagaTeamSpawns final
{
public:
	TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>> FilteredSpawns;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>> LocalSpawns;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	TSoftObjectPtr<class ABP_BotFactory_Naga_C>   LocalNagaCamp;                                     // 0x0020(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BotFactory_Naga_C*                  K2Node_DynamicCast_AsBP_Bot_Factory_Naga;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_BotFactory_Naga_C>   CallFunc_Array_Get_Item;                           // 0x0070(0x0028)(HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x0098(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_FilterOutNagaTeamSpawns");
static_assert(sizeof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns) == 0x0000C8, "Wrong size on BP_SpawnDirector_C_FilterOutNagaTeamSpawns");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, FilteredSpawns) == 0x000000, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::FilteredSpawns' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, LocalSpawns) == 0x000010, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::LocalSpawns' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, LocalNagaCamp) == 0x000020, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::LocalNagaCamp' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, K2Node_DynamicCast_AsBP_Bot_Factory_Naga) == 0x000060, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::K2Node_DynamicCast_AsBP_Bot_Factory_Naga' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_GetAssetTags_ReturnValue) == 0x000098, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_HasAnyTags_ReturnValue) == 0x0000B8, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_FilterOutNagaTeamSpawns, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'BP_SpawnDirector_C_FilterOutNagaTeamSpawns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.ForceSpawnWave
// 0x0028 (0x0028 - 0x0000)
struct BP_SpawnDirector_C_ForceSpawnWave final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_ForceSpawnWave) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_ForceSpawnWave");
static_assert(sizeof(BP_SpawnDirector_C_ForceSpawnWave) == 0x000028, "Wrong size on BP_SpawnDirector_C_ForceSpawnWave");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SpawnDirector_C_ForceSpawnWave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_ForceSpawnWave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ForceSpawnWave, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_SpawnDirector_C_ForceSpawnWave::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.GatherAllFactories
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SpawnDirector_C_GatherAllFactories final
{
public:
	TArray<class AHWBotFactory*>                  LocalCachedFactories;                              // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AHWBotFactory>           CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AHWBotFactory>           CallFunc_Array_Get_Item_1;                         // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory_1;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_GatherAllFactories) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_GatherAllFactories");
static_assert(sizeof(BP_SpawnDirector_C_GatherAllFactories) == 0x0000C8, "Wrong size on BP_SpawnDirector_C_GatherAllFactories");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, LocalCachedFactories) == 0x000000, "Member 'BP_SpawnDirector_C_GatherAllFactories::LocalCachedFactories' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SpawnDirector_C_GatherAllFactories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SpawnDirector_C_GatherAllFactories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_SpawnDirector_C_GatherAllFactories::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_SpawnDirector_C_GatherAllFactories::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, K2Node_DynamicCast_AsHWBot_Factory) == 0x000060, "Member 'BP_SpawnDirector_C_GatherAllFactories::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_SpawnDirector_C_GatherAllFactories::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_AddUnique_ReturnValue) == 0x000074, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000B0, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, K2Node_DynamicCast_AsHWBot_Factory_1) == 0x0000B8, "Member 'BP_SpawnDirector_C_GatherAllFactories::K2Node_DynamicCast_AsHWBot_Factory_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_SpawnDirector_C_GatherAllFactories::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherAllFactories, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000C4, "Member 'BP_SpawnDirector_C_GatherAllFactories::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.GatherFactories
// 0x0188 (0x0188 - 0x0000)
struct BP_SpawnDirector_C_GatherFactories final
{
public:
	bool                                          AutoPopulate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactoryTag;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ABP_BotFactory_C>> ManuallySelectedBotFactories;                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AHWBotFactory*>                  OutFactoryArray;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AHWBotFactory*>                  LocalCachedFactories;                              // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_BotFactory_C>        CallFunc_Array_Get_Item_1;                         // 0x0060(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BotFactory_C*                       K2Node_DynamicCast_AsBP_Bot_Factory;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x00B8(0x0020)()
	struct FGameplayTagRequirements               K2Node_MakeStruct_GameplayTagRequirements;         // 0x00D8(0x0088)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AHWBotFactory*>                  CallFunc_GetAllBotFactoriesWithAssetTags_OutFactories; // 0x0178(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SpawnDirector_C_GatherFactories) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_GatherFactories");
static_assert(sizeof(BP_SpawnDirector_C_GatherFactories) == 0x000188, "Wrong size on BP_SpawnDirector_C_GatherFactories");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, AutoPopulate) == 0x000000, "Member 'BP_SpawnDirector_C_GatherFactories::AutoPopulate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, FactoryTag) == 0x000004, "Member 'BP_SpawnDirector_C_GatherFactories::FactoryTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, ManuallySelectedBotFactories) == 0x000010, "Member 'BP_SpawnDirector_C_GatherFactories::ManuallySelectedBotFactories' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, OutFactoryArray) == 0x000020, "Member 'BP_SpawnDirector_C_GatherFactories::OutFactoryArray' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, LocalCachedFactories) == 0x000030, "Member 'BP_SpawnDirector_C_GatherFactories::LocalCachedFactories' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_SpawnDirector_C_GatherFactories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_SpawnDirector_C_GatherFactories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_SpawnDirector_C_GatherFactories::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_SpawnDirector_C_GatherFactories::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000090, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, K2Node_DynamicCast_AsBP_Bot_Factory) == 0x0000A0, "Member 'BP_SpawnDirector_C_GatherFactories::K2Node_DynamicCast_AsBP_Bot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_SpawnDirector_C_GatherFactories::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0000B8, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, K2Node_MakeStruct_GameplayTagRequirements) == 0x0000D8, "Member 'BP_SpawnDirector_C_GatherFactories::K2Node_MakeStruct_GameplayTagRequirements' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_AddUnique_ReturnValue) == 0x000160, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_Contains_ReturnValue) == 0x000164, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000168, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_Not_PreBool_ReturnValue) == 0x00016C, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_GetHWGameState_ReturnValue) == 0x000170, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GatherFactories, CallFunc_GetAllBotFactoriesWithAssetTags_OutFactories) == 0x000178, "Member 'BP_SpawnDirector_C_GatherFactories::CallFunc_GetAllBotFactoriesWithAssetTags_OutFactories' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.GetMatchPhase
// 0x0018 (0x0018 - 0x0000)
struct BP_SpawnDirector_C_GetMatchPhase final
{
public:
	struct FGameplayTag                           CurrentPhaseTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentGamePhaseTag_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_GetMatchPhase) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_GetMatchPhase");
static_assert(sizeof(BP_SpawnDirector_C_GetMatchPhase) == 0x000018, "Wrong size on BP_SpawnDirector_C_GetMatchPhase");
static_assert(offsetof(BP_SpawnDirector_C_GetMatchPhase, CurrentPhaseTag) == 0x000000, "Member 'BP_SpawnDirector_C_GetMatchPhase::CurrentPhaseTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetMatchPhase, CallFunc_GetHWGameState_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_GetMatchPhase::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetMatchPhase, CallFunc_GetCurrentGamePhaseTag_ReturnValue) == 0x000010, "Member 'BP_SpawnDirector_C_GetMatchPhase::CallFunc_GetCurrentGamePhaseTag_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.GetMatchTime
// 0x0008 (0x0008 - 0x0000)
struct BP_SpawnDirector_C_GetMatchTime final
{
public:
	float                                         MatchTime;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_MatchTime_ImplicitCast;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_GetMatchTime) == 0x000004, "Wrong alignment on BP_SpawnDirector_C_GetMatchTime");
static_assert(sizeof(BP_SpawnDirector_C_GetMatchTime) == 0x000008, "Wrong size on BP_SpawnDirector_C_GetMatchTime");
static_assert(offsetof(BP_SpawnDirector_C_GetMatchTime, MatchTime) == 0x000000, "Member 'BP_SpawnDirector_C_GetMatchTime::MatchTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetMatchTime, K2Node_FunctionResult_MatchTime_ImplicitCast) == 0x000004, "Member 'BP_SpawnDirector_C_GetMatchTime::K2Node_FunctionResult_MatchTime_ImplicitCast' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.GetWaveDifficulty
// 0x0068 (0x0068 - 0x0000)
struct BP_SpawnDirector_C_GetWaveDifficulty final
{
public:
	EFactoryDifficulty                            Difficulty;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LowestTimeIndex;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowestTime;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetMatchPhase_CurrentPhaseTag;            // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMatchTime_MatchTime;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SpawnManager_WaveDifficulty         CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SpawnManager_WaveDifficulty         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_GetWaveDifficulty) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_GetWaveDifficulty");
static_assert(sizeof(BP_SpawnDirector_C_GetWaveDifficulty) == 0x000068, "Wrong size on BP_SpawnDirector_C_GetWaveDifficulty");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, Difficulty) == 0x000000, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, LowestTimeIndex) == 0x000004, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::LowestTimeIndex' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, LowestTime) == 0x000008, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::LowestTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_GetMatchPhase_CurrentPhaseTag) == 0x00001C, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_GetMatchPhase_CurrentPhaseTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_GetMatchTime_MatchTime) == 0x000024, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_GetMatchTime_MatchTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000028, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_GetWaveDifficulty, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BP_SpawnDirector_C_GetWaveDifficulty::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.InitializeMinionFactories
// 0x0038 (0x0038 - 0x0000)
struct BP_SpawnDirector_C_InitializeMinionFactories final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpawnDirector_C>  K2Node_DynamicCast_AsBPI_Spawn_Director;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_InitializeMinionFactories) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_InitializeMinionFactories");
static_assert(sizeof(BP_SpawnDirector_C_InitializeMinionFactories) == 0x000038, "Wrong size on BP_SpawnDirector_C_InitializeMinionFactories");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, K2Node_DynamicCast_AsBPI_Spawn_Director) == 0x000020, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::K2Node_DynamicCast_AsBPI_Spawn_Director' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_InitializeMinionFactories, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_SpawnDirector_C_InitializeMinionFactories::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.KillAllWaves
// 0x0038 (0x0038 - 0x0000)
struct BP_SpawnDirector_C_KillAllWaves final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpawnDirector_C>  K2Node_DynamicCast_AsBPI_Spawn_Director;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_KillAllWaves) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_KillAllWaves");
static_assert(sizeof(BP_SpawnDirector_C_KillAllWaves) == 0x000038, "Wrong size on BP_SpawnDirector_C_KillAllWaves");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SpawnDirector_C_KillAllWaves::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_KillAllWaves::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_KillAllWaves::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SpawnDirector_C_KillAllWaves::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_KillAllWaves::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_KillAllWaves::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, K2Node_DynamicCast_AsBPI_Spawn_Director) == 0x000020, "Member 'BP_SpawnDirector_C_KillAllWaves::K2Node_DynamicCast_AsBPI_Spawn_Director' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SpawnDirector_C_KillAllWaves::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_KillAllWaves, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_SpawnDirector_C_KillAllWaves::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.NagaFactoryEmpty
// 0x0020 (0x0020 - 0x0000)
struct BP_SpawnDirector_C_NagaFactoryEmpty final
{
public:
	class AHWBotFactory*                          BotFactory;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AHWBotFactory* BotFactory, class AActor* Causer)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_NagaFactoryEmpty) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_NagaFactoryEmpty");
static_assert(sizeof(BP_SpawnDirector_C_NagaFactoryEmpty) == 0x000020, "Wrong size on BP_SpawnDirector_C_NagaFactoryEmpty");
static_assert(offsetof(BP_SpawnDirector_C_NagaFactoryEmpty, BotFactory) == 0x000000, "Member 'BP_SpawnDirector_C_NagaFactoryEmpty::BotFactory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_NagaFactoryEmpty, Causer) == 0x000008, "Member 'BP_SpawnDirector_C_NagaFactoryEmpty::Causer' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_NagaFactoryEmpty, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_SpawnDirector_C_NagaFactoryEmpty::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.OnMatchPhaseStarted
// 0x000C (0x000C - 0x0000)
struct BP_SpawnDirector_C_OnMatchPhaseStarted final
{
public:
	struct FGameplayTag                           NewPhase;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartJungleCampsLeveling_Return;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartJungleCamps_Return;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_OnMatchPhaseStarted) == 0x000004, "Wrong alignment on BP_SpawnDirector_C_OnMatchPhaseStarted");
static_assert(sizeof(BP_SpawnDirector_C_OnMatchPhaseStarted) == 0x00000C, "Wrong size on BP_SpawnDirector_C_OnMatchPhaseStarted");
static_assert(offsetof(BP_SpawnDirector_C_OnMatchPhaseStarted, NewPhase) == 0x000000, "Member 'BP_SpawnDirector_C_OnMatchPhaseStarted::NewPhase' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_OnMatchPhaseStarted, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000008, "Member 'BP_SpawnDirector_C_OnMatchPhaseStarted::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_OnMatchPhaseStarted, CallFunc_StartJungleCampsLeveling_Return) == 0x000009, "Member 'BP_SpawnDirector_C_OnMatchPhaseStarted::CallFunc_StartJungleCampsLeveling_Return' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_OnMatchPhaseStarted, CallFunc_StartJungleCamps_Return) == 0x00000A, "Member 'BP_SpawnDirector_C_OnMatchPhaseStarted::CallFunc_StartJungleCamps_Return' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.ResetWaveVariables
// 0x0030 (0x0030 - 0x0000)
struct BP_SpawnDirector_C_ResetWaveVariables final
{
public:
	int32                                         LNumWaves;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumOfSpawnWaves_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_ResetWaveVariables) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_ResetWaveVariables");
static_assert(sizeof(BP_SpawnDirector_C_ResetWaveVariables) == 0x000030, "Wrong size on BP_SpawnDirector_C_ResetWaveVariables");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, LNumWaves) == 0x000000, "Member 'BP_SpawnDirector_C_ResetWaveVariables::LNumWaves' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_ResetWaveVariables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpawnDirector_C_ResetWaveVariables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_GetNumOfSpawnWaves_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_GetNumOfSpawnWaves_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_ResetWaveVariables, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SpawnDirector_C_ResetWaveVariables::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.SetSpawnTableForFactories
// 0x0030 (0x0030 - 0x0000)
struct BP_SpawnDirector_C_SetSpawnTableForFactories final
{
public:
	struct FGameplayTag                           SpawnTableTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetWaveVariables;                                // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_SetSpawnTableForFactories) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_SetSpawnTableForFactories");
static_assert(sizeof(BP_SpawnDirector_C_SetSpawnTableForFactories) == 0x000030, "Wrong size on BP_SpawnDirector_C_SetSpawnTableForFactories");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, SpawnTableTag) == 0x000000, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::SpawnTableTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, ResetWaveVariables) == 0x000008, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::ResetWaveVariables' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x00001D, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SetSpawnTableForFactories, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SpawnDirector_C_SetSpawnTableForFactories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnCyclingWave
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SpawnDirector_C_SpawnCyclingWave final
{
public:
	class ABP_BotFactory_C*                       LocalFactory;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_BotFactory_C>        CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BotFactory_C*                       K2Node_DynamicCast_AsBP_Bot_Factory;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_BotFactory_C>        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BotFactory_C*                       K2Node_DynamicCast_AsBP_Bot_Factory_1;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_SpawnCyclingWave) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_SpawnCyclingWave");
static_assert(sizeof(BP_SpawnDirector_C_SpawnCyclingWave) == 0x0000A8, "Wrong size on BP_SpawnDirector_C_SpawnCyclingWave");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, LocalFactory) == 0x000000, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::LocalFactory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, LocalIndex) == 0x000008, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, Temp_int_Variable) == 0x00000C, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000021, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, K2Node_DynamicCast_AsBP_Bot_Factory) == 0x000058, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::K2Node_DynamicCast_AsBP_Bot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000090, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, K2Node_DynamicCast_AsBP_Bot_Factory_1) == 0x000098, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::K2Node_DynamicCast_AsBP_Bot_Factory_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnCyclingWave, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_SpawnDirector_C_SpawnCyclingWave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnFireGiant
// 0x0020 (0x0020 - 0x0000)
struct BP_SpawnDirector_C_SpawnFireGiant final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          K2Node_DynamicCast_AsHWBot_Factory;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_SpawnFireGiant) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_SpawnFireGiant");
static_assert(sizeof(BP_SpawnDirector_C_SpawnFireGiant) == 0x000020, "Wrong size on BP_SpawnDirector_C_SpawnFireGiant");
static_assert(offsetof(BP_SpawnDirector_C_SpawnFireGiant, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_SpawnDirector_C_SpawnFireGiant::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnFireGiant, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_SpawnFireGiant::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnFireGiant, K2Node_DynamicCast_AsHWBot_Factory) == 0x000010, "Member 'BP_SpawnDirector_C_SpawnFireGiant::K2Node_DynamicCast_AsHWBot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnFireGiant, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SpawnDirector_C_SpawnFireGiant::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.SpawnWave
// 0x0040 (0x0040 - 0x0000)
struct BP_SpawnDirector_C_SpawnWave final
{
public:
	int32                                         LocalIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SpawnDirector_C>  K2Node_DynamicCast_AsBPI_Spawn_Director;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_SpawnWave) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_SpawnWave");
static_assert(sizeof(BP_SpawnDirector_C_SpawnWave) == 0x000040, "Wrong size on BP_SpawnDirector_C_SpawnWave");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, LocalIndex) == 0x000000, "Member 'BP_SpawnDirector_C_SpawnWave::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_SpawnWave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpawnDirector_C_SpawnWave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, Temp_int_Variable) == 0x000010, "Member 'BP_SpawnDirector_C_SpawnWave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, K2Node_DynamicCast_AsBPI_Spawn_Director) == 0x000020, "Member 'BP_SpawnDirector_C_SpawnWave::K2Node_DynamicCast_AsBPI_Spawn_Director' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SpawnDirector_C_SpawnWave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_SpawnWave, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SpawnDirector_C_SpawnWave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartFireGiantTimer
// 0x0018 (0x0018 - 0x0000)
struct BP_SpawnDirector_C_StartFireGiantTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartFireGiantTimer) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartFireGiantTimer");
static_assert(sizeof(BP_SpawnDirector_C_StartFireGiantTimer) == 0x000018, "Wrong size on BP_SpawnDirector_C_StartFireGiantTimer");
static_assert(offsetof(BP_SpawnDirector_C_StartFireGiantTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_SpawnDirector_C_StartFireGiantTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartFireGiantTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'BP_SpawnDirector_C_StartFireGiantTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartJungleCamps
// 0x0028 (0x0028 - 0x0000)
struct BP_SpawnDirector_C_StartJungleCamps final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartJungleCamps) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartJungleCamps");
static_assert(sizeof(BP_SpawnDirector_C_StartJungleCamps) == 0x000028, "Wrong size on BP_SpawnDirector_C_StartJungleCamps");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, Return) == 0x000000, "Member 'BP_SpawnDirector_C_StartJungleCamps::Return' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_StartJungleCamps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpawnDirector_C_StartJungleCamps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SpawnDirector_C_StartJungleCamps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_StartJungleCamps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_StartJungleCamps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SpawnDirector_C_StartJungleCamps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCamps, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_StartJungleCamps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartJungleCampsLeveling
// 0x0080 (0x0080 - 0x0000)
struct BP_SpawnDirector_C_StartJungleCampsLeveling final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_BotFactory_C>        CallFunc_Array_Get_Item_1;                         // 0x0030(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BotFactory_C*                       K2Node_DynamicCast_AsBP_Bot_Factory;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartJungleCampsLeveling) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartJungleCampsLeveling");
static_assert(sizeof(BP_SpawnDirector_C_StartJungleCampsLeveling) == 0x000080, "Wrong size on BP_SpawnDirector_C_StartJungleCampsLeveling");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, Return) == 0x000000, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::Return' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000060, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, K2Node_DynamicCast_AsBP_Bot_Factory) == 0x000070, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::K2Node_DynamicCast_AsBP_Bot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartJungleCampsLeveling, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'BP_SpawnDirector_C_StartJungleCampsLeveling::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartNagaCamps
// 0x0138 (0x0138 - 0x0000)
struct BP_SpawnDirector_C_StartNagaCamps final
{
public:
	TSoftObjectPtr<class ABP_BotFactory_Naga_C>   LocalNagaCamp;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>> LocalSpawns;                                 // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0048(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>> CallFunc_FilterOutNagaTeamSpawns_FilteredSpawns; // 0x0070(0x0010)(ReferenceParm)
	TSoftObjectPtr<class ABP_BotFactory_Naga_C>   CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BotFactory_Naga_C*                  K2Node_DynamicCast_AsBP_Bot_Factory_Naga;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AHWBotFactory* BotFactory, class AActor* Causer)> K2Node_CreateDelegate_OutputDelegate; // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWGameStatsTracker*                    CallFunc_GetGameStatsTracker_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAnnouncementComponent*               CallFunc_GetAnnouncementComponent_ReturnValue;     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x00F8(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ABP_BotFactory_Naga_C>> K2Node_Select_Default;                       // 0x0128(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SpawnDirector_C_StartNagaCamps) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartNagaCamps");
static_assert(sizeof(BP_SpawnDirector_C_StartNagaCamps) == 0x000138, "Wrong size on BP_SpawnDirector_C_StartNagaCamps");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, LocalNagaCamp) == 0x000000, "Member 'BP_SpawnDirector_C_StartNagaCamps::LocalNagaCamp' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, LocalSpawns) == 0x000028, "Member 'BP_SpawnDirector_C_StartNagaCamps::LocalSpawns' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, Temp_bool_True_if_break_was_hit_Variable) == 0x000038, "Member 'BP_SpawnDirector_C_StartNagaCamps::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_SpawnDirector_C_StartNagaCamps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000048, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_HasAnyTags_ReturnValue) == 0x000068, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_FilterOutNagaTeamSpawns_FilteredSpawns) == 0x000070, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_FilterOutNagaTeamSpawns_FilteredSpawns' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000A8, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000B0, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, K2Node_DynamicCast_AsBP_Bot_Factory_Naga) == 0x0000B8, "Member 'BP_SpawnDirector_C_StartNagaCamps::K2Node_DynamicCast_AsBP_Bot_Factory_Naga' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_SpawnDirector_C_StartNagaCamps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_GetHWGameState_ReturnValue) == 0x0000D0, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'BP_SpawnDirector_C_StartNagaCamps::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_GetGameStatsTracker_ReturnValue) == 0x0000E8, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_GetGameStatsTracker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_GetAnnouncementComponent_ReturnValue) == 0x0000F0, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_GetAnnouncementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_GetAssetTags_ReturnValue) == 0x0000F8, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'BP_SpawnDirector_C_StartNagaCamps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'BP_SpawnDirector_C_StartNagaCamps::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, Temp_bool_Variable) == 0x000125, "Member 'BP_SpawnDirector_C_StartNagaCamps::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaCamps, K2Node_Select_Default) == 0x000128, "Member 'BP_SpawnDirector_C_StartNagaCamps::K2Node_Select_Default' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartNagaTimer
// 0x0040 (0x0040 - 0x0000)
struct BP_SpawnDirector_C_StartNagaTimer final
{
public:
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartNagaTimer) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartNagaTimer");
static_assert(sizeof(BP_SpawnDirector_C_StartNagaTimer) == 0x000040, "Wrong size on BP_SpawnDirector_C_StartNagaTimer");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000000, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SpawnDirector_C_StartNagaTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_SelectFloat_B_ImplicitCast) == 0x000028, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_SelectFloat_A_ImplicitCast) == 0x000030, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartNagaTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000038, "Member 'BP_SpawnDirector_C_StartNagaTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartPyromancerTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_SpawnDirector_C_StartPyromancerTimer final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartPyromancerTimer) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartPyromancerTimer");
static_assert(sizeof(BP_SpawnDirector_C_StartPyromancerTimer) == 0x000020, "Wrong size on BP_SpawnDirector_C_StartPyromancerTimer");
static_assert(offsetof(BP_SpawnDirector_C_StartPyromancerTimer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_SpawnDirector_C_StartPyromancerTimer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartPyromancerTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SpawnDirector_C_StartPyromancerTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartPyromancerTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_StartPyromancerTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StartSpawnTimer
// 0x0038 (0x0038 - 0x0000)
struct BP_SpawnDirector_C_StartSpawnTimer final
{
public:
	double                                        AdjustedSpawnInterval;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              TheTime;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TimerError;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StartSpawnTimer) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StartSpawnTimer");
static_assert(sizeof(BP_SpawnDirector_C_StartSpawnTimer) == 0x000038, "Wrong size on BP_SpawnDirector_C_StartSpawnTimer");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, AdjustedSpawnInterval) == 0x000000, "Member 'BP_SpawnDirector_C_StartSpawnTimer::AdjustedSpawnInterval' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, TheTime) == 0x000008, "Member 'BP_SpawnDirector_C_StartSpawnTimer::TheTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, TimerError) == 0x000010, "Member 'BP_SpawnDirector_C_StartSpawnTimer::TimerError' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_SpawnDirector_C_StartSpawnTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_SpawnDirector_C_StartSpawnTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StartSpawnTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000030, "Member 'BP_SpawnDirector_C_StartSpawnTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.StopSpawning
// 0x0038 (0x0038 - 0x0000)
struct BP_SpawnDirector_C_StopSpawning final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SpawnDirector_C>  K2Node_DynamicCast_AsBPI_Spawn_Director;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_StopSpawning) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_StopSpawning");
static_assert(sizeof(BP_SpawnDirector_C_StopSpawning) == 0x000038, "Wrong size on BP_SpawnDirector_C_StopSpawning");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SpawnDirector_C_StopSpawning::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SpawnDirector_C_StopSpawning::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_StopSpawning::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpawnDirector_C_StopSpawning::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, K2Node_DynamicCast_AsBPI_Spawn_Director) == 0x000018, "Member 'BP_SpawnDirector_C_StopSpawning::K2Node_DynamicCast_AsBPI_Spawn_Director' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SpawnDirector_C_StopSpawning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_SpawnDirector_C_StopSpawning::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SpawnDirector_C_StopSpawning::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_StopSpawning, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SpawnDirector_C_StopSpawning::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.Swap To Pyromancer
// 0x0030 (0x0030 - 0x0000)
struct BP_SpawnDirector_C_Swap_To_Pyromancer final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BotFactory_C*                       K2Node_DynamicCast_AsBP_Bot_Factory;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BotFactory_Pyromancer_C*            K2Node_DynamicCast_AsBP_Bot_Factory_Pyromancer;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_Swap_To_Pyromancer) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_Swap_To_Pyromancer");
static_assert(sizeof(BP_SpawnDirector_C_Swap_To_Pyromancer) == 0x000030, "Wrong size on BP_SpawnDirector_C_Swap_To_Pyromancer");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, K2Node_DynamicCast_AsBP_Bot_Factory) == 0x000010, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::K2Node_DynamicCast_AsBP_Bot_Factory' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, K2Node_DynamicCast_AsBP_Bot_Factory_Pyromancer) == 0x000020, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::K2Node_DynamicCast_AsBP_Bot_Factory_Pyromancer' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Swap_To_Pyromancer, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_SpawnDirector_C_Swap_To_Pyromancer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.Timestamp
// 0x0120 (0x0120 - 0x0000)
struct BP_SpawnDirector_C_Timestamp final
{
public:
	class FString                                 RealClockTime;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_Timestamp) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_Timestamp");
static_assert(sizeof(BP_SpawnDirector_C_Timestamp) == 0x000120, "Wrong size on BP_SpawnDirector_C_Timestamp");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, RealClockTime) == 0x000000, "Member 'BP_SpawnDirector_C_Timestamp::RealClockTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Now_ReturnValue) == 0x000010, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_BreakTimespan_Days) == 0x000020, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_BreakTimespan_Hours) == 0x000024, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_BreakTimespan_Minutes) == 0x000028, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_BreakTimespan_Seconds) == 0x00002C, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_BreakTimespan_Milliseconds) == 0x000030, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000040, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_SpawnDirector_C_Timestamp::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_SpawnDirector_C_Timestamp::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_SpawnDirector_C_Timestamp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_Timestamp, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_SpawnDirector_C_Timestamp::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.TriggerSpawn
// 0x0010 (0x0010 - 0x0000)
struct BP_SpawnDirector_C_TriggerSpawn final
{
public:
	float                                         CurrentTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnDirector_C_TriggerSpawn) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_TriggerSpawn");
static_assert(sizeof(BP_SpawnDirector_C_TriggerSpawn) == 0x000010, "Wrong size on BP_SpawnDirector_C_TriggerSpawn");
static_assert(offsetof(BP_SpawnDirector_C_TriggerSpawn, CurrentTime) == 0x000000, "Member 'BP_SpawnDirector_C_TriggerSpawn::CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_TriggerSpawn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_SpawnDirector_C_TriggerSpawn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_SpawnDirector.BP_SpawnDirector_C.UserConstructionScript
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SpawnDirector_C_UserConstructionScript final
{
public:
	TArray<class AHWBotFactory*>                  AllBotFactories;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AHWBotFactory>           CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue;                 // 0x0068(0x0020)()
	struct FGameplayTagContainer                  CallFunc_GetAssetTags_ReturnValue_1;               // 0x0088(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHWBotFactory*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SpawnDirector_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SpawnDirector_C_UserConstructionScript");
static_assert(sizeof(BP_SpawnDirector_C_UserConstructionScript) == 0x0000C0, "Wrong size on BP_SpawnDirector_C_UserConstructionScript");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, AllBotFactories) == 0x000000, "Member 'BP_SpawnDirector_C_UserConstructionScript::AllBotFactories' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SpawnDirector_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SpawnDirector_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000060, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_GetAssetTags_ReturnValue) == 0x000068, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_GetAssetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_GetAssetTags_ReturnValue_1) == 0x000088, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_GetAssetTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_HasTag_ReturnValue) == 0x0000A8, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_HasTag_ReturnValue_1) == 0x0000AA, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AB, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnDirector_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B0, "Member 'BP_SpawnDirector_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

}

