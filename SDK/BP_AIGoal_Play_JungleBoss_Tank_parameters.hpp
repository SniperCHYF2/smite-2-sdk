#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Play_JungleBoss_Tank

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Play_JungleBoss_Tank.BP_AIGoal_Play_JungleBoss_Tank_C.CheckPreconditionsBP
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFrontliner_OutIsFrontLiner;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP) == 0x000028, "Wrong size on BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000018, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP, CallFunc_IsFrontliner_OutIsFrontLiner) == 0x000021, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_CheckPreconditionsBP::CallFunc_IsFrontliner_OutIsFrontLiner' has a wrong offset!");

// Function BP_AIGoal_Play_JungleBoss_Tank.BP_AIGoal_Play_JungleBoss_Tank_C.ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank
// 0x0004 (0x0004 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank) == 0x000004, "Wrong alignment on BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank) == 0x000004, "Wrong size on BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank, EntryPoint) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_ExecuteUbergraph_BP_AIGoal_Play_JungleBoss_Tank::EntryPoint' has a wrong offset!");

// Function BP_AIGoal_Play_JungleBoss_Tank.BP_AIGoal_Play_JungleBoss_Tank_C.IsFrontliner
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner final
{
public:
	class AHWCharacter_Base*                      InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWAIController*                        InController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsFrontLiner;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxETA;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSoloRole_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterSupportRole_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInProgress_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMaxETAForPlayParticipants_ArrivalDistance_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner) == 0x000008, "Wrong alignment on BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner");
static_assert(sizeof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner) == 0x000038, "Wrong size on BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, InCharacter) == 0x000000, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::InCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, InController) == 0x000008, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, OutIsFrontLiner) == 0x000010, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::OutIsFrontLiner' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, MaxETA) == 0x000014, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::MaxETA' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_IsCharacterSoloRole_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_IsCharacterSoloRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_IsCharacterSupportRole_ReturnValue) == 0x000019, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_IsCharacterSupportRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue) == 0x00001C, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_CalculateMaxETAForPlayParticipants_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_IsInProgress_ReturnValue) == 0x000021, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_IsInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000022, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_CalculateMaxETAForPlayParticipants_ArrivalDistance_ImplicitCast) == 0x000024, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_CalculateMaxETAForPlayParticipants_ArrivalDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000030, "Member 'BP_AIGoal_Play_JungleBoss_Tank_C_IsFrontliner::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

}

