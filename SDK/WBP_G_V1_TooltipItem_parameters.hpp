#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_TooltipItem

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.DisplayAbilityDescription
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipItem_C_DisplayAbilityDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_DisplayAbilityDescription) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_DisplayAbilityDescription");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_DisplayAbilityDescription) == 0x000018, "Wrong size on WBP_G_V1_TooltipItem_C_DisplayAbilityDescription");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayAbilityDescription, Description) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_DisplayAbilityDescription::Description' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.DisplayDescription
// 0x0020 (0x0020 - 0x0000)
struct WBP_G_V1_TooltipItem_C_DisplayDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_DisplayDescription) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_DisplayDescription");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_DisplayDescription) == 0x000020, "Wrong size on WBP_G_V1_TooltipItem_C_DisplayDescription");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, Description) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::Description' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, Temp_bool_Variable) == 0x000018, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, Temp_byte_Variable) == 0x00001A, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayDescription, K2Node_Select_Default) == 0x00001C, "Member 'WBP_G_V1_TooltipItem_C_DisplayDescription::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.DisplayIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V1_TooltipItem_C_DisplayIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Icon_0;                                            // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_DisplayIcon) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_DisplayIcon");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_DisplayIcon) == 0x000028, "Wrong size on WBP_G_V1_TooltipItem_C_DisplayIcon");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayIcon, Icon_0) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_DisplayIcon::Icon_0' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.DisplayTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipItem_C_DisplayTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_DisplayTitle) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_DisplayTitle");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_DisplayTitle) == 0x000018, "Wrong size on WBP_G_V1_TooltipItem_C_DisplayTitle");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayTitle, Title) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_DisplayTitle::Title' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.DisplayUniqueness
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V1_TooltipItem_C_DisplayUniqueness final
{
public:
	bool                                          bIsUnique;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_DisplayUniqueness) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipItem_C_DisplayUniqueness");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_DisplayUniqueness) == 0x000005, "Wrong size on WBP_G_V1_TooltipItem_C_DisplayUniqueness");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayUniqueness, bIsUnique) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_DisplayUniqueness::bIsUnique' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayUniqueness, Temp_bool_Variable) == 0x000001, "Member 'WBP_G_V1_TooltipItem_C_DisplayUniqueness::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayUniqueness, Temp_byte_Variable) == 0x000002, "Member 'WBP_G_V1_TooltipItem_C_DisplayUniqueness::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayUniqueness, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_G_V1_TooltipItem_C_DisplayUniqueness::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_DisplayUniqueness, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V1_TooltipItem_C_DisplayUniqueness::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.ExecuteUbergraph_WBP_G_V1_TooltipItem
// 0x0058 (0x0058 - 0x0000)
struct WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWTooltipWidget_ItemStat*              CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem) == 0x000058, "Wrong size on WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, EntryPoint) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, Temp_byte_Variable) == 0x000004, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, K2Node_MakeStruct_Margin) == 0x000010, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, Temp_byte_Variable_1) == 0x000020, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, K2Node_Event_IsDesignTime) == 0x000021, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, Temp_bool_Variable) == 0x000030, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, K2Node_Select_Default) == 0x000031, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000048, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem, K2Node_MakeStruct_Left_ImplicitCast) == 0x000050, "Member 'WBP_G_V1_TooltipItem_C_ExecuteUbergraph_WBP_G_V1_TooltipItem::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.Populate
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipItem_C_Populate final
{
public:
	const class UHWEquipmentItem*                 EquipmentItem;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_Populate) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_Populate");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_Populate) == 0x000018, "Wrong size on WBP_G_V1_TooltipItem_C_Populate");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, EquipmentItem) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_Populate::EquipmentItem' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, Temp_bool_Variable) == 0x000008, "Member 'WBP_G_V1_TooltipItem_C_Populate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, Temp_byte_Variable) == 0x000009, "Member 'WBP_G_V1_TooltipItem_C_Populate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_G_V1_TooltipItem_C_Populate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_G_V1_TooltipItem_C_Populate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_G_V1_TooltipItem_C_Populate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, CallFunc_HasTag_ReturnValue) == 0x00000D, "Member 'WBP_G_V1_TooltipItem_C_Populate::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, K2Node_Select_Default) == 0x00000E, "Member 'WBP_G_V1_TooltipItem_C_Populate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, CallFunc_HasTag_ReturnValue_1) == 0x00000F, "Member 'WBP_G_V1_TooltipItem_C_Populate::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_Populate, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_G_V1_TooltipItem_C_Populate::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V1_TooltipItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipItem_C_PreConstruct");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V1_TooltipItem_C_PreConstruct");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V1_TooltipItem.WBP_G_V1_TooltipItem_C.StatLineAdded
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_TooltipItem_C_StatLineAdded final
{
public:
	class UHWTooltipWidget_ItemStat*              Line;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipItem_C_StatLineAdded) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipItem_C_StatLineAdded");
static_assert(sizeof(WBP_G_V1_TooltipItem_C_StatLineAdded) == 0x000010, "Wrong size on WBP_G_V1_TooltipItem_C_StatLineAdded");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_StatLineAdded, Line) == 0x000000, "Member 'WBP_G_V1_TooltipItem_C_StatLineAdded::Line' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipItem_C_StatLineAdded, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'WBP_G_V1_TooltipItem_C_StatLineAdded::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

}

