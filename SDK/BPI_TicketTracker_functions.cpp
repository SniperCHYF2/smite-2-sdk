#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_TicketTracker

#include "Basic.hpp"

#include "BPI_TicketTracker_classes.hpp"
#include "BPI_TicketTracker_parameters.hpp"


namespace SDK
{

// Function BPI_TicketTracker.BPI_TicketTracker_C.SetTicketMaximum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxTickets                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_TicketTracker_C::SetTicketMaximum(int32 MaxTickets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_TicketTracker_C", "SetTicketMaximum");

	Params::BPI_TicketTracker_C_SetTicketMaximum Parms{};

	Parms.MaxTickets = MaxTickets;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_TicketTracker.BPI_TicketTracker_C.UpdateTicketCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tickets                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_TicketTracker_C::UpdateTicketCount(int32 Team, int32 Tickets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_TicketTracker_C", "UpdateTicketCount");

	Params::BPI_TicketTracker_C_UpdateTicketCount Parms{};

	Parms.Team = Team;
	Parms.Tickets = Tickets;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

