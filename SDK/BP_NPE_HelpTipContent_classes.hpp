#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_HelpTipContent

#include "Basic.hpp"

#include "S_NPE_PopupTextSection_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPE_HelpTipContent.BP_NPE_HelpTipContent_C
// 0x00A0 (0x00D0 - 0x0030)
class UBP_NPE_HelpTipContent_C final : public UPrimaryDataAsset
{
public:
	class FName                                   HelpTipKey;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowOnce;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              HelpTipImage;                                      // 0x0040(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0068(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TitleColor;                                        // 0x0080(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Subtitle;                                          // 0x0098(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_NPE_PopupTextSection>        TextSections;                                      // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             HelpTipImageHardRef;                               // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPE_HelpTipContent_C">();
	}
	static class UBP_NPE_HelpTipContent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPE_HelpTipContent_C>();
	}
};
static_assert(alignof(UBP_NPE_HelpTipContent_C) == 0x000008, "Wrong alignment on UBP_NPE_HelpTipContent_C");
static_assert(sizeof(UBP_NPE_HelpTipContent_C) == 0x0000D0, "Wrong size on UBP_NPE_HelpTipContent_C");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, HelpTipKey) == 0x000030, "Member 'UBP_NPE_HelpTipContent_C::HelpTipKey' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, ShowOnce) == 0x000038, "Member 'UBP_NPE_HelpTipContent_C::ShowOnce' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, HelpTipImage) == 0x000040, "Member 'UBP_NPE_HelpTipContent_C::HelpTipImage' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, Title) == 0x000068, "Member 'UBP_NPE_HelpTipContent_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, TitleColor) == 0x000080, "Member 'UBP_NPE_HelpTipContent_C::TitleColor' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, Subtitle) == 0x000098, "Member 'UBP_NPE_HelpTipContent_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, TextSections) == 0x0000B0, "Member 'UBP_NPE_HelpTipContent_C::TextSections' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, HelpTipImageHardRef) == 0x0000C0, "Member 'UBP_NPE_HelpTipContent_C::HelpTipImageHardRef' has a wrong offset!");
static_assert(offsetof(UBP_NPE_HelpTipContent_C, Priority) == 0x0000C8, "Member 'UBP_NPE_HelpTipContent_C::Priority' has a wrong offset!");

}

