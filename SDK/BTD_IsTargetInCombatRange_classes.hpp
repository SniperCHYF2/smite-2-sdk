#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_IsTargetInCombatRange

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_IsTargetInCombatRange.BTD_IsTargetInCombatRange_C
// 0x0048 (0x00E8 - 0x00A0)
class UBTD_IsTargetInCombatRange_C final : public UBTDecorator_BlueprintBase
{
public:
	double                                        Distance;                                          // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseInhandRangeForDistance;                         // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ExtraDistanceToInhandRange;                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 CurrentTargetKey;                                  // 0x00B8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                          CheckForLineOfEffectToTarget;                      // 0x00E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckCanSeeTarget;                                 // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void HasLineOfEffectToTarget(class AActor* Source, class AActor* Target, bool* HasLineOfEffect);
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_IsTargetInCombatRange_C">();
	}
	static class UBTD_IsTargetInCombatRange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_IsTargetInCombatRange_C>();
	}
};
static_assert(alignof(UBTD_IsTargetInCombatRange_C) == 0x000008, "Wrong alignment on UBTD_IsTargetInCombatRange_C");
static_assert(sizeof(UBTD_IsTargetInCombatRange_C) == 0x0000E8, "Wrong size on UBTD_IsTargetInCombatRange_C");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, Distance) == 0x0000A0, "Member 'UBTD_IsTargetInCombatRange_C::Distance' has a wrong offset!");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, UseInhandRangeForDistance) == 0x0000A8, "Member 'UBTD_IsTargetInCombatRange_C::UseInhandRangeForDistance' has a wrong offset!");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, ExtraDistanceToInhandRange) == 0x0000B0, "Member 'UBTD_IsTargetInCombatRange_C::ExtraDistanceToInhandRange' has a wrong offset!");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, CurrentTargetKey) == 0x0000B8, "Member 'UBTD_IsTargetInCombatRange_C::CurrentTargetKey' has a wrong offset!");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, CheckForLineOfEffectToTarget) == 0x0000E0, "Member 'UBTD_IsTargetInCombatRange_C::CheckForLineOfEffectToTarget' has a wrong offset!");
static_assert(offsetof(UBTD_IsTargetInCombatRange_C, CheckCanSeeTarget) == 0x0000E1, "Member 'UBTD_IsTargetInCombatRange_C::CheckCanSeeTarget' has a wrong offset!");

}

