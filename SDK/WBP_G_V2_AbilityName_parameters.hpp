#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_AbilityName

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_AbilityName.WBP_G_V2_AbilityName_C.AnimateNumber
// 0x0140 (0x0140 - 0x0000)
struct WBP_G_V2_AbilityName_C_AnimateNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 OwnerActor;                                        // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWGameplayAbility*               CallFunc_GetSourceGameplayAbility_ReturnValue;     // 0x00F0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0128(0x0018)()
};
static_assert(alignof(WBP_G_V2_AbilityName_C_AnimateNumber) == 0x000008, "Wrong alignment on WBP_G_V2_AbilityName_C_AnimateNumber");
static_assert(sizeof(WBP_G_V2_AbilityName_C_AnimateNumber) == 0x000140, "Wrong size on WBP_G_V2_AbilityName_C_AnimateNumber");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, Number) == 0x000000, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::Number' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, Parameters) == 0x000008, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::Parameters' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, OwnerActor) == 0x0000E0, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::OwnerActor' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_TextIsEmpty_ReturnValue) == 0x0000E8, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_GetSourceGameplayAbility_ReturnValue) == 0x0000F0, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_GetSourceGameplayAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_GetDisplayName_ReturnValue) == 0x0000F8, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_ParseIntoArray_ReturnValue) == 0x000108, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_Subtract_IntInt_ReturnValue) == 0x00011C, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000120, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_AnimateNumber, CallFunc_Conv_StringToText_ReturnValue) == 0x000128, "Member 'WBP_G_V2_AbilityName_C_AnimateNumber::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_AbilityName.WBP_G_V2_AbilityName_C.OnShown
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_AbilityName_C_OnShown final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AbilityName_C_OnShown) == 0x000008, "Wrong alignment on WBP_G_V2_AbilityName_C_OnShown");
static_assert(sizeof(WBP_G_V2_AbilityName_C_OnShown) == 0x000010, "Wrong size on WBP_G_V2_AbilityName_C_OnShown");
static_assert(offsetof(WBP_G_V2_AbilityName_C_OnShown, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V2_AbilityName_C_OnShown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AbilityName_C_OnShown, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_G_V2_AbilityName_C_OnShown::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");

}

