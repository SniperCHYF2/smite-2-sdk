#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_CurrencyPriceDisplay

#include "Basic.hpp"

#include "WBP_S_CurrencyPriceDisplay_classes.hpp"
#include "WBP_S_CurrencyPriceDisplay_parameters.hpp"


namespace SDK
{

// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.ExecuteUbergraph_WBP_S_CurrencyPriceDisplay
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_CurrencyPriceDisplay_C::ExecuteUbergraph_WBP_S_CurrencyPriceDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "ExecuteUbergraph_WBP_S_CurrencyPriceDisplay");

	Params::WBP_S_CurrencyPriceDisplay_C_ExecuteUbergraph_WBP_S_CurrencyPriceDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_CurrencyPriceDisplay_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "PreConstruct");

	Params::WBP_S_CurrencyPriceDisplay_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.SetPriceText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_CurrencyPriceDisplay_C::SetPriceText(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "SetPriceText");

	Params::WBP_S_CurrencyPriceDisplay_C_SetPriceText Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.UpdateSaleState
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsOnSale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumCurrencies                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_CurrencyPriceDisplay_C::UpdateSaleState(bool bIsOnSale, int32 NumCurrencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "UpdateSaleState");

	Params::WBP_S_CurrencyPriceDisplay_C_UpdateSaleState Parms{};

	Parms.bIsOnSale = bIsOnSale;
	Parms.NumCurrencies = NumCurrencies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.GetCurrencyDisplaySaleWidgets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UHWCurrencyDisplayWidget*> ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UHWCurrencyDisplayWidget*> UWBP_S_CurrencyPriceDisplay_C::GetCurrencyDisplaySaleWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "GetCurrencyDisplaySaleWidgets");

	Params::WBP_S_CurrencyPriceDisplay_C_GetCurrencyDisplaySaleWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.GetCurrencyDisplayWidgets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UHWCurrencyDisplayWidget*> ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UHWCurrencyDisplayWidget*> UWBP_S_CurrencyPriceDisplay_C::GetCurrencyDisplayWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "GetCurrencyDisplayWidgets");

	Params::WBP_S_CurrencyPriceDisplay_C_GetCurrencyDisplayWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.GetDividerSaleWidgets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UWidget*>                  ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UWidget*> UWBP_S_CurrencyPriceDisplay_C::GetDividerSaleWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "GetDividerSaleWidgets");

	Params::WBP_S_CurrencyPriceDisplay_C_GetDividerSaleWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_S_CurrencyPriceDisplay.WBP_S_CurrencyPriceDisplay_C.GetDividerWidgets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UWidget*>                  ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UWidget*> UWBP_S_CurrencyPriceDisplay_C::GetDividerWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_CurrencyPriceDisplay_C", "GetDividerWidgets");

	Params::WBP_S_CurrencyPriceDisplay_C_GetDividerWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

