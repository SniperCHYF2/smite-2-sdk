#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ObjectiveHealthbar_Health

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"
#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ObjectiveHealthbar_Health.WBP_G_V2_ObjectiveHealthbar_Health_C.AttributeTrackStarted
// 0x0068 (0x0068 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         InitialValue;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacterAbilitySystemActor*         CallFunc_GetAbilitySystemActorOwner_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetLocalAttitudeTowardsActor_ReturnValue; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHWGainLossBarPercentRangeConfig> K2Node_Select_Default;                           // 0x0058(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted) == 0x000008, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted) == 0x000068, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, Attribute) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, InitialValue) == 0x000038, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::InitialValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, Temp_byte_Variable) == 0x00003C, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000040, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, CallFunc_GetAbilitySystemActorOwner_ReturnValue) == 0x000048, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::CallFunc_GetAbilitySystemActorOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, CallFunc_GetLocalAttitudeTowardsActor_ReturnValue) == 0x000050, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::CallFunc_GetLocalAttitudeTowardsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted, K2Node_Select_Default) == 0x000058, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_AttributeTrackStarted::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Health.WBP_G_V2_ObjectiveHealthbar_Health_C.UpdateCurrentHealth
// 0x000C (0x000C - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth final
{
public:
	float                                         OldHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldAnimate;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth) == 0x00000C, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth, OldHealth) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth::OldHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth, NewHealth) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth::NewHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth, bShouldAnimate) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateCurrentHealth::bShouldAnimate' has a wrong offset!");

// Function WBP_G_V2_ObjectiveHealthbar_Health.WBP_G_V2_ObjectiveHealthbar_Health_C.UpdateMaxHealth
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth final
{
public:
	float                                         OldMaxHealth;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewMaxHealth;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldAnimate;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentHealth_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth) == 0x000004, "Wrong alignment on WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth");
static_assert(sizeof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth) == 0x000010, "Wrong size on WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth, OldMaxHealth) == 0x000000, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth::OldMaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth, NewMaxHealth) == 0x000004, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth::NewMaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth, bShouldAnimate) == 0x000008, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth::bShouldAnimate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth, CallFunc_GetCurrentHealth_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_ObjectiveHealthbar_Health_C_UpdateMaxHealth::CallFunc_GetCurrentHealth_ReturnValue' has a wrong offset!");

}

