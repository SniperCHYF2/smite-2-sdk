#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GOD_Lobby

#include "Basic.hpp"

#include "ABP_GOD_Lobby_classes.hpp"
#include "ABP_GOD_Lobby_parameters.hpp"


namespace SDK
{

// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.ABPSkinningFinished
// (Event, Public, BlueprintEvent)

void UABP_GOD_Lobby_C::ABPSkinningFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "ABPSkinningFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.AnimBlink
// (BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::AnimBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "AnimBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_GOD_Lobby_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "AnimGraph");

	Params::ABP_GOD_Lobby_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.Begin Anim Blink
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::Begin_Anim_Blink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "Begin Anim Blink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.Blink
// (BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::Blink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "Blink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BlinkInit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_GOD_Lobby_C::BlinkInit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BlinkInit");

	Params::ABP_GOD_Lobby_C_BlinkInit Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_GOD_Lobby_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BlueprintUpdateAnimation");

	Params::ABP_GOD_Lobby_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_CanTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanTransition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_CanTransition(bool CanTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_CanTransition");

	Params::ABP_GOD_Lobby_C_BPI_AN_CanTransition Parms{};

	Parms.CanTransition = CanTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_GenericStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharGenericStance                      Stance_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_GenericStance(ECharGenericStance Stance_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_GenericStance");

	Params::ABP_GOD_Lobby_C_BPI_AN_GenericStance Parms{};

	Parms.Stance_State = Stance_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_JumpEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    JumpEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_JumpEnd(bool JumpEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_JumpEnd");

	Params::ABP_GOD_Lobby_C_BPI_AN_JumpEnd Parms{};

	Parms.JumpEnd = JumpEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_PassiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharPassiveState                       PassiveState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PassiveValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_PassiveState(ECharPassiveState PassiveState, double PassiveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_PassiveState");

	Params::ABP_GOD_Lobby_C_BPI_AN_PassiveState Parms{};

	Parms.PassiveState = PassiveState;
	Parms.PassiveValue = PassiveValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_PlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_PlayRate(double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_PlayRate");

	Params::ABP_GOD_Lobby_C_BPI_AN_PlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_AN_RunVariant
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Variant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_AN_RunVariant(bool Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_AN_RunVariant");

	Params::ABP_GOD_Lobby_C_BPI_AN_RunVariant Parms{};

	Parms.Variant = Variant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_DisablePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Bone_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Turn_Off                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_DisablePhysics(class FName Bone_Name, bool Turn_Off)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_DisablePhysics");

	Params::ABP_GOD_Lobby_C_BPI_ANS_DisablePhysics Parms{};

	Parms.Bone_Name = Bone_Name;
	Parms.Turn_Off = Turn_Off;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_DisableTurnInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableTurnInPlace                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_DisableTurnInPlace(bool DisableTurnInPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_DisableTurnInPlace");

	Params::ABP_GOD_Lobby_C_BPI_ANS_DisableTurnInPlace Parms{};

	Parms.DisableTurnInPlace = DisableTurnInPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_EmoteQuery
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EmoteQuery                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_EmoteQuery(bool EmoteQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_EmoteQuery");

	Params::ABP_GOD_Lobby_C_BPI_ANS_EmoteQuery Parms{};

	Parms.EmoteQuery = EmoteQuery;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ForceFullBody
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fullbody                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BlendOutTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ForceFullBody(bool Fullbody, double BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ForceFullBody");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ForceFullBody Parms{};

	Parms.Fullbody = Fullbody;
	Parms.BlendOutTime = BlendOutTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_HideBlueprintVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_HideBlueprintVFX(bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_HideBlueprintVFX");

	Params::ABP_GOD_Lobby_C_BPI_ANS_HideBlueprintVFX Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_PlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_PlayRate(double PlayRate, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_PlayRate");

	Params::ABP_GOD_Lobby_C_BPI_ANS_PlayRate Parms{};

	Parms.PlayRate = PlayRate;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_Prop01Lock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_Prop01Lock(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_Prop01Lock");

	Params::ABP_GOD_Lobby_C_BPI_ANS_Prop01Lock Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_Prop02Lock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_Prop02Lock(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_Prop02Lock");

	Params::ABP_GOD_Lobby_C_BPI_ANS_Prop02Lock Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ScaleCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ScaleValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ScaleCharacter(double ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ScaleCharacter");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ScaleCharacter Parms{};

	Parms.ScaleValue = ScaleValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ScaleFromCurve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRigVMFunction_AnimRichCurve&BoneScaleCurve                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             Bone_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ScaleFromCurve(const struct FRigVMFunction_AnimRichCurve& BoneScaleCurve, class FName Bone_Name, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ScaleFromCurve");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ScaleFromCurve Parms{};

	Parms.BoneScaleCurve = std::move(BoneScaleCurve);
	Parms.Bone_Name = Bone_Name;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ScaleWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ScaleValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ScaleWeapon(double ScaleValue, int32 Weapon, bool Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ScaleWeapon");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ScaleWeapon Parms{};

	Parms.ScaleValue = ScaleValue;
	Parms.Weapon = Weapon;
	Parms.Override = Override;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ShowMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ShowMesh(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ShowMesh");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ShowMesh Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_StopMotionWarping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AlphaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_StopMotionWarping(double AlphaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_StopMotionWarping");

	Params::ABP_GOD_Lobby_C_BPI_ANS_StopMotionWarping Parms{};

	Parms.AlphaValue = AlphaValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ANS_ToggleBoulder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ANS_ToggleBoulder(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ANS_ToggleBoulder");

	Params::ABP_GOD_Lobby_C_BPI_ANS_ToggleBoulder Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_BellonaWeaponOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharGenericStance                      OverrideStance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_BellonaWeaponOverride(bool Override, ECharGenericStance OverrideStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_BellonaWeaponOverride");

	Params::ABP_GOD_Lobby_C_BPI_BellonaWeaponOverride Parms{};

	Parms.Override = Override;
	Parms.OverrideStance = OverrideStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_ChildMesh_Outro
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayOutro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_ChildMesh_Outro(bool PlayOutro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_ChildMesh_Outro");

	Params::ABP_GOD_Lobby_C_BPI_ChildMesh_Outro Parms{};

	Parms.PlayOutro = PlayOutro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_CombatStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CombatState                           CombatState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_CombatStance(E_CombatState CombatState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_CombatStance");

	Params::ABP_GOD_Lobby_C_BPI_CombatStance Parms{};

	Parms.CombatState = CombatState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_Morrigan_Fire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayFire                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_Morrigan_Fire(bool PlayFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_Morrigan_Fire");

	Params::ABP_GOD_Lobby_C_BPI_Morrigan_Fire Parms{};

	Parms.PlayFire = PlayFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_Morrigan_PlayIntroA
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayIntro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_Morrigan_PlayIntroA(bool PlayIntro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_Morrigan_PlayIntroA");

	Params::ABP_GOD_Lobby_C_BPI_Morrigan_PlayIntroA Parms{};

	Parms.PlayIntro = PlayIntro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_Morrigan_PlayIntroB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayIntro                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_Morrigan_PlayIntroB(bool PlayIntro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_Morrigan_PlayIntroB");

	Params::ABP_GOD_Lobby_C_BPI_Morrigan_PlayIntroB Parms{};

	Parms.PlayIntro = PlayIntro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_PelvisDirectionFromVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsePelvisDirection                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_PelvisDirectionFromVelocity(bool UsePelvisDirection, double ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_PelvisDirectionFromVelocity");

	Params::ABP_GOD_Lobby_C_BPI_PelvisDirectionFromVelocity Parms{};

	Parms.UsePelvisDirection = UsePelvisDirection;
	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.BPI_TailAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AlphaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::BPI_TailAlpha(double AlphaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "BPI_TailAlpha");

	Params::ABP_GOD_Lobby_C_BPI_TailAlpha Parms{};

	Parms.AlphaValue = AlphaValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.Delay Blink
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::Delay_Blink(double DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "Delay Blink");

	Params::ABP_GOD_Lobby_C_Delay_Blink Parms{};

	Parms.DelayTime = DelayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_0DD145834B48ACE5F25BBBA7A8EC32A1
// (BlueprintEvent)

void UABP_GOD_Lobby_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_0DD145834B48ACE5F25BBBA7A8EC32A1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_0DD145834B48ACE5F25BBBA7A8EC32A1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_3E3BD4CC453ADC4358167591876BAB43
// (BlueprintEvent)

void UABP_GOD_Lobby_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_3E3BD4CC453ADC4358167591876BAB43()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_3E3BD4CC453ADC4358167591876BAB43");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_9BD9A4CB450BEAFDEF4A5582F982B14C
// (BlueprintEvent)

void UABP_GOD_Lobby_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_9BD9A4CB450BEAFDEF4A5582F982B14C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_9BD9A4CB450BEAFDEF4A5582F982B14C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_C2D0955345B11596D370A49562F2BD50
// (BlueprintEvent)

void UABP_GOD_Lobby_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_C2D0955345B11596D370A49562F2BD50()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_C2D0955345B11596D370A49562F2BD50");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_FE9235BF43C7818F6FECEC92D4CD8730
// (BlueprintEvent)

void UABP_GOD_Lobby_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_FE9235BF43C7818F6FECEC92D4CD8730()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GOD_Lobby_AnimGraphNode_TransitionResult_FE9235BF43C7818F6FECEC92D4CD8730");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.ExecuteUbergraph_ABP_GOD_Lobby
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::ExecuteUbergraph_ABP_GOD_Lobby(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "ExecuteUbergraph_ABP_GOD_Lobby");

	Params::ABP_GOD_Lobby_C_ExecuteUbergraph_ABP_GOD_Lobby Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EyeDart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::EyeDart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EyeDart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.EyeDartTimer
// (BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::EyeDartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "EyeDartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.FidgetTimer
// (BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::FidgetTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "FidgetTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.GetAllSkeletalMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::GetAllSkeletalMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "GetAllSkeletalMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.GetAnimBlinkTimerStarted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_GOD_Lobby_C::GetAnimBlinkTimerStarted(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "GetAnimBlinkTimerStarted");

	Params::ABP_GOD_Lobby_C_GetAnimBlinkTimerStarted Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.IdleEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_GOD_Lobby_C::IdleEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "IdleEntry");

	Params::ABP_GOD_Lobby_C_IdleEntry Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.IntroMat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::IntroMat(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "IntroMat");

	Params::ABP_GOD_Lobby_C_IntroMat Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.IsVectorArrayMultiple
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   IsEmpty                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::IsVectorArrayMultiple(TArray<struct FVector>& Array, bool* IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "IsVectorArrayMultiple");

	Params::ABP_GOD_Lobby_C_IsVectorArrayMultiple Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (IsEmpty != nullptr)
		*IsEmpty = Parms.IsEmpty;
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.NewAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  YawIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PitchIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Yaw                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Pitch                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::NewAim(double YawIn, double PitchIn, double* Yaw, double* Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "NewAim");

	Params::ABP_GOD_Lobby_C_NewAim Parms{};

	Parms.YawIn = YawIn;
	Parms.PitchIn = PitchIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Yaw != nullptr)
		*Yaw = Parms.Yaw;

	if (Pitch != nullptr)
		*Pitch = Parms.Pitch;
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.NewFidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::NewFidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "NewFidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.SetWeaponScaleFromCurve
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::SetWeaponScaleFromCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "SetWeaponScaleFromCurve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateAim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateAim(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateAim");

	Params::ABP_GOD_Lobby_C_UpdateAim Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateAimEase
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateAimEase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateAimEase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateAnimBlink
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateAnimBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateAnimBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateBlink
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateBlink(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateBlink");

	Params::ABP_GOD_Lobby_C_UpdateBlink Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateBreathWave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateBreathWave(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateBreathWave");

	Params::ABP_GOD_Lobby_C_UpdateBreathWave Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateGetEyeRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateGetEyeRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateGetEyeRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateHead
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateHead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateL_Clavicle
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateL_Clavicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateL_Clavicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateNeck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  RotIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   ScaleIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        RotOut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         ScaleOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateNeck(const struct FRotator& RotIn, const struct FVector& ScaleIn, struct FRotator* RotOut, struct FVector* ScaleOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateNeck");

	Params::ABP_GOD_Lobby_C_UpdateNeck Parms{};

	Parms.RotIn = std::move(RotIn);
	Parms.ScaleIn = std::move(ScaleIn);

	UObject::ProcessEvent(Func, &Parms);

	if (RotOut != nullptr)
		*RotOut = std::move(Parms.RotOut);

	if (ScaleOut != nullptr)
		*ScaleOut = std::move(Parms.ScaleOut);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateNeckChildren
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  RotIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   ScaleIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateNeckChildren(const struct FRotator& RotIn, const struct FVector& ScaleIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateNeckChildren");

	Params::ABP_GOD_Lobby_C_UpdateNeckChildren Parms{};

	Parms.RotIn = std::move(RotIn);
	Parms.ScaleIn = std::move(ScaleIn);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateNWings_temp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  RotIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   ScaleIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        RotOut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         ScaleOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateNWings_temp(const struct FRotator& RotIn, const struct FVector& ScaleIn, struct FRotator* RotOut, struct FVector* ScaleOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateNWings_temp");

	Params::ABP_GOD_Lobby_C_UpdateNWings_temp Parms{};

	Parms.RotIn = std::move(RotIn);
	Parms.ScaleIn = std::move(ScaleIn);

	UObject::ProcessEvent(Func, &Parms);

	if (RotOut != nullptr)
		*RotOut = std::move(Parms.RotOut);

	if (ScaleOut != nullptr)
		*ScaleOut = std::move(Parms.ScaleOut);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateR_Clavicle
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_GOD_Lobby_C::UpdateR_Clavicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateR_Clavicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateSkinIntro
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateSkinIntro(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateSkinIntro");

	Params::ABP_GOD_Lobby_C_UpdateSkinIntro Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateSpine1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        RotOut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         ScaleOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateSpine1(struct FRotator* RotOut, struct FVector* ScaleOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateSpine1");

	Params::ABP_GOD_Lobby_C_UpdateSpine1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotOut != nullptr)
		*RotOut = std::move(Parms.RotOut);

	if (ScaleOut != nullptr)
		*ScaleOut = std::move(Parms.ScaleOut);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.UpdateSpine2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  RotIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   ScaleIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        RotOut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector*                         ScaleOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_GOD_Lobby_C::UpdateSpine2(const struct FRotator& RotIn, const struct FVector& ScaleIn, struct FRotator* RotOut, struct FVector* ScaleOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "UpdateSpine2");

	Params::ABP_GOD_Lobby_C_UpdateSpine2 Parms{};

	Parms.RotIn = std::move(RotIn);
	Parms.ScaleIn = std::move(ScaleIn);

	UObject::ProcessEvent(Func, &Parms);

	if (RotOut != nullptr)
		*RotOut = std::move(Parms.RotOut);

	if (ScaleOut != nullptr)
		*ScaleOut = std::move(Parms.ScaleOut);
}


// Function ABP_GOD_Lobby.ABP_GOD_Lobby_C.GetSkinnedFiringMontageTag
// (HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              SourceIdTag                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              OriginalFiringMontageTag                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FGameplayTag UABP_GOD_Lobby_C::GetSkinnedFiringMontageTag(const struct FGameplayTag& SourceIdTag, const struct FGameplayTag& OriginalFiringMontageTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_GOD_Lobby_C", "GetSkinnedFiringMontageTag");

	Params::ABP_GOD_Lobby_C_GetSkinnedFiringMontageTag Parms{};

	Parms.SourceIdTag = std::move(SourceIdTag);
	Parms.OriginalFiringMontageTag = std::move(OriginalFiringMontageTag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

