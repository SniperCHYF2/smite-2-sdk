#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_AimReticle

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_AimReticle.WBP_G_V1_AimReticle_C.AnimateHit
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V1_AimReticle_C_AnimateHit final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_AimReticle_C_AnimateHit) == 0x000008, "Wrong alignment on WBP_G_V1_AimReticle_C_AnimateHit");
static_assert(sizeof(WBP_G_V1_AimReticle_C_AnimateHit) == 0x000008, "Wrong size on WBP_G_V1_AimReticle_C_AnimateHit");
static_assert(offsetof(WBP_G_V1_AimReticle_C_AnimateHit, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V1_AimReticle_C_AnimateHit::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_AimReticle.WBP_G_V1_AimReticle_C.AnimateKill
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V1_AimReticle_C_AnimateKill final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_AimReticle_C_AnimateKill) == 0x000008, "Wrong alignment on WBP_G_V1_AimReticle_C_AnimateKill");
static_assert(sizeof(WBP_G_V1_AimReticle_C_AnimateKill) == 0x000008, "Wrong size on WBP_G_V1_AimReticle_C_AnimateKill");
static_assert(offsetof(WBP_G_V1_AimReticle_C_AnimateKill, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_G_V1_AimReticle_C_AnimateKill::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_G_V1_AimReticle.WBP_G_V1_AimReticle_C.ExecuteUbergraph_WBP_G_V1_AimReticle
// 0x0044 (0x0044 - 0x0000)
struct WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTargeting;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0030(0x0014)()
};
static_assert(alignof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle) == 0x000004, "Wrong alignment on WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle");
static_assert(sizeof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle) == 0x000044, "Wrong size on WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, EntryPoint) == 0x000000, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, Temp_bool_Variable) == 0x000018, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, K2Node_Event_bIsTargeting) == 0x000019, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::K2Node_Event_bIsTargeting' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, K2Node_MakeStruct_SlateColor_1) == 0x00001C, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle, K2Node_Select_Default) == 0x000030, "Member 'WBP_G_V1_AimReticle_C_ExecuteUbergraph_WBP_G_V1_AimReticle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_AimReticle.WBP_G_V1_AimReticle_C.SetIsTargeting
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V1_AimReticle_C_SetIsTargeting final
{
public:
	bool                                          bIsTargeting;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_AimReticle_C_SetIsTargeting) == 0x000001, "Wrong alignment on WBP_G_V1_AimReticle_C_SetIsTargeting");
static_assert(sizeof(WBP_G_V1_AimReticle_C_SetIsTargeting) == 0x000001, "Wrong size on WBP_G_V1_AimReticle_C_SetIsTargeting");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetIsTargeting, bIsTargeting) == 0x000000, "Member 'WBP_G_V1_AimReticle_C_SetIsTargeting::bIsTargeting' has a wrong offset!");

// Function WBP_G_V1_AimReticle.WBP_G_V1_AimReticle_C.SetReticleImage
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V1_AimReticle_C_SetReticleImage final
{
public:
	class UObject*                                Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_AimReticle_C_SetReticleImage) == 0x000008, "Wrong alignment on WBP_G_V1_AimReticle_C_SetReticleImage");
static_assert(sizeof(WBP_G_V1_AimReticle_C_SetReticleImage) == 0x000010, "Wrong size on WBP_G_V1_AimReticle_C_SetReticleImage");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, Image) == 0x000000, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::Image' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, Temp_bool_Variable) == 0x000008, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, Temp_byte_Variable) == 0x00000A, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_AimReticle_C_SetReticleImage, K2Node_Select_Default) == 0x00000C, "Member 'WBP_G_V1_AimReticle_C_SetReticleImage::K2Node_Select_Default' has a wrong offset!");

}

