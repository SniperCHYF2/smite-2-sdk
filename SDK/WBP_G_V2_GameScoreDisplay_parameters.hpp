#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_GameScoreDisplay

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.DisplayTeamGold
// 0x0040 (0x0040 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold final
{
public:
	struct FGenericTeamId                         TeamId;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Gold;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetLocalTeamId_ReturnValue;               // 0x0030(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold) == 0x000040, "Wrong size on WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, TeamId) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::TeamId' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, Gold) == 0x000004, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::Gold' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, Temp_bool_Variable) == 0x000008, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000028, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, CallFunc_GetLocalTeamId_ReturnValue) == 0x000030, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::CallFunc_GetLocalTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold, K2Node_Select_Default) == 0x000038, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamGold::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.DisplayTeamKills
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills final
{
public:
	struct FGenericTeamId                         TeamId;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Kills;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class AHWGameHUD*                             CallFunc_GetLocalHUDAsGame_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills) == 0x000048, "Wrong size on WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, TeamId) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::TeamId' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, Kills) == 0x000004, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::Kills' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, Temp_byte_Variable) == 0x000008, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, Temp_object_Variable) == 0x000010, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, CallFunc_GetLocalHUDAsGame_ReturnValue) == 0x000030, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::CallFunc_GetLocalHUDAsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue) == 0x000038, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::CallFunc_GetLocalAttitudeTowardsTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills, K2Node_Select_Default) == 0x000040, "Member 'WBP_G_V2_GameScoreDisplay_C_DisplayTeamKills::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.ExecuteUbergraph_WBP_G_V2_GameScoreDisplay
// 0x000C (0x000C - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay) == 0x000004, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay) == 0x00000C, "Wrong size on WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay, EntryPoint) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000008, "Member 'WBP_G_V2_GameScoreDisplay_C_ExecuteUbergraph_WBP_G_V2_GameScoreDisplay::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.GamePhaseChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged final
{
public:
	struct FGameplayTag                           NewPhaseTag;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged) == 0x000004, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged) == 0x000010, "Wrong size on WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, NewPhaseTag) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::NewPhaseTag' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, Temp_bool_Variable) == 0x000008, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, CallFunc_MatchesTag_ReturnValue) == 0x000009, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, Temp_byte_Variable) == 0x00000A, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged, K2Node_Select_Default) == 0x00000C, "Member 'WBP_G_V2_GameScoreDisplay_C_GamePhaseChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.GetWidgetName
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_GetWidgetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_GetWidgetName) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_GetWidgetName");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_GetWidgetName) == 0x000018, "Wrong size on WBP_G_V2_GameScoreDisplay_C_GetWidgetName");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_GetWidgetName, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_GetWidgetName::ReturnValue' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.PopulateObjectiveTips
// 0x0028 (0x0028 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips final
{
public:
	class UBP_NPE_HelpTipContent_C*               HelpTip3;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_NPE_HelpTipContent_C*               HelpTip2;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_NPE_HelpTipContent_C*               HelpTip1;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips) == 0x000028, "Wrong size on WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, HelpTip3) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::HelpTip3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, HelpTip2) == 0x000008, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::HelpTip2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, HelpTip1) == 0x000010, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::HelpTip1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, CallFunc_Array_Add_ReturnValue_1) == 0x00001C, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips, CallFunc_Array_Add_ReturnValue_2) == 0x000020, "Member 'WBP_G_V2_GameScoreDisplay_C_PopulateObjectiveTips::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.UpdateGameTime
// 0x0098 (0x0098 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_UpdateGameTime final
{
public:
	TMap<class UTexture2D*, int32>                TeamIconMap;                                       // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0070(0x0018)()
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FromSeconds_Seconds_ImplicitCast;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_UpdateGameTime");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime) == 0x000098, "Wrong size on WBP_G_V2_GameScoreDisplay_C_UpdateGameTime");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, TeamIconMap) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::TeamIconMap' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_MatchesTag_ReturnValue) == 0x000050, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_GetGameTime_ReturnValue) == 0x000054, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_Round_ReturnValue) == 0x000058, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_FromSeconds_ReturnValue) == 0x000068, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000070, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_Round_A_ImplicitCast) == 0x000088, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_UpdateGameTime, CallFunc_FromSeconds_Seconds_ImplicitCast) == 0x000090, "Member 'WBP_G_V2_GameScoreDisplay_C_UpdateGameTime::CallFunc_FromSeconds_Seconds_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_GameScoreDisplay.WBP_G_V2_GameScoreDisplay_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_G_V2_GameScoreDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

