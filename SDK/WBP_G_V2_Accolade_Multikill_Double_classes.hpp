#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_Accolade_Multikill_Double

#include "Basic.hpp"

#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_G_V2_Accolade_Multikill_Double.WBP_G_V2_Accolade_Multikill_Double_C
// 0x0020 (0x0680 - 0x0660)
class UWBP_G_V2_Accolade_Multikill_Double_C final : public UHWAccoladeEntryWidget
{
public:
	class UWidgetAnimation*                       DoubleKill;                                        // 0x0660(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_G_V2_MG_Accolade_BaseRings_C*      AccoladeRings;                                     // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           MultikillText;                                     // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_G_V2_AccoladePortrait_C*           Portrait;                                          // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetAccoladeData(const struct FGameplayTag& InAccoladeTag, const struct FHWAccoladeConfig& InAccoladeConfig, const struct FHWEventContext& InAccoladeContext);
	void SetEventData(const struct FHWEventContext& EventContext);
	void StartDisplay(const float FullDuration);
	void StartOutro();

	float GetOutroDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_G_V2_Accolade_Multikill_Double_C">();
	}
	static class UWBP_G_V2_Accolade_Multikill_Double_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_G_V2_Accolade_Multikill_Double_C>();
	}
};
static_assert(alignof(UWBP_G_V2_Accolade_Multikill_Double_C) == 0x000008, "Wrong alignment on UWBP_G_V2_Accolade_Multikill_Double_C");
static_assert(sizeof(UWBP_G_V2_Accolade_Multikill_Double_C) == 0x000680, "Wrong size on UWBP_G_V2_Accolade_Multikill_Double_C");
static_assert(offsetof(UWBP_G_V2_Accolade_Multikill_Double_C, DoubleKill) == 0x000660, "Member 'UWBP_G_V2_Accolade_Multikill_Double_C::DoubleKill' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_Accolade_Multikill_Double_C, AccoladeRings) == 0x000668, "Member 'UWBP_G_V2_Accolade_Multikill_Double_C::AccoladeRings' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_Accolade_Multikill_Double_C, MultikillText) == 0x000670, "Member 'UWBP_G_V2_Accolade_Multikill_Double_C::MultikillText' has a wrong offset!");
static_assert(offsetof(UWBP_G_V2_Accolade_Multikill_Double_C, Portrait) == 0x000678, "Member 'UWBP_G_V2_Accolade_Multikill_Double_C::Portrait' has a wrong offset!");

}

