#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_PlayerAvatarDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_PlayerAvatarDisplay.WBP_S_PlayerAvatarDisplay_C
// 0x0018 (0x0648 - 0x0630)
class UWBP_S_PlayerAvatarDisplay_C final : public UHWPlayerAvatarDisplayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URHAsyncImage*                          AsyncImage;                                        // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LoadingThrobber_C*                 WBP_LoadingThrobber;                               // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OnUpdateAvatarItem(const class UHWCollectionItem* AvatarItem);
	void OnClearAvatar();
	void ExecuteUbergraph_WBP_S_PlayerAvatarDisplay(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_PlayerAvatarDisplay_C">();
	}
	static class UWBP_S_PlayerAvatarDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_PlayerAvatarDisplay_C>();
	}
};
static_assert(alignof(UWBP_S_PlayerAvatarDisplay_C) == 0x000008, "Wrong alignment on UWBP_S_PlayerAvatarDisplay_C");
static_assert(sizeof(UWBP_S_PlayerAvatarDisplay_C) == 0x000648, "Wrong size on UWBP_S_PlayerAvatarDisplay_C");
static_assert(offsetof(UWBP_S_PlayerAvatarDisplay_C, UberGraphFrame) == 0x000630, "Member 'UWBP_S_PlayerAvatarDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_PlayerAvatarDisplay_C, AsyncImage) == 0x000638, "Member 'UWBP_S_PlayerAvatarDisplay_C::AsyncImage' has a wrong offset!");
static_assert(offsetof(UWBP_S_PlayerAvatarDisplay_C, WBP_LoadingThrobber) == 0x000640, "Member 'UWBP_S_PlayerAvatarDisplay_C::WBP_LoadingThrobber' has a wrong offset!");

}

