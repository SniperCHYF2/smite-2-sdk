#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StorePriceTag

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.ExecuteUbergraph_WBP_StorePriceTag
// 0x0018 (0x0018 - 0x0000)
struct WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URHStoreItemPrice*                      K2Node_Event_StoreItemPrice;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           K2Node_Event_StoreItem;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag) == 0x000008, "Wrong alignment on WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag");
static_assert(sizeof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag) == 0x000018, "Wrong size on WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag");
static_assert(offsetof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag, EntryPoint) == 0x000000, "Member 'WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag, K2Node_Event_StoreItemPrice) == 0x000008, "Member 'WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag::K2Node_Event_StoreItemPrice' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag, K2Node_Event_StoreItem) == 0x000010, "Member 'WBP_StorePriceTag_C_ExecuteUbergraph_WBP_StorePriceTag::K2Node_Event_StoreItem' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.OnCanAffordResponse
// 0x0054 (0x0054 - 0x0000)
struct WBP_StorePriceTag_C_OnCanAffordResponse final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          CallFunc_GetColorByName_HasFound;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x002C(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0040(0x0014)()
};
static_assert(alignof(WBP_StorePriceTag_C_OnCanAffordResponse) == 0x000004, "Wrong alignment on WBP_StorePriceTag_C_OnCanAffordResponse");
static_assert(sizeof(WBP_StorePriceTag_C_OnCanAffordResponse) == 0x000054, "Wrong size on WBP_StorePriceTag_C_OnCanAffordResponse");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, IsValid) == 0x000000, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, Temp_bool_Variable) == 0x000001, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, CallFunc_GetColorByName_HasFound) == 0x000018, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::CallFunc_GetColorByName_HasFound' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, CallFunc_GetColorByName_Color) == 0x00001C, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, K2Node_MakeStruct_SlateColor_1) == 0x00002C, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_OnCanAffordResponse, K2Node_Select_Default) == 0x000040, "Member 'WBP_StorePriceTag_C_OnCanAffordResponse::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.OnGetBestCouponResponse
// 0x0008 (0x0008 - 0x0000)
struct WBP_StorePriceTag_C_OnGetBestCouponResponse final
{
public:
	class URHStoreItem*                           CouponItem;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StorePriceTag_C_OnGetBestCouponResponse) == 0x000008, "Wrong alignment on WBP_StorePriceTag_C_OnGetBestCouponResponse");
static_assert(sizeof(WBP_StorePriceTag_C_OnGetBestCouponResponse) == 0x000008, "Wrong size on WBP_StorePriceTag_C_OnGetBestCouponResponse");
static_assert(offsetof(WBP_StorePriceTag_C_OnGetBestCouponResponse, CouponItem) == 0x000000, "Member 'WBP_StorePriceTag_C_OnGetBestCouponResponse::CouponItem' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_StorePriceTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StorePriceTag_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_StorePriceTag_C_PreConstruct");
static_assert(sizeof(WBP_StorePriceTag_C_PreConstruct) == 0x000001, "Wrong size on WBP_StorePriceTag_C_PreConstruct");
static_assert(offsetof(WBP_StorePriceTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_StorePriceTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.SetPriceColors
// 0x0048 (0x0048 - 0x0000)
struct WBP_StorePriceTag_C_SetPriceColors final
{
public:
	struct FLinearColor                           PriceColor_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OriginalPriceColor_0;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0034(0x0014)()
};
static_assert(alignof(WBP_StorePriceTag_C_SetPriceColors) == 0x000004, "Wrong alignment on WBP_StorePriceTag_C_SetPriceColors");
static_assert(sizeof(WBP_StorePriceTag_C_SetPriceColors) == 0x000048, "Wrong size on WBP_StorePriceTag_C_SetPriceColors");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceColors, PriceColor_0) == 0x000000, "Member 'WBP_StorePriceTag_C_SetPriceColors::PriceColor_0' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceColors, OriginalPriceColor_0) == 0x000010, "Member 'WBP_StorePriceTag_C_SetPriceColors::OriginalPriceColor_0' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceColors, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_StorePriceTag_C_SetPriceColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceColors, K2Node_MakeStruct_SlateColor_1) == 0x000034, "Member 'WBP_StorePriceTag_C_SetPriceColors::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.SetPriceDisplay
// 0x0050 (0x0050 - 0x0000)
struct WBP_StorePriceTag_C_SetPriceDisplay final
{
public:
	class URHStoreItemPrice*                      PriceInfo;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHPortalOffer*                         PortalOffer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         PurchaseQuantity;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHStoreItem*                           StoreItem;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class URHStoreItem* StoreItem)> K2Node_CreateDelegate_OutputDelegate;             // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDiscountPercentage_ReturnValue;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StorePriceTag_C_SetPriceDisplay) == 0x000008, "Wrong alignment on WBP_StorePriceTag_C_SetPriceDisplay");
static_assert(sizeof(WBP_StorePriceTag_C_SetPriceDisplay) == 0x000050, "Wrong size on WBP_StorePriceTag_C_SetPriceDisplay");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, PriceInfo) == 0x000000, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::PriceInfo' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, PortalOffer) == 0x000008, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::PortalOffer' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, PurchaseQuantity) == 0x000010, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::PurchaseQuantity' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, StoreItem) == 0x000018, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::StoreItem' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, Temp_byte_Variable) == 0x000020, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000038, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, Temp_bool_Variable) == 0x000040, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, CallFunc_GetDiscountPercentage_ReturnValue) == 0x000044, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::CallFunc_GetDiscountPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceDisplay, K2Node_Select_Default) == 0x000049, "Member 'WBP_StorePriceTag_C_SetPriceDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StorePriceTag.WBP_StorePriceTag_C.SetPriceTag
// 0x0010 (0x0010 - 0x0000)
struct WBP_StorePriceTag_C_SetPriceTag final
{
public:
	class URHStoreItemPrice*                      StoreItemPrice;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           StoreItem;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StorePriceTag_C_SetPriceTag) == 0x000008, "Wrong alignment on WBP_StorePriceTag_C_SetPriceTag");
static_assert(sizeof(WBP_StorePriceTag_C_SetPriceTag) == 0x000010, "Wrong size on WBP_StorePriceTag_C_SetPriceTag");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceTag, StoreItemPrice) == 0x000000, "Member 'WBP_StorePriceTag_C_SetPriceTag::StoreItemPrice' has a wrong offset!");
static_assert(offsetof(WBP_StorePriceTag_C_SetPriceTag, StoreItem) == 0x000008, "Member 'WBP_StorePriceTag_C_SetPriceTag::StoreItem' has a wrong offset!");

}

