#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AsyncIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AsyncIcon.WBP_AsyncIcon_C
// 0x0100 (0x03C0 - 0x02C0)
class UWBP_AsyncIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URHAsyncImage*                          Icon;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UThrobber*                              LoadingThrobber;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UTexture2D* Texture)> OnIconUpdated;                         // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DefaultBrush;                                      // 0x02F0(0x00D0)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ApplyDefaultBrush();
	void Construct();
	void ExecuteUbergraph_WBP_AsyncIcon(int32 EntryPoint);
	void Get_Material(class UMaterialInstanceDynamic** MaterialInstanceDynamic);
	void OnFinishLoad(class URHAsyncImage* Image);
	void OnStartLoad(class URHAsyncImage* Image);
	void PreConstruct(bool IsDesignTime);
	void Set_Brush_From_Icon_Info(class UIconInfo* Icon_Info, bool MatchSize);
	void Set_Brush_from_Texture_on_Item(class UPlatformInventoryItem* Item, bool MatchSize, TSoftObjectPtr<class UTexture2D> Texture);
	void SetBrushFromSoftPath(const struct FSoftObjectPath& Soft_Path, bool MatchSize);
	void SetBrushFromSoftTexture(TSoftObjectPtr<class UTexture2D> Texture, bool MatchSize);
	void SetBrushFromTexture(class UTexture2D* Texture, bool MatchSize);
	void SetMaterialToUse(class UMaterialInterface* Material);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AsyncIcon_C">();
	}
	static class UWBP_AsyncIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AsyncIcon_C>();
	}
};
static_assert(alignof(UWBP_AsyncIcon_C) == 0x000010, "Wrong alignment on UWBP_AsyncIcon_C");
static_assert(sizeof(UWBP_AsyncIcon_C) == 0x0003C0, "Wrong size on UWBP_AsyncIcon_C");
static_assert(offsetof(UWBP_AsyncIcon_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_AsyncIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncIcon_C, Icon) == 0x0002C8, "Member 'UWBP_AsyncIcon_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncIcon_C, LoadingThrobber) == 0x0002D0, "Member 'UWBP_AsyncIcon_C::LoadingThrobber' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncIcon_C, OnIconUpdated) == 0x0002D8, "Member 'UWBP_AsyncIcon_C::OnIconUpdated' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncIcon_C, DefaultBrush) == 0x0002F0, "Member 'UWBP_AsyncIcon_C::DefaultBrush' has a wrong offset!");

}

