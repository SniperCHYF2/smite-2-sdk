#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_RewardAcuisitionDisplay

#include "Basic.hpp"

#include "WBP_GS_RewardAcuisitionDisplay_classes.hpp"
#include "WBP_GS_RewardAcuisitionDisplay_parameters.hpp"


namespace SDK
{

// Function WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C.BndEvt__WBP_GS_RewardAcuisitionDisplay_HWButton_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_GS_RewardAcuisitionDisplay_C::BndEvt__WBP_GS_RewardAcuisitionDisplay_HWButton_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_RewardAcuisitionDisplay_C", "BndEvt__WBP_GS_RewardAcuisitionDisplay_HWButton_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C.ExecuteUbergraph_WBP_GS_RewardAcuisitionDisplay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_RewardAcuisitionDisplay_C::ExecuteUbergraph_WBP_GS_RewardAcuisitionDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_RewardAcuisitionDisplay_C", "ExecuteUbergraph_WBP_GS_RewardAcuisitionDisplay");

	Params::WBP_GS_RewardAcuisitionDisplay_C_ExecuteUbergraph_WBP_GS_RewardAcuisitionDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C.SetCharacterItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UHWCharacterItem*           InCharacterItem                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_RewardAcuisitionDisplay_C::SetCharacterItem(const class UHWCharacterItem* InCharacterItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_RewardAcuisitionDisplay_C", "SetCharacterItem");

	Params::WBP_GS_RewardAcuisitionDisplay_C_SetCharacterItem Parms{};

	Parms.InCharacterItem = InCharacterItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C.SetCollectionItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHWCollectionItem*                CollectionItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_RewardAcuisitionDisplay_C::SetCollectionItem(class UHWCollectionItem* CollectionItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_RewardAcuisitionDisplay_C", "SetCollectionItem");

	Params::WBP_GS_RewardAcuisitionDisplay_C_SetCollectionItem Parms{};

	Parms.CollectionItem = CollectionItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GS_RewardAcuisitionDisplay.WBP_GS_RewardAcuisitionDisplay_C.SetIsAscensionUnlock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAscensionUnlock                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GS_RewardAcuisitionDisplay_C::SetIsAscensionUnlock(bool IsAscensionUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GS_RewardAcuisitionDisplay_C", "SetIsAscensionUnlock");

	Params::WBP_GS_RewardAcuisitionDisplay_C_SetIsAscensionUnlock Parms{};

	Parms.IsAscensionUnlock = IsAscensionUnlock;

	UObject::ProcessEvent(Func, &Parms);
}

}

