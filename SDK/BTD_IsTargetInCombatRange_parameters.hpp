#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_IsTargetInCombatRange

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTD_IsTargetInCombatRange.BTD_IsTargetInCombatRange_C.HasLineOfEffectToTarget
// 0x0258 (0x0258 - 0x0000)
struct BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasLineOfEffect;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamAttitude                                 CallFunc_GetTeamAttitudeTowards_ReturnValue;       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget) == 0x000008, "Wrong alignment on BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget");
static_assert(sizeof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget) == 0x000258, "Wrong size on BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, Source) == 0x000000, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::Source' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, Target) == 0x000008, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::Target' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, HasLineOfEffect) == 0x000010, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::HasLineOfEffect' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, K2Node_MakeArray_Array) == 0x000018, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_SphereTraceMulti_OutHits) == 0x000060, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_SphereTraceMulti_ReturnValue) == 0x000070, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_Array_Get_Item) == 0x000078, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000164, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000165, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_Time) == 0x000168, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_Distance) == 0x00016C, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000240, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00024C, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_GetTeamAttitudeTowards_ReturnValue) == 0x000250, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_GetTeamAttitudeTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000251, "Member 'BTD_IsTargetInCombatRange_C_HasLineOfEffectToTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BTD_IsTargetInCombatRange.BTD_IsTargetInCombatRange_C.PerformConditionCheckAI
// 0x00D0 (0x00D0 - 0x0000)
struct BTD_IsTargetInCombatRange_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CachedTargetActor;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	float                                         CheckDistance;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWAIController*                        K2Node_DynamicCast_AsHWAIController;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLineOfEffectToTarget_HasLineOfEffect;  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSeeHostileTarget_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGodBotInhandRange_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CheckDistance_ImplicitCast;     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CheckDistance_ImplicitCast_1;   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_IsTargetInCombatRange_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI) == 0x0000D0, "Wrong size on BTD_IsTargetInCombatRange_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CachedTargetActor) == 0x000018, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CachedTargetActor' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CheckDistance) == 0x000020, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CheckDistance' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_DynamicCast_AsHWAIController) == 0x000028, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_DynamicCast_AsHWAIController' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_HasLineOfEffectToTarget_HasLineOfEffect) == 0x000032, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_HasLineOfEffectToTarget_HasLineOfEffect' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_CanSeeHostileTarget_ReturnValue) == 0x000050, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_CanSeeHostileTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_Vector_Distance2D_ReturnValue) == 0x000070, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000078, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000081, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_GetGodBotInhandRange_ReturnValue) == 0x000084, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_GetGodBotInhandRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue_1) == 0x000098, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x0000A0, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_VariableSet_CheckDistance_ImplicitCast) == 0x0000B8, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_VariableSet_CheckDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000C0, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_IsTargetInCombatRange_C_PerformConditionCheckAI, K2Node_VariableSet_CheckDistance_ImplicitCast_1) == 0x0000C8, "Member 'BTD_IsTargetInCombatRange_C_PerformConditionCheckAI::K2Node_VariableSet_CheckDistance_ImplicitCast_1' has a wrong offset!");

}

