#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_BackdoorProtection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_BackdoorProtection.GC_BackdoorProtection_C
// 0x0148 (0x1128 - 0x0FE0)
class AGC_BackdoorProtection_C final : public AHWGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsTower;                                           // 0x0FE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE9[0x7];                                      // 0x0FE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MyTarget;                                          // 0x0FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 MyParameters;                                      // 0x0FF8(0x00D8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         MySpawnResults;                                    // 0x10D0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_GC_BackdoorProtection(int32 EntryPoint);
	void OnLoopingStart(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_BackdoorProtection_C">();
	}
	static class AGC_BackdoorProtection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_BackdoorProtection_C>();
	}
};
static_assert(alignof(AGC_BackdoorProtection_C) == 0x000008, "Wrong alignment on AGC_BackdoorProtection_C");
static_assert(sizeof(AGC_BackdoorProtection_C) == 0x001128, "Wrong size on AGC_BackdoorProtection_C");
static_assert(offsetof(AGC_BackdoorProtection_C, UberGraphFrame) == 0x000FE0, "Member 'AGC_BackdoorProtection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_BackdoorProtection_C, IsTower) == 0x000FE8, "Member 'AGC_BackdoorProtection_C::IsTower' has a wrong offset!");
static_assert(offsetof(AGC_BackdoorProtection_C, MyTarget) == 0x000FF0, "Member 'AGC_BackdoorProtection_C::MyTarget' has a wrong offset!");
static_assert(offsetof(AGC_BackdoorProtection_C, MyParameters) == 0x000FF8, "Member 'AGC_BackdoorProtection_C::MyParameters' has a wrong offset!");
static_assert(offsetof(AGC_BackdoorProtection_C, MySpawnResults) == 0x0010D0, "Member 'AGC_BackdoorProtection_C::MySpawnResults' has a wrong offset!");

}

