#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NewsRotatorButton

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_NewsRotatorButton.WBP_NewsRotatorButton_C.ExecuteUbergraph_WBP_NewsRotatorButton
// 0x0004 (0x0004 - 0x0000)
struct WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton) == 0x000004, "Wrong alignment on WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton");
static_assert(sizeof(WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton) == 0x000004, "Wrong size on WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton");
static_assert(offsetof(WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton, EntryPoint) == 0x000000, "Member 'WBP_NewsRotatorButton_C_ExecuteUbergraph_WBP_NewsRotatorButton::EntryPoint' has a wrong offset!");

// Function WBP_NewsRotatorButton.WBP_NewsRotatorButton_C.SetActiveButton
// 0x0018 (0x0018 - 0x0000)
struct WBP_NewsRotatorButton_C_SetActiveButton final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsRotatorButton_C_SetActiveButton) == 0x000008, "Wrong alignment on WBP_NewsRotatorButton_C_SetActiveButton");
static_assert(sizeof(WBP_NewsRotatorButton_C_SetActiveButton) == 0x000018, "Wrong size on WBP_NewsRotatorButton_C_SetActiveButton");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetActiveButton, IsActive) == 0x000000, "Member 'WBP_NewsRotatorButton_C_SetActiveButton::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetActiveButton, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_NewsRotatorButton_C_SetActiveButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetActiveButton, CallFunc_IsHovered_ReturnValue) == 0x000010, "Member 'WBP_NewsRotatorButton_C_SetActiveButton::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetActiveButton, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'WBP_NewsRotatorButton_C_SetActiveButton::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_NewsRotatorButton.WBP_NewsRotatorButton_C.SetTimerPercent
// 0x0018 (0x0018 - 0x0000)
struct WBP_NewsRotatorButton_C_SetTimerPercent final
{
public:
	double                                        Timer_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NewsRotatorButton_C_SetTimerPercent) == 0x000008, "Wrong alignment on WBP_NewsRotatorButton_C_SetTimerPercent");
static_assert(sizeof(WBP_NewsRotatorButton_C_SetTimerPercent) == 0x000018, "Wrong size on WBP_NewsRotatorButton_C_SetTimerPercent");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetTimerPercent, Timer_0) == 0x000000, "Member 'WBP_NewsRotatorButton_C_SetTimerPercent::Timer_0' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetTimerPercent, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_NewsRotatorButton_C_SetTimerPercent::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetTimerPercent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_NewsRotatorButton_C_SetTimerPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NewsRotatorButton_C_SetTimerPercent, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000014, "Member 'WBP_NewsRotatorButton_C_SetTimerPercent::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

