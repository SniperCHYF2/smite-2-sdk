#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_HomeScreen

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.BindLobbyAnimationHandling
// 0x0028 (0x0028 - 0x0000)
struct WBP_C_HomeScreen_C_BindLobbyAnimationHandling final
{
public:
	TDelegate<void(ERH_MatchStatus MatchStatus)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_BindLobbyAnimationHandling");
static_assert(sizeof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling) == 0x000028, "Wrong size on WBP_C_HomeScreen_C_BindLobbyAnimationHandling");
static_assert(offsetof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_C_HomeScreen_C_BindLobbyAnimationHandling::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000010, "Member 'WBP_C_HomeScreen_C_BindLobbyAnimationHandling::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_C_HomeScreen_C_BindLobbyAnimationHandling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_BindLobbyAnimationHandling, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000020, "Member 'WBP_C_HomeScreen_C_BindLobbyAnimationHandling::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature final
{
public:
	class UHWStoreItemDisplayWidget*              PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(sizeof(WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature");
static_assert(offsetof(WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature, PipWidget) == 0x000000, "Member 'WBP_C_HomeScreen_C_BndEvt__WBP_C_HomeScreen_SkinRotatorPips_K2Node_ComponentBoundEvent_0_HWOnStorePipRequestSelect__DelegateSignature::PipWidget' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.CanFocus
// 0x0028 (0x0028 - 0x0000)
struct WBP_C_HomeScreen_C_CanFocus final
{
public:
	bool                                          bAllowFous;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHPopupManager*                        CallFunc_GetPopupManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_CanFocus) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_CanFocus");
static_assert(sizeof(WBP_C_HomeScreen_C_CanFocus) == 0x000028, "Wrong size on WBP_C_HomeScreen_C_CanFocus");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, bAllowFous) == 0x000000, "Member 'WBP_C_HomeScreen_C_CanFocus::bAllowFous' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD) == 0x000008, "Member 'WBP_C_HomeScreen_C_CanFocus::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_C_HomeScreen_C_CanFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, CallFunc_GetPopupManager_ReturnValue) == 0x000018, "Member 'WBP_C_HomeScreen_C_CanFocus::CallFunc_GetPopupManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, CallFunc_IsVisible_ReturnValue) == 0x000020, "Member 'WBP_C_HomeScreen_C_CanFocus::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CanFocus, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'WBP_C_HomeScreen_C_CanFocus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.CheckSelectedRegion
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_C_HomeScreen_C_CheckSelectedRegion final
{
public:
	bool                                          CallFunc_IsTopViewRoute_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              CallFunc_GetRegionList_OutRegionIdToNameMap;       // 0x0008(0x0050)()
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPreferredRegionId_OutRegionId;         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPreferredRegionId_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0080(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_CheckSelectedRegion) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_CheckSelectedRegion");
static_assert(sizeof(WBP_C_HomeScreen_C_CheckSelectedRegion) == 0x0000A0, "Wrong size on WBP_C_HomeScreen_C_CheckSelectedRegion");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_IsTopViewRoute_ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_IsTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_GetRegionList_OutRegionIdToNameMap) == 0x000008, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_GetRegionList_OutRegionIdToNameMap' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD) == 0x000058, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_Map_IsEmpty_ReturnValue) == 0x000061, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_Add_View_Route_ViewChanged) == 0x000062, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_GetPreferredRegionId_OutRegionId) == 0x000068, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_GetPreferredRegionId_OutRegionId' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_GetPreferredRegionId_ReturnValue) == 0x000078, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_GetPreferredRegionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_IsEmpty_ReturnValue) == 0x000079, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_Map_Find_Value) == 0x000080, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_CheckSelectedRegion, CallFunc_BooleanAND_ReturnValue) == 0x00009B, "Member 'WBP_C_HomeScreen_C_CheckSelectedRegion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.ExecuteUbergraph_WBP_C_HomeScreen
// 0x0468 (0x0468 - 0x0000)
struct WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CurrentRoute;                   // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NextRoute;                      // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             K2Node_CustomEvent_Layer;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0080(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x00A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWStoreSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWStoreSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AppSettingTag, bool bValue)> K2Node_CreateDelegate_OutputDelegate; // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ElapsedTime_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedAlpha_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float ElapsedTime, float ElapsedAlpha)> K2Node_CreateDelegate_OutputDelegate_1;   // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ElapsedAlpha;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float ElapsedTime, float ElapsedAlpha)> K2Node_CreateDelegate_OutputDelegate_3;   // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD_1;       // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD_2;       // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrossplayEnabled_ReturnValue;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPreferredRegionId_OutRegionId;         // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPreferredRegionId_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              CallFunc_GetRegionList_OutRegionIdToNameMap;       // 0x0208(0x0050)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0258(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0274(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_player_card_module_C*              K2Node_CustomEvent_Selected_Player_Card;           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsVisible;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Visibility)>              K2Node_CreateDelegate_OutputDelegate_7;            // 0x0294(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ERHLoginState>                         K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ConstParm, ReferenceParm)
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD;          // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHLoginDataFactory*                    CallFunc_GetLoginDataFactory_ReturnValue;          // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               K2Node_CustomEvent_InputState;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERHLoginState                                 CallFunc_GetCurrentLoginState_ReturnValue;         // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D3[0x5];                                      // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x02D8(0x0018)()
	bool                                          CallFunc_IsPlatformType_ReturnValue;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_player_card_module_C* Selected_Player_Card)> K2Node_CreateDelegate_OutputDelegate_8; // 0x031C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F[0x1];                                      // 0x032F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASceneArtManager_C*>             CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0330(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_4;                              // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneArtManager_C*                     CallFunc_Array_Get_Item;                           // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0358(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_5;                              // 0x0378(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0398(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x03A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UHWStoreItemDisplayWidget*              K2Node_ComponentBoundEvent_PipWidget;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHStoreItem*                           CallFunc_GetDisplayedStoreItem_ReturnValue;        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_1;       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_2;       // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x03C8(0x0018)()
	TArray<class UHWMultiPromptWidget*>           K2Node_MakeArray_Array_1;                          // 0x03E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AppSettingTag;                  // 0x03F4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bValue;                         // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& CurrentRoute, const struct FGameplayTag& NextRoute, EViewManagerLayer Layer)> K2Node_CreateDelegate_OutputDelegate_10; // 0x0400(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& ViewRouteTag)> K2Node_CreateDelegate_OutputDelegate_11; // 0x0410(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue_1;             // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ViewRouteTag;                   // 0x0438(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen");
static_assert(sizeof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen) == 0x000468, "Wrong size on WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, EntryPoint) == 0x000000, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_CurrentRoute) == 0x000004, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_NextRoute) == 0x00000C, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_Layer) == 0x000014, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_Layer' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable) == 0x000015, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000016, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable) == 0x000018, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable_1) == 0x000030, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable_2) == 0x000048, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable_3) == 0x000060, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable) == 0x000078, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_1) == 0x000079, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_2) == 0x00007A, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000080, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0000A0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0000A4, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0000A8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_object_Variable) == 0x0000B0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x0000B8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_real_Variable) == 0x0000C0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_real_Variable_1) == 0x0000C8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_real_Variable_0) == 0x0000D0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_real_Variable_1_0) == 0x0000D8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable_1) == 0x0000E0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000E8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000F0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable_2) == 0x0000F8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate) == 0x0000FC, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_3) == 0x00010C, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_4) == 0x00010D, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_ElapsedTime_1) == 0x000110, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_ElapsedAlpha_1) == 0x000114, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_ElapsedAlpha_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000118, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000120, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_2) == 0x000138, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000148, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_ElapsedTime) == 0x000160, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_ElapsedAlpha) == 0x000164, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_ElapsedAlpha' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_3) == 0x000168, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000178, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_4) == 0x000180, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MakeVector2D_ReturnValue_1) == 0x000198, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001A8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x0001B0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001BC, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_5) == 0x0001CC, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_6) == 0x0001CD, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_AsRallyHere_Client_HUD_1) == 0x0001D0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_AsRallyHere_Client_HUD_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetCurrentInputState_ReturnValue) == 0x0001D9, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_AsRallyHere_Client_HUD_2) == 0x0001E0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_AsRallyHere_Client_HUD_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_IsCrossplayEnabled_ReturnValue) == 0x0001E9, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_IsCrossplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetPreferredRegionId_OutRegionId) == 0x0001F0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetPreferredRegionId_OutRegionId' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetPreferredRegionId_ReturnValue) == 0x000200, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetPreferredRegionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetRegionList_OutRegionIdToNameMap) == 0x000208, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetRegionList_OutRegionIdToNameMap' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Map_Find_Value) == 0x000258, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Map_Find_ReturnValue) == 0x000270, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_6) == 0x000274, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_Selected_Player_Card) == 0x000288, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_Selected_Player_Card' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_IsVisible) == 0x000290, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_7) == 0x000294, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_MakeArray_Array) == 0x0002A8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD) == 0x0002B8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_DynamicCast_bSuccess_3) == 0x0002C0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetLoginDataFactory_ReturnValue) == 0x0002C8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetLoginDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_InputState) == 0x0002D0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_InputState' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetCurrentLoginState_ReturnValue) == 0x0002D1, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetCurrentLoginState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Array_Contains_ReturnValue) == 0x0002D2, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default) == 0x0002D8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_IsPlatformType_ReturnValue) == 0x0002F0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_IsPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetPlatformName_ReturnValue) == 0x0002F8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default_1) == 0x000308, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000309, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_IsWithEditor_ReturnValue) == 0x00030A, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_K2_SetTimer_ReturnValue) == 0x000310, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable_3) == 0x000318, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_8) == 0x00031C, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default_2) == 0x00032C, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_7) == 0x00032D, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_byte_Variable_8) == 0x00032E, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000330, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable_4) == 0x000340, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_Array_Get_Item) == 0x000348, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default_3) == 0x000350, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable_4) == 0x000358, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000370, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_text_Variable_5) == 0x000378, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000390, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_9) == 0x000398, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x0003A8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_ComponentBoundEvent_PipWidget) == 0x0003B0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_ComponentBoundEvent_PipWidget' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetDisplayedStoreItem_ReturnValue) == 0x0003B8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetDisplayedStoreItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetCurrentInputState_ReturnValue_1) == 0x0003C0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetCurrentInputState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C1, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetCurrentInputState_ReturnValue_2) == 0x0003C2, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetCurrentInputState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, Temp_bool_Variable_5) == 0x0003C3, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003C4, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default_4) == 0x0003C8, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_MakeArray_Array_1) == 0x0003E0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_AddViewRoute_ReturnValue) == 0x0003F0, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_AppSettingTag) == 0x0003F4, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_bValue) == 0x0003FC, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_bValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_10) == 0x000400, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CreateDelegate_OutputDelegate_11) == 0x000410, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_Select_Default_5) == 0x000420, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetViewManager_ReturnValue) == 0x000428, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_GetViewManager_ReturnValue_1) == 0x000430, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_GetViewManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, K2Node_CustomEvent_ViewRouteTag) == 0x000438, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::K2Node_CustomEvent_ViewRouteTag' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000440, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast) == 0x000448, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000450, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1) == 0x000458, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x000460, "Member 'WBP_C_HomeScreen_C_ExecuteUbergraph_WBP_C_HomeScreen::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.GetCharacterHomeScreenSequence
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence final
{
public:
	class ULevelSequence*                         OutSequence;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence");
static_assert(sizeof(WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence");
static_assert(offsetof(WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence, OutSequence) == 0x000000, "Member 'WBP_C_HomeScreen_C_GetCharacterHomeScreenSequence::OutSequence' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.Handle Party Player Card Selected
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected final
{
public:
	class UWBP_player_card_module_C*              Selected_Player_Card;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected");
static_assert(sizeof(WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected");
static_assert(offsetof(WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected, Selected_Player_Card) == 0x000000, "Member 'WBP_C_HomeScreen_C_Handle_Party_Player_Card_Selected::Selected_Player_Card' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.HandleNewQueuesAppSettingUpdate
// 0x000C (0x000C - 0x0000)
struct WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate final
{
public:
	struct FGameplayTag                           AppSettingTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bValue;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate");
static_assert(sizeof(WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate) == 0x00000C, "Wrong size on WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate");
static_assert(offsetof(WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate, AppSettingTag) == 0x000000, "Member 'WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate::AppSettingTag' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate, bValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_HandleNewQueuesAppSettingUpdate::bValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.HandleNewsActionFired
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_HomeScreen_C_HandleNewsActionFired final
{
public:
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_HandleNewsActionFired) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_C_HandleNewsActionFired");
static_assert(sizeof(WBP_C_HomeScreen_C_HandleNewsActionFired) == 0x000001, "Wrong size on WBP_C_HomeScreen_C_HandleNewsActionFired");
static_assert(offsetof(WBP_C_HomeScreen_C_HandleNewsActionFired, CallFunc_IsActivated_ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_HandleNewsActionFired::CallFunc_IsActivated_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.HandleQueueStatusChange
// 0x0002 (0x0002 - 0x0000)
struct WBP_C_HomeScreen_C_HandleQueueStatusChange final
{
public:
	ERH_MatchStatus                               NewStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_HandleQueueStatusChange) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_C_HandleQueueStatusChange");
static_assert(sizeof(WBP_C_HomeScreen_C_HandleQueueStatusChange) == 0x000002, "Wrong size on WBP_C_HomeScreen_C_HandleQueueStatusChange");
static_assert(offsetof(WBP_C_HomeScreen_C_HandleQueueStatusChange, NewStatus) == 0x000000, "Member 'WBP_C_HomeScreen_C_HandleQueueStatusChange::NewStatus' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_HandleQueueStatusChange, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_C_HomeScreen_C_HandleQueueStatusChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.HideQuickPlayAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_HideQuickPlayAnim final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedAlpha;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_HideQuickPlayAnim) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_HideQuickPlayAnim");
static_assert(sizeof(WBP_C_HomeScreen_C_HideQuickPlayAnim) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_HideQuickPlayAnim");
static_assert(offsetof(WBP_C_HomeScreen_C_HideQuickPlayAnim, ElapsedTime) == 0x000000, "Member 'WBP_C_HomeScreen_C_HideQuickPlayAnim::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_HideQuickPlayAnim, ElapsedAlpha) == 0x000004, "Member 'WBP_C_HomeScreen_C_HideQuickPlayAnim::ElapsedAlpha' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.HomeSkinNavigateRight
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_HomeScreen_C_HomeSkinNavigateRight final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_HomeSkinNavigateRight) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_HomeSkinNavigateRight");
static_assert(sizeof(WBP_C_HomeScreen_C_HomeSkinNavigateRight) == 0x000018, "Wrong size on WBP_C_HomeScreen_C_HomeSkinNavigateRight");
static_assert(offsetof(WBP_C_HomeScreen_C_HomeSkinNavigateRight, Navigation_0) == 0x000000, "Member 'WBP_C_HomeScreen_C_HomeSkinNavigateRight::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_HomeSkinNavigateRight, ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_HomeSkinNavigateRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_HomeSkinNavigateRight, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_HomeSkinNavigateRight::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.InitializeContentWidgets
// 0x0030 (0x0030 - 0x0000)
struct WBP_C_HomeScreen_C_InitializeContentWidgets final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHWidget*                              K2Node_DynamicCast_AsRHWidget;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_InitializeContentWidgets) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_InitializeContentWidgets");
static_assert(sizeof(WBP_C_HomeScreen_C_InitializeContentWidgets) == 0x000030, "Wrong size on WBP_C_HomeScreen_C_InitializeContentWidgets");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, Temp_int_Variable) == 0x000000, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, K2Node_DynamicCast_AsRHWidget) == 0x000018, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::K2Node_DynamicCast_AsRHWidget' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InitializeContentWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_C_HomeScreen_C_InitializeContentWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_C_HomeScreen_C_InpActEvt_GamepadSpecialLeftButton_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.NavigateBack
// 0x0028 (0x0028 - 0x0000)
struct WBP_C_HomeScreen_C_NavigateBack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentFocusGroup_OutFocusGroup;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentFocusGroup_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_NavigateBack) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_NavigateBack");
static_assert(sizeof(WBP_C_HomeScreen_C_NavigateBack) == 0x000028, "Wrong size on WBP_C_HomeScreen_C_NavigateBack");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_NavigateBack::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_AddViewRoute_ReturnValue) == 0x000001, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_GetCurrentInputState_ReturnValue) == 0x000002, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_GetCurrentFocusGroup_OutFocusGroup) == 0x000004, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_GetCurrentFocusGroup_OutFocusGroup' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_GetCurrentFocusGroup_ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_GetCurrentFocusGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, K2Node_SwitchInteger_CmpSuccess) == 0x000009, "Member 'WBP_C_HomeScreen_C_NavigateBack::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_NavigateBack, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_C_HomeScreen_C_NavigateBack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.NewsPanelVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_HomeScreen_C_NewsPanelVisibilityChanged final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_NewsPanelVisibilityChanged) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_C_NewsPanelVisibilityChanged");
static_assert(sizeof(WBP_C_HomeScreen_C_NewsPanelVisibilityChanged) == 0x000001, "Wrong size on WBP_C_HomeScreen_C_NewsPanelVisibilityChanged");
static_assert(offsetof(WBP_C_HomeScreen_C_NewsPanelVisibilityChanged, IsVisible_0) == 0x000000, "Member 'WBP_C_HomeScreen_C_NewsPanelVisibilityChanged::IsVisible_0' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.OnKeyUp
// 0x0210 (0x0210 - 0x0000)
struct WBP_C_HomeScreen_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0150(0x00B8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_OnKeyUp");
static_assert(sizeof(WBP_C_HomeScreen_C_OnKeyUp) == 0x000210, "Wrong size on WBP_C_HomeScreen_C_OnKeyUp");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_C_HomeScreen_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_C_HomeScreen_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_C_HomeScreen_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_BooleanAND_ReturnValue) == 0x000149, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x00014A, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000150, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000208, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000209, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnKeyUp, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'WBP_C_HomeScreen_C_OnKeyUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct WBP_C_HomeScreen_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_C_HomeScreen_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_OnMouseButtonDown");
static_assert(sizeof(WBP_C_HomeScreen_C_OnMouseButtonDown) == 0x000220, "Wrong size on WBP_C_HomeScreen_C_OnMouseButtonDown");
static_assert(offsetof(WBP_C_HomeScreen_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_C_HomeScreen_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_C_HomeScreen_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_C_HomeScreen_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_C_HomeScreen_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.OnSetQueueInputState
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_HomeScreen_C_OnSetQueueInputState final
{
public:
	ERH_INPUT_STATE                               InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_OnSetQueueInputState) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_C_OnSetQueueInputState");
static_assert(sizeof(WBP_C_HomeScreen_C_OnSetQueueInputState) == 0x000001, "Wrong size on WBP_C_HomeScreen_C_OnSetQueueInputState");
static_assert(offsetof(WBP_C_HomeScreen_C_OnSetQueueInputState, InputState) == 0x000000, "Member 'WBP_C_HomeScreen_C_OnSetQueueInputState::InputState' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.PartyNavigateLeft
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_HomeScreen_C_PartyNavigateLeft final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_PartyNavigateLeft) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_PartyNavigateLeft");
static_assert(sizeof(WBP_C_HomeScreen_C_PartyNavigateLeft) == 0x000018, "Wrong size on WBP_C_HomeScreen_C_PartyNavigateLeft");
static_assert(offsetof(WBP_C_HomeScreen_C_PartyNavigateLeft, Navigation_0) == 0x000000, "Member 'WBP_C_HomeScreen_C_PartyNavigateLeft::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PartyNavigateLeft, ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_PartyNavigateLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PartyNavigateLeft, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_PartyNavigateLeft::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.PlayPromoSequencer
// 0x0050 (0x0050 - 0x0000)
struct WBP_C_HomeScreen_C_PlayPromoSequencer final
{
public:
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    K2Node_DynamicCast_AsLevel_Sequence_Actor;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_PlayPromoSequencer) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_PlayPromoSequencer");
static_assert(sizeof(WBP_C_HomeScreen_C_PlayPromoSequencer) == 0x000050, "Wrong size on WBP_C_HomeScreen_C_PlayPromoSequencer");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_GetAllActorsWithTag_OutActors) == 0x000000, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000020, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, K2Node_DynamicCast_AsLevel_Sequence_Actor) == 0x000038, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::K2Node_DynamicCast_AsLevel_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_PlayPromoSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000048, "Member 'WBP_C_HomeScreen_C_PlayPromoSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.QueueNavigateUp
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_HomeScreen_C_QueueNavigateUp final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_QueueNavigateUp) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_QueueNavigateUp");
static_assert(sizeof(WBP_C_HomeScreen_C_QueueNavigateUp) == 0x000018, "Wrong size on WBP_C_HomeScreen_C_QueueNavigateUp");
static_assert(offsetof(WBP_C_HomeScreen_C_QueueNavigateUp, Navigation_0) == 0x000000, "Member 'WBP_C_HomeScreen_C_QueueNavigateUp::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_QueueNavigateUp, ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_QueueNavigateUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_QueueNavigateUp, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_QueueNavigateUp::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.RolePreferenceNavigateDown
// 0x0018 (0x0018 - 0x0000)
struct WBP_C_HomeScreen_C_RolePreferenceNavigateDown final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_RolePreferenceNavigateDown) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_RolePreferenceNavigateDown");
static_assert(sizeof(WBP_C_HomeScreen_C_RolePreferenceNavigateDown) == 0x000018, "Wrong size on WBP_C_HomeScreen_C_RolePreferenceNavigateDown");
static_assert(offsetof(WBP_C_HomeScreen_C_RolePreferenceNavigateDown, Navigation_0) == 0x000000, "Member 'WBP_C_HomeScreen_C_RolePreferenceNavigateDown::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_RolePreferenceNavigateDown, ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_RolePreferenceNavigateDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_RolePreferenceNavigateDown, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_RolePreferenceNavigateDown::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.SetHideAll
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_HomeScreen_C_SetHideAll final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_SetHideAll) == 0x000001, "Wrong alignment on WBP_C_HomeScreen_C_SetHideAll");
static_assert(sizeof(WBP_C_HomeScreen_C_SetHideAll) == 0x000001, "Wrong size on WBP_C_HomeScreen_C_SetHideAll");
static_assert(offsetof(WBP_C_HomeScreen_C_SetHideAll, Hide) == 0x000000, "Member 'WBP_C_HomeScreen_C_SetHideAll::Hide' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.ShowQuickPlayAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_ShowQuickPlayAnim final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedAlpha;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_ShowQuickPlayAnim) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_ShowQuickPlayAnim");
static_assert(sizeof(WBP_C_HomeScreen_C_ShowQuickPlayAnim) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_ShowQuickPlayAnim");
static_assert(offsetof(WBP_C_HomeScreen_C_ShowQuickPlayAnim, ElapsedTime) == 0x000000, "Member 'WBP_C_HomeScreen_C_ShowQuickPlayAnim::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ShowQuickPlayAnim, ElapsedAlpha) == 0x000004, "Member 'WBP_C_HomeScreen_C_ShowQuickPlayAnim::ElapsedAlpha' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.StartCheckingSelectedRegion
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_StartCheckingSelectedRegion final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_StartCheckingSelectedRegion) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_StartCheckingSelectedRegion");
static_assert(sizeof(WBP_C_HomeScreen_C_StartCheckingSelectedRegion) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_StartCheckingSelectedRegion");
static_assert(offsetof(WBP_C_HomeScreen_C_StartCheckingSelectedRegion, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_StartCheckingSelectedRegion::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.StopConflictingAnimation
// 0x0038 (0x0038 - 0x0000)
struct WBP_C_HomeScreen_C_StopConflictingAnimation final
{
public:
	class FName                                   AnimName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTickAnimationParams                   CallFunc_GetTickAnimationInfo_OutAnimParams;       // 0x0008(0x002C)(ContainsInstancedReference)
	bool                                          CallFunc_GetTickAnimationInfo_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_StopConflictingAnimation) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_StopConflictingAnimation");
static_assert(sizeof(WBP_C_HomeScreen_C_StopConflictingAnimation) == 0x000038, "Wrong size on WBP_C_HomeScreen_C_StopConflictingAnimation");
static_assert(offsetof(WBP_C_HomeScreen_C_StopConflictingAnimation, AnimName) == 0x000000, "Member 'WBP_C_HomeScreen_C_StopConflictingAnimation::AnimName' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_StopConflictingAnimation, CallFunc_GetTickAnimationInfo_OutAnimParams) == 0x000008, "Member 'WBP_C_HomeScreen_C_StopConflictingAnimation::CallFunc_GetTickAnimationInfo_OutAnimParams' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_StopConflictingAnimation, CallFunc_GetTickAnimationInfo_ReturnValue) == 0x000034, "Member 'WBP_C_HomeScreen_C_StopConflictingAnimation::CallFunc_GetTickAnimationInfo_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.Toggle Background Seqeuncer
// 0x0068 (0x0068 - 0x0000)
struct WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer final
{
public:
	bool                                          TurnOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    K2Node_DynamicCast_AsLevel_Sequence_Actor;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0030(0x0010)(ReferenceParm)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    K2Node_DynamicCast_AsLevel_Sequence_Actor_1;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer");
static_assert(sizeof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer) == 0x000068, "Wrong size on WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, TurnOn) == 0x000000, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::TurnOn' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_GetAllActorsWithTag_OutActors) == 0x000008, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, K2Node_DynamicCast_AsLevel_Sequence_Actor) == 0x000020, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::K2Node_DynamicCast_AsLevel_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000030, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000040, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, K2Node_DynamicCast_AsLevel_Sequence_Actor_1) == 0x000050, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::K2Node_DynamicCast_AsLevel_Sequence_Actor_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000060, "Member 'WBP_C_HomeScreen_C_Toggle_Background_Seqeuncer::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.ToggleCharacterHomescreen
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_C_HomeScreen_C_ToggleCharacterHomescreen final
{
public:
	bool                                          TurnOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHWSkinItem*                      CallFunc_GetSkinItemToDisplay_ReturnValue;         // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetCharacterHomeScreenSequence_OutSequence; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    K2Node_DynamicCast_AsLevel_Sequence_Actor;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    K2Node_DynamicCast_AsLevel_Sequence_Actor_1;       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_2;          // 0x0080(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_ToggleCharacterHomescreen");
static_assert(sizeof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen) == 0x0000A0, "Wrong size on WBP_C_HomeScreen_C_ToggleCharacterHomescreen");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, TurnOn) == 0x000000, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::TurnOn' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetSkinItemToDisplay_ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetSkinItemToDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetCharacterHomeScreenSequence_OutSequence) == 0x000018, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetCharacterHomeScreenSequence_OutSequence' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetAllActorsWithTag_OutActors) == 0x000020, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000030, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, K2Node_DynamicCast_AsLevel_Sequence_Actor) == 0x000050, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::K2Node_DynamicCast_AsLevel_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, K2Node_DynamicCast_AsLevel_Sequence_Actor_1) == 0x000060, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::K2Node_DynamicCast_AsLevel_Sequence_Actor_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetSequencePlayer_ReturnValue) == 0x000070, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000078, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetAllActorsWithTag_OutActors_2) == 0x000080, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetAllActorsWithTag_OutActors_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ToggleCharacterHomescreen, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'WBP_C_HomeScreen_C_ToggleCharacterHomescreen::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.UnbindLobbyAnimationHandling
// 0x0028 (0x0028 - 0x0000)
struct WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling final
{
public:
	TDelegate<void(ERH_MatchStatus MatchStatus)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling");
static_assert(sizeof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling) == 0x000028, "Wrong size on WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling");
static_assert(offsetof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000010, "Member 'WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000020, "Member 'WBP_C_HomeScreen_C_UnbindLobbyAnimationHandling::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.UpdateDisplayedModelSkin
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_HomeScreen_C_UpdateDisplayedModelSkin final
{
public:
	const class UHWSkinItem*                      InModelSkinItem;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTopViewRoute_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_UpdateDisplayedModelSkin) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_UpdateDisplayedModelSkin");
static_assert(sizeof(WBP_C_HomeScreen_C_UpdateDisplayedModelSkin) == 0x000010, "Wrong size on WBP_C_HomeScreen_C_UpdateDisplayedModelSkin");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedModelSkin, InModelSkinItem) == 0x000000, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedModelSkin::InModelSkinItem' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedModelSkin, CallFunc_IsTopViewRoute_ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedModelSkin::CallFunc_IsTopViewRoute_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.UpdateDisplayedOptions
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_HomeScreen_C_UpdateDisplayedOptions final
{
public:
	TArray<class URHStoreItem*>                   InOptions;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_C_HomeScreen_C_UpdateDisplayedOptions) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_UpdateDisplayedOptions");
static_assert(sizeof(WBP_C_HomeScreen_C_UpdateDisplayedOptions) == 0x000010, "Wrong size on WBP_C_HomeScreen_C_UpdateDisplayedOptions");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedOptions, InOptions) == 0x000000, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedOptions::InOptions' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.UpdateDisplayedRedirect
// 0x0168 (0x0168 - 0x0000)
struct WBP_C_HomeScreen_C_UpdateDisplayedRedirect final
{
public:
	const class UHWCollectionItem*                InRedirectCollection;                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWSkinItem*                            K2Node_DynamicCast_AsHWSkin_Item;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0018(0x0018)()
	TSoftObjectPtr<class UHWCharacterItem>        CallFunc_GetAssociatedCharacter_ReturnValue;       // 0x0030(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue_1;                // 0x0058(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	const class UHWCharacterItem*                 K2Node_DynamicCast_AsHWCharacter_Item;             // 0x00C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue_2;                // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
};
static_assert(alignof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_UpdateDisplayedRedirect");
static_assert(sizeof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect) == 0x000168, "Wrong size on WBP_C_HomeScreen_C_UpdateDisplayedRedirect");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, InRedirectCollection) == 0x000000, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::InRedirectCollection' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_DynamicCast_AsHWSkin_Item) == 0x000008, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_DynamicCast_AsHWSkin_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_GetItemName_ReturnValue) == 0x000018, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_GetAssociatedCharacter_ReturnValue) == 0x000030, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_GetAssociatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_GetItemName_ReturnValue_1) == 0x000058, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_GetItemName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_DynamicCast_AsHWCharacter_Item) == 0x0000C8, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_DynamicCast_AsHWCharacter_Item' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_GetItemName_ReturnValue_2) == 0x0000D8, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_GetItemName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, K2Node_MakeArray_Array) == 0x000140, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_UpdateDisplayedRedirect, CallFunc_Format_ReturnValue) == 0x000150, "Member 'WBP_C_HomeScreen_C_UpdateDisplayedRedirect::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.ViewRouteChanged
// 0x0014 (0x0014 - 0x0000)
struct WBP_C_HomeScreen_C_ViewRouteChanged final
{
public:
	struct FGameplayTag                           CurrentRoute;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NextRoute;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EViewManagerLayer                             Layer;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_ViewRouteChanged) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_ViewRouteChanged");
static_assert(sizeof(WBP_C_HomeScreen_C_ViewRouteChanged) == 0x000014, "Wrong size on WBP_C_HomeScreen_C_ViewRouteChanged");
static_assert(offsetof(WBP_C_HomeScreen_C_ViewRouteChanged, CurrentRoute) == 0x000000, "Member 'WBP_C_HomeScreen_C_ViewRouteChanged::CurrentRoute' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ViewRouteChanged, NextRoute) == 0x000008, "Member 'WBP_C_HomeScreen_C_ViewRouteChanged::NextRoute' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_ViewRouteChanged, Layer) == 0x000010, "Member 'WBP_C_HomeScreen_C_ViewRouteChanged::Layer' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.ViewRouteRemoved
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_ViewRouteRemoved final
{
public:
	struct FGameplayTag                           ViewRouteTag;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_ViewRouteRemoved) == 0x000004, "Wrong alignment on WBP_C_HomeScreen_C_ViewRouteRemoved");
static_assert(sizeof(WBP_C_HomeScreen_C_ViewRouteRemoved) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_ViewRouteRemoved");
static_assert(offsetof(WBP_C_HomeScreen_C_ViewRouteRemoved, ViewRouteTag) == 0x000000, "Member 'WBP_C_HomeScreen_C_ViewRouteRemoved::ViewRouteTag' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_C_HomeScreen_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

// Function WBP_C_HomeScreen.WBP_C_HomeScreen_C.GetWidgetToFade
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_HomeScreen_C_GetWidgetToFade final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_HomeScreen_C_GetWidgetToFade) == 0x000008, "Wrong alignment on WBP_C_HomeScreen_C_GetWidgetToFade");
static_assert(sizeof(WBP_C_HomeScreen_C_GetWidgetToFade) == 0x000008, "Wrong size on WBP_C_HomeScreen_C_GetWidgetToFade");
static_assert(offsetof(WBP_C_HomeScreen_C_GetWidgetToFade, ReturnValue) == 0x000000, "Member 'WBP_C_HomeScreen_C_GetWidgetToFade::ReturnValue' has a wrong offset!");

}

