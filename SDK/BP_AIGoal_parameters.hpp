#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal.BP_AIGoal_C.AddBonus
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_C_AddBonus final
{
public:
	double                                        AdditiveBonus;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_AddBonus) == 0x000008, "Wrong alignment on BP_AIGoal_C_AddBonus");
static_assert(sizeof(BP_AIGoal_C_AddBonus) == 0x000010, "Wrong size on BP_AIGoal_C_AddBonus");
static_assert(offsetof(BP_AIGoal_C_AddBonus, AdditiveBonus) == 0x000000, "Member 'BP_AIGoal_C_AddBonus::AdditiveBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_AddBonus, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_AddBonus::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.ApplyBonus
// 0x0020 (0x0020 - 0x0000)
struct BP_AIGoal_C_ApplyBonus final
{
public:
	double                                        Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinalScore;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_ApplyBonus) == 0x000008, "Wrong alignment on BP_AIGoal_C_ApplyBonus");
static_assert(sizeof(BP_AIGoal_C_ApplyBonus) == 0x000020, "Wrong size on BP_AIGoal_C_ApplyBonus");
static_assert(offsetof(BP_AIGoal_C_ApplyBonus, Score) == 0x000000, "Member 'BP_AIGoal_C_ApplyBonus::Score' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyBonus, FinalScore) == 0x000008, "Member 'BP_AIGoal_C_ApplyBonus::FinalScore' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyBonus, Temp) == 0x000010, "Member 'BP_AIGoal_C_ApplyBonus::Temp' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyBonus, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_ApplyBonus::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.ApplyCompensation
// 0x0050 (0x0050 - 0x0000)
struct BP_AIGoal_C_ApplyCompensation final
{
public:
	int32                                         NumWeights;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ApplyCompensationFactor_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_ApplyCompensation) == 0x000008, "Wrong alignment on BP_AIGoal_C_ApplyCompensation");
static_assert(sizeof(BP_AIGoal_C_ApplyCompensation) == 0x000050, "Wrong size on BP_AIGoal_C_ApplyCompensation");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, NumWeights) == 0x000000, "Member 'BP_AIGoal_C_ApplyCompensation::NumWeights' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AIGoal_C_ApplyCompensation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AIGoal_C_ApplyCompensation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_ApplyCompensationFactor_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_ApplyCompensationFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensation, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_AIGoal_C_ApplyCompensation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.ApplyCompensationFactor
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_C_ApplyCompensationFactor final
{
public:
	double                                        RawWeight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumWeights;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_ApplyCompensationFactor) == 0x000008, "Wrong alignment on BP_AIGoal_C_ApplyCompensationFactor");
static_assert(sizeof(BP_AIGoal_C_ApplyCompensationFactor) == 0x000058, "Wrong size on BP_AIGoal_C_ApplyCompensationFactor");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, RawWeight) == 0x000000, "Member 'BP_AIGoal_C_ApplyCompensationFactor::RawWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, NumWeights) == 0x000008, "Member 'BP_AIGoal_C_ApplyCompensationFactor::NumWeights' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_ApplyCompensationFactor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Max_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ApplyCompensationFactor, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_AIGoal_C_ApplyCompensationFactor::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.BonusClosestTargetIsEnemyGod
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_C_BonusClosestTargetIsEnemyGod final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestEnemyIsGodBonus;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetNearestThreat_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Smite_God*                 K2Node_DynamicCast_AsHWCharacter_Smite_God;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod) == 0x000008, "Wrong alignment on BP_AIGoal_C_BonusClosestTargetIsEnemyGod");
static_assert(sizeof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod) == 0x000028, "Wrong size on BP_AIGoal_C_BonusClosestTargetIsEnemyGod");
static_assert(offsetof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod, InController) == 0x000000, "Member 'BP_AIGoal_C_BonusClosestTargetIsEnemyGod::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod, ClosestEnemyIsGodBonus) == 0x000008, "Member 'BP_AIGoal_C_BonusClosestTargetIsEnemyGod::ClosestEnemyIsGodBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod, CallFunc_GetNearestThreat_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_BonusClosestTargetIsEnemyGod::CallFunc_GetNearestThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod, K2Node_DynamicCast_AsHWCharacter_Smite_God) == 0x000018, "Member 'BP_AIGoal_C_BonusClosestTargetIsEnemyGod::K2Node_DynamicCast_AsHWCharacter_Smite_God' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusClosestTargetIsEnemyGod, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIGoal_C_BonusClosestTargetIsEnemyGod::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.BonusIsInProgress
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_C_BonusIsInProgress final
{
public:
	double                                        InProgressBonus;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInProgress_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_BonusIsInProgress) == 0x000008, "Wrong alignment on BP_AIGoal_C_BonusIsInProgress");
static_assert(sizeof(BP_AIGoal_C_BonusIsInProgress) == 0x000010, "Wrong size on BP_AIGoal_C_BonusIsInProgress");
static_assert(offsetof(BP_AIGoal_C_BonusIsInProgress, InProgressBonus) == 0x000000, "Member 'BP_AIGoal_C_BonusIsInProgress::InProgressBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusIsInProgress, CallFunc_IsInProgress_ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_BonusIsInProgress::CallFunc_IsInProgress_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.BonusRecentDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_AIGoal_C_BonusRecentDamage final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        RecentDamageBonus;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PctMaxHealthDmgThreshold;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetIncomingDamagePerSecond_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_BonusRecentDamage) == 0x000008, "Wrong alignment on BP_AIGoal_C_BonusRecentDamage");
static_assert(sizeof(BP_AIGoal_C_BonusRecentDamage) == 0x000060, "Wrong size on BP_AIGoal_C_BonusRecentDamage");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, InController) == 0x000000, "Member 'BP_AIGoal_C_BonusRecentDamage::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, RecentDamageBonus) == 0x000008, "Member 'BP_AIGoal_C_BonusRecentDamage::RecentDamageBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, PctMaxHealthDmgThreshold) == 0x000010, "Member 'BP_AIGoal_C_BonusRecentDamage::PctMaxHealthDmgThreshold' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_GetIncomingDamagePerSecond_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_GetIncomingDamagePerSecond_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_BonusRecentDamage::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_BonusRecentDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_GetMaxHealth_ReturnValue) == 0x000034, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusRecentDamage, CallFunc_FMax_A_ImplicitCast) == 0x000058, "Member 'BP_AIGoal_C_BonusRecentDamage::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.BonusTargetTag
// 0x0040 (0x0040 - 0x0000)
struct BP_AIGoal_C_BonusTargetTag final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TagBonus;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TagToCheck;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCurrentThreat_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_BonusTargetTag) == 0x000008, "Wrong alignment on BP_AIGoal_C_BonusTargetTag");
static_assert(sizeof(BP_AIGoal_C_BonusTargetTag) == 0x000040, "Wrong size on BP_AIGoal_C_BonusTargetTag");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, InController) == 0x000000, "Member 'BP_AIGoal_C_BonusTargetTag::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, TagBonus) == 0x000008, "Member 'BP_AIGoal_C_BonusTargetTag::TagBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, TagToCheck) == 0x000010, "Member 'BP_AIGoal_C_BonusTargetTag::TagToCheck' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, CallFunc_GetCurrentThreat_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_BonusTargetTag::CallFunc_GetCurrentThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_BonusTargetTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'BP_AIGoal_C_BonusTargetTag::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusTargetTag, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_BonusTargetTag::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.BonusUltimateReady
// 0x0040 (0x0040 - 0x0000)
struct BP_AIGoal_C_BonusUltimateReady final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        UltimateReadyBonus;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_BonusUltimateReady) == 0x000008, "Wrong alignment on BP_AIGoal_C_BonusUltimateReady");
static_assert(sizeof(BP_AIGoal_C_BonusUltimateReady) == 0x000040, "Wrong size on BP_AIGoal_C_BonusUltimateReady");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, InController) == 0x000000, "Member 'BP_AIGoal_C_BonusUltimateReady::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, UltimateReadyBonus) == 0x000008, "Member 'BP_AIGoal_C_BonusUltimateReady::UltimateReadyBonus' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_BonusUltimateReady::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000018, "Member 'BP_AIGoal_C_BonusUltimateReady::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIGoal_C_BonusUltimateReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'BP_AIGoal_C_BonusUltimateReady::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_BonusUltimateReady, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_BonusUltimateReady::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.CalculateWeight
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_C_CalculateWeight final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyContributions_Score;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyFinalModfierWeights_WeightedScore; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ApplyBonus_FinalScore;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_CalculateWeight) == 0x000008, "Wrong alignment on BP_AIGoal_C_CalculateWeight");
static_assert(sizeof(BP_AIGoal_C_CalculateWeight) == 0x000038, "Wrong size on BP_AIGoal_C_CalculateWeight");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, InController) == 0x000000, "Member 'BP_AIGoal_C_CalculateWeight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_CalculateWeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, CallFunc_MultiplyContributions_Score) == 0x000010, "Member 'BP_AIGoal_C_CalculateWeight::CallFunc_MultiplyContributions_Score' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, CallFunc_MultiplyFinalModfierWeights_WeightedScore) == 0x000018, "Member 'BP_AIGoal_C_CalculateWeight::CallFunc_MultiplyFinalModfierWeights_WeightedScore' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, CallFunc_ApplyBonus_FinalScore) == 0x000020, "Member 'BP_AIGoal_C_CalculateWeight::CallFunc_ApplyBonus_FinalScore' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_CalculateWeight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CalculateWeight, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000030, "Member 'BP_AIGoal_C_CalculateWeight::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.CheckPreconditionsBP
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_C_CheckPreconditionsBP) == 0x000010, "Wrong size on BP_AIGoal_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.ConstructDebugWeightString
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AIGoal_C_ConstructDebugWeightString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_ConstructDebugWeightString) == 0x000008, "Wrong alignment on BP_AIGoal_C_ConstructDebugWeightString");
static_assert(sizeof(BP_AIGoal_C_ConstructDebugWeightString) == 0x0000C8, "Wrong size on BP_AIGoal_C_ConstructDebugWeightString");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, String) == 0x000000, "Member 'BP_AIGoal_C_ConstructDebugWeightString::String' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, Temp) == 0x000010, "Member 'BP_AIGoal_C_ConstructDebugWeightString::Temp' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AIGoal_C_ConstructDebugWeightString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AIGoal_C_ConstructDebugWeightString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_SelectString_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000088, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ConstructDebugWeightString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'BP_AIGoal_C_ConstructDebugWeightString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.ExecuteUbergraph_BP_AIGoal
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConstructDebugWeightString_String;        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal) == 0x000008, "Wrong alignment on BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal");
static_assert(sizeof(BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal) == 0x000018, "Wrong size on BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal");
static_assert(offsetof(BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal, EntryPoint) == 0x000000, "Member 'BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal, CallFunc_ConstructDebugWeightString_String) == 0x000008, "Member 'BP_AIGoal_C_ExecuteUbergraph_BP_AIGoal::CallFunc_ConstructDebugWeightString_String' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.GetDifficultyWeight
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_C_GetDifficultyWeight final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        RoleWeight_0;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_GetDifficultyWeight) == 0x000008, "Wrong alignment on BP_AIGoal_C_GetDifficultyWeight");
static_assert(sizeof(BP_AIGoal_C_GetDifficultyWeight) == 0x000028, "Wrong size on BP_AIGoal_C_GetDifficultyWeight");
static_assert(offsetof(BP_AIGoal_C_GetDifficultyWeight, InController) == 0x000000, "Member 'BP_AIGoal_C_GetDifficultyWeight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDifficultyWeight, RoleWeight_0) == 0x000008, "Member 'BP_AIGoal_C_GetDifficultyWeight::RoleWeight_0' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDifficultyWeight, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_GetDifficultyWeight::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDifficultyWeight, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000018, "Member 'BP_AIGoal_C_GetDifficultyWeight::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDifficultyWeight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIGoal_C_GetDifficultyWeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.GetDispositionWeight
// 0x0020 (0x0020 - 0x0000)
struct BP_AIGoal_C_GetDispositionWeight final
{
public:
	double                                        DispositionWeight;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_GetDispositionWeight) == 0x000008, "Wrong alignment on BP_AIGoal_C_GetDispositionWeight");
static_assert(sizeof(BP_AIGoal_C_GetDispositionWeight) == 0x000020, "Wrong size on BP_AIGoal_C_GetDispositionWeight");
static_assert(offsetof(BP_AIGoal_C_GetDispositionWeight, DispositionWeight) == 0x000000, "Member 'BP_AIGoal_C_GetDispositionWeight::DispositionWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDispositionWeight, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_GetDispositionWeight::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDispositionWeight, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_GetDispositionWeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetDispositionWeight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_GetDispositionWeight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.GetJitterAdd
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_C_GetJitterAdd final
{
public:
	double                                        JitterWeight;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_GetJitterAdd) == 0x000008, "Wrong alignment on BP_AIGoal_C_GetJitterAdd");
static_assert(sizeof(BP_AIGoal_C_GetJitterAdd) == 0x000018, "Wrong size on BP_AIGoal_C_GetJitterAdd");
static_assert(offsetof(BP_AIGoal_C_GetJitterAdd, JitterWeight) == 0x000000, "Member 'BP_AIGoal_C_GetJitterAdd::JitterWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetJitterAdd, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_AIGoal_C_GetJitterAdd::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetJitterAdd, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_GetJitterAdd::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.GetRoleWeight
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_C_GetRoleWeight final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        RoleWeight_0;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTeamRole_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_GetRoleWeight) == 0x000008, "Wrong alignment on BP_AIGoal_C_GetRoleWeight");
static_assert(sizeof(BP_AIGoal_C_GetRoleWeight) == 0x000038, "Wrong size on BP_AIGoal_C_GetRoleWeight");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, InController) == 0x000000, "Member 'BP_AIGoal_C_GetRoleWeight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, RoleWeight_0) == 0x000008, "Member 'BP_AIGoal_C_GetRoleWeight::RoleWeight_0' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, CallFunc_GetTeamRole_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_GetRoleWeight::CallFunc_GetTeamRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_GetRoleWeight::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_AIGoal_C_GetRoleWeight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_GetRoleWeight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_GetRoleWeight, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_GetRoleWeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.MultiplyFinalModfierWeights
// 0x0068 (0x0068 - 0x0000)
struct BP_AIGoal_C_MultiplyFinalModfierWeights final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Score;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightedScore;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRoleWeight_RoleWeight;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetJitterAdd_JitterWeight;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDispositionWeight_DispositionWeight;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_MultiplyFinalModfierWeights) == 0x000008, "Wrong alignment on BP_AIGoal_C_MultiplyFinalModfierWeights");
static_assert(sizeof(BP_AIGoal_C_MultiplyFinalModfierWeights) == 0x000068, "Wrong size on BP_AIGoal_C_MultiplyFinalModfierWeights");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, InController) == 0x000000, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, Score) == 0x000008, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::Score' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, WeightedScore) == 0x000010, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::WeightedScore' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_GetRoleWeight_RoleWeight) == 0x000018, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_GetRoleWeight_RoleWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_GetJitterAdd_JitterWeight) == 0x000020, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_GetJitterAdd_JitterWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_GetDispositionWeight_DispositionWeight) == 0x000028, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_GetDispositionWeight_DispositionWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_FMax_ReturnValue_1) == 0x000058, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyFinalModfierWeights, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'BP_AIGoal_C_MultiplyFinalModfierWeights::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.Print Weight
// 0x01D8 (0x01D8 - 0x0000)
struct BP_AIGoal_C_Print_Weight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWAIController*                        InController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 NewLocalVar;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 WeightString;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x003C(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_Print_Weight) == 0x000008, "Wrong alignment on BP_AIGoal_C_Print_Weight");
static_assert(sizeof(BP_AIGoal_C_Print_Weight) == 0x0001D8, "Wrong size on BP_AIGoal_C_Print_Weight");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, Weight) == 0x000000, "Member 'BP_AIGoal_C_Print_Weight::Weight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, InController) == 0x000008, "Member 'BP_AIGoal_C_Print_Weight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, NewLocalVar) == 0x000010, "Member 'BP_AIGoal_C_Print_Weight::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, WeightString) == 0x000020, "Member 'BP_AIGoal_C_Print_Weight::WeightString' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_AIGoal_C_Print_Weight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_GetGenericTeamId_ReturnValue) == 0x00003C, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_SelectColor_ReturnValue) == 0x000054, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000078, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_IsEmpty_ReturnValue) == 0x000088, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Contains_ReturnValue) == 0x000089, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_AIGoal_C_Print_Weight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Map_Keys_Keys) == 0x000098, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0000E8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000110, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Array_LastIndex_ReturnValue) == 0x000124, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_SelectString_ReturnValue) == 0x000130, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000140, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000150, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000160, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000170, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Conv_StringToName_ReturnValue) == 0x000180, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000188, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000198, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001A8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001B8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_Print_Weight, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001C8, "Member 'BP_AIGoal_C_Print_Weight::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackAbilities
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_C_TrackAbilities final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AbilitiesReadyMin;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AbilitiesReadyMax;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameplayTagCount_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackAbilities) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackAbilities");
static_assert(sizeof(BP_AIGoal_C_TrackAbilities) == 0x000058, "Wrong size on BP_AIGoal_C_TrackAbilities");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackAbilities::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackAbilities::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, AbilitiesReadyMin) == 0x000010, "Member 'BP_AIGoal_C_TrackAbilities::AbilitiesReadyMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, AbilitiesReadyMax) == 0x000018, "Member 'BP_AIGoal_C_TrackAbilities::AbilitiesReadyMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_TrackAbilities::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_TrackAbilities::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_GetGameplayTagCount_ReturnValue) == 0x000040, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_GetGameplayTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAbilities, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'BP_AIGoal_C_TrackAbilities::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackAllyGodCount
// 0x0078 (0x0078 - 0x0000)
struct BP_AIGoal_C_TrackAllyGodCount final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRange;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GodCountMin;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GodCountMax;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvalidTags;                                       // 0x0028(0x0020)(Edit, BlueprintVisible)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAllyCountWithinRange_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAllyCountWithinRange_radius_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackAllyGodCount) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackAllyGodCount");
static_assert(sizeof(BP_AIGoal_C_TrackAllyGodCount) == 0x000078, "Wrong size on BP_AIGoal_C_TrackAllyGodCount");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackAllyGodCount::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackAllyGodCount::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, MaxRange) == 0x000010, "Member 'BP_AIGoal_C_TrackAllyGodCount::MaxRange' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, GodCountMin) == 0x000018, "Member 'BP_AIGoal_C_TrackAllyGodCount::GodCountMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, GodCountMax) == 0x000020, "Member 'BP_AIGoal_C_TrackAllyGodCount::GodCountMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, InvalidTags) == 0x000028, "Member 'BP_AIGoal_C_TrackAllyGodCount::InvalidTags' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackAllyGodCount::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000050, "Member 'BP_AIGoal_C_TrackAllyGodCount::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AIGoal_C_TrackAllyGodCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CallFunc_GetAllyCountWithinRange_ReturnValue) == 0x00005C, "Member 'BP_AIGoal_C_TrackAllyGodCount::CallFunc_GetAllyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_AIGoal_C_TrackAllyGodCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'BP_AIGoal_C_TrackAllyGodCount::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyGodCount, CallFunc_GetAllyCountWithinRange_radius_ImplicitCast) == 0x000070, "Member 'BP_AIGoal_C_TrackAllyGodCount::CallFunc_GetAllyCountWithinRange_radius_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackAllyVsEnemyGodDelta
// 0x0088 (0x0088 - 0x0000)
struct BP_AIGoal_C_TrackAllyVsEnemyGodDelta final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaMin;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaMax;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvalidTags;                                       // 0x0028(0x0020)(Edit, BlueprintVisible)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAllyCountWithinRange_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyCountWithinRange_ReturnValue;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAllyCountWithinRange_radius_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackAllyVsEnemyGodDelta");
static_assert(sizeof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta) == 0x000088, "Wrong size on BP_AIGoal_C_TrackAllyVsEnemyGodDelta");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, Range) == 0x000010, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::Range' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, DeltaMin) == 0x000018, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::DeltaMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, DeltaMax) == 0x000020, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::DeltaMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, InvalidTags) == 0x000028, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::InvalidTags' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000050, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_GetAllyCountWithinRange_ReturnValue) == 0x00005C, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_GetAllyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_GetEnemyCountWithinRange_ReturnValue) == 0x000060, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_GetEnemyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_GetAllyCountWithinRange_radius_ImplicitCast) == 0x000080, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_GetAllyCountWithinRange_radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyGodDelta, CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast) == 0x000084, "Member 'BP_AIGoal_C_TrackAllyVsEnemyGodDelta::CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackAllyVsEnemyMinionDelta
// 0x0078 (0x0078 - 0x0000)
struct BP_AIGoal_C_TrackAllyVsEnemyMinionDelta final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaMin;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaMax;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvalidTags;                                       // 0x0028(0x0020)(Edit, BlueprintVisible)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAllyCountWithinRange_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyCountWithinRange_ReturnValue;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAllyCountWithinRange_radius_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackAllyVsEnemyMinionDelta");
static_assert(sizeof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta) == 0x000078, "Wrong size on BP_AIGoal_C_TrackAllyVsEnemyMinionDelta");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, Range) == 0x000010, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::Range' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, DeltaMin) == 0x000018, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::DeltaMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, DeltaMax) == 0x000020, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::DeltaMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, InvalidTags) == 0x000028, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::InvalidTags' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000050, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_GetAllyCountWithinRange_ReturnValue) == 0x00005C, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_GetAllyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_GetEnemyCountWithinRange_ReturnValue) == 0x000060, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_GetEnemyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_GetAllyCountWithinRange_radius_ImplicitCast) == 0x000070, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_GetAllyCountWithinRange_radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAllyVsEnemyMinionDelta, CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast) == 0x000074, "Member 'BP_AIGoal_C_TrackAllyVsEnemyMinionDelta::CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackAvgEnemyGodHealth
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_C_TrackAvgEnemyGodHealth final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealthPctMin;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealthPctMax;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGodThreatAvgHealthPct_ReturnValue;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGodThreatAvgHealthPct_MaxDistance_ImplicitCast; // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackAvgEnemyGodHealth) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackAvgEnemyGodHealth");
static_assert(sizeof(BP_AIGoal_C_TrackAvgEnemyGodHealth) == 0x000038, "Wrong size on BP_AIGoal_C_TrackAvgEnemyGodHealth");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, Range) == 0x000010, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::Range' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, HealthPctMin) == 0x000018, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::HealthPctMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, HealthPctMax) == 0x000020, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::HealthPctMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, CallFunc_GetGodThreatAvgHealthPct_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::CallFunc_GetGodThreatAvgHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, CallFunc_GetGodThreatAvgHealthPct_MaxDistance_ImplicitCast) == 0x00002C, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::CallFunc_GetGodThreatAvgHealthPct_MaxDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackAvgEnemyGodHealth, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000030, "Member 'BP_AIGoal_C_TrackAvgEnemyGodHealth::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackContribution
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_C_TrackContribution final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Score;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackContribution) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackContribution");
static_assert(sizeof(BP_AIGoal_C_TrackContribution) == 0x000018, "Wrong size on BP_AIGoal_C_TrackContribution");
static_assert(offsetof(BP_AIGoal_C_TrackContribution, Key) == 0x000000, "Member 'BP_AIGoal_C_TrackContribution::Key' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContribution, Score) == 0x000008, "Member 'BP_AIGoal_C_TrackContribution::Score' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContribution, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_TrackContribution::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackContributionEnhanced
// 0x0050 (0x0050 - 0x0000)
struct BP_AIGoal_C_TrackContributionEnhanced final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Input;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MappedInput;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrackContribution_Score_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackContributionEnhanced) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackContributionEnhanced");
static_assert(sizeof(BP_AIGoal_C_TrackContributionEnhanced) == 0x000050, "Wrong size on BP_AIGoal_C_TrackContributionEnhanced");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, Key) == 0x000000, "Member 'BP_AIGoal_C_TrackContributionEnhanced::Key' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, Input) == 0x000010, "Member 'BP_AIGoal_C_TrackContributionEnhanced::Input' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, Min) == 0x000018, "Member 'BP_AIGoal_C_TrackContributionEnhanced::Min' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, Max) == 0x000020, "Member 'BP_AIGoal_C_TrackContributionEnhanced::Max' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, MappedInput) == 0x000028, "Member 'BP_AIGoal_C_TrackContributionEnhanced::MappedInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CallFunc_NormalizeToRange_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CallFunc_GetFloatValue_ReturnValue) == 0x00003C, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000040, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackContributionEnhanced, CallFunc_TrackContribution_Score_ImplicitCast) == 0x000048, "Member 'BP_AIGoal_C_TrackContributionEnhanced::CallFunc_TrackContribution_Score_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackEnemyGodCount
// 0x0070 (0x0070 - 0x0000)
struct BP_AIGoal_C_TrackEnemyGodCount final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GodCountMin;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GodCountMax;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvalidTags;                                       // 0x0028(0x0020)(Edit, BlueprintVisible)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEnemyCountWithinRange_ReturnValue;     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackEnemyGodCount) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackEnemyGodCount");
static_assert(sizeof(BP_AIGoal_C_TrackEnemyGodCount) == 0x000070, "Wrong size on BP_AIGoal_C_TrackEnemyGodCount");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackEnemyGodCount::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackEnemyGodCount::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, Range) == 0x000010, "Member 'BP_AIGoal_C_TrackEnemyGodCount::Range' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, GodCountMin) == 0x000018, "Member 'BP_AIGoal_C_TrackEnemyGodCount::GodCountMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, GodCountMax) == 0x000020, "Member 'BP_AIGoal_C_TrackEnemyGodCount::GodCountMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, InvalidTags) == 0x000028, "Member 'BP_AIGoal_C_TrackEnemyGodCount::InvalidTags' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackEnemyGodCount::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000050, "Member 'BP_AIGoal_C_TrackEnemyGodCount::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AIGoal_C_TrackEnemyGodCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, CallFunc_GetEnemyCountWithinRange_ReturnValue) == 0x00005C, "Member 'BP_AIGoal_C_TrackEnemyGodCount::CallFunc_GetEnemyCountWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'BP_AIGoal_C_TrackEnemyGodCount::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackEnemyGodCount, CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast) == 0x000068, "Member 'BP_AIGoal_C_TrackEnemyGodCount::CallFunc_GetEnemyCountWithinRange_radius_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackGold
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_C_TrackGold final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        GoldMin;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GoldMax;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackGold) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackGold");
static_assert(sizeof(BP_AIGoal_C_TrackGold) == 0x000058, "Wrong size on BP_AIGoal_C_TrackGold");
static_assert(offsetof(BP_AIGoal_C_TrackGold, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackGold::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackGold::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, GoldMin) == 0x000010, "Member 'BP_AIGoal_C_TrackGold::GoldMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, GoldMax) == 0x000018, "Member 'BP_AIGoal_C_TrackGold::GoldMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackGold::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_TrackGold::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_TrackGold::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_TrackGold::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000040, "Member 'BP_AIGoal_C_TrackGold::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000044, "Member 'BP_AIGoal_C_TrackGold::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackGold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackGold, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_C_TrackGold::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackLevel
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_C_TrackLevel final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinLevel;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxLevel;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackLevel) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackLevel");
static_assert(sizeof(BP_AIGoal_C_TrackLevel) == 0x000058, "Wrong size on BP_AIGoal_C_TrackLevel");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackLevel::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackLevel::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, MinLevel) == 0x000010, "Member 'BP_AIGoal_C_TrackLevel::MinLevel' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, MaxLevel) == 0x000018, "Member 'BP_AIGoal_C_TrackLevel::MaxLevel' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_TrackLevel::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_TrackLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000040, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000044, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackLevel, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_C_TrackLevel::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackNearestEnemyGodDistance
// 0x0080 (0x0080 - 0x0000)
struct BP_AIGoal_C_TrackNearestEnemyGodDistance final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceMin;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceMax;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetNearestThreat_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackNearestEnemyGodDistance) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackNearestEnemyGodDistance");
static_assert(sizeof(BP_AIGoal_C_TrackNearestEnemyGodDistance) == 0x000080, "Wrong size on BP_AIGoal_C_TrackNearestEnemyGodDistance");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, DistanceMin) == 0x000010, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::DistanceMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, DistanceMax) == 0x000018, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::DistanceMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_GetNearestThreat_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_GetNearestThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_Square_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_Square_ReturnValue_1) == 0x000070, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackNearestEnemyGodDistance, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x000078, "Member 'BP_AIGoal_C_TrackNearestEnemyGodDistance::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackSelfHealth
// 0x0040 (0x0040 - 0x0000)
struct BP_AIGoal_C_TrackSelfHealth final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HealthPctMin;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealthPctMax;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPercentage_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackSelfHealth) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackSelfHealth");
static_assert(sizeof(BP_AIGoal_C_TrackSelfHealth) == 0x000040, "Wrong size on BP_AIGoal_C_TrackSelfHealth");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackSelfHealth::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackSelfHealth::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, HealthPctMin) == 0x000010, "Member 'BP_AIGoal_C_TrackSelfHealth::HealthPctMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, HealthPctMax) == 0x000018, "Member 'BP_AIGoal_C_TrackSelfHealth::HealthPctMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackSelfHealth::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_TrackSelfHealth::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_TrackSelfHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, CallFunc_GetHealthPercentage_ReturnValue) == 0x000034, "Member 'BP_AIGoal_C_TrackSelfHealth::CallFunc_GetHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfHealth, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000038, "Member 'BP_AIGoal_C_TrackSelfHealth::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackSelfMana
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_C_TrackSelfMana final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ManaPctMin;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ManaPctMax;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetManaPercentage_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackSelfMana) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackSelfMana");
static_assert(sizeof(BP_AIGoal_C_TrackSelfMana) == 0x000058, "Wrong size on BP_AIGoal_C_TrackSelfMana");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackSelfMana::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackSelfMana::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, ManaPctMin) == 0x000010, "Member 'BP_AIGoal_C_TrackSelfMana::ManaPctMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, ManaPctMax) == 0x000018, "Member 'BP_AIGoal_C_TrackSelfMana::ManaPctMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackSelfMana::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000028, "Member 'BP_AIGoal_C_TrackSelfMana::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AIGoal_C_TrackSelfMana::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CallFunc_GetManaPercentage_ReturnValue) == 0x000034, "Member 'BP_AIGoal_C_TrackSelfMana::CallFunc_GetManaPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'BP_AIGoal_C_TrackSelfMana::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackSelfMana::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfMana, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_C_TrackSelfMana::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackSelfVsTargetHealthDelta
// 0x0060 (0x0060 - 0x0000)
struct BP_AIGoal_C_TrackSelfVsTargetHealthDelta final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaPctMin;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaPctMax;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCurrentThreat_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPercentage_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPercentage_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackSelfVsTargetHealthDelta");
static_assert(sizeof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta) == 0x000060, "Wrong size on BP_AIGoal_C_TrackSelfVsTargetHealthDelta");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, DeltaPctMin) == 0x000010, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::DeltaPctMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, DeltaPctMax) == 0x000018, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::DeltaPctMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_GetCurrentThreat_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_GetCurrentThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000030, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_GetHealthPercentage_ReturnValue) == 0x00003C, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_GetHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_GetHealthPercentage_ReturnValue_1) == 0x000040, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_GetHealthPercentage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackSelfVsTargetHealthDelta, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'BP_AIGoal_C_TrackSelfVsTargetHealthDelta::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackTargetDistance
// 0x0080 (0x0080 - 0x0000)
struct BP_AIGoal_C_TrackTargetDistance final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceMin;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceMax;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCurrentThreat_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue_1;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackTargetDistance) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackTargetDistance");
static_assert(sizeof(BP_AIGoal_C_TrackTargetDistance) == 0x000080, "Wrong size on BP_AIGoal_C_TrackTargetDistance");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackTargetDistance::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackTargetDistance::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, DistanceMin) == 0x000010, "Member 'BP_AIGoal_C_TrackTargetDistance::DistanceMin' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, DistanceMax) == 0x000018, "Member 'BP_AIGoal_C_TrackTargetDistance::DistanceMax' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_Square_ReturnValue) == 0x000028, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_GetCurrentThreat_ReturnValue) == 0x000048, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_GetCurrentThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_Square_ReturnValue_1) == 0x000058, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetDistance, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x000078, "Member 'BP_AIGoal_C_TrackTargetDistance::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.TrackTargetHealth
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_C_TrackTargetHealth final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveFunction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCurrentThreat_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPercentage_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrackContributionEnhanced_Input_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_TrackTargetHealth) == 0x000008, "Wrong alignment on BP_AIGoal_C_TrackTargetHealth");
static_assert(sizeof(BP_AIGoal_C_TrackTargetHealth) == 0x000028, "Wrong size on BP_AIGoal_C_TrackTargetHealth");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, InController) == 0x000000, "Member 'BP_AIGoal_C_TrackTargetHealth::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, CurveFunction) == 0x000008, "Member 'BP_AIGoal_C_TrackTargetHealth::CurveFunction' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, CallFunc_GetCurrentThreat_ReturnValue) == 0x000010, "Member 'BP_AIGoal_C_TrackTargetHealth::CallFunc_GetCurrentThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, CallFunc_GetHealthPercentage_ReturnValue) == 0x000018, "Member 'BP_AIGoal_C_TrackTargetHealth::CallFunc_GetHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AIGoal_C_TrackTargetHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_TrackTargetHealth, CallFunc_TrackContributionEnhanced_Input_ImplicitCast) == 0x000020, "Member 'BP_AIGoal_C_TrackTargetHealth::CallFunc_TrackContributionEnhanced_Input_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal.BP_AIGoal_C.MultiplyContributions
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AIGoal_C_MultiplyContributions final
{
public:
	TMap<class FName, double>                     Contributions;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Score;                                             // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumWeights;                                        // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TempWeight;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_C_MultiplyContributions) == 0x000008, "Wrong alignment on BP_AIGoal_C_MultiplyContributions");
static_assert(sizeof(BP_AIGoal_C_MultiplyContributions) == 0x0000A8, "Wrong size on BP_AIGoal_C_MultiplyContributions");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, Contributions) == 0x000000, "Member 'BP_AIGoal_C_MultiplyContributions::Contributions' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, Score) == 0x000050, "Member 'BP_AIGoal_C_MultiplyContributions::Score' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, NumWeights) == 0x000058, "Member 'BP_AIGoal_C_MultiplyContributions::NumWeights' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, TempWeight) == 0x000060, "Member 'BP_AIGoal_C_MultiplyContributions::TempWeight' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Map_Values_Values) == 0x000068, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_AIGoal_C_MultiplyContributions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_AIGoal_C_MultiplyContributions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_C_MultiplyContributions, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_AIGoal_C_MultiplyContributions::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

}

