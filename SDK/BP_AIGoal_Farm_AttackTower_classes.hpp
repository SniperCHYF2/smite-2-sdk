#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Farm_AttackTower

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIGoal_Farm_AttackTower.BP_AIGoal_Farm_AttackTower_C
// 0x0030 (0x0118 - 0x00E8)
class UBP_AIGoal_Farm_AttackTower_C : public UHWAIGoal
{
public:
	int32                                         MinNumberOfTankers;                                // 0x00E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TankersToIgnore;                                   // 0x00F0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly)
	double                                        WeightPenalty_PerEnemyGodUnderTower;               // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float CalculateWeight(class AHWAIController* InController);
	bool CheckPreconditionsBP(class AHWAIController* InController);
	class AHWCharacter_Base* GetNearestValidEnemyTower(class AHWAIController* InController);
	void GetNumTankers(class AHWCharacter_Base* SourceCharacter, class AActor* Tower, int32* Tankers);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGoal_Farm_AttackTower_C">();
	}
	static class UBP_AIGoal_Farm_AttackTower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGoal_Farm_AttackTower_C>();
	}
};
static_assert(alignof(UBP_AIGoal_Farm_AttackTower_C) == 0x000008, "Wrong alignment on UBP_AIGoal_Farm_AttackTower_C");
static_assert(sizeof(UBP_AIGoal_Farm_AttackTower_C) == 0x000118, "Wrong size on UBP_AIGoal_Farm_AttackTower_C");
static_assert(offsetof(UBP_AIGoal_Farm_AttackTower_C, MinNumberOfTankers) == 0x0000E8, "Member 'UBP_AIGoal_Farm_AttackTower_C::MinNumberOfTankers' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_AttackTower_C, TankersToIgnore) == 0x0000F0, "Member 'UBP_AIGoal_Farm_AttackTower_C::TankersToIgnore' has a wrong offset!");
static_assert(offsetof(UBP_AIGoal_Farm_AttackTower_C, WeightPenalty_PerEnemyGodUnderTower) == 0x000110, "Member 'UBP_AIGoal_Farm_AttackTower_C::WeightPenalty_PerEnemyGodUnderTower' has a wrong offset!");

}

