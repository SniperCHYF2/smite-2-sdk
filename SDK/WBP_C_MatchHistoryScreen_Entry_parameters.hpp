#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_C_MatchHistoryScreen_Entry

#include "Basic.hpp"

#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry) == 0x000004, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry) == 0x000008, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry, EntryPoint) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_C_MatchHistoryScreen_Entry_C_ExecuteUbergraph_WBP_C_MatchHistoryScreen_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.OnHovered
// 0x0020 (0x0020 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_OnHovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0014)()
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_OnHovered) == 0x000008, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_OnHovered");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_OnHovered) == 0x000020, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_OnHovered");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnHovered, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnHovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnHovered, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnHovered::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.OnUnhovered
// 0x0040 (0x0040 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0014)()
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered) == 0x000008, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered) == 0x000040, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, Temp_bool_Variable) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, Temp_struct_Variable) == 0x000004, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, K2Node_Select_Default) == 0x000020, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_C_MatchHistoryScreen_Entry_C_OnUnhovered::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_PreConstruct");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_PreConstruct) == 0x000001, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_PreConstruct");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.SetMatchInfo
// 0x0528 (0x0528 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo final
{
public:
	struct FHWPlayerMatchData                     MatchInfo;                                         // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0098(0x0018)()
	class UHWGodSubsystem*                        CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWGameModeInfoSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHWGameModeInfo                        CallFunc_GetGameModeInfoByTag_OutInfo;             // 0x00E8(0x00F8)()
	bool                                          CallFunc_GetGameModeInfoByTag_ReturnValue;         // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0210(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0260(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02D8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0328(0x0010)(ReferenceParm)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0338(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0350(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0370(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x03C0(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0418(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0468(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04C8(0x0018)()
	const class UHWCharacterItem*                 CallFunc_GetGodByTag_ReturnValue;                  // 0x04E0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIconTextureByTag_ReturnValue;          // 0x04F0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x051C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo) == 0x000008, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo) == 0x000528, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, MatchInfo) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::MatchInfo' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_bool_Variable) == 0x000078, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_text_Variable) == 0x000080, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_text_Variable_1) == 0x000098, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000B0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000B8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_struct_Variable) == 0x0000C0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_struct_Variable_1) == 0x0000E0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetGameModeInfoByTag_OutInfo) == 0x0000E8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetGameModeInfoByTag_OutInfo' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetGameModeInfoByTag_ReturnValue) == 0x0001E0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetGameModeInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Year) == 0x0001E4, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Month) == 0x0001E8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Day) == 0x0001EC, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Hour) == 0x0001F0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Minute) == 0x0001F4, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Second) == 0x0001F8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_BreakDateTime_Millisecond) == 0x0001FC, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000200, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000208, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000210, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000260, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x0002B0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002C0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002D8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeArray_Array) == 0x000328, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000338, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Format_ReturnValue) == 0x000350, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000368, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000370, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_Select_Default) == 0x0003C0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_SelectColor_ReturnValue) == 0x0003D8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_SelectColor_ReturnValue_1) == 0x0003E8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_SelectColor_ReturnValue_2) == 0x0003F8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000408, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x000410, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x000418, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeStruct_FormatArgumentData_5) == 0x000468, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_MakeArray_Array_1) == 0x0004B8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_Format_ReturnValue_1) == 0x0004C8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetGodByTag_ReturnValue) == 0x0004E0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetGodByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_IsValid_ReturnValue) == 0x0004E8, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, CallFunc_GetIconTextureByTag_ReturnValue) == 0x0004F0, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::CallFunc_GetIconTextureByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, Temp_bool_Variable_1) == 0x000518, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo, K2Node_Select_Default_1) == 0x00051C, "Member 'WBP_C_MatchHistoryScreen_Entry_C_SetMatchInfo::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_C_MatchHistoryScreen_Entry.WBP_C_MatchHistoryScreen_Entry_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_C_MatchHistoryScreen_Entry_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

