#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UpgradePopOut

#include "Basic.hpp"


namespace SDK::Params
{

// Function UpgradePopOut.UpgradePopOut_C.ExecuteUbergraph_UpgradePopOut
// 0x0028 (0x0028 - 0x0000)
struct UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_G_V1_TooltipAbilityOverview_DetailLine_C* CallFunc_Create_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut) == 0x000008, "Wrong alignment on UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut");
static_assert(sizeof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut) == 0x000028, "Wrong size on UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, EntryPoint) == 0x000000, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::EntryPoint' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, Temp_int_Variable) == 0x000008, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, CallFunc_Create_ReturnValue) == 0x000010, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'UpgradePopOut_C_ExecuteUbergraph_UpgradePopOut::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UpgradePopOut.UpgradePopOut_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UpgradePopOut_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradePopOut_C_PreConstruct) == 0x000001, "Wrong alignment on UpgradePopOut_C_PreConstruct");
static_assert(sizeof(UpgradePopOut_C_PreConstruct) == 0x000001, "Wrong size on UpgradePopOut_C_PreConstruct");
static_assert(offsetof(UpgradePopOut_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UpgradePopOut_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

