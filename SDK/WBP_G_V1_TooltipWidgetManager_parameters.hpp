#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V1_TooltipWidgetManager

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager
// 0x0030 (0x0030 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V1_Tooltip_HUDNavPrompts_C*      K2Node_DynamicCast_AsWBP_G_V1_Tooltip_HUDNav_Prompts; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWEquipmentItemTooltip_DisplayMode           K2Node_Event_DisplayMode;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x0018(0x0018)(ConstParm)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager) == 0x000030, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, EntryPoint) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, K2Node_Event_bVisible) == 0x000004, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, K2Node_DynamicCast_AsWBP_G_V1_Tooltip_HUDNav_Prompts) == 0x000008, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::K2Node_DynamicCast_AsWBP_G_V1_Tooltip_HUDNav_Prompts' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, K2Node_Event_DisplayMode) == 0x000011, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::K2Node_Event_DisplayMode' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager, K2Node_Event_Text) == 0x000018, "Member 'WBP_G_V1_TooltipWidgetManager_C_ExecuteUbergraph_WBP_G_V1_TooltipWidgetManager::K2Node_Event_Text' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.SetTooltipContainerVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility final
{
public:
	bool                                          bNewIsVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility) == 0x000005, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility, bNewIsVisible) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility::bNewIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility, Temp_bool_Variable) == 0x000003, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContainerVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.SetTooltipContextBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility) == 0x000001, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility, bVisible) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_SetTooltipContextBarVisibility::bVisible' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.SFXPlayTooltip
// 0x0003 (0x0003 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip final
{
public:
	EHWEquipmentItemTooltip_DisplayMode           Display_Mode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip) == 0x000003, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip, Display_Mode) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip::Display_Mode' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'WBP_G_V1_TooltipWidgetManager_C_SFXPlayTooltip::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.UpdatedTooltipDisplayMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode final
{
public:
	EHWEquipmentItemTooltip_DisplayMode           DisplayMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode) == 0x000001, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode) == 0x000001, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode, DisplayMode) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_UpdatedTooltipDisplayMode::DisplayMode' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.UpdateNavWidgetName
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName) == 0x000018, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName, Text) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_UpdateNavWidgetName::Text' has a wrong offset!");

// Function WBP_G_V1_TooltipWidgetManager.WBP_G_V1_TooltipWidgetManager_C.GetTooltipContainer
// 0x0008 (0x0008 - 0x0000)
struct WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer) == 0x000008, "Wrong alignment on WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer");
static_assert(sizeof(WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer) == 0x000008, "Wrong size on WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer");
static_assert(offsetof(WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer, ReturnValue) == 0x000000, "Member 'WBP_G_V1_TooltipWidgetManager_C_GetTooltipContainer::ReturnValue' has a wrong offset!");

}

