#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickPlay_QueueTypeSection

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature, bHovered) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ArenaTutorialButton_K2Node_ComponentBoundEvent_1_ButtonHoverStateChanged__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature, bHovered) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_ConquestTutorialButton_K2Node_ComponentBoundEvent_3_ButtonHoverStateChanged__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature, bHovered) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_CreateCustomButton_K2Node_ComponentBoundEvent_7_ButtonHoverStateChanged__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature, bHovered) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_PracticeButtonNew_K2Node_ComponentBoundEvent_5_ButtonHoverStateChanged__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature, bHovered) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_BndEvt__WBP_QuickPlay_QueueTypeSection_SoloNPETestButton_K2Node_ComponentBoundEvent_2_ButtonHoverStateChanged__DelegateSignature::bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.CheckPracticeQueuesStatus
// 0x0015 (0x0015 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue_1;  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue_1;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_bOutSettingValue_2;  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBooleanAppSetting_ReturnValue_2;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus) == 0x000015, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_bool_Variable) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable) == 0x000001, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_bool_Variable_2) == 0x000006, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable_4) == 0x000007, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, Temp_byte_Variable_5) == 0x000008, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_bOutSettingValue) == 0x000009, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_bOutSettingValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_ReturnValue) == 0x00000A, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_bOutSettingValue_1) == 0x00000B, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_bOutSettingValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_ReturnValue_1) == 0x00000C, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, K2Node_Select_Default) == 0x00000F, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_bOutSettingValue_2) == 0x000011, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_bOutSettingValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_GetBooleanAppSetting_ReturnValue_2) == 0x000012, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_GetBooleanAppSetting_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, CallFunc_BooleanAND_ReturnValue_2) == 0x000013, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus, K2Node_Select_Default_2) == 0x000014, "Member 'WBP_QuickPlay_QueueTypeSection_C_CheckPracticeQueuesStatus::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_Widget_1;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_Widget;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHPartyManager*                        CallFunc_GetPartyManager_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWQueueDataFactory*                    K2Node_DynamicCast_AsHWQueue_Data_Factory;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FRH_PartyMemberData& PartyMember)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FRH_PartyMemberData& PartyMember)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_QueueId;                        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FText>                           Temp_text_Variable;                                // 0x00A8(0x0010)(ReferenceParm)
	bool                                          K2Node_ComponentBoundEvent_bHovered_4;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered_3;             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered_2;             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered_1;             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered;               // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection) == 0x0000C0, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, EntryPoint) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CustomEvent_Widget_1) == 0x000008, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CustomEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CustomEvent_Widget) == 0x000010, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000018, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, CallFunc_GetPartyManager_ReturnValue) == 0x000038, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000040, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_DynamicCast_AsHWQueue_Data_Factory) == 0x000048, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_DynamicCast_AsHWQueue_Data_Factory' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CreateDelegate_OutputDelegate_3) == 0x000074, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_CustomEvent_QueueId) == 0x000098, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_CustomEvent_QueueId' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, Temp_text_Variable) == 0x0000A8, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_ComponentBoundEvent_bHovered_4) == 0x0000B8, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_ComponentBoundEvent_bHovered_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_ComponentBoundEvent_bHovered_3) == 0x0000B9, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_ComponentBoundEvent_bHovered_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_ComponentBoundEvent_bHovered_2) == 0x0000BA, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_ComponentBoundEvent_bHovered_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_ComponentBoundEvent_bHovered_1) == 0x0000BB, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_ComponentBoundEvent_bHovered_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_Event_IsDesignTime) == 0x0000BC, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection, K2Node_ComponentBoundEvent_bHovered) == 0x0000BD, "Member 'WBP_QuickPlay_QueueTypeSection_C_ExecuteUbergraph_WBP_QuickPlay_QueueTypeSection::K2Node_ComponentBoundEvent_bHovered' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.GetQueueButtons
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons final
{
public:
	TArray<class UWBP_QuickPlay_QueueButton_C*>   Buttons;                                           // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons) == 0x000010, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons, Buttons) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_GetQueueButtons::Buttons' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.HandleOnQueueClicked
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked final
{
public:
	class FString                                 QueueId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked) == 0x000010, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked, QueueId) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueClicked::QueueId' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.HandleOnQueueHovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered) == 0x000008, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered, Widget) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueHovered::Widget' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.HandleOnQueueUnhovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered) == 0x000008, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered, Widget) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_HandleOnQueueUnhovered::Widget' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.HandlePartyMemberDataUpdated
// 0x0030 (0x0030 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated final
{
public:
	struct FRH_PartyMemberData                    PartyMember;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated) == 0x000030, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated, PartyMember) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_HandlePartyMemberDataUpdated::PartyMember' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.Populate Section
// 0x0240 (0x0240 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_Populate_Section final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class URHWidget*>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_QuickPlay_QueueButton_C*           CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomMatchEnabled_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URH_MatchmakingQueueInfo*>       CallFunc_GetSortedQueues_ReturnValue;              // 0x0038(0x0010)(ReferenceParm)
	class URH_MatchmakingQueueInfo*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x0058(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* UnhoverWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0208(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWidget* HoveredWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& QueueId)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x022C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section) == 0x000008, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_Populate_Section");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section) == 0x000240, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_Populate_Section");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, Temp_byte_Variable) == 0x00000C, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, Temp_bool_Variable) == 0x00000E, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_IsCustomMatchEnabled_ReturnValue) == 0x000030, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_IsCustomMatchEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_GetSortedQueues_ReturnValue) == 0x000038, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_GetSortedQueues_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, K2Node_Select_Default) == 0x000050, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x000058, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x0001F0, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_IsActive_ReturnValue) == 0x0001F1, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Not_PreBool_ReturnValue) == 0x0001F8, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Less_IntInt_ReturnValue) == 0x0001F9, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_BooleanAND_ReturnValue) == 0x0001FA, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_AddChild_ReturnValue) == 0x000200, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, K2Node_CreateDelegate_OutputDelegate) == 0x000208, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, K2Node_CreateDelegate_OutputDelegate_1) == 0x00021C, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_Populate_Section, K2Node_CreateDelegate_OutputDelegate_2) == 0x00022C, "Member 'WBP_QuickPlay_QueueTypeSection_C_Populate_Section::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_PreConstruct");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_PreConstruct) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_PreConstruct");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_QuickPlay_QueueTypeSection.WBP_QuickPlay_QueueTypeSection_C.UpdateLocalPlayerPartyStatus
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus final
{
public:
	bool                                          bIsInParty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus) == 0x000001, "Wrong alignment on WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus");
static_assert(sizeof(WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus) == 0x000001, "Wrong size on WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus");
static_assert(offsetof(WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus, bIsInParty) == 0x000000, "Member 'WBP_QuickPlay_QueueTypeSection_C_UpdateLocalPlayerPartyStatus::bIsInParty' has a wrong offset!");

}

