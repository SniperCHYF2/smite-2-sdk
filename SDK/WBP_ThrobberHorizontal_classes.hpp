#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ThrobberHorizontal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ThrobberHorizontal.WBP_ThrobberHorizontal_C
// 0x0030 (0x02F0 - 0x02C0)
class UWBP_ThrobberHorizontal_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Cycle;                                             // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Diamond;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Diamond_1;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Diamond_2;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ThrobberBox;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_ThrobberHorizontal(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetThrobberColor(const struct FSlateColor& NewColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ThrobberHorizontal_C">();
	}
	static class UWBP_ThrobberHorizontal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ThrobberHorizontal_C>();
	}
};
static_assert(alignof(UWBP_ThrobberHorizontal_C) == 0x000008, "Wrong alignment on UWBP_ThrobberHorizontal_C");
static_assert(sizeof(UWBP_ThrobberHorizontal_C) == 0x0002F0, "Wrong size on UWBP_ThrobberHorizontal_C");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_ThrobberHorizontal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, Cycle) == 0x0002C8, "Member 'UWBP_ThrobberHorizontal_C::Cycle' has a wrong offset!");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, Diamond) == 0x0002D0, "Member 'UWBP_ThrobberHorizontal_C::Diamond' has a wrong offset!");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, Diamond_1) == 0x0002D8, "Member 'UWBP_ThrobberHorizontal_C::Diamond_1' has a wrong offset!");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, Diamond_2) == 0x0002E0, "Member 'UWBP_ThrobberHorizontal_C::Diamond_2' has a wrong offset!");
static_assert(offsetof(UWBP_ThrobberHorizontal_C, ThrobberBox) == 0x0002E8, "Member 'UWBP_ThrobberHorizontal_C::ThrobberBox' has a wrong offset!");

}

