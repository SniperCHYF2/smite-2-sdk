#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPE_GuideComponent

#include "Basic.hpp"

#include "S_NPE_Trigger_Event_structs.hpp"
#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_NPE_Guide_StageConfig_structs.hpp"
#include "E_NPE_TriggerType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_NPE_TutorialUIEvent_structs.hpp"
#include "S_NPE_HUDEvent_structs.hpp"


namespace SDK::Params
{

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.BindNPEStageEvents
// 0x0050 (0x0050 - 0x0000)
struct BP_NPE_GuideComponent_C_BindNPEStageEvents final
{
public:
	class ABP_NPE_Stage_C*                        Stage;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Unbind;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& CustomTag, TArray<struct FS_NPE_Trigger_Event>& Events)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& StageTag)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bShow, const struct FGameplayTagContainer& HUDElementTags)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool WasFailure, const struct FGameplayTag& NewTract, class ABP_NPE_Stage_C* Instigator, int32 StageDepth)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_BindNPEStageEvents) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_BindNPEStageEvents");
static_assert(sizeof(BP_NPE_GuideComponent_C_BindNPEStageEvents) == 0x000050, "Wrong size on BP_NPE_GuideComponent_C_BindNPEStageEvents");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, Stage) == 0x000000, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::Stage' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, Unbind) == 0x000008, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::Unbind' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindNPEStageEvents, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'BP_NPE_GuideComponent_C_BindNPEStageEvents::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.BindPlayerStateEvents
// 0x0040 (0x0040 - 0x0000)
struct BP_NPE_GuideComponent_C_BindPlayerStateEvents final
{
public:
	class AHWPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Unbind;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHWPlayerState* PlayerState, class AHWCharacterAbilitySystemActor* NewASActor)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECharacterRole AssignedRole)>  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_BindPlayerStateEvents) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_BindPlayerStateEvents");
static_assert(sizeof(BP_NPE_GuideComponent_C_BindPlayerStateEvents) == 0x000040, "Wrong size on BP_NPE_GuideComponent_C_BindPlayerStateEvents");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, PlayerState) == 0x000000, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, Unbind) == 0x000008, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::Unbind' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_BindPlayerStateEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'BP_NPE_GuideComponent_C_BindPlayerStateEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.CanRestart
// 0x0003 (0x0003 - 0x0000)
struct BP_NPE_GuideComponent_C_CanRestart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_CanRestart) == 0x000001, "Wrong alignment on BP_NPE_GuideComponent_C_CanRestart");
static_assert(sizeof(BP_NPE_GuideComponent_C_CanRestart) == 0x000003, "Wrong size on BP_NPE_GuideComponent_C_CanRestart");
static_assert(offsetof(BP_NPE_GuideComponent_C_CanRestart, ReturnValue) == 0x000000, "Member 'BP_NPE_GuideComponent_C_CanRestart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_CanRestart, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_NPE_GuideComponent_C_CanRestart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_CanRestart, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_NPE_GuideComponent_C_CanRestart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.DebugLog
// 0x0060 (0x0060 - 0x0000)
struct BP_NPE_GuideComponent_C_DebugLog final
{
public:
	class FString                                 Log;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsError;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuppressThis;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_DebugLog) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_DebugLog");
static_assert(sizeof(BP_NPE_GuideComponent_C_DebugLog) == 0x000060, "Wrong size on BP_NPE_GuideComponent_C_DebugLog");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, Log) == 0x000000, "Member 'BP_NPE_GuideComponent_C_DebugLog::Log' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, IsError) == 0x000010, "Member 'BP_NPE_GuideComponent_C_DebugLog::IsError' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, SuppressThis) == 0x000011, "Member 'BP_NPE_GuideComponent_C_DebugLog::SuppressThis' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_SelectColor_ReturnValue) == 0x000028, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_DebugLog, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_NPE_GuideComponent_C_DebugLog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ExecuteUbergraph_BP_NPE_GuideComponent
// 0x00D0 (0x00D0 - 0x0000)
struct BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHWCharacter_Base* OwnerCharacter, class AHWPlayerState* NewPlayerState)> K2Node_CreateDelegate_OutputDelegate_1; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPE_TutorialQuestTracker_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent) == 0x000010, "Wrong alignment on BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent");
static_assert(sizeof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent) == 0x0000D0, "Wrong size on BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, EntryPoint) == 0x000000, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000A0, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'BP_NPE_GuideComponent_C_ExecuteUbergraph_BP_NPE_GuideComponent::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GatherNPEStages
// 0x0048 (0x0048 - 0x0000)
struct BP_NPE_GuideComponent_C_GatherNPEStages final
{
public:
	TArray<class ABP_NPE_Stage_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_NPE_Guide_C>      K2Node_DynamicCast_AsBPI_NPE_Guide;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NPE_Stage_C*>                CallFunc_GetNPEStages_Stages;                      // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_NPE_GuideComponent_C_GatherNPEStages) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_GatherNPEStages");
static_assert(sizeof(BP_NPE_GuideComponent_C_GatherNPEStages) == 0x000048, "Wrong size on BP_NPE_GuideComponent_C_GatherNPEStages");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, CallFunc_Array_IsEmpty_ReturnValue) == 0x000010, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, CallFunc_GetHWGameState_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, K2Node_DynamicCast_AsBPI_NPE_Guide) == 0x000020, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::K2Node_DynamicCast_AsBPI_NPE_Guide' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GatherNPEStages, CallFunc_GetNPEStages_Stages) == 0x000038, "Member 'BP_NPE_GuideComponent_C_GatherNPEStages::CallFunc_GetNPEStages_Stages' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.Get Stage Config
// 0x0190 (0x0190 - 0x0000)
struct BP_NPE_GuideComponent_C_Get_Stage_Config final
{
public:
	struct FGameplayTag                           StageTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UBP_NPE_Guide_Tract_C*                  Tract;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               StageConfig;                                       // 0x0010(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x0088(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item_1;                         // 0x0110(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_Get_Stage_Config) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_Get_Stage_Config");
static_assert(sizeof(BP_NPE_GuideComponent_C_Get_Stage_Config) == 0x000190, "Wrong size on BP_NPE_GuideComponent_C_Get_Stage_Config");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, StageTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::StageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, Tract) == 0x000008, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, StageConfig) == 0x000010, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::StageConfig' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, Temp_int_Array_Index_Variable_1) == 0x00010C, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000180, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, Temp_int_Loop_Counter_Variable_1) == 0x000184, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000188, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Less_IntInt_ReturnValue_1) == 0x000189, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_Get_Stage_Config, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'BP_NPE_GuideComponent_C_Get_Stage_Config::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetCurrentTract
// 0x0018 (0x0018 - 0x0000)
struct BP_NPE_GuideComponent_C_GetCurrentTract final
{
public:
	class UBP_NPE_Guide_Tract_C*                  Tract;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_GetCurrentTract) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_GetCurrentTract");
static_assert(sizeof(BP_NPE_GuideComponent_C_GetCurrentTract) == 0x000018, "Wrong size on BP_NPE_GuideComponent_C_GetCurrentTract");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetCurrentTract, Tract) == 0x000000, "Member 'BP_NPE_GuideComponent_C_GetCurrentTract::Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetCurrentTract, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_GetCurrentTract::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetCurrentTract, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_NPE_GuideComponent_C_GetCurrentTract::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetNextStageTag
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPE_GuideComponent_C_GetNextStageTag final
{
public:
	struct FGameplayTag                           CurrentStageTag_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UBP_NPE_Guide_Tract_C*                  Tract;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NextStageTag;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x0020(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_GetNextStageTag) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_GetNextStageTag");
static_assert(sizeof(BP_NPE_GuideComponent_C_GetNextStageTag) == 0x0000A8, "Wrong size on BP_NPE_GuideComponent_C_GetNextStageTag");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CurrentStageTag_0) == 0x000000, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CurrentStageTag_0' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, Tract) == 0x000008, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, NextStageTag) == 0x000010, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::NextStageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000094, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00009C, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_Less_IntInt_ReturnValue) == 0x00009D, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetNextStageTag, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_NPE_GuideComponent_C_GetNextStageTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.GetStage
// 0x0030 (0x0030 - 0x0000)
struct BP_NPE_GuideComponent_C_GetStage final
{
public:
	struct FGameplayTag                           StageTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_NPE_Stage_C*                        Stage;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_Stage_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_GetStage) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_GetStage");
static_assert(sizeof(BP_NPE_GuideComponent_C_GetStage) == 0x000030, "Wrong size on BP_NPE_GuideComponent_C_GetStage");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, StageTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_GetStage::StageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, Stage) == 0x000008, "Member 'BP_NPE_GuideComponent_C_GetStage::Stage' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NPE_GuideComponent_C_GetStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_NPE_GuideComponent_C_GetStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00002C, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_GetStage, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_NPE_GuideComponent_C_GetStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.HasAuthorityOrIsClientsideMode
// 0x0028 (0x0028 - 0x0000)
struct BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode final
{
public:
	bool                                          Ok;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode");
static_assert(sizeof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode) == 0x000028, "Wrong size on BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, Ok) == 0x000000, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::Ok' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'BP_NPE_GuideComponent_C_HasAuthorityOrIsClientsideMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.InitializeNPEGuide
// 0x0030 (0x0030 - 0x0000)
struct BP_NPE_GuideComponent_C_InitializeNPEGuide final
{
public:
	ECharacterRole                                Role;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& NewPhase)> K2Node_CreateDelegate_OutputDelegate;       // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentGamePhaseTag_ReturnValue;       // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_InitializeNPEGuide) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_InitializeNPEGuide");
static_assert(sizeof(BP_NPE_GuideComponent_C_InitializeNPEGuide) == 0x000030, "Wrong size on BP_NPE_GuideComponent_C_InitializeNPEGuide");
static_assert(offsetof(BP_NPE_GuideComponent_C_InitializeNPEGuide, Role) == 0x000000, "Member 'BP_NPE_GuideComponent_C_InitializeNPEGuide::Role' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_InitializeNPEGuide, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NPE_GuideComponent_C_InitializeNPEGuide::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_InitializeNPEGuide, CallFunc_GetHWGameState_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_InitializeNPEGuide::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_InitializeNPEGuide, CallFunc_GetCurrentGamePhaseTag_ReturnValue) == 0x000020, "Member 'BP_NPE_GuideComponent_C_InitializeNPEGuide::CallFunc_GetCurrentGamePhaseTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_InitializeNPEGuide, CallFunc_HasTag_ReturnValue) == 0x000028, "Member 'BP_NPE_GuideComponent_C_InitializeNPEGuide::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAbort
// 0x0010 (0x0010 - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideAbort final
{
public:
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract;                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideAbort) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideAbort");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideAbort) == 0x000010, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideAbort");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbort, CallFunc_GetCurrentTract_Tract) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbort::CallFunc_GetCurrentTract_Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbort, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbort::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAbortTract
// 0x00C0 (0x00C0 - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideAbortTract final
{
public:
	class UBP_NPE_Guide_Tract_C*                  Tract;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x0020(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_Stage_C*                        CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideAbortTract) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideAbortTract");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideAbortTract) == 0x0000C0, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideAbortTract");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, Tract) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_RemoveItem_ReturnValue) == 0x00009C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009D, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00009E, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_Max_ReturnValue) == 0x0000B4, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAbortTract, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000B8, "Member 'BP_NPE_GuideComponent_C_NPEGuideAbortTract::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideAdvanceToNextStage
// 0x0158 (0x0158 - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage final
{
public:
	struct FGameplayTag                           NextStageTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWGameState*                           CallFunc_GetHWGameState_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_NPE_Guide_C>      K2Node_DynamicCast_AsBPI_NPE_Guide;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract;                    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               CallFunc_Get_Stage_Config_StageConfig;             // 0x0048(0x0070)(HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x00B8(0x0070)(HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0128(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage) == 0x000158, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, NextStageTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::NextStageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_GetHWGameState_ReturnValue) == 0x000020, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_GetHWGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, K2Node_DynamicCast_AsBPI_NPE_Guide) == 0x000028, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::K2Node_DynamicCast_AsBPI_NPE_Guide' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_GetCurrentTract_Tract) == 0x000040, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_GetCurrentTract_Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Get_Stage_Config_StageConfig) == 0x000048, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Get_Stage_Config_StageConfig' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000128, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_IsValid_ReturnValue) == 0x000144, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000145, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Array_Length_ReturnValue_1) == 0x00014C, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage, CallFunc_Less_IntInt_ReturnValue_1) == 0x000151, "Member 'BP_NPE_GuideComponent_C_NPEGuideAdvanceToNextStage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideBeginTract
// 0x0010 (0x0010 - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideBeginTract final
{
public:
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract;                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideBeginTract) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideBeginTract");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideBeginTract) == 0x000010, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideBeginTract");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideBeginTract, CallFunc_GetCurrentTract_Tract) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideBeginTract::CallFunc_GetCurrentTract_Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideBeginTract, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideBeginTract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideBeginTract, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_NPE_GuideComponent_C_NPEGuideBeginTract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideRestart
// 0x000C (0x000C - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideRestart final
{
public:
	struct FGameplayTag                           SkipToStage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	ECharacterRole                                Role;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideRestart) == 0x000004, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideRestart");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideRestart) == 0x00000C, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideRestart");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideRestart, SkipToStage) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideRestart::SkipToStage' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideRestart, Role) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideRestart::Role' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.NPEGuideTriggerStage
// 0x0158 (0x0158 - 0x0000)
struct BP_NPE_GuideComponent_C_NPEGuideTriggerStage final
{
public:
	struct FGameplayTag                           StageTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBackgroundStage;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_Stage_C*                        CallFunc_GetStage_Stage;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Guide_StageConfig               CallFunc_Get_Stage_Config_StageConfig;             // 0x0028(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract_1;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x00C8(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_NPEGuideTriggerStage");
static_assert(sizeof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage) == 0x000158, "Wrong size on BP_NPE_GuideComponent_C_NPEGuideTriggerStage");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, StageTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::StageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, IsBackgroundStage) == 0x000008, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::IsBackgroundStage' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_GetStage_Stage) == 0x000010, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_GetStage_Stage' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_GetCurrentTract_Tract) == 0x000020, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_GetCurrentTract_Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Get_Stage_Config_StageConfig) == 0x000028, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Get_Stage_Config_StageConfig' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_GetCurrentTract_Tract_1) == 0x0000B8, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_GetCurrentTract_Tract_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00013C, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Less_IntInt_ReturnValue) == 0x00013D, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000148, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_Array_AddUnique_ReturnValue) == 0x00014C, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_NPEGuideTriggerStage, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000150, "Member 'BP_NPE_GuideComponent_C_NPEGuideTriggerStage::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnCharacterPlayerStateChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged final
{
public:
	class AHWCharacter_Base*                      OwnerCharacter_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerState*                         NewPlayerState;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged) == 0x000010, "Wrong size on BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged, OwnerCharacter_0) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged::OwnerCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged, NewPlayerState) == 0x000008, "Member 'BP_NPE_GuideComponent_C_OnCharacterPlayerStateChanged::NewPlayerState' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnGameStateGamePhaseStarted
// 0x000C (0x000C - 0x0000)
struct BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted final
{
public:
	struct FGameplayTag                           NewPhase;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRestart_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted) == 0x000004, "Wrong alignment on BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted) == 0x00000C, "Wrong size on BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted, NewPhase) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted::NewPhase' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted, CallFunc_CanRestart_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted::CallFunc_CanRestart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted, CallFunc_HasTag_ReturnValue) == 0x000009, "Member 'BP_NPE_GuideComponent_C_OnGameStateGamePhaseStarted::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageCustomTrigger
// 0x0040 (0x0040 - 0x0000)
struct BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger final
{
public:
	struct FGameplayTag                           CustomTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_NPE_Trigger_Event>           Events;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NPE_Trigger_Event                   CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger) == 0x000040, "Wrong size on BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CustomTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CustomTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, Events) == 0x000008, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::Events' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_IsValid_ReturnValue_1) == 0x00001D, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger, CallFunc_IsValid_ReturnValue_2) == 0x00003C, "Member 'BP_NPE_GuideComponent_C_OnNPEStageCustomTrigger::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageEnded
// 0x00B0 (0x00B0 - 0x0000)
struct BP_NPE_GuideComponent_C_OnNPEStageEnded final
{
public:
	bool                                          WasFailure;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NewTract;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPE_Stage_C*                        Instigator;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         StageDepth;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Guide_StageConfig               CallFunc_Get_Stage_Config_StageConfig;             // 0x0030(0x0070)(HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetNextStageTag_NextStageTag;             // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnNPEStageEnded) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_OnNPEStageEnded");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnNPEStageEnded) == 0x0000B0, "Wrong size on BP_NPE_GuideComponent_C_OnNPEStageEnded");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, WasFailure) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::WasFailure' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, NewTract) == 0x000004, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::NewTract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, Instigator) == 0x000010, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::Instigator' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, StageDepth) == 0x000018, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::StageDepth' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_Get_Stage_Config_StageConfig) == 0x000030, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_Get_Stage_Config_StageConfig' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_GetNextStageTag_NextStageTag) == 0x0000A0, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_GetNextStageTag_NextStageTag' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x0000A9, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageEnded, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000AA, "Member 'BP_NPE_GuideComponent_C_OnNPEStageEnded::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageHUDEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_NPE_GuideComponent_C_OnNPEStageHUDEvent final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  HUDElementTags;                                    // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnNPEStageHUDEvent) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_OnNPEStageHUDEvent");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnNPEStageHUDEvent) == 0x000028, "Wrong size on BP_NPE_GuideComponent_C_OnNPEStageHUDEvent");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageHUDEvent, bShow) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnNPEStageHUDEvent::bShow' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageHUDEvent, HUDElementTags) == 0x000008, "Member 'BP_NPE_GuideComponent_C_OnNPEStageHUDEvent::HUDElementTags' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnNPEStageStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_NPE_GuideComponent_C_OnNPEStageStarted final
{
public:
	struct FGameplayTag                           StageTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnNPEStageStarted) == 0x000004, "Wrong alignment on BP_NPE_GuideComponent_C_OnNPEStageStarted");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnNPEStageStarted) == 0x000008, "Wrong size on BP_NPE_GuideComponent_C_OnNPEStageStarted");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnNPEStageStarted, StageTag) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnNPEStageStarted::StageTag' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnPlayerStateAbilitySystemActorChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged final
{
public:
	class AHWPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacterAbilitySystemActor*         NewASActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged) == 0x000010, "Wrong size on BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged, PlayerState) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged, NewASActor) == 0x000008, "Member 'BP_NPE_GuideComponent_C_OnPlayerStateAbilitySystemActorChanged::NewASActor' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.OnPlayerStateAssignedRoleChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged final
{
public:
	ECharacterRole                                AssignedRole;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRestart_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged) == 0x000001, "Wrong alignment on BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged");
static_assert(sizeof(BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged) == 0x000002, "Wrong size on BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged, AssignedRole) == 0x000000, "Member 'BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged::AssignedRole' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged, CallFunc_CanRestart_ReturnValue) == 0x000001, "Member 'BP_NPE_GuideComponent_C_OnPlayerStateAssignedRoleChanged::CallFunc_CanRestart_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_NPE_GuideComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_NPE_GuideComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_NPE_GuideComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_NPE_GuideComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_NPE_GuideComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_NPE_GuideComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NPE_GuideComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NPE_GuideComponent_C_ReceiveTick");
static_assert(sizeof(BP_NPE_GuideComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_NPE_GuideComponent_C_ReceiveTick");
static_assert(offsetof(BP_NPE_GuideComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NPE_GuideComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.SetTractByAssignedRole
// 0x0028 (0x0028 - 0x0000)
struct BP_NPE_GuideComponent_C_SetTractByAssignedRole final
{
public:
	ECharacterRole                                Role;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Map_Find_Value_1;                         // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_SetTractByAssignedRole) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_SetTractByAssignedRole");
static_assert(sizeof(BP_NPE_GuideComponent_C_SetTractByAssignedRole) == 0x000028, "Wrong size on BP_NPE_GuideComponent_C_SetTractByAssignedRole");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, Role) == 0x000000, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::Role' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_Map_Find_Value_1) == 0x000018, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_Map_Find_ReturnValue_1) == 0x000020, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_SetTractByAssignedRole, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_NPE_GuideComponent_C_SetTractByAssignedRole::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPE_GuideComponent.BP_NPE_GuideComponent_C.TriggerMatchPhaseChange
// 0x00A0 (0x00A0 - 0x0000)
struct BP_NPE_GuideComponent_C_TriggerMatchPhaseChange final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPE_Guide_Tract_C*                  CallFunc_GetCurrentTract_Tract;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWGameMode*                            CallFunc_GetHWGameMode_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPE_Guide_StageConfig               CallFunc_Array_Get_Item;                           // 0x0028(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange) == 0x000008, "Wrong alignment on BP_NPE_GuideComponent_C_TriggerMatchPhaseChange");
static_assert(sizeof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange) == 0x0000A0, "Wrong size on BP_NPE_GuideComponent_C_TriggerMatchPhaseChange");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_GetCurrentTract_Tract) == 0x000010, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_GetCurrentTract_Tract' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_GetHWGameMode_ReturnValue) == 0x000018, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_GetHWGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPE_GuideComponent_C_TriggerMatchPhaseChange, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000099, "Member 'BP_NPE_GuideComponent_C_TriggerMatchPhaseChange::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

}

