#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_SurrenderWidget

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Hemingway_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.DisplayResult
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_DisplayResult final
{
public:
	EHWVoteResult                                 Result;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWVoteResult                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	EHWVoteResult                                 Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0090(0x0018)()
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_DisplayResult) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_DisplayResult");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_DisplayResult) == 0x0000A8, "Wrong size on WBP_G_V2_SurrenderWidget_C_DisplayResult");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Result) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Result' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_struct_Variable) == 0x000004, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_struct_Variable_2) == 0x000014, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_struct_Variable_3) == 0x00001C, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_byte_Variable_1) == 0x000024, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_text_Variable) == 0x000028, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_text_Variable_1) == 0x000040, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_text_Variable_2) == 0x000058, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, Temp_text_Variable_3) == 0x000070, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, K2Node_Select_Default) == 0x000088, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_DisplayResult, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_G_V2_SurrenderWidget_C_DisplayResult::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.EvaluateSwitcherState
// 0x0038 (0x0038 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHasSurrenderVoted_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState) == 0x000038, "Wrong size on WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, Temp_bool_Variable) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, Temp_int_Variable) == 0x000004, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, Temp_int_Variable_1) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, Temp_int_Variable_2) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000020, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, CallFunc_GetHasSurrenderVoted_ReturnValue) == 0x000029, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::CallFunc_GetHasSurrenderVoted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, K2Node_Select_Default) == 0x00002C, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_G_V2_SurrenderWidget_C_EvaluateSwitcherState::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.ExecuteUbergraph_WBP_G_V2_SurrenderWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default_1;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget) == 0x000004, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget) == 0x000018, "Wrong size on WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, EntryPoint) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_bool_Variable) == 0x000004, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_byte_Variable) == 0x000006, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_int_Variable) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, CallFunc_Less_IntInt_ReturnValue_1) == 0x00000D, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, K2Node_Select_Default) == 0x00000E, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000F, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, Temp_byte_Variable_2) == 0x000015, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, K2Node_Select_Default_1) == 0x000016, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget, CallFunc_GetValidValue_ReturnValue) == 0x000017, "Member 'WBP_G_V2_SurrenderWidget_C_ExecuteUbergraph_WBP_G_V2_SurrenderWidget::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.OnPipWidgetAdded
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded final
{
public:
	class UHWSurrenderPipWidget*                  PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded) == 0x000010, "Wrong size on WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded, PipWidget) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded::PipWidget' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_OnPipWidgetAdded::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.OnPipWidgetRemoved
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved final
{
public:
	class UHWSurrenderPipWidget*                  PipWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved) == 0x000010, "Wrong size on WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved, PipWidget) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved::PipWidget' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved, CallFunc_RemoveChild_ReturnValue) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_OnPipWidgetRemoved::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.OnSurrenderDisplayToggled
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled) == 0x000001, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled) == 0x000001, "Wrong size on WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled, bDisplay) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_OnSurrenderDisplayToggled::bDisplay' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_SurrenderWidget_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.ProcessViewInput
// 0x0248 (0x0248 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_ProcessViewInput final
{
public:
	struct FGameplayTag                           InputTag;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	ETriggerEvent                                 TriggerEvent;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x0010(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00D0(0x00B8)()
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_ProcessViewInput");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput) == 0x000248, "Wrong size on WBP_G_V2_SurrenderWidget_C_ProcessViewInput");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, InputTag) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::InputTag' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, TriggerEvent) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::TriggerEvent' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, ReturnValue) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, CallFunc_Unhandled_ReturnValue) == 0x0000D0, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000188, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ProcessViewInput, CallFunc_Handled_ReturnValue) == 0x000190, "Member 'WBP_G_V2_SurrenderWidget_C_ProcessViewInput::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.UpdateTimerDisplay
// 0x0050 (0x0050 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay final
{
public:
	float                                         TimeRemaining;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay) == 0x000050, "Wrong size on WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, TimeRemaining) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, TotalTime) == 0x000004, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::TotalTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_SafeDivide_A_ImplicitCast) == 0x000030, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_SafeDivide_B_ImplicitCast) == 0x000038, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay, CallFunc_FTrunc_A_ImplicitCast) == 0x000048, "Member 'WBP_G_V2_SurrenderWidget_C_UpdateTimerDisplay::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.VoteNo
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_VoteNo final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_VoteNo) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_VoteNo");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_VoteNo) == 0x000018, "Wrong size on WBP_G_V2_SurrenderWidget_C_VoteNo");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteNo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_VoteNo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteNo, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_VoteNo::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteNo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_VoteNo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.VoteYes
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_VoteYes final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWPlayerController*                    K2Node_DynamicCast_AsHWPlayer_Controller;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_VoteYes) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_VoteYes");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_VoteYes) == 0x000018, "Wrong size on WBP_G_V2_SurrenderWidget_C_VoteYes");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteYes, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_VoteYes::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteYes, K2Node_DynamicCast_AsHWPlayer_Controller) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_VoteYes::K2Node_DynamicCast_AsHWPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_VoteYes, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_G_V2_SurrenderWidget_C_VoteYes::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.GetCustomInputMappingContext
// 0x0010 (0x0010 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext final
{
public:
	int32                                         MappingContextPriority;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingContext*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext) == 0x000008, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext) == 0x000010, "Wrong size on WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext, MappingContextPriority) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext::MappingContextPriority' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext, ReturnValue) == 0x000008, "Member 'WBP_G_V2_SurrenderWidget_C_GetCustomInputMappingContext::ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.IsExclusive
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_IsExclusive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_IsExclusive) == 0x000001, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_IsExclusive");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_IsExclusive) == 0x000001, "Wrong size on WBP_G_V2_SurrenderWidget_C_IsExclusive");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_IsExclusive, ReturnValue) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_IsExclusive::ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.ShouldOverrideAllowedInputCategories
// 0x0002 (0x0002 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories final
{
public:
	EHWAllowedInputCategory                       OutAllowedInputCategories;                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories) == 0x000001, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories) == 0x000002, "Wrong size on WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories, OutAllowedInputCategories) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories::OutAllowedInputCategories' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories, ReturnValue) == 0x000001, "Member 'WBP_G_V2_SurrenderWidget_C_ShouldOverrideAllowedInputCategories::ReturnValue' has a wrong offset!");

// Function WBP_G_V2_SurrenderWidget.WBP_G_V2_SurrenderWidget_C.ShouldOverrideAnalogNavigationEnabled
// 0x0002 (0x0002 - 0x0000)
struct WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled final
{
public:
	bool                                          bOutAnalogNavigationEnabled;                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled) == 0x000001, "Wrong alignment on WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled");
static_assert(sizeof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled) == 0x000002, "Wrong size on WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled, bOutAnalogNavigationEnabled) == 0x000000, "Member 'WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled::bOutAnalogNavigationEnabled' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled, ReturnValue) == 0x000001, "Member 'WBP_G_V2_SurrenderWidget_C_ShouldOverrideAnalogNavigationEnabled::ReturnValue' has a wrong offset!");

}

