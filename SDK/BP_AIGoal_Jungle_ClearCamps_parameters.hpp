#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Jungle_ClearCamps

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Jungle_ClearCamps.BP_AIGoal_Jungle_ClearCamps_C.CheckPreconditionsBP
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyJungleFarmAvailable_ReturnValue;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP) == 0x000010, "Wrong size on BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP, CallFunc_IsAnyJungleFarmAvailable_ReturnValue) == 0x000009, "Member 'BP_AIGoal_Jungle_ClearCamps_C_CheckPreconditionsBP::CallFunc_IsAnyJungleFarmAvailable_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Jungle_ClearCamps.BP_AIGoal_Jungle_ClearCamps_C.ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps
// 0x0110 (0x0110 - 0x0000)
struct BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0008(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0028(0x0020)()
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesFactoryHaveLivingBots_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOrderTeam_IsOrder;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0058(0x0020)()
	struct FGameplayTagRequirements               K2Node_MakeStruct_GameplayTagRequirements;         // 0x0078(0x0088)()
	TArray<class AHWBotFactory*>                  CallFunc_GetAllFactoriesByLane_outFactories;       // 0x0100(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps) == 0x000008, "Wrong alignment on BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps");
static_assert(sizeof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps) == 0x000110, "Wrong size on BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, EntryPoint) == 0x000000, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, Temp_bool_Variable) == 0x000004, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, Temp_struct_Variable) == 0x000008, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, Temp_struct_Variable_1) == 0x000028, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, CallFunc_GetCharacter_ReturnValue) == 0x000048, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, CallFunc_DoesFactoryHaveLivingBots_ReturnValue) == 0x000050, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::CallFunc_DoesFactoryHaveLivingBots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, CallFunc_IsOrderTeam_IsOrder) == 0x000051, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::CallFunc_IsOrderTeam_IsOrder' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, K2Node_Select_Default) == 0x000058, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, K2Node_MakeStruct_GameplayTagRequirements) == 0x000078, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::K2Node_MakeStruct_GameplayTagRequirements' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps, CallFunc_GetAllFactoriesByLane_outFactories) == 0x000100, "Member 'BP_AIGoal_Jungle_ClearCamps_C_ExecuteUbergraph_BP_AIGoal_Jungle_ClearCamps::CallFunc_GetAllFactoriesByLane_outFactories' has a wrong offset!");

// Function BP_AIGoal_Jungle_ClearCamps.BP_AIGoal_Jungle_ClearCamps_C.IsAnyJungleFarmAvailable
// 0x0150 (0x0150 - 0x0000)
struct BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0010(0x0020)()
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      K2Node_DynamicCast_AsHWCharacter_Base;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0048(0x0020)()
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0068(0x0001)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0080(0x0020)()
	struct FGameplayTagRequirements               K2Node_MakeStruct_GameplayTagRequirements;         // 0x00A0(0x0088)()
	TArray<class AHWBotFactory*>                  CallFunc_GetAllFactoriesByLane_outFactories;       // 0x0128(0x0010)(ReferenceParm)
	class AHWBotFactory*                          CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable) == 0x000008, "Wrong alignment on BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable");
static_assert(sizeof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable) == 0x000150, "Wrong size on BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, InController) == 0x000000, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, Temp_struct_Variable) == 0x000010, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, K2Node_DynamicCast_AsHWCharacter_Base) == 0x000038, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::K2Node_DynamicCast_AsHWCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, Temp_struct_Variable_1) == 0x000048, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_GetGenericTeamId_ReturnValue) == 0x000068, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, Temp_bool_Variable) == 0x00007C, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, K2Node_Select_Default) == 0x000080, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, K2Node_MakeStruct_GameplayTagRequirements) == 0x0000A0, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::K2Node_MakeStruct_GameplayTagRequirements' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_GetAllFactoriesByLane_outFactories) == 0x000128, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_GetAllFactoriesByLane_outFactories' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_IsValid_ReturnValue) == 0x000144, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Less_IntInt_ReturnValue) == 0x000145, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable, CallFunc_Greater_IntInt_ReturnValue) == 0x00014C, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsAnyJungleFarmAvailable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Jungle_ClearCamps.BP_AIGoal_Jungle_ClearCamps_C.IsOrderTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam final
{
public:
	bool                                          IsOrder;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetGenericTeamId_ReturnValue;             // 0x0010(0x0001)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam) == 0x000008, "Wrong alignment on BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam");
static_assert(sizeof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam) == 0x000018, "Wrong size on BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam, IsOrder) == 0x000000, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam::IsOrder' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam, CallFunc_GetCharacter_ReturnValue) == 0x000008, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam, CallFunc_GetGenericTeamId_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam::CallFunc_GetGenericTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_AIGoal_Jungle_ClearCamps_C_IsOrderTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Jungle_ClearCamps.BP_AIGoal_Jungle_ClearCamps_C.PickJungle
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AIGoal_Jungle_ClearCamps_C_PickJungle final
{
public:
	TScriptInterface<class IBPI_AI_C>             K2Node_DynamicCast_AsBPI_AI;                       // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AI_C>             K2Node_DynamicCast_AsBPI_AI_1;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATriggerVolume>          CallFunc_GetLeashVolume_LeashVolume;               // 0x0030(0x0028)(HasGetValueTypeHash)
	double                                        CallFunc_GetLeashRadius_LeashRadius;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATriggerVolume*                         K2Node_DynamicCast_AsTrigger_Volume;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWBotFactory*                          CallFunc_GetBestJungleObjective_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatBlackboardVariable_inValue_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle) == 0x000008, "Wrong alignment on BP_AIGoal_Jungle_ClearCamps_C_PickJungle");
static_assert(sizeof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle) == 0x0000B0, "Wrong size on BP_AIGoal_Jungle_ClearCamps_C_PickJungle");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_AsBPI_AI) == 0x000000, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_AsBPI_AI' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_AsBPI_AI_1) == 0x000018, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_AsBPI_AI_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_GetLeashVolume_LeashVolume) == 0x000030, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_GetLeashVolume_LeashVolume' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_GetLeashRadius_LeashRadius) == 0x000058, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_GetLeashRadius_LeashRadius' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000060, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_AsTrigger_Volume) == 0x000068, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_AsTrigger_Volume' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000081, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_GetCharacter_ReturnValue) == 0x000090, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_GetBestJungleObjective_ReturnValue) == 0x000098, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_GetBestJungleObjective_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_SelectFloat_B_ImplicitCast) == 0x0000A0, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Jungle_ClearCamps_C_PickJungle, CallFunc_SetFloatBlackboardVariable_inValue_ImplicitCast) == 0x0000A8, "Member 'BP_AIGoal_Jungle_ClearCamps_C_PickJungle::CallFunc_SetFloatBlackboardVariable_inValue_ImplicitCast' has a wrong offset!");

}

