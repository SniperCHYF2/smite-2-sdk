#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapButton

#include "Basic.hpp"

#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MapButton.WBP_MapButton_C
// 0x0038 (0x0608 - 0x05D0)
class UWBP_MapButton_C final : public URHMapButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ActiveFrame;                                       // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HitTarget;                                         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AsyncIcon_C*                       MapImage;                                          // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MapNameDisplay;                                    // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MapNameText;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SelectionStroke;                                   // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__Button_195_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_195_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_MapButton(int32 EntryPoint);
	void GamepadHover();
	void GamepadUnhover();
	bool NavigateConfirm();
	void SetMap(class FName InMapName);
	void SetSelected(bool bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MapButton_C">();
	}
	static class UWBP_MapButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MapButton_C>();
	}
};
static_assert(alignof(UWBP_MapButton_C) == 0x000008, "Wrong alignment on UWBP_MapButton_C");
static_assert(sizeof(UWBP_MapButton_C) == 0x000608, "Wrong size on UWBP_MapButton_C");
static_assert(offsetof(UWBP_MapButton_C, UberGraphFrame) == 0x0005D0, "Member 'UWBP_MapButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, ActiveFrame) == 0x0005D8, "Member 'UWBP_MapButton_C::ActiveFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, HitTarget) == 0x0005E0, "Member 'UWBP_MapButton_C::HitTarget' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, MapImage) == 0x0005E8, "Member 'UWBP_MapButton_C::MapImage' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, MapNameDisplay) == 0x0005F0, "Member 'UWBP_MapButton_C::MapNameDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, MapNameText) == 0x0005F8, "Member 'UWBP_MapButton_C::MapNameText' has a wrong offset!");
static_assert(offsetof(UWBP_MapButton_C, SelectionStroke) == 0x000600, "Member 'UWBP_MapButton_C::SelectionStroke' has a wrong offset!");

}

