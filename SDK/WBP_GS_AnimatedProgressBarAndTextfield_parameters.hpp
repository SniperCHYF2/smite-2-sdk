#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GS_AnimatedProgressBarAndTextfield

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield
// 0x0008 (0x0008 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield) == 0x000004, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield) == 0x000008, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield, EntryPoint) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_ExecuteUbergraph_WBP_GS_AnimatedProgressBarAndTextfield::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.InitializeWidget
// 0x0078 (0x0078 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget) == 0x000008, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget) == 0x000078, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_struct_Variable) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_bool_Variable) == 0x000010, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, Temp_bool_Variable_1) == 0x000048, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, K2Node_Select_Default) == 0x000058, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget, K2Node_Select_Default_1) == 0x000068, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_InitializeWidget::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.OnProgressBarPercentChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged) == 0x000004, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged) == 0x000004, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged, InPercent) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_OnProgressBarPercentChanged::InPercent' has a wrong offset!");

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct) == 0x000001, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.SetGainedProgressDisplay
// 0x0028 (0x0028 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay final
{
public:
	int32                                         GainedProgress;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShow;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay) == 0x000008, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay) == 0x000028, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, GainedProgress) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::GainedProgress' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, bShow) == 0x000004, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::bShow' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, Temp_bool_Variable) == 0x000005, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, Temp_byte_Variable) == 0x000006, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay, K2Node_Select_Default) == 0x000020, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetGainedProgressDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GS_AnimatedProgressBarAndTextfield.WBP_GS_AnimatedProgressBarAndTextfield_C.SetProgressDisplay
// 0x0058 (0x0058 - 0x0000)
struct WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay final
{
public:
	class FText                                   DisplayText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bShow;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay) == 0x000008, "Wrong alignment on WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay");
static_assert(sizeof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay) == 0x000058, "Wrong size on WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, DisplayText) == 0x000000, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::DisplayText' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, bShow) == 0x000018, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::bShow' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, Temp_bool_Variable) == 0x000019, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, Temp_byte_Variable) == 0x00001A, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, Temp_byte_Variable_1) == 0x00001B, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, K2Node_Select_Default) == 0x00001C, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000020, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, K2Node_MakeStruct_Margin) == 0x000030, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay, K2Node_MakeStruct_Left_ImplicitCast) == 0x000050, "Member 'WBP_GS_AnimatedProgressBarAndTextfield_C_SetProgressDisplay::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

}

