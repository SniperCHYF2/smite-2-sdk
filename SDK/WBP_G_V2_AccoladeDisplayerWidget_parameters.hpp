#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_AccoladeDisplayerWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_AccoladeDisplayerWidget.WBP_G_V2_AccoladeDisplayerWidget_C.ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget
// 0x0090 (0x0090 - 0x0000)
struct WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0018(0x0020)(NoDestructor)
	struct FAnchorData                            K2Node_MakeStruct_AnchorData;                      // 0x0038(0x0040)(NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_G_V2_Accolade_Multikill_Double_C*  CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget) == 0x000008, "Wrong alignment on WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget");
static_assert(sizeof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget) == 0x000090, "Wrong size on WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, EntryPoint) == 0x000000, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, K2Node_MakeStruct_Margin) == 0x000004, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, K2Node_MakeStruct_Anchors) == 0x000018, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, K2Node_MakeStruct_AnchorData) == 0x000038, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::K2Node_MakeStruct_AnchorData' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, K2Node_Event_IsDesignTime) == 0x000078, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, CallFunc_Create_ReturnValue) == 0x000080, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000088, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_ExecuteUbergraph_WBP_G_V2_AccoladeDisplayerWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_AccoladeDisplayerWidget.WBP_G_V2_AccoladeDisplayerWidget_C.InitializeWidget
// 0x0014 (0x0014 - 0x0000)
struct WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget final
{
public:
	TDelegate<void(bool bIsDisplayingHealthBar)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget) == 0x000004, "Wrong alignment on WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget");
static_assert(sizeof(WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget) == 0x000014, "Wrong size on WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_InitializeWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_AccoladeDisplayerWidget.WBP_G_V2_AccoladeDisplayerWidget_C.OnObjectiveHealthBarUpdated
// 0x0018 (0x0018 - 0x0000)
struct WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated final
{
public:
	bool                                          bIsDisplayingHealthBar;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated) == 0x000008, "Wrong alignment on WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated");
static_assert(sizeof(WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated) == 0x000018, "Wrong size on WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated, bIsDisplayingHealthBar) == 0x000000, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated::bIsDisplayingHealthBar' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_OnObjectiveHealthBarUpdated::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_G_V2_AccoladeDisplayerWidget.WBP_G_V2_AccoladeDisplayerWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct");
static_assert(sizeof(WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_G_V2_AccoladeDisplayerWidget.WBP_G_V2_AccoladeDisplayerWidget_C.UninitializeWidget
// 0x0014 (0x0014 - 0x0000)
struct WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsDisplayingHealthBar)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget) == 0x000004, "Wrong alignment on WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget");
static_assert(sizeof(WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget) == 0x000014, "Wrong size on WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_G_V2_AccoladeDisplayerWidget_C_UninitializeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

