#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BoxStroke

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_BoxStroke.WBP_BoxStroke_C.ApplyStrokeSize
// 0x0040 (0x0040 - 0x0000)
struct WBP_BoxStroke_C_ApplyStrokeSize final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxStroke_C_ApplyStrokeSize) == 0x000008, "Wrong alignment on WBP_BoxStroke_C_ApplyStrokeSize");
static_assert(sizeof(WBP_BoxStroke_C_ApplyStrokeSize) == 0x000040, "Wrong size on WBP_BoxStroke_C_ApplyStrokeSize");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000010, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, CallFunc_SlotAsSizeBoxSlot_ReturnValue_1) == 0x000018, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::CallFunc_SlotAsSizeBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000030, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000034, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, K2Node_MakeStruct_Top_ImplicitCast) == 0x000038, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ApplyStrokeSize, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x00003C, "Member 'WBP_BoxStroke_C_ApplyStrokeSize::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_BoxStroke.WBP_BoxStroke_C.ExecuteUbergraph_WBP_BoxStroke
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke) == 0x000004, "Wrong alignment on WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke");
static_assert(sizeof(WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke) == 0x000008, "Wrong size on WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke");
static_assert(offsetof(WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke, EntryPoint) == 0x000000, "Member 'WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_BoxStroke_C_ExecuteUbergraph_WBP_BoxStroke::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_BoxStroke.WBP_BoxStroke_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BoxStroke_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxStroke_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BoxStroke_C_PreConstruct");
static_assert(sizeof(WBP_BoxStroke_C_PreConstruct) == 0x000001, "Wrong size on WBP_BoxStroke_C_PreConstruct");
static_assert(offsetof(WBP_BoxStroke_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BoxStroke_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BoxStroke.WBP_BoxStroke_C.SetStrokeColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_BoxStroke_C_SetStrokeColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxStroke_C_SetStrokeColor) == 0x000004, "Wrong alignment on WBP_BoxStroke_C_SetStrokeColor");
static_assert(sizeof(WBP_BoxStroke_C_SetStrokeColor) == 0x000010, "Wrong size on WBP_BoxStroke_C_SetStrokeColor");
static_assert(offsetof(WBP_BoxStroke_C_SetStrokeColor, NewColor) == 0x000000, "Member 'WBP_BoxStroke_C_SetStrokeColor::NewColor' has a wrong offset!");

// Function WBP_BoxStroke.WBP_BoxStroke_C.SetStrokeSize
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxStroke_C_SetStrokeSize final
{
public:
	double                                        NewSize;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxStroke_C_SetStrokeSize) == 0x000008, "Wrong alignment on WBP_BoxStroke_C_SetStrokeSize");
static_assert(sizeof(WBP_BoxStroke_C_SetStrokeSize) == 0x000008, "Wrong size on WBP_BoxStroke_C_SetStrokeSize");
static_assert(offsetof(WBP_BoxStroke_C_SetStrokeSize, NewSize) == 0x000000, "Member 'WBP_BoxStroke_C_SetStrokeSize::NewSize' has a wrong offset!");

}

