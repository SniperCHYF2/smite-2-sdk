#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIGoal_Farm_TravelToLane

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.CalculateWeight
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_CalculateWeight final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameMode*                            GameMode;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostileThreatAvailable_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCurrentMatchPhaseTag_ReturnValue;      // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWGameMode*                            CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_CalculateWeight");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight) == 0x000038, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_CalculateWeight");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, InController) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, GameMode) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::GameMode' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_IsHostileThreatAvailable_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_IsHostileThreatAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_GetCurrentMatchPhaseTag_ReturnValue) == 0x00001C, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_GetCurrentMatchPhaseTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_MatchesTag_ReturnValue) == 0x000024, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CalculateWeight, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Farm_TravelToLane_C_CalculateWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.CheckForMinions
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_CheckForMinions final
{
public:
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLaneID_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetNextLaneObjectiveToDefend_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_CheckForMinions) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_CheckForMinions");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_CheckForMinions) == 0x000018, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_CheckForMinions");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CheckForMinions, CallFunc_GetCharacter_ReturnValue) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_CheckForMinions::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CheckForMinions, CallFunc_GetLaneID_ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_CheckForMinions::CallFunc_GetLaneID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CheckForMinions, CallFunc_GetNextLaneObjectiveToDefend_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_CheckForMinions::CallFunc_GetNextLaneObjectiveToDefend_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.CheckPreconditionsBP
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP final
{
public:
	class AHWAIController*                        InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP) == 0x000010, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP, InController) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP::InController' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP, ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_CheckPreconditionsBP::ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane
// 0x0028 (0x0028 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsHWAbility_Jump;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane) == 0x000028, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, EntryPoint) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, K2Node_ClassDynamicCast_AsHWAbility_Jump) == 0x000018, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::K2Node_ClassDynamicCast_AsHWAbility_Jump' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000024, "Member 'BP_AIGoal_Farm_TravelToLane_C_ExecuteUbergraph_BP_AIGoal_Farm_TravelToLane::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.IsAheadOfMinionWave
// 0x0058 (0x0058 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave final
{
public:
	bool                                          IsAhead;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWWaypoint*                            Waypoint;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      Bot;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGodBotInhandRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLaneID_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGodBotAheadOfWave_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHWWaypoint*                            CallFunc_FindLaneWaypoint_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsGodBotAheadOfWave_AheadByAmount_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave) == 0x000058, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, IsAhead) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::IsAhead' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, Waypoint) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::Waypoint' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, Bot) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::Bot' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_GetCharacter_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_GetGodBotInhandRange_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_GetGodBotInhandRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000024, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_GetLaneID_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_GetLaneID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_IsGodBotAheadOfWave_ReturnValue) == 0x000038, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_IsGodBotAheadOfWave_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_FindLaneWaypoint_ReturnValue) == 0x000040, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_FindLaneWaypoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave, CallFunc_IsGodBotAheadOfWave_AheadByAmount_ImplicitCast) == 0x000050, "Member 'BP_AIGoal_Farm_TravelToLane_C_IsAheadOfMinionWave::CallFunc_IsGodBotAheadOfWave_AheadByAmount_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.JumpTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_JumpTimer final
{
public:
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_JumpTimer) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_JumpTimer");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_JumpTimer) == 0x000010, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_JumpTimer");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_JumpTimer, CallFunc_RandomFloat_ReturnValue) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_JumpTimer::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_JumpTimer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_JumpTimer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.StartRandomJumpTimer
// 0x0018 (0x0018 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer) == 0x000018, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_StartRandomJumpTimer::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_AIGoal_Farm_TravelToLane.BP_AIGoal_Farm_TravelToLane_C.TryJump
// 0x0038 (0x0038 - 0x0000)
struct BP_AIGoal_Farm_TravelToLane_C_TryJump final
{
public:
	TArray<struct FGameplayAbilitySpecHandle>     JumpAbilitySpecHandles;                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UHWGameplayAbility*                     JumpAbility;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCharacter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponent_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHWCharacter_Base*                      CallFunc_GetCurrentThreat_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIGoal_Farm_TravelToLane_C_TryJump) == 0x000008, "Wrong alignment on BP_AIGoal_Farm_TravelToLane_C_TryJump");
static_assert(sizeof(BP_AIGoal_Farm_TravelToLane_C_TryJump) == 0x000038, "Wrong size on BP_AIGoal_Farm_TravelToLane_C_TryJump");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, JumpAbilitySpecHandles) == 0x000000, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::JumpAbilitySpecHandles' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, JumpAbility) == 0x000010, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::JumpAbility' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, CallFunc_GetCharacter_ReturnValue) == 0x000018, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, CallFunc_GetHWAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::CallFunc_GetHWAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, CallFunc_GetCurrentThreat_ReturnValue) == 0x000028, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::CallFunc_GetCurrentThreat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000030, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIGoal_Farm_TravelToLane_C_TryJump, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_AIGoal_Farm_TravelToLane_C_TryJump::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

