#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_Skin_ColorVariantPip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_S_Skin_ColorVariantPip.WBP_S_Skin_ColorVariantPip_C.ExecuteUbergraph_WBP_S_Skin_ColorVariantPip
// 0x0004 (0x0004 - 0x0000)
struct WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip) == 0x000004, "Wrong alignment on WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip");
static_assert(sizeof(WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip) == 0x000004, "Wrong size on WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip, EntryPoint) == 0x000000, "Member 'WBP_S_Skin_ColorVariantPip_C_ExecuteUbergraph_WBP_S_Skin_ColorVariantPip::EntryPoint' has a wrong offset!");

// Function WBP_S_Skin_ColorVariantPip.WBP_S_Skin_ColorVariantPip_C.OnDisplayItem
// 0x0030 (0x0030 - 0x0000)
struct WBP_S_Skin_ColorVariantPip_C_OnDisplayItem final
{
public:
	class UHWInventoryItem*                       Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisplayedItemOwned_ReturnValue;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconInfo*                              CallFunc_GetIconInfoByTag_OutIcon;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIconInfoByTag_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisplayedItemOwned_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem) == 0x000008, "Wrong alignment on WBP_S_Skin_ColorVariantPip_C_OnDisplayItem");
static_assert(sizeof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem) == 0x000030, "Wrong size on WBP_S_Skin_ColorVariantPip_C_OnDisplayItem");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Item) == 0x000000, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_bool_Variable) == 0x000008, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_byte_Variable) == 0x000009, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, Temp_byte_Variable_3) == 0x00000D, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, CallFunc_IsDisplayedItemOwned_ReturnValue) == 0x00000E, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::CallFunc_IsDisplayedItemOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, K2Node_Select_Default) == 0x00000F, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, CallFunc_GetIconInfoByTag_OutIcon) == 0x000020, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::CallFunc_GetIconInfoByTag_OutIcon' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, CallFunc_GetIconInfoByTag_ReturnValue) == 0x000028, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::CallFunc_GetIconInfoByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, CallFunc_IsDisplayedItemOwned_ReturnValue_1) == 0x000029, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::CallFunc_IsDisplayedItemOwned_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnDisplayItem, K2Node_Select_Default_1) == 0x00002A, "Member 'WBP_S_Skin_ColorVariantPip_C_OnDisplayItem::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_S_Skin_ColorVariantPip.WBP_S_Skin_ColorVariantPip_C.OnSelectedStateChanged
// 0x0005 (0x0005 - 0x0000)
struct WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged) == 0x000001, "Wrong alignment on WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged");
static_assert(sizeof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged) == 0x000005, "Wrong size on WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged, bIsSelected) == 0x000000, "Member 'WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged::bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged, Temp_byte_Variable) == 0x000002, "Member 'WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged, K2Node_Select_Default) == 0x000004, "Member 'WBP_S_Skin_ColorVariantPip_C_OnSelectedStateChanged::K2Node_Select_Default' has a wrong offset!");

}

