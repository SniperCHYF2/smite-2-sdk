#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickPlay

#include "Basic.hpp"

#include "WBP_QuickPlay_classes.hpp"
#include "WBP_QuickPlay_parameters.hpp"


namespace SDK
{

// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckCustomMatchEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::CheckCustomMatchEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "CheckCustomMatchEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckPracticeQueuesStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::CheckPracticeQueuesStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "CheckPracticeQueuesStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.CheckQueuesItemOwnershipRequirement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::CheckQueuesItemOwnershipRequirement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "CheckQueuesItemOwnershipRequirement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.CreateCustomMatch
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::CreateCustomMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "CreateCustomMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.CreatePracticeMatch
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::CreatePracticeMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "CreatePracticeMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.EnterArenaSoloNPE
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::EnterArenaSoloNPE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "EnterArenaSoloNPE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.EnterArenaTutorial
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::EnterArenaTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "EnterArenaTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.EnterConquestTutorial
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::EnterConquestTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "EnterConquestTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.ExecuteUbergraph_WBP_QuickPlay
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::ExecuteUbergraph_WBP_QuickPlay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "ExecuteUbergraph_WBP_QuickPlay");

	Params::WBP_QuickPlay_C_ExecuteUbergraph_WBP_QuickPlay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.GoToLastScreen
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::GoToLastScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "GoToLastScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.GoToQueueScreen
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::GoToQueueScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "GoToQueueScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleCustomSearchTriggered
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::HandleCustomSearchTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleCustomSearchTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleCycleBumpers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNext                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleCycleBumpers(bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleCycleBumpers");

	Params::WBP_QuickPlay_C_HandleCycleBumpers Parms{};

	Parms.bNext = bNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleGameModeHovered(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleGameModeHovered");

	Params::WBP_QuickPlay_C_HandleGameModeHovered Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    QueueId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleGameModeSelected(const class FString& QueueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleGameModeSelected");

	Params::WBP_QuickPlay_C_HandleGameModeSelected Parms{};

	Parms.QueueId = std::move(QueueId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleGameModeUnhovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleGameModeUnhovered(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleGameModeUnhovered");

	Params::WBP_QuickPlay_C_HandleGameModeUnhovered Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleInputModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERH_INPUT_STATE                         InputMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleInputModeChanged(ERH_INPUT_STATE InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleInputModeChanged");

	Params::WBP_QuickPlay_C_HandleInputModeChanged Parms{};

	Parms.InputMode = InputMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleOnCustomSectionPopulated
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class URHWidget*>&         Buttons                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_QuickPlay_C::HandleOnCustomSectionPopulated(const TArray<class URHWidget*>& Buttons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleOnCustomSectionPopulated");

	Params::WBP_QuickPlay_C_HandleOnCustomSectionPopulated Parms{};

	Parms.Buttons = std::move(Buttons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleOnQueueSectionPopulated
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UWBP_QuickPlay_QueueButton_C*>&QueueButtons                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_QuickPlay_C::HandleOnQueueSectionPopulated(const TArray<class UWBP_QuickPlay_QueueButton_C*>& QueueButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleOnQueueSectionPopulated");

	Params::WBP_QuickPlay_C_HandleOnQueueSectionPopulated Parms{};

	Parms.QueueButtons = std::move(QueueButtons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleQueueErrorStateChange
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::HandleQueueErrorStateChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleQueueErrorStateChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleRefreshCustomBrowserTriggered
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::HandleRefreshCustomBrowserTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleRefreshCustomBrowserTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleRegionSelectRequested
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForced                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleRegionSelectRequested(bool bForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleRegionSelectRequested");

	Params::WBP_QuickPlay_C_HandleRegionSelectRequested Parms{};

	Parms.bForced = bForced;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.HandleSpecialQueueHoverEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SpecialQueue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bIsHovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::HandleSpecialQueueHoverEvent(const class FString& SpecialQueue, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "HandleSpecialQueueHoverEvent");

	Params::WBP_QuickPlay_C_HandleSpecialQueueHoverEvent Parms{};

	Parms.SpecialQueue = std::move(SpecialQueue);
	Parms.bIsHovered = bIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.InitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::InitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "InitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.InitializeWidgetNavigation
// (Event, Public, BlueprintEvent)

void UWBP_QuickPlay_C::InitializeWidgetNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "InitializeWidgetNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.NavBack
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::NavBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "NavBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.NavigateBack
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_QuickPlay_C::NavigateBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "NavigateBack");

	Params::WBP_QuickPlay_C_NavigateBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnBackButtonClicked
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnBackButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnBrowserResultsUpdated_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::OnBrowserResultsUpdated_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnBrowserResultsUpdated_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnControlQueuePermissionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    CanControl                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::OnControlQueuePermissionChanged(bool CanControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnControlQueuePermissionChanged");

	Params::WBP_QuickPlay_C_OnControlQueuePermissionChanged Parms{};

	Parms.CanControl = CanControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnHide
// (Event, Public, BlueprintEvent)

void UWBP_QuickPlay_C::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_QuickPlay_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnKeyDown");

	Params::WBP_QuickPlay_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_QuickPlay_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnKeyUp");

	Params::WBP_QuickPlay_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnQueuePermissionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    CanQueue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::OnQueuePermissionChanged(bool CanQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnQueuePermissionChanged");

	Params::WBP_QuickPlay_C_OnQueuePermissionChanged Parms{};

	Parms.CanQueue = CanQueue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnRegionRequested
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::OnRegionRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnRegionRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnRegionSelected
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::OnRegionSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnRegionSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnRegionSelectEntriesCreated
// (BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::OnRegionSelectEntriesCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnRegionSelectEntriesCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.OnShown
// (Event, Public, BlueprintEvent)

void UWBP_QuickPlay_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.ReconcileGameModeButtonEnabling
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::ReconcileGameModeButtonEnabling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "ReconcileGameModeButtonEnabling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.ResetQueueSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::ResetQueueSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "ResetQueueSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.SetDefaultFocusForQueues
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::SetDefaultFocusForQueues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "SetDefaultFocusForQueues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.Setup Button Navigation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::Setup_Button_Navigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "Setup Button Navigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.SetupQueueButtons
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::SetupQueueButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "SetupQueueButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.SwitchFocusGroupToScreen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ScreenToSwitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::SwitchFocusGroupToScreen(class UWidget* ScreenToSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "SwitchFocusGroupToScreen");

	Params::WBP_QuickPlay_C_SwitchFocusGroupToScreen Parms{};

	Parms.ScreenToSwitch = ScreenToSwitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.UpdatePartyStatusForQueues
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_QuickPlay_C::UpdatePartyStatusForQueues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "UpdatePartyStatusForQueues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_QuickPlay.WBP_QuickPlay_C.IsSelectedRegionValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_QuickPlay_C::IsSelectedRegionValid(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_QuickPlay_C", "IsSelectedRegionValid");

	Params::WBP_QuickPlay_C_IsSelectedRegionValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

