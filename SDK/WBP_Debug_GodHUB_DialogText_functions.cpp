#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Debug_GodHUB_DialogText

#include "Basic.hpp"

#include "WBP_Debug_GodHUB_DialogText_classes.hpp"
#include "WBP_Debug_GodHUB_DialogText_parameters.hpp"


namespace SDK
{

// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.BndEvt__WBP_GodDebugErrorText_ClearErrorText_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_Debug_GodHUB_DialogText_C::BndEvt__WBP_GodDebugErrorText_ClearErrorText_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_GodHUB_DialogText_C", "BndEvt__WBP_GodDebugErrorText_ClearErrorText_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.ExecuteUbergraph_WBP_Debug_GodHUB_DialogText
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Debug_GodHUB_DialogText_C::ExecuteUbergraph_WBP_Debug_GodHUB_DialogText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_GodHUB_DialogText_C", "ExecuteUbergraph_WBP_Debug_GodHUB_DialogText");

	Params::WBP_Debug_GodHUB_DialogText_C_ExecuteUbergraph_WBP_Debug_GodHUB_DialogText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.Get_Timer_Visibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWBP_Debug_GodHUB_DialogText_C::Get_Timer_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_GodHUB_DialogText_C", "Get_Timer_Visibility");

	Params::WBP_Debug_GodHUB_DialogText_C_Get_Timer_Visibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.GetColorAndOpacity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateColor UWBP_Debug_GodHUB_DialogText_C::GetColorAndOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_GodHUB_DialogText_C", "GetColorAndOpacity");

	Params::WBP_Debug_GodHUB_DialogText_C_GetColorAndOpacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Debug_GodHUB_DialogText.WBP_Debug_GodHUB_DialogText_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Debug_GodHUB_DialogText_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_GodHUB_DialogText_C", "Tick");

	Params::WBP_Debug_GodHUB_DialogText_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

