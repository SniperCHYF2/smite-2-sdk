#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ButtonSlot_Cosmetic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RallyHereStart_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ButtonSlot_Cosmetic.WBP_ButtonSlot_Cosmetic_C
// 0x0118 (0x06D0 - 0x05B8)
class UWBP_ButtonSlot_Cosmetic_C final : public URHWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       hoverNoZoom;                                       // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnSelect;                                          // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HueShiftRed;                                       // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ActiveFrame;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ActiveFrame_Locked;                                // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BaseColorWrapper;                                  // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BaseStroke;                                        // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ButtonContent;                                     // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClickFill;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedFrame;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientFill;                                      // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientFillLight;                                 // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                HighlightColorWrapper;                             // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HighlightStroke;                                   // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HitTarget;                                         // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedDimmer;                                      // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockIcon;                                          // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectedFrame;                                     // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SelectedFrameSwitcher;                             // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 T_BG_Black;                                        // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 T_BG_Stone;                                        // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnBtnClicked;                                      // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool IsGamepad)> OnBtnHovered;                                     // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnBtnUnhovered;                                    // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsDisable;                                        // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TintColor;                                         // 0x06A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bColorOverride;                                    // 0x06B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ClickBtnSlotCosmeticSFX;                           // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                HoverBtnSlotCosmeticSFX;                           // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          BP_IsActive;                                       // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__HitTarget_K2Node_ComponentBoundEvent_4_OnButtonReleasedEvent__DelegateSignature();
	void CallButtonHover();
	void CallButtonUnhover();
	void Construct();
	void DisableButton(bool bShouldDisable);
	void Event_Display_Equipped(bool IsEquipped);
	void Event_Display_Selected(bool IsSelected);
	void ExecuteUbergraph_WBP_ButtonSlot_Cosmetic(int32 EntryPoint);
	void GamepadHover();
	void GamepadUnhover();
	bool NavigateConfirm();
	void OnGamepadConfirmed();
	void OnHoveredLogic(bool IsGamepad);
	void OverrideColor(const struct FLinearColor& New_Base_Color, const struct FLinearColor& New_Highlight_Color);
	void PlayHoverNoZoom();
	void PreConstruct(bool IsDesignTime);
	void RestoreDefaultColor();
	void ReverseHoverNoZoom();
	void Set_Tint(const struct FLinearColor& BaseColor, const struct FLinearColor& HighlightColor);
	void SetIsActiveState(bool bIsActive_0);
	void SetIsLocked(bool IsLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ButtonSlot_Cosmetic_C">();
	}
	static class UWBP_ButtonSlot_Cosmetic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ButtonSlot_Cosmetic_C>();
	}
};
static_assert(alignof(UWBP_ButtonSlot_Cosmetic_C) == 0x000008, "Wrong alignment on UWBP_ButtonSlot_Cosmetic_C");
static_assert(sizeof(UWBP_ButtonSlot_Cosmetic_C) == 0x0006D0, "Wrong size on UWBP_ButtonSlot_Cosmetic_C");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, UberGraphFrame) == 0x0005B8, "Member 'UWBP_ButtonSlot_Cosmetic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, hoverNoZoom) == 0x0005C0, "Member 'UWBP_ButtonSlot_Cosmetic_C::hoverNoZoom' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, OnSelect) == 0x0005C8, "Member 'UWBP_ButtonSlot_Cosmetic_C::OnSelect' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, HueShiftRed) == 0x0005D0, "Member 'UWBP_ButtonSlot_Cosmetic_C::HueShiftRed' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, OnHover) == 0x0005D8, "Member 'UWBP_ButtonSlot_Cosmetic_C::OnHover' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, ActiveFrame) == 0x0005E0, "Member 'UWBP_ButtonSlot_Cosmetic_C::ActiveFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, ActiveFrame_Locked) == 0x0005E8, "Member 'UWBP_ButtonSlot_Cosmetic_C::ActiveFrame_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, BaseColorWrapper) == 0x0005F0, "Member 'UWBP_ButtonSlot_Cosmetic_C::BaseColorWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, BaseStroke) == 0x0005F8, "Member 'UWBP_ButtonSlot_Cosmetic_C::BaseStroke' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, ButtonContent) == 0x000600, "Member 'UWBP_ButtonSlot_Cosmetic_C::ButtonContent' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, ClickFill) == 0x000608, "Member 'UWBP_ButtonSlot_Cosmetic_C::ClickFill' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, EquippedFrame) == 0x000610, "Member 'UWBP_ButtonSlot_Cosmetic_C::EquippedFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, GradientFill) == 0x000618, "Member 'UWBP_ButtonSlot_Cosmetic_C::GradientFill' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, GradientFillLight) == 0x000620, "Member 'UWBP_ButtonSlot_Cosmetic_C::GradientFillLight' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, HighlightColorWrapper) == 0x000628, "Member 'UWBP_ButtonSlot_Cosmetic_C::HighlightColorWrapper' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, HighlightStroke) == 0x000630, "Member 'UWBP_ButtonSlot_Cosmetic_C::HighlightStroke' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, HitTarget) == 0x000638, "Member 'UWBP_ButtonSlot_Cosmetic_C::HitTarget' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, LockedDimmer) == 0x000640, "Member 'UWBP_ButtonSlot_Cosmetic_C::LockedDimmer' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, LockIcon) == 0x000648, "Member 'UWBP_ButtonSlot_Cosmetic_C::LockIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, SelectedFrame) == 0x000650, "Member 'UWBP_ButtonSlot_Cosmetic_C::SelectedFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, SelectedFrameSwitcher) == 0x000658, "Member 'UWBP_ButtonSlot_Cosmetic_C::SelectedFrameSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, T_BG_Black) == 0x000660, "Member 'UWBP_ButtonSlot_Cosmetic_C::T_BG_Black' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, T_BG_Stone) == 0x000668, "Member 'UWBP_ButtonSlot_Cosmetic_C::T_BG_Stone' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, OnBtnClicked) == 0x000670, "Member 'UWBP_ButtonSlot_Cosmetic_C::OnBtnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, OnBtnHovered) == 0x000680, "Member 'UWBP_ButtonSlot_Cosmetic_C::OnBtnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, OnBtnUnhovered) == 0x000690, "Member 'UWBP_ButtonSlot_Cosmetic_C::OnBtnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, bIsDisable) == 0x0006A0, "Member 'UWBP_ButtonSlot_Cosmetic_C::bIsDisable' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, TintColor) == 0x0006A4, "Member 'UWBP_ButtonSlot_Cosmetic_C::TintColor' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, bColorOverride) == 0x0006B4, "Member 'UWBP_ButtonSlot_Cosmetic_C::bColorOverride' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, ClickBtnSlotCosmeticSFX) == 0x0006B8, "Member 'UWBP_ButtonSlot_Cosmetic_C::ClickBtnSlotCosmeticSFX' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, HoverBtnSlotCosmeticSFX) == 0x0006C0, "Member 'UWBP_ButtonSlot_Cosmetic_C::HoverBtnSlotCosmeticSFX' has a wrong offset!");
static_assert(offsetof(UWBP_ButtonSlot_Cosmetic_C, BP_IsActive) == 0x0006C8, "Member 'UWBP_ButtonSlot_Cosmetic_C::BP_IsActive' has a wrong offset!");

}

